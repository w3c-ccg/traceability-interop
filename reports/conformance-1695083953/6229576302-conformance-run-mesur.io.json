{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8384afa7-a6f0-4042-84a7-9f7767f0cb4c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "af13011c-1c55-4002-849e-627487d70bbc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "836f04dd-ad67-42a1-ba2b-43f86dcf66cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9fbfcefa-f183-4d2c-9a8a-0828e2f33817"
                }
              }
            ]
          },
          {
            "id": "49e985ea-c302-4362-95b8-b41f39f3dcaa",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ccb5514-7622-4ffa-a751-67988e6781b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c49ab0c4-f70f-4736-9084-43f578e176fa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "81972a28-5afb-4c97-be48-f5f3c2c668e8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7d0fb6ed-0055-4e70-b82f-31aadbec8a87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "80b4a155-4892-47f8-8577-b6c6f40f5ca6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cf53315-e51a-4000-bb3a-23da545354de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "457be498-a34e-4a30-b3c3-4be5ddc1fe7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0bfd73fa-59e2-4a69-9087-63a94e35cbf1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c98b48c0-fb74-40ef-ac7b-d549ab9f0629"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "174a9683-abac-4a91-bde8-2fa94effd488",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4cc1cbef-9fcf-4c70-b494-7b3927b9b52d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7d7aa7d-0c30-402e-b09e-847b4525b5c6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c53b90c9-2be0-4aba-bce2-484080cb4a34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "102ceabd-f002-40c3-a4c6-f2661ad23447",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41b4a430-bc01-4bfb-bed5-83925deef7fa"
            }
          }
        ]
      },
      {
        "id": "19818ef4-dff5-4b7a-8cd3-8cb718a21f02",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a6247209-206e-4cfe-b397-a234e7f06cd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d0f6e79-180c-4b9c-bb0d-05872a17209e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07685564-3ee1-4ba9-826d-4a35c3a5c962",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3b51c5-f828-4c95-b749-96875b6c8f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f42a522b-3a16-40f6-9d34-4f4f0dfae221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ede3b2-16fe-4641-8106-df5067199ae8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cd2867-539c-4591-b2c0-2487e29fc700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e1ef6e7-d53d-4bd9-abd3-93290484f495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0a7299-7217-4f70-ba48-a91ca2eb3f40",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d31e5bd-42c3-42e8-abde-eb90b6e74020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7454d76-a64d-4317-ad4c-d5b3078da78f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7426ceee-8500-474b-a0c9-6720fb2c2a5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1618b23-89f4-4932-875b-03d714e1b131",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce9f087-0191-4051-be7c-95089e997775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "583340d5-53c8-4d4e-83d8-c8bba82a46c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c056c720-ba9a-4706-af24-e7a8be119208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9302e8-dfb5-4fd3-a9c5-6564cc401522"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef8785b2-c7d0-4532-b058-1e2d39de1906",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a719ffe-9fcc-48e0-8e0c-d4c81fc7d411",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54b19121-c374-4d83-a8f3-0459fd5c6fe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "212229e6-bdb4-45dc-9478-e99bef81d26b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb0f2b61-1056-4dc1-9d9b-0ff07b66e1b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "57232307-9242-4f16-9fb5-7e8219b7324d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90ba0bb3-f500-4db4-9c0c-2f9ac7df53ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24139117-4d87-4f19-8ac2-ff7b9ba79694"
            }
          }
        ]
      },
      {
        "id": "d02e0610-988a-4ad0-bd0e-5637951b3243",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "542fe4f4-3fc1-4dcf-8f48-b2508b4b35fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bbe52aa-362b-4eda-96bf-2247659d77ea",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "81f27741-8bcb-4071-9df3-5f33f35151de",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccbeb09-2146-4117-b05b-5ecb10d4265f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46448769-1ca2-4c83-ab91-818880cccf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f425630d-2d0e-466b-9b48-218961b332e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59904ee2-6002-4559-8a84-9e3ef13efcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f1f85e-bfd0-4dbe-9462-b1a5d1705f2d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8604afef-78b6-4d14-b1b5-fd0cd527b0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e43a5e-d442-4046-aa74-ab42c9224507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ba8758-5ba3-453e-a493-ab967ab227e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "380e9fe7-cc77-4f77-82be-34ffef4835e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e641cdce-366d-43a2-a220-73e3dceed293",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a46f85f-f8af-4a28-be6f-b77b20a1599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138ba5e9-566d-413a-82ef-9406dddce271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125ed3e1-62b9-4ada-bfde-897ea2da9215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33b37e2f-3cc1-4690-9b67-9b70a6a9daaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149fc22e-0411-4a8e-9bdd-88abc59199ac",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c32a5a-0a5e-47ce-b2b2-8d72d1356bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab11661-427f-4f10-b0d3-91ecfd40efbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac5c924-74d4-4be3-956e-c79507972010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dc3324a-ff0e-478f-a813-a36bb6907670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77117b1-34fa-4568-b359-f62dca6aed4d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221f3021-2bc6-4d88-bff7-19e35b637dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedd0c8f-bbef-4e26-a50a-905baad92faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388e4c07-707a-42f5-a768-834f37db3cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c2dd0a4-311e-48d8-8a04-2614bce927af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa765bf-bdf6-4e56-bcc5-e9dea9ca7365",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ba6d82-0977-4001-b615-1c7c5351cbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc250081-834b-4298-bd58-4455baa98b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a353b3c3-5d94-46c3-87c4-ed887cf2a27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1be293a5-f7c3-42ab-a7a2-e36ac79e555d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370504f4-e06a-48a0-8f31-789b931f99e8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b271dc-28c7-446b-a347-bb1baf281af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3a72f0-1f0e-45c6-8bd7-6b39f06d5b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42de007-9acb-4b7a-81e4-783108b87547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b23dafcd-f606-44fd-9694-a3b020c75325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4043cde9-0a83-4186-b494-af97cd9b33cf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914448bd-5d35-417e-b5fc-6a6bfd194c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42876353-6d68-4206-a0ad-d1e1218c62a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee0ff65-3718-4354-8c1c-06231100c121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53e2dd42-5376-4c25-84d6-acef2c68b99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb024332-5a0e-4cb8-a942-3c6f2ebfff95",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6e109c-c39c-49f1-8517-4d06a9307315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b13e48-a48c-4192-859c-554123f06fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6072fb2b-9bc2-4b74-b497-8f6a8f8ca695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03014636-364e-4c40-9b75-579eec7119b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139424d6-88c1-4398-b222-10d748449cce",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d27f0b-cccf-44b6-b060-c3a6a89ef0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a760b00d-45d7-4570-8bd1-ef3e1a3ac30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9279e5-2a1d-4caf-8303-6cc767079126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25afb092-e86e-460a-b2d2-ca4938ddb388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181c3278-6fd9-4bf1-8994-2b55da7088be",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2d64da-04ff-4205-9a9a-2c4e76dd207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2bb57e-a60a-4750-ab42-d84af2996eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae49f3d-7cd7-41a9-9227-be678303698c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b248ac27-df93-4428-9386-b955ea0834f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82335062-9061-4636-8f40-84d0392963e2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2753c08f-e09c-4840-9e5d-2c866a292bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a9e5aa-f277-4a97-87ac-f103ff930ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a220e02e-40b4-434f-8685-defc21bfbbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9977f1df-50e2-49e4-a0be-ae837426a12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca4a9c7-db20-4244-9e0b-6f70022c7bc0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2a28fa-c8fb-4f7d-b653-1be4be9adf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8183e8-8958-4d12-8a28-0b6ed748f992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a975fde-60c6-4e50-8880-f2e51416433b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e30b5ca-0c96-4fa6-9374-2e41f31d29ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65acaac5-bc23-4b8f-8f2c-1a0e73b930d9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c452b0-fe90-4fad-8114-72baacc37d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3694f65f-9b2c-43f1-8be4-4d0abcc8da4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b17019-92ae-4fb9-b33e-96149a0462e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa40647-19d9-469e-bea8-51ef733596b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9777f716-56a7-49a2-8c7e-a0c84dffccdb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fef48e-92c4-4d25-9eb8-9b870781312e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76093008-6be7-4b0d-ba96-7db42b64d8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5a17af-9194-4aa3-93a7-b4954b9b84b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d02b011a-4fd1-4415-8879-86900d32d40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e2e10c-16e6-4516-ad03-ab8db5e78c86",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9bd1f6-572d-428b-bafa-5162478a226b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71e058f-a043-450a-b3f0-729ee06f7497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310eb136-809b-4565-ad8f-b5c038469c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af910ea1-b3d4-47c2-b318-9bb97de7e592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccec50e0-d644-45bf-98a0-149e19ea55db",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7219fcb-faf3-4c8d-8f48-0bbcd7c3a630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daef1e0-722e-41b4-8fcb-1bfbbdc87d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240e22c3-378f-4add-8081-b1a6290bdab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59de82ad-ec9d-4df5-aae8-ae8437132f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbe917b-82d9-4a4b-8376-56530333de54",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ffe981-cc34-4605-a307-d610a1f4550f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3309d7f2-0910-473c-ad6e-4c6745301596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7d23fe-402a-4ecc-89d0-e5a6809497d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd77cc59-a0cd-4dcb-a187-0e9f92314064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d187918-84a5-478d-86f1-cb2b5b645687",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8eac8d-f3c6-4d92-8ad7-30406cbeb735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223f63c7-3364-4af3-857a-5341a3eb7e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a35018-bbd7-4c1c-ada0-18db0a1bbc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccee72e7-63ae-4be4-9b88-861e61cf5ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366d346b-0467-4b7b-8a8b-3b67ccf55e9b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffff1a1-57cc-4961-bc2c-4b400aa35786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16058cdd-00fb-482a-8495-9fab4234d707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9919fcb8-55ab-45a1-8df0-16f27733b10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26aba36e-51a1-4f6d-b914-65ba80506143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40669ebd-aadd-4c25-87c0-42803d5d5d96",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db8b479-6f00-48f2-bbc4-352a86804986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad64aa2a-4320-4426-a1d1-1a1576fba933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481b41c2-6824-4790-9905-3d49d1154af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "294c67f0-293e-4fe2-85d7-7bac699c7883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394e915d-1025-4d2b-80db-81fdd92d4651",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472c4172-83f7-43f7-8e7e-207749a01975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8cc497-0696-4b8d-8b10-ce1db5a70590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d2f27a-7cdb-4860-acf4-309c1925ab28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "685901fd-4eb6-49ab-98ba-0e285a2f8c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd198ed-8392-4240-b9f0-60d163440275",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b7625-5007-46d2-8302-c4b93bde6121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb5f22a-e24b-4160-b3cd-decfb1f55fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34557366-a9bc-4628-bed3-0bc89a595ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "717f2ac4-9a75-45b3-8252-992f6d80d785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b5ff12-67b0-47a0-a504-4491dc70d95d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6993e5-058a-4814-882d-f9bf01bee87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75537b5d-7703-4b28-8a93-1cd3f4e4abf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e4bb63-311c-4f49-adb1-8bc1e80f2c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "329109e8-09a0-4a46-92e1-c2d4eb1358a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac028e5-34b4-472e-88a6-0b595bbf1f63",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac77473-5c87-4ce1-bfd3-374e9dcd857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "077469f0-e3be-425b-add1-973e80e62c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e93ddd-a00f-4f3e-829e-3ddbeb12f344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b55f4ae-b445-4cd2-9df0-473a09a8209b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165ec946-8bb3-40f7-8c6b-c5e6a7e7d0fe",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec046b07-2d5f-47f0-ae6d-7865aaa7bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69f1761-463b-49f1-b3ce-3feb85001542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbde5a9d-df51-4e9a-ae9d-9c82f21b96ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88cafaf2-2521-44fb-a0b9-c52e65159844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6feb06e-a6d9-4a48-8cdf-a23731550a47",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19a421b-b65b-4535-abf1-88acbaec9791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf093409-98ef-4da1-ad43-47f8361b0336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28a2322-6d85-4523-810f-945cb7cb6d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eef696d-72bb-436a-86e9-a80f10b845e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb337cd-abdc-4d9e-802d-0beeaa97fecb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c5ee92-fcaf-47db-bc9a-13702c16ac81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a938c314-1f41-4a77-a18e-a1230c0a3caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db9bf7c-c0c6-4856-885b-a44fbcf6cc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a7366a-7e88-4f9b-9a5f-0ed7b9acd318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a541c3-00dd-403f-9b83-2544a7410566",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e70813a-138a-4c8d-9158-8e7fae0e402b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205d43ee-f92c-4aac-9a4e-77ffbd271228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd023222-76d4-477e-ad78-5638333bb000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ca6956-52bf-4abe-8b71-f08e8dc9e3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ced798-b0b7-4f60-8719-d71a6e9ea809",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a40d2b4-4d31-4dab-b6f4-2a50a882b1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6825cf3a-0cf1-46a8-b915-3cc7d12f8ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c6a76-4da6-4650-9a9a-3653e879a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf66cd7-ead5-49b2-89be-342b7deb3716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095aff4c-d9e6-4b4e-b05a-324ae85d1f91",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe83d05-06d0-4f0a-8068-a64808e5dbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cd1bbb-2d41-4a03-b39e-d42a6b792dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd35fbd-afa2-4ad3-a7ee-05dd87e31fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c95a08-0dbb-4e8d-a857-5492a620476b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b480963e-8cbd-4d62-8597-9073b70aec11",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cd59ed-4f96-4557-87ba-b00dd89690cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7af0371-764a-4c55-85e0-3bd9ac7bf045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202ae92d-93fb-4412-ba69-0712e2045433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef8bacf-0ee0-4430-95b0-be177f468d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d8967c-c384-422d-b0c6-2005d1f2032a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2601f542-45b5-4007-8ca3-431bb05a0997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b311c4e-7bb2-402f-bf7e-3c3d7e776695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e35372-7f44-4ce9-8f7c-590adb255aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "781746da-e7eb-4b0f-a425-b11c1e731701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3467bb30-b336-4626-99f8-29c39840e410",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07eed3b-b2d0-4fbb-b5e0-6a5eebe2dee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a02640b-c7d0-42ae-a63f-ed5f11e78486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0d8618-a61e-4cac-ad2c-d0cacc4165eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba2ee2f-2865-4948-b8da-6429c1e63a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd3bae0-d33a-45c3-a7b2-63944a8e2844",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71ccce5-41e5-4bee-a6ee-3a15b389a998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bcb6e9-620c-4c60-a2be-fc1610a4fbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebabd992-950a-45cf-80b4-590b60efa442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bbcc70-7f3a-44b4-85da-d47995614373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6461d6-8af3-4ea4-9434-83defe382214",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecae57e7-b6d2-4cb5-b885-18fc5a26f67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "738ed763-674d-4acd-a9f6-c3b5e112b51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c72b70-ca03-46f6-8042-a90bc5f74d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "858aa29e-48dc-46d8-b038-e437bdcb4a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfeae9e-e10f-4082-9890-099f666918a7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc7cc7b-55ea-4aa7-a66f-44b23a43db13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0577c0b7-e32d-4b64-8b39-de091d927daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac2eee1-5761-42b2-b611-54247779e52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d7713a-0bba-46b4-a35e-594bc0c60d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc90648e-3742-4bda-976e-07286d110847",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da89a719-15b3-4b5c-9334-3378e5dd765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c5f2c6-4592-4eac-b948-acfe86f4b5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae8417a-4dc1-4aab-8b26-7b7132450d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0175e97-8162-4479-b5a3-0387ddf63635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63e1a63-36e2-49eb-adc9-2ab7aa98d931",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f016ac-d945-4f7e-8459-1113073d9d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51f7357-66f6-415a-ad3b-13bc613aa4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013fc92e-2b6c-40d5-8124-64f671266487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6974f5e5-153e-4950-af1e-53a2414df9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88f3c0f-d4e4-457b-9e24-cf57e08f8a63",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec01393-4082-4ea1-ae51-e6eee30b4232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05aa5495-33e1-48d5-bfda-0c44fc044c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1d0340-9a00-48e7-80b6-5ad9122348cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "669e99fa-6de8-4dba-892f-120e38b65a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691c5b87-b099-48cb-9bed-b9c193b5fd75",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d018b1-4283-482c-898d-1ecd9bb44a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19bc4ff-fa83-46b3-b21e-e2a6b935691d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f80b43b-696d-409a-b2fa-6f0773b0e5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb03097c-29f7-4d87-912b-7d14c944a7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9078e9-d936-43b7-93ec-215277877d73",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2042815d-477c-44af-a607-36593658a451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbade97-3b80-4fea-8715-82064b9b21cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05828938-780f-4732-a3c7-f3d854781fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ef802cce-713c-4603-a0ce-61a1f59c663a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622c6564-f76e-4a7c-ac0e-195151beac77",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a074a41-33a6-4305-bd1e-00f181c0708a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cb3bb2-4544-45f4-ab27-4949961bea24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71e892f-d074-4852-a123-60f37ba401af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b8d781-93d8-4643-8410-8418ff312fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54b1c90-db67-47cf-a85b-ba43c82ef736",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c1adfe-e5a5-46d9-8147-c6564215fa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2998711-7c4e-41f9-8f14-ddb64668fbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980fced3-cf64-439f-8d84-29d703c5097d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "402e157c-e23c-4298-a058-0d7d84a1668c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc6dc09-40b2-48bd-b6dd-cc4590078e5a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187aa035-ba82-408e-884b-d3a927983b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f2f761-ceb7-42be-b1b3-edfa83e0e827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3feac34-de27-425a-ae05-207af3403052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "777ee368-8681-4b87-951b-54fbcbde9501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d24462a-a7a2-47ba-ac02-1a5647bc6654",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a13af7-87f0-4060-9fcc-e4dbf6eef0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f2ab02-bc40-4246-97ec-95b727e21d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749b26a8-5071-4f32-a901-df68f22285bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c8b574-5ec8-4e15-b535-49c41ccc05c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1242346-c978-4843-8abd-e26c42423586",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983af121-204f-426e-b408-92b5a0eb3a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b443aadc-7225-4eea-809b-2914fb1ea297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a628b1b0-8184-4de8-b83d-c64c13df6387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c12662-2782-43e8-bc14-2eb4e79923b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258fd3d4-ba6f-4d0a-9b1b-43042d9ed470",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c551c40-3f4f-4d50-9050-43c5a8636b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc67472-4e3b-4aba-9bd2-57a5d86ad9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6da3bab-0667-417d-9dee-a70256bad993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f84609-515f-4f1e-8790-9277eedc9f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f17ec78-d8e5-4b54-bd27-ce7e1150d967",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0601e0c-b682-4541-a927-0594a5a2d81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cd7592-8e39-4b17-9bc8-fd163bd15a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d3344c-6618-4848-adad-3c85ef04e766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a2185c-c4da-4367-bf8b-ce052e1bf653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4864d4d-65bb-42a6-816f-f1fc7bf6e4b9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299e0fe1-759a-421e-a825-493d32ab9fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38a2f7e-9327-477c-a994-6b88184b3fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58507fd7-2ecd-4d80-8623-cab869ada78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08303427-2914-4d80-b8f2-e2481fb9a4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ac0fc5-56b8-4f94-8ace-2fb126dbce67",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090c92c6-e226-414f-9a50-f6343f6723ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9dc142-2f6b-409e-83d0-60d310f914aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8a9d8a-696a-4182-957c-6fe17d75e7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "660d8242-7308-434e-b045-4c0822a14115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443c1f82-3560-44bb-af70-6ac25d32d36a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9747935c-cab6-4b00-8761-d38cdc40e662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db024f1-cd75-472f-80ca-87174cc78865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667e4a7e-f1e3-46c9-a818-ea428e8fbc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "104a24c6-8f51-4f60-b062-f81c85ed15a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9477d426-dec1-4cd5-8e12-85a2d4fc3398",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d69ff6-8b59-4f49-b4fa-027e9e4a6ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fdde24e-a14c-4f9c-be87-e1f5cfbb8ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76241088-42de-44c5-bd4f-b714adcfb219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d4c3b4-70a9-46c5-b5ea-203e155bf46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f5a89e-1e97-41ae-8552-05103b3d515e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dd21f3-0fd0-4395-82e9-f33ba65132b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c4b775-2751-44a2-a127-79d9e1a1b92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9760f4-5949-452b-ad51-a5b3da5cd31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "395425db-a734-42d6-b292-f9f774c09be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a605c1ae-dff7-4afc-9a5a-9491251b69ab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec89cd0-7203-4a12-975f-9cc1f2188838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef89ad1f-2110-41d2-b188-2043f3bb5281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24d0fac-6bc2-4006-b089-6ece96c690db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "411878bd-9bd3-4164-b529-517f424bbf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620378f9-b54b-4544-b508-ff88dedc6c1b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d01f41d-5a0b-4228-8bcd-2e9d54711da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c2f1b0-b1b8-4fcd-bbc5-944f8a1edb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd0aa58-62a2-4c72-b480-a8aa401a23b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b55d1431-a289-4470-ab39-267e5a47c7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd6189c-8e1b-46e0-9f80-f409fd90d073",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc7d437-c41b-4a86-bb26-5785687bf36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9130c22b-a591-4016-b459-f4ec092e9315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae5deb9-ea49-44b9-ad19-1907965b0b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c57ff2dd-4aef-4d0d-b0e4-decbfd958167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00610180-0de9-4672-a785-213a7a48ab15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dfc71d-622a-477d-9b13-c47687b859a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1301cdbd-8d50-4ae1-9eb3-0c1050ed6218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1a09d8-2ac0-4fec-bf18-3f24427ca240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7aa6f3f-1f92-4c2c-9a64-d428e3cd8fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0851e2-7a78-48b1-8928-7c20d3334630",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ab3b02-cb36-428e-a730-caa707101d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288c8c26-d601-44f6-a5ac-c70507dafc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ecaeb7-cddd-4fbc-8e05-54e68ec5b1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dab5d28-be3d-48d9-a37f-3c6037fd440a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfc069f-55e3-4fed-8f53-f3458bc39909",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b888b1-fbfb-45b3-832d-cdb0f0bd6a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e491f355-8a50-4429-8ae8-0ec5cc97c7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f407f471-f927-4f37-9f3a-42bbb122f726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f50ee2de-626d-4aa9-8eca-38babc780437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcf0c40-3444-4c21-b4f8-567cb61c1f16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f63e4-0bf3-4e60-b352-66f9e8034cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688f4575-b715-43b3-a298-ad0fe051163f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426227d0-7fb4-4622-b995-89779a8967b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "210247ec-1bb7-4cef-ae17-89051b248350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1eeaa9-8e96-43c8-9550-ecfa53d098f6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d90b9e-ec8e-4bbb-9ffc-703500b33a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d13598-38aa-41b9-b6d9-fb495fe129a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f6c1bc-1d5c-43a2-98d7-fac27efbaed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "31fd38be-958d-4aeb-ac56-0201805bf111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ec0cd0-43af-40b0-9b44-168e561b1984",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6e469f-c84c-4123-9af7-6754cb6accfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3e5c73-eaba-4ad0-a146-8ae9cd47ee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034cb9a6-beb2-4b38-9c7d-7f6b14549bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac55908d-07aa-4d5f-8992-907a6d350dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ec770f-3fed-499d-9b5d-1dd3fec6c06c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dcc5a7-20e8-497b-88ed-febd811bff84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4be56c3-8fc6-4bdc-9ec9-a2020d4a8e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ce45db-34fc-4942-bdab-27719cf45afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad58085-2587-43e6-a978-87a022f9e3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c43c8b-ffae-44e9-925e-8dc57d3c3066",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e62894-193f-48be-aec5-50e4a3f15839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489f0ec6-5a9e-4441-af27-1ef267fd2c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9fde23-582c-4edc-a781-f803b5742e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c347fc98-4340-47c0-80e8-03fa0ad1d87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43677ab7-30ca-4205-8036-d5d641d0784b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b8be28-f031-4bb8-ae1f-c85a520c3aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb19c514-f7b3-48f9-a77b-e30f0da5ad7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073c75e5-b25a-42bf-b832-232c400e6c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c43202-c7ba-4de1-82a7-45b39ac80592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933bc9d7-b6d1-4db6-8631-2e05331d0b63",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee43814d-bbb2-49fe-9656-ca35feee2760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08744a8-77f1-46e3-bb30-e62918a0bb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bfa3c7-a284-497b-8bb1-43b9eb3daff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5cab36-d8ba-4291-b130-db538aa0d48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234f01ef-3c64-414c-ad51-a38bd46f7539",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241e7cb7-acf2-4726-9ae0-7ad77970cb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01b9b1b-238a-4858-bf4b-446688881256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4219e0ba-d1d1-4e1b-b77e-bf951393a9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46db1d4-de7f-4d73-ae9a-4feda49e3275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cedac05-0016-4fc0-840b-4ea9f9b4f51d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e88fe6b-b115-4e22-ac1c-3312f6deabb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fa3a8c-6971-4f71-b379-a0b2d0fc5ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559afd9a-df4f-4a95-b83c-bb42f98bafc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83602c1b-8caa-4ea2-8d0c-49cee55acef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efee7cc-2f0d-4d04-8181-ff7e0248b6e3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa4703f-7687-4bc5-a2d7-67a760acf142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4499aacc-bd2b-4103-8eb5-1c49ab7ccb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cacf51-9ef7-467f-9410-dc67c8496d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c4ec55-c7b4-4185-8798-ce86c82f798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0ba57a-b18b-4699-8581-ee79ae2c47dc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557af695-0bb9-4c31-827a-a4a0993b617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf1d419-8cca-4190-8d90-869409509871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ed0c10-7967-4442-90d3-2f931d30e4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3c30af-7b06-41e1-bd7b-ee14c80fbf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4821ac-cbc9-41cd-b505-42fb110fcb3a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fda804-33ea-414a-a9f8-00561d79b063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c986d25d-79d9-4ac7-8208-9f11eb869159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79125cc-6437-4b25-a033-1331ebe5d2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc76efb-199a-46e5-9f9f-b259f8c0a202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5af4a2-e5a9-4cab-99e6-5cb6a175307b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4449900b-54d7-4e7e-b026-3d9ae9e554fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76aec1e-007f-4525-a533-b6bba9f821a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce02870-47fd-42b3-89a8-00c7d9cd93e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa6253b-d3cc-48dc-84a1-71e1914ac0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa290fd5-3ebb-4fd3-a69a-579e51be1bed",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594ed33e-b86e-4a8f-b172-7af558816434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4698de1a-d919-410a-8177-61ed8c2b50a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c021722-02b6-4d07-b12b-6c419014541e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "542193a0-4a42-463a-9da5-5b84cc7f42db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d1bf2d-a5d9-48f4-a9ac-076796ad0649",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010877e3-3213-4ee4-87f4-ee960e9659eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59f4a01-b0ef-4aae-8718-8516884e6ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6b6c7e-2bf3-477c-a420-3271e40755e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9770d0-f947-405b-9f87-317dd01bdc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f47288b-4985-41e5-a373-cfd45f15dc5d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766a554c-3f27-43b5-93b4-d07f6bb2faaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ba68ad-0b20-45ef-a3f8-a67c1a422bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca52700e-9adc-430d-a9c0-8fbe5b9a9331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6a306f-5e3c-4c13-98ea-5e1e8b885e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1542bc-3f84-4da5-9b33-b1561798ec97",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a61faf-37de-45a7-ae3f-a458c3be3739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c82f461-61d6-4dce-8499-b5c4f20e7d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6767ae90-e199-41ca-997b-8b019b46b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09f30a65-1654-486d-9787-43987a0300ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801f499c-7023-42f2-a3ed-70b71e3d7f78",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2dbbc0-c716-44b3-a458-57d058d48ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5593d719-0d5d-47dc-9544-9410e3940a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a158d48b-a3f7-48fc-92b0-6d0fe29b47ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "020d875d-1387-4240-b606-355128fdc020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abbb4c8-db7b-4b01-9943-ef5629448637",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcd1dd7-d292-4b24-9955-2154a7c20ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd77a16e-619c-44f7-bc2c-859028968579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d835d6a3-1ecd-4733-be1d-018a14ac4e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d319667a-f2db-4e68-8b76-53cba9084dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f5e21b-3fb0-4f36-9c58-231079fd6aa7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfb220a-71a4-4b57-ad24-f573c5cfe4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99152a6d-eec8-4d98-979e-b00cccdf305b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2836fb2e-1efd-4084-899b-8a8a293dc4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a0fdcaa-981f-4382-87bd-0d88742fe2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4803da2-46b5-43b5-bbd7-ec459298da2f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7919e71b-3b5e-4161-a9e4-d9a9f8d30402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc1dc3f-c1d6-458a-84ca-5fce61485f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9dea23-ee85-4cae-88a1-a679e9274380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ba865d-115b-472c-83cb-997d96db76f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d18db7-1af4-4cc9-888c-bd5d67f86903",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04b4c52-7dd0-42f5-8a7f-fe5fd1857c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23af91eb-66cc-468f-a4cd-df511771573a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cad9f8d-b1bb-47f1-99f1-d329c2393ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a6d35f-16ef-4834-a4d2-03a1ecc32b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1265e30f-10ae-4d3a-b76a-e1b79ec190ad",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6c811d-bcf4-4205-98f5-8824f779f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb7191e-4927-4e94-a843-a7ebc2df82e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f931e36-da15-4ad8-9e21-5565fd67ee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28d1817f-a8ed-4fb8-8ad9-c2134639cbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b25a82-f202-40db-b7cd-3b623b54920f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999572a4-83b2-41f3-b72c-44c30dfff677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c005a9de-0dff-40e5-8ce5-5bdd672d0a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37a8b61-3dab-45e2-931f-18efdfa13416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b5d65e-e9fe-4745-bc08-3dc7e074b4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015bd540-6654-4c90-b5e8-e75f9008125c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f329d-b54e-4657-b041-36c1906cfa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b969772-3381-4dac-86af-f7ae2d79c5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88098397-29ed-47c7-a933-cf04970d4ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96639937-547c-4708-bf9c-fe7624b49cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fee590-9ca2-4ba3-8921-d39808177f64",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c5ba6-b26a-4b9e-933b-3920e4bcd4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0304aebf-0fff-47b7-ab94-8b0245a65b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf362ebf-4a89-4699-a588-bff4fd38eef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b893c8c-0761-4a45-94d0-84163385c1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef0a2d1-49f6-4871-9a4f-f6cda7a3df62",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4babd5-fb44-4f48-b0c5-9ceac048dde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4020fa-be77-45e5-898a-a9a7b1c7c292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7b0f2e-5bfc-4a8c-9c9d-ae5e23cb0b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c134911-9ec9-481d-aa9d-159f68871184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5aa66e-4dfd-4719-a552-c2be604c75f2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9572bc-d7fe-46d7-b4f7-8d01055332de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f43735-a478-4e36-95d3-334cf10923a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235f61ce-47d8-49ea-85fd-0e83722b00cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "440860eb-a611-46e8-9137-a90bbb11e55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e6d35c-18f7-444c-ae4e-706807bfa7a8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c608215-dc1f-474e-837e-115ba3ecc642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b80171-4aba-4df2-bffd-a7145532bd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9ffba0-12b7-441c-bf40-c94b179f47fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "638ffc39-ede4-42f0-b032-0e63321c4bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2601b7b-4a65-406c-a514-aaabad335eb0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8d7a70-380f-4c93-b7d8-16a6e3e3d42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f88b345-62e3-45ee-9c9c-5dae06d6388a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb501b6c-6611-4f41-9481-24f196bc23fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3863725-05fa-4c2f-b833-cbbc3497e0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d41137b-26c5-4cce-b018-e6acbee99311",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cc65f9-be64-4efa-9575-9c76555e3ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a57944-7554-47ef-9be7-abf4fd2d7aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad0a905-5b73-46e4-956b-aae3eaaf9c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6155144a-fc21-49aa-b352-3551eb4945fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9145f6a2-7c4f-4e1a-ae72-a459d2a198d4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6968f92f-e765-4629-b894-4dec1d8def12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8fad268a-1f19-457e-b768-ba3a632a98bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049f6d9b-a3bb-4044-9d4c-29080f0d45dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5270e3-7519-4d9a-93f1-ce283d26bab1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c8e845d-1932-406a-bec5-a16c55a48cf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "073760e8-bed2-4610-ae24-f384e403538e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2539e6-c98b-4acd-a536-df80473070e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0d7fb59-41b0-4862-b108-f7a5a3a6b6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaace32a-05ab-4bed-bee9-6d5babfc5178",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a327a2e-a0eb-4ffb-8078-3b5b313792a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76a52416-7cfe-4bd3-956e-6622050632e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98632bef-cfee-4112-9d53-cbef54309a8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "515b59cf-4b4f-400a-bae4-e821dba26ad9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79137f0a-9470-4bcf-bc7e-8c2100c29111"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3929f250-3da2-4f5d-8e71-38bdc55aed84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aa29b05-f997-4427-8b12-2af3f6897772"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "590d9cfb-e95a-4e11-9126-781337ef35ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b64bc3ff-46fa-4210-a8e6-4c798c5408f7"
                }
              }
            ]
          },
          {
            "id": "da8266c5-f6e1-4a77-a3c9-80dd509d5445",
            "name": "Positive Testing",
            "item": [
              {
                "id": "abd5954e-053a-4369-8fe7-faed699c0d2a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b60d71f-27e5-4271-aed2-3a0f07fd4bcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71260b47-ea0c-42ea-81c8-d95a3933a254"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0db983b0-642a-4db9-b7e6-6feb3b049963",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67680631-c864-4d4e-9d30-68942e94ab83"
                    }
                  }
                ]
              },
              {
                "id": "9cc75886-fe29-432a-8888-417a69b553b1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa1656e7-312a-4818-b0f2-ef65f2e8a97c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e29fdac2-110d-4346-8436-5412405898fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "076323f6-2ed9-4396-b2d5-54f21f977f80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aed01871-9f22-4367-8b3c-b96c2f1670f5"
                    }
                  }
                ]
              },
              {
                "id": "4e647db3-c25f-4724-a769-5daf63b61816",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92cf7c12-dad7-43d7-8af1-f6e43077ba1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "870fa964-b327-477e-b87a-9671425cc68a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09373965-3c54-45b3-9417-7f5192dc8a6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9988020b-acac-42cc-a738-33d2143507bd"
                    }
                  }
                ]
              },
              {
                "id": "55544924-1dcc-4630-8700-54b0182d9edd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b3c06de-dd15-4ff6-863a-4a36438601cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "133daad5-4b4e-40c4-92db-be8e9eff846a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1becec3-d40a-4b4b-b596-b69742b5da2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c9ccc00c-ea49-4ffa-942d-bd91e8c55ceb"
                    }
                  }
                ]
              },
              {
                "id": "ccd0c602-3051-42f4-9c3c-433b420dc9e2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f95823e5-60a8-4e8a-b977-e89fdb40aa53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1270a985-0177-4149-aed8-649d1a9b5e90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab3d16f6-ca84-4fb9-bfa1-20f92144baa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5a04a4f4-40ff-4546-b56b-26819f9d1647"
                    }
                  }
                ]
              },
              {
                "id": "d7649d08-82d9-4316-b379-a28de38eed35",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb2ce55c-c891-4a46-8b4e-e7df59448612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f80291df-dd46-4989-9612-7fd66117483e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48a79da5-fb1d-4490-9ca5-8274613180dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "412a5b5b-fab7-4ade-839f-5bff4cb321d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dabfd657-6d72-4b21-8a46-924013f08850",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e68ec93-2847-412d-8657-afacd42baa6e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96264ea1-74da-4997-b134-c64cfd6a535c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76683406-b935-4ab6-ae51-40cf45f2ed45"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12ef264c-8c70-47f7-98ed-190ec8a81192",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4314c42b-a61f-4bfa-aced-47c749f863ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "220492b1-d304-484a-ad19-29585fb08864",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69923ab5-ba16-4aaf-9ee3-9d80c676738d"
            }
          }
        ]
      },
      {
        "id": "5f6295a4-2555-4d4e-a3de-e18d30352484",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e6476dd3-657a-4a56-a0c6-5e80a235fe56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "334341a2-d2a2-4722-83e0-e50698397eb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf3a7611-65be-4550-837a-8c545c2f9e12",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775c76a7-61c0-4e13-9d43-82b4705022f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cfcd28-cf67-4d67-8157-f573872eef2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3d1e55-0da9-4dfb-908f-515a65c17d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed1c17c-b976-40f1-966d-243bfac476d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b001c24-5142-45fa-be20-96ccdde86c61",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73bbcfc-bbe7-47ec-83da-e97e383bbb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cf7299-8475-413e-a650-2163d5719bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab56d71e-0119-46cf-8dbb-50d95fe6b555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf89cae2-7260-454d-ac92-727bfd7e03c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0021001-1794-4de8-be0b-da817316e578",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf224708-a4f1-4309-825b-a02772d6a88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dc6dc2-35a5-4132-98e3-894e191d2f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4b600d-da16-455f-9d2c-e57383eae79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2823c899-ecb7-4952-ba8a-dbf358a8212e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2181e6-798f-44b0-815a-7cfd84fc9a2b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a575624-9c73-461c-8f93-36555b2e4930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fca09a-38b2-403a-8608-4b855d3852b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b6fdf9-011d-402a-bc66-5fa2d30571cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e717e534-aca3-4e95-9b11-e2e0bc1f92e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550028c9-fd3f-4153-8cbe-d17641c7126d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f2f4a7-ceb4-493e-bc04-8afdb09c4941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07899f6-67ef-4896-88a9-98035abac9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b06aa70-3921-4b5e-83ce-39e3d97b78e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "084c8e4e-574e-4e4d-a0fe-4a78f3ba19a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5adcbf4-e022-4213-9f6f-6fc664031a24",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcab7380-5c37-44bc-a796-c195a9d2772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68526abe-f6aa-4760-aa3d-d967c07f199c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3681b707-9674-4074-980a-c2d32765d37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7628e38c-eb93-4773-9216-8862993c1ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f574e220-a3e6-4fb7-8503-2879dd78106d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dc8ede-f747-436b-9588-0a9082d34648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2967fd1a-1e46-4f18-b1d4-bb91533cb441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e3bd4a-7716-44cf-af31-e44c6516f478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "635d9a8c-e859-4ed7-a686-9953b7b45109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d32688-cb74-4899-8f24-cd8e2ccbe251",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ccdcab-6379-4c45-af4c-a9a8ec23ed77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee74d25-116d-4d29-878a-a7fca8d1ac0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc70bc1f-5bef-4451-a699-0a208df4f90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "728959e7-d7da-42b0-9ef0-eb4a64d7fda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70efbdf3-0d00-403f-9d2e-d3de6acbeeaa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19f89aa-5d31-4ebd-82c9-7fff57522f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f5ae4c-f22d-4138-84e6-fed168d8f0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dbe453-8a80-481e-bf1b-0cd7d936728c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f347fa9-aa32-44e8-9fc0-ea8dedccca4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ea2e32-c073-4939-a075-04831c4d7f64",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41287e02-7c30-49e8-9da6-3c4c5c7b11b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bdaa55-7623-48f5-850c-4e8fbe173d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22756a7d-2dcd-443e-b2a0-b6cb099fbdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db4e7a32-d422-4943-a755-3c9016c207a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a9c21d-93d9-48ce-bf76-199d08d11f73",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1177cd-bcf1-4ad4-8bc6-20bef5b41b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf42b5e-9ff6-4e5b-b1fb-686cd1e5979a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa074a5-0957-40e3-a7b1-e821a462c70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5896a1-d465-4e93-8870-267cb78c9fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e424e8-d62e-4ba2-b016-c1d390c53569",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4772b079-7169-4298-a909-dd7aef457ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea628273-a8c6-470e-b105-61702aa1a127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dc44ba-219d-4eec-a189-e12f8025040d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b280486c-fb4a-4a7f-a819-83a3f8a5f15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd886c9-0e22-4906-8d12-84c5cb1e53ec",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7102dc0c-4751-4793-a693-d4953c505a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ed4f52-253f-48d8-96cc-c380b9aa31fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc350664-ef00-45e2-8d0c-ad1fd67fcf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50c23cbe-fd16-46b6-9a20-b10c854a0385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ccf5a2-dc2e-45be-a052-fa476cc08910",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f897225-7357-435b-8c37-6f962391d3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14849b3-63ac-462c-bbf0-8617fbaaac97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1fd589-760b-43c8-ae1e-4c59f6a778c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc74ab4c-c508-46a8-a5e5-fa4d0c06d2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261097ca-596d-4e11-a70a-e4c4d56581db",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bb8914-07c6-4c0e-82a9-98c8e67496f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27de4a5-285a-4975-9526-56dbe9239be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a95126f-3862-4e6e-8440-dfe9f95c93bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d15428-c5e3-412d-92bd-df4b338f9130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fbf781-1bd4-4174-8231-f30c0172de16",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf6bdd4-447d-45ac-9cc2-e7da8b907ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb79286-4151-4326-9003-db3cfdfb4a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cbbb96-f6e7-49b0-b3a5-48d70f9c0b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b42f03-28f4-4f41-8b16-fa9294d23b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25757b8f-d06c-4cb4-b799-478052dd950a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8372036c-195f-450e-9165-7e6f01fb888f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e0a565-ba6e-4263-8314-5e1d173a8136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea73342-75df-4ffd-bfa9-cc451f87f0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc71760-4504-4344-9ac8-9d05351554d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7a519a-ad6d-429d-a900-068307738564",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f34c9d-2d6c-476e-b3e7-492a98edc855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350e38ad-8a49-472f-be6b-18c18a8eab92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3c5ddb-5c4f-4e07-a771-fc20c254fa48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f44bb4b5-dea7-49f7-9ffe-2b3d426b6833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d18c5d-1463-45c1-b14a-4f8c97231a4b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4cba12-4ac1-48ba-a7c7-a75e88799bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1f51d0-b2d2-4221-84e5-777184b8765b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be07e0a7-8cc5-4799-9d59-9fa90a0f303f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9019cfc6-05c2-4572-8748-b36bc14a0fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9be0daa-af57-4762-a577-d491e2725c77",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094ebb6c-8520-4b22-9b89-17435a9ed6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8718c0-7445-4b2c-baf8-553d5a541455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea07789-b9c5-4fd6-b03f-256d26878a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7385fa33-7a86-4a32-a39b-2628e3114776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ab8bd9-73e4-4dd3-9d59-7285c844031a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9968a6-ef31-45d8-b589-5406bd12192f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667c19cd-b68c-4113-969c-849ccef36652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dfc62d-1b40-427e-b2f4-f8c25039ce4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "230d4c81-0990-44c4-82b2-d73cc2a77d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f6719-4abe-4b19-a938-cd681d478847",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f90acb-8cae-4c51-8352-9c3cef8101a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b612bc1-b07a-46be-a08f-ff22579758e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde07884-5552-4ff9-9f03-2e3daeb607c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a4d245-9cf0-4fec-83f6-857f26828384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf4589c-2e39-445e-95fb-7b8605e3da1e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271150aa-2193-4f8c-b451-9d7cf389407a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2adf291-0bed-4144-b8dd-17e51bcd12d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fafe4a-fcc1-4557-8369-961908773506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61379252-5ac9-4236-a291-9932250c461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0778d694-fbef-4307-bf95-19cd7cb2795e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104e1496-1808-4c3e-afae-e3c3a2e0fb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c641837d-1b5b-40bb-9094-b7b7507f615a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b737b8-86bc-44fb-b2a1-494a58a867ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb4b7bf-0579-4d0d-9cb7-6c7cf38bf934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae4a208-3d56-4fb7-a332-3b176f33f219",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323bb1bf-0146-4b30-87b8-545fccc4d4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ef9c8a-2c81-4eed-a0d5-72d31dff5c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b9df80-f3a5-4a4d-bbf8-cc6405aea26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc972974-34bb-4f43-83e4-5ea7c188d22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b508d8f-7695-4ea5-8eed-19dd423f3940",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8210de00-b800-4abb-a6a2-4394de8e8925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fa7ad0-1002-441c-8c76-348b91f7e563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f67715-428e-41ec-b494-82765f7155c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b4d3ef-1f34-40c5-bea1-0cc47c0dfe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb4547d-4669-4197-b0ea-f1b69fba624e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8707075c-a3c6-4932-b6cb-d741259290d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd3540f-24c2-4f18-9efe-932f608785c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf82c2bf-1db4-4c71-9709-9fd5d7a4fe3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6f5692-92ba-412c-85da-4e7075667abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d378f8-67bd-4320-be85-8671ee3fc705",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ba444a-3fee-4015-8de9-27cdc25de6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2239512c-5362-41b7-96b0-43da4bfd0e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fc0a55-346f-4b40-8e59-f626a8153330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce7dad5-ec2b-4f29-a67c-cda16fb928d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814cf0c0-6a4b-47b3-b9a1-115210e4b631",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b702513a-db3e-4951-a1f1-b53bb14dab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53396c28-29c5-43da-be7c-f7ad4ca5e687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e090f7-6a9e-4678-a54a-84860fccd8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f3e38e-00ba-47a3-ad8b-0bc4c51e9189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736ceefc-6615-44b0-bc45-d62510f1f9bb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aade2d30-0949-4568-bfde-bd14429315f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11dd155b-7cd4-4c55-b254-03c1ab9e1379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c1ffc4-a23c-45ae-a47c-483e2ee06fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c74e85f-baf1-4f80-93dc-0913fe7236bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9506fd58-e4b8-4770-9012-a690298aed4a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cc20ff-720d-4a54-94f4-0ae37d667d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71130bc-c9d9-4f84-8038-877264fe6e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e6a5f5-9858-4cea-8801-3260e658e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58aa60d8-8a79-40a1-ae65-887f8ef9842b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c8b20b-4c7e-4366-9bc0-132b576a1f3e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b94406f-9743-4471-871c-e431c7189fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c70d94-8c49-4b67-9a54-5eabf22718da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d22744b-5b8e-4ceb-a870-91bf7aae737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53867a14-2189-4a23-87e8-cba0c227d3cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42832288-ad61-4be3-95f5-3e75f4355844",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ddd94de-80ab-4973-94c2-9f3018092f3e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dd7fc1-8db3-4ca6-8b23-c9da4a12af00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "74edd091-3902-4256-90d1-b1dbcf80b636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b7c554-6d2e-449f-82a6-38ed6b0f5caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18c1afd1-695e-4cfe-8b71-b45b916b2f37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e94def8-01ee-42ba-b2e4-088ced18bac3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3d66268-a326-425c-aef2-7a5f24488557"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "326ae691-23cc-4b12-b82b-2920cfd46918",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5071ba32-c7df-4946-88cf-58eb33c1f0c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "172cf660-b0e3-4d5f-8b73-37f3a5bd1ca5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "846bc857-13be-4f1d-b18d-2c4e64345d0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "296ccbe9-3611-42d3-9a07-f3a1557fade7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "248557ca-46ca-4681-a1ab-f6d6b6f5ce06"
            }
          }
        ]
      },
      {
        "id": "693eb40d-51fe-4c89-9baa-48ac5023c836",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2959c425-2c53-4f8c-9d72-d1981b83fc4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd57cf78-f34a-43e5-8302-1d84e2e82c91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2880d42-a610-493a-a5f3-1d4830f60b94",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0299c3-9ece-4c6f-8b5d-0d3aefee7ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baa7645-6b93-4979-8bee-1198be4635db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624923cc-890e-4f99-a768-07894c4cb2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "75473432-c78f-4258-a441-1614d72774ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fc676c-66d9-4311-b7be-0028e2335715",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb19eef7-5581-4a5f-ac23-98306b985cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b424f0db-9523-437f-a78a-072b9c4fd4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d21a598-8829-4266-8d5c-c14aed391e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8af06d7-3e0a-4486-93ec-99d86a1e6e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4050af-fad4-4da3-a0fc-9a17649a251a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d266dafb-1223-4039-89bf-91fbe824fefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dc80a6-a6a5-40ea-87cc-af44a2716902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ed8c11-f510-4b2c-a2df-e89f93cf84bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a64110c7-84b6-4267-bd84-ef0399db44c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ca5810-1400-487a-8678-5f0117b58346",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acbf672-1874-420b-9425-e4956b9e766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d5b9a3-d184-462c-9ae5-822aabe1a00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef08ef02-37e2-4add-85d7-6147f5456b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3399a62d-ca2a-4758-ad97-3ead41d0423d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8cb474-63dc-4409-b541-6a774a8104ea",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64a4985-b549-40a5-b478-fb104902fff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05653a4c-f77c-43c5-926b-962c0c9f28bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9619f6c-db5c-47da-9c65-9c34454a08a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24285d18-4742-488d-970c-a4aa67b5da0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4e241f-0eb2-45cc-b3ea-317b3144ea27",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672187bb-0076-4339-9bb7-2fd57d3b69ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b6c8c8-f259-422f-bcc1-bf7cf8d97e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551eb414-b501-44e3-bde0-6520af94cdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7818ed-bfd3-447a-badd-b8ac4e53f89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286fa5e5-c969-4143-b07f-9993e01e884a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c14bc6d-a962-40b9-bccf-65c84476e43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f5a4c1-9d51-4eea-9933-3c5cd3af7de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591963c1-dadd-4b07-ab8d-bc5fc3e83f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a798a26f-b676-433e-ae28-ba870e749b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec6d659-bb7d-4456-bbd2-c89210368b36",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc474a1-a674-4953-b49b-b9a8a6765042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d05f840-49fc-44e7-be8b-0c2185b80551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54009359-a0a0-420a-83b2-2d4d0e87861f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e30916-375c-4d8a-96a1-e1700b230656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651013a0-8dd3-4499-bb13-d933204bfdf4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46d46a5-fa34-41ed-9056-6f2c98442f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16b2a06-a282-4f17-8b33-4069c30bb6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0b4079-bfa8-460b-9030-a248dd4b8749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4139e948-56f2-49bc-a7f7-bddb85d3e6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d208c953-0425-451a-b0ea-66a440540468",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a011a5-04c8-4c6a-a954-ef1e0937886a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f89e127-30a8-4ab4-a026-68754ede9780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c55212-2841-4030-8f8c-f007534802eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c05488-e364-476a-ba7e-fe0a5509d6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd4fec5-6cc9-4c8c-a11e-080915ff4d3e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8109ab3c-63ad-465b-8453-532a629192b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e81128-e3f3-4df3-9b7b-065a412dfc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc2e45e-a748-4382-a2f3-33766482480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9f964f-b7c0-47bc-b4a3-abfc96d8e772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f9944d-b7ee-455f-9006-b526c566b8d3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a5bbb2-0ba9-49c8-9f5c-8b9dcabe52b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed7c77e-579b-4948-b015-8912010e239a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921edb8b-efba-476b-9192-41269732299d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96f94e22-8c9c-488b-8daf-f557c35b4844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa639013-9370-4516-9909-b1f1272c63d6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55828e4c-feed-4a59-ac0f-3f051a08c84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d5492a-509c-42cb-bb36-68e8168aa504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28a752b-7a6e-4520-a50b-535cc2b7690e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23223ac3-639c-46b7-8467-8b1a6b365ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d8333f-9a0e-4e3e-b8df-827c6c21b9d9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e7645c-7062-4a6c-9aca-2c3a9028e831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ac9fe1-0948-4e7d-940f-a19222f2a186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619a87dd-0234-4a76-a209-ec02e393cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "59656eb8-510e-45fb-8638-fc58e403690b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf32534-5f06-4f04-b27d-43288b30defa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0f2d04-b9be-4f4f-ae32-d13d5484226c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f362b3f-6231-4910-a317-48c3c690de3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee73d08b-b3b4-44bb-9d44-df662d664972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cfa5eb-8853-4a84-a78a-a048d93d6033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e502c2c8-e04a-48bd-9012-c70f4fabcddc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f8b241-5d1b-4b82-b3d0-a99e6dc8e8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436f2f3d-f936-4ad8-879b-94e69e45c74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35609642-f94b-42e5-a8d9-2711e29d273e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb80660-b884-415d-86fd-d386caf066cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9c1bb4-f7e6-4250-9ad5-711b896d91ee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96733794-e33f-42a7-808f-b16f1f16129c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e117a0bd-63ad-4739-950a-3a10a0b0bda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6507a94-45ec-4c7d-b0c5-40d48fc0a202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6baf2d9f-3904-428e-9e2a-6a8b1704e96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8793a910-c375-4193-9f68-b48f8f45fcc0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d698ec9-402b-4dd9-8879-46c4d6c4ff75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475a839e-13b1-489c-bb1c-a401e3a0eac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc907376-c045-4836-9c29-e51a30053aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "89f77eef-941d-455f-8b1b-80f485224d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2271277f-86f7-4837-ac64-f0a903cd50bb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9437f2c1-bc39-4daf-ba04-10987b149d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b17dd0-ce90-47b5-978a-4494df5b7049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca489b61-d341-4638-ba53-2a1d7135548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c62c8a8-9e0e-4f51-81c2-cfde754c14c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9033bd-63de-4566-b5e0-c94554466942",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2908132-ea8d-4abe-b471-bb31d9edbf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c273a93c-6435-4f3a-a60a-04ea12f00ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a317d6-e930-45c7-96dd-41367daa7b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b58d6a9-9d85-4edc-b2d6-b76870344a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b72c8f5-4097-4ae1-a712-ac55cabffb8e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19aab314-bdc7-4c61-87d7-c16e4d2a7672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f5a2e2-f046-41f0-bba1-60a54243c600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a33222-486f-4835-b848-7980ef22d055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adaa8a91-7d46-4078-8648-f43dfa870b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d24f036-9425-4c1d-9eb2-8c76aeeb78ca",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b7cc23-ff0f-41b0-9a50-5bf0df5468a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2a944e-a4ff-4aba-bd3c-75e9095e34ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67aa0a7-ea35-4482-aaea-f775d6eebb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a395fa-55ba-4364-8198-87005481f7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6b9043-f355-4f11-bf84-fc9fec05a5f8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b4faff-bb2b-4f79-ae8d-4a0a0b7485dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d532541-c3b4-44b2-915e-df276ec159df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e7d6d7-4d71-4a3d-b930-673f095d4d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "692098dc-00c5-498d-9681-4401111a9da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c49491-6971-46b8-b83d-aba8eca5cb66",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499b4a08-445f-4a74-8549-0a8a0777883a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d9214f-f90f-4c3a-b2d4-cfbc71543aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86417671-4a49-428d-b0e1-6896238135b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a579ca-8e28-4cf9-9ad5-7e477484746d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34e680f-e4e7-4963-badf-d8e2b4abaa04",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e0136b-0f66-4d9f-8a8c-8258d925dabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b07d0c-87f5-4434-b952-a920381ba0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5383c1-790f-4161-a948-f9e67d097f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0dce46-d4af-45e3-b3a9-3be755afaf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd743e6-1191-422f-aebc-6e9633fb7b45",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a22104-91cc-4268-8e5a-e66516d4e230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8effc0a-70eb-4897-91b0-73b39a5a7f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ece62e4-1fe9-415f-b61f-8f6cd546a619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4e4bf7-e72c-4dda-985f-928d53afd87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3beb97bf-742d-402c-803e-2b809b672e37",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc956eb-0d18-4bf3-b477-b46b67b3224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f83f6ce-f96a-4252-bcb8-08b514333653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a3239b-e796-4951-8541-6baf686af309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae42d916-f6eb-4197-ad89-2a4049992a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e53fcf7-82f9-473c-99e4-dd7a636ff3d1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd972cd-b58f-4c1e-b161-bf85c39514c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f571da9f-6ad5-434f-9822-6143f42b341d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a039b63-4daa-4df2-8da1-1b4b9b5d2974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a98ab7f6-19c7-459f-bf21-e89e5cbe8ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a80598-31a2-42d1-8d9f-0085774cfc5e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aee68f7-93a2-4b21-96a3-5af90552e0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85987617-18fc-4fd6-85ec-fdf8d3133ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd870705-2222-4287-8443-edbb34bb888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f30224db-e0fb-4cf1-a205-bc768af2f35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c143ff2c-82e3-4e2e-bae7-a3547f0dd4d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01f8147-064e-4407-a7d6-3beb0da76b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c81594-600d-4c46-84a7-3019599301be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4429ba9c-ade9-481d-8923-ba03e1c5d781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c0a8db-351a-4297-9e99-e7a579d587e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b807cf43-be72-46d7-97ca-b2ce704cb2bd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fd07ed-66d6-4509-918f-26159864652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a1f086-c323-4af7-bbe2-617a95ecff56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348dbff9-5abd-4dc5-beaf-958f56b5b774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe88c46-500a-46e2-bbbb-ed0cb524e9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e61e4e-5f7c-45dd-b4cf-320cc010c57d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7843dc28-b24f-4d28-af3e-00838ed0c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5f0cc4-d1dc-4aba-a686-028aa6fae1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f0b7b9-83bc-429e-86ec-67c4ab66769c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4ede8e-600d-4fcf-97c9-f2d7360acf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4dfd3b-ea6c-4ed0-9a2c-d832a7438fba",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a1a00c-2410-45c8-948f-3e4d52bad805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7580223-3b9a-4d25-a5c6-f3e1dccd1303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56419ad6-ba93-479f-9fa1-0a22c16c303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89134bb8-6d4d-4c46-81b5-0cebe2ddbac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9a4e9-81c3-49dd-a7c5-fc5102d067d6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abf4299-34a8-46d1-a577-76cbcc9c55c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a76c9e-6e17-4d4d-9a44-95763cd6b2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eda461-cd6b-4515-8a1c-12a708e4f885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a882af7f-6de7-43f6-980c-7b915d37621e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f71830d-adfa-41a2-9d67-e5fe56319ac1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee73b16-0898-421a-88b3-fd5667144fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1ba6c0-6105-4244-b509-01c2fe048b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927ab557-b819-4e10-bf30-8c41cc9487a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5dc7e9-b5ff-4b1b-8a7d-eeabb621f214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1e4a35-ff05-4797-88b4-0235d63563be",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9825c6-4ea8-4eeb-84db-b5fe5ac1820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2153eb1-c836-4f15-a426-d2256f58dbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b22aa5-a7d8-4dd1-8dc6-d6915725b44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb192f09-fd64-4d5b-aac2-4f2cc03fff93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d722686e-9de2-4ff0-9620-633f5641b8f7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96eafce-f12a-4907-bbab-57b194f7af99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843c05de-e901-400a-a86b-208494b15870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045359f0-e97f-418a-abf5-152c78344101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "696a5a3d-b4c7-4c81-a2e3-54116bf0c2f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4db2e49-eb8f-4955-b7a6-cd37da43ef95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c72c4742-01fa-4df7-9139-56785ecc5abd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cc1af0-e494-426c-80a5-6e5b36567fc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbda1f3-333d-4722-a5a6-4448f79f640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e001f38-0aab-4acf-8424-bc321224dc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63a8a889-f361-4c74-8ca8-519d7f798cd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fa0ef85-f74b-42ac-b3e9-bf0647905bef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ed21bff-ea17-4b72-a6a4-3b657d1de8a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d049ac8-a353-454a-b1da-6943068a35d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e3d2023-8667-4447-8068-5a2f6ca9b363"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c95057f-08e1-4b17-8d19-84ec930ecca6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4147f28-2edd-47a6-9143-26a0ed2d6142"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0550e133-d6f4-4fe7-9731-9c58f0ca3495",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7ad7bc7-2b7d-4352-bb4c-6bd52c087f89"
            }
          }
        ]
      },
      {
        "id": "5bd0e0de-3e0d-4bc9-8a17-a788cde7238a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6509bd7d-6f76-409e-8407-0a83861294f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09703415-5b59-4a58-bf03-92f51283fa4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4285293e-036e-49e7-98eb-cae63c1a4e67",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b4ea6b-ef49-4ab6-bde1-92676e5e6d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51c0212-4501-45c6-b311-d1a97abeba34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e68ae5-7278-4e19-b38c-597c3a662dc7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f012a9da-8a94-4ce4-af2d-94c9f8af9063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcaed9d-b221-4399-9d34-6cdc4e310770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9c5a33-f7a9-4bd5-9ab1-9523b5cb81a7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2b51ac-f64b-419e-bd3d-aecba652d524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9451ae3-a3a0-4d71-a927-4356fe02eb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba7f610-4998-48f8-aa82-a4a48c961ab8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a1095b-1f5c-4706-8e23-8b6b7e4b21e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16cff75-51a9-4933-ae25-3bccb87d01fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a712d5-72ee-4e2c-83a3-e1a9a0548ba9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d3d443-5d31-43e3-927c-097c40b5b5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cd3c51-aee0-438f-8731-9a4817b6709d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a61610b-425b-4759-8235-27e71b3810cf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be8e71e-25c7-42fc-9321-50786f59883f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368104b5-fa95-4eec-bbe5-f8d8ac358ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f568002-6782-4bb4-8d50-21b72bba721a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f35a0e7-a428-40b9-8f12-db2d6899f8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81886259-b4ee-4866-82b9-fed752254fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d8a5d7-945d-4ec2-acfb-354df7524938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fca572e-3c82-4805-addd-32bd16ab1793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf92209-4206-4438-b528-40c9ea01d58e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3218b58c-50e3-4d6f-88ac-69bb7d89d526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c0a965-a705-4c38-9258-f6c571e15dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890c8473-49ff-42a5-a37c-737992905cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1aac2f-c774-4186-be30-24b7549b52b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ef72c0-904d-4b4f-9d67-40f9f685abe2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ab44d0-f3aa-4af2-9a6f-02d70cf43dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b860f1b-2359-4164-9c9e-237f3ac595d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5dc750-ab4b-46fa-b3c7-9d971d5c88f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a1e4fc-be2e-42e4-8d92-2a83f651ea3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fda204f-5faf-4514-b3e1-dd4b0140ba33",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a48520-5f66-43db-84a7-20a6266e5bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4af8715-adfb-4230-97ff-31190384fd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586f1109-30f0-4c32-b56d-95fcb91e7791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f910ab6-b88c-45cc-a0bb-6badf9af7d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985f52b6-3fb5-4ada-a6be-2d85740f972f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcb2e00-096e-435d-ad39-9f8e69dffb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480fd604-3c96-48f9-9e15-e8b4e58fe827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a58af7b-b106-462a-b071-30d832cbb59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb70c94-85e5-4f8d-aea5-a3ef3493bc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0941f5e-d705-489c-a4e7-d15605fc7a34",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4701cc3f-d78c-40c0-be67-cd9fac472561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f76a8b1-0a82-4d37-894f-a30602fc8c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39fda11-6620-4ba2-8017-ab5ff34e6c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017d42e9-bae4-4ddd-bbe0-baa8b358edea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ff7a63-df90-4814-843f-87fdaebac273",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebb3e2a-e4e4-40ce-96cb-f7c2a2956ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f20743b-3371-417e-b764-eb86e7c7ae49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564ab0bf-3b55-445a-8e5d-f846bdac70a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10be61d-34f7-42cb-9a76-4d8198facb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93831cd-1a9c-4487-8171-c7dec9744f2f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5cba7c-d82b-4381-86b3-9be4c975df65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c668ad27-802f-4683-b54c-271aae81007e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d420d7c4-1ced-401a-8977-cc975dd6c0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b83f49-ae4c-4df7-808f-1bb3569cc267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51731916-c94b-461a-898e-3c0b19409857",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd27ab6-97c5-45e3-b695-88c5fccd2161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b20e09-4556-4753-9078-84fb569e3e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6de1f9b-c8de-4ff5-b615-1ff8b2e89194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e9b51a-fc9a-4471-9e2f-205184411c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b99d89-ce01-4a68-883e-9069455b5ee5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811dae79-444f-4f25-b507-9ac85c6661c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a11dd92-44b2-4e7b-9641-6f796a954be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f2a2a2-dd9f-485f-a073-1261e968ec8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02196f4b-073b-46ae-b419-e9b40d302a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6c8404-5f2c-40f4-9c62-6ee98fddd07a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881e7c12-8849-4c0e-976a-57af18916253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501962bc-d67f-4f82-9cd6-6f653c6626f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ec4386-f36b-4123-98fe-707452105be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81d7944-3082-4507-af79-004dc11c71a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4304ca11-e043-4269-b517-53ab61d4a32d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bded525-c6fe-41d8-8a76-dcef6a5ee904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c04e60d-937a-4761-8b93-4c4075e75ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbb986b-a85c-412e-bf7e-aa06511435b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42ada50-f44f-4abb-8d55-67447388e996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4225b83e-3622-49fc-93b0-9450a14e0825",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4a443f-9400-4283-a3ea-34f6afe86d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6d19c3-045b-40bf-a933-28c31aba9535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df12b932-5678-4d21-8a26-2f17bbf73d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e63a2e-7a93-45e7-b96f-bed2f889c774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7949f8-c426-48d2-a5fd-996baa9c60c0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254f8794-ffcc-42e3-9702-81d5e14e93ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1194d50-a875-48d1-b5fc-eeda93a33a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a21cff-e273-4673-9deb-712f16b4c516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8e3843-2f53-4f21-9b6a-6038bd0e7258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ebd2b0-e25a-4264-acfb-f4c87346413b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4de4632-6405-4542-981d-702613c53091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c078a221-0e73-4627-8de9-300ca4d1f9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d870b54-68e1-40be-b191-d64b9b5a11aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e57548-2232-42d1-97b1-c32ea10f29d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ae0f91-51c5-4b77-9ab3-f88fd95dc328",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085ea774-1f00-4f55-bc57-842448c07ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443e15d0-1bff-496b-9d57-4a471e09401b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdc0ba5-be82-434c-b7bc-47f51e3fe536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172d12e5-c14f-4814-aa11-258f2379faca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15dd5fb-a00c-447a-ad69-b6306eb48d1c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff74e1f5-f331-4368-90ec-e92034b5639e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175ac501-a0ba-4232-9e24-d9f4c0950a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34afff5e-478f-4854-a6dc-c1836d0bfa65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964c364b-4337-4d46-9a07-24973308e73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35315df3-8737-43e9-b8cf-ee42dcf42871",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fb1854-f83d-4513-a952-51ef94ba3863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03656b31-8d3d-4164-9c6b-479152d09a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad4ccd7-94f3-4710-9aad-7dc1ab5af8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43265811-f58c-4b50-9184-9ca8852261cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cdadaf-b0d8-4737-a912-8b6dcefc7799",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19e50af-16ae-46a7-849a-32a7f73a6f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06108f83-253b-4a5e-aabb-d9b38d1ce972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9141ad-300e-4704-9ab6-18d2c216a3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de53f679-d6df-4ad5-aab4-3c79c19b7ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd58a01b-1716-4923-9152-b6b19bf1d6ac",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6f0fb1-7710-4c37-a1a3-6f3a42ca515d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac6c080-8492-4690-b695-d235c8d24717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ba29f7-33ee-41a2-b77a-47acedd12205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cca7df9-9fa9-4901-af4d-66ff04783129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4643fb53-f5fd-4241-ab97-634aac06be37",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c48a673-60de-4958-8605-ce01b6df93bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce862b0a-236b-4687-a7fa-eebfbd797e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62566a00-18de-4937-be3e-eea7fea6b8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cb56b6-0a4f-4ab4-9143-6bb8bada859e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b2712e-c77d-41bb-a8b7-885e9734cd49",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd7e597-2f94-4ac9-8ff3-0ea308619f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffab6f3-78a7-4577-bf33-c0ae530e2165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f4a59c-4084-480a-a16d-9a9855850553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6589b82-b2f4-48b7-8401-75d07ed89a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d111242-7feb-410b-b909-7ba28c582a51",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e9b1d2-9c8a-4e15-bc60-c917626729bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e107a2c4-b5bc-4408-8f10-b5b74379ced8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb508955-82a4-4b9c-bc47-8c366565b3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59ec862-5b2c-482a-83ab-a960ae117c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f429efb8-1cf6-415e-967c-2da32616656a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bde95d2-8909-428d-9f20-a5856e28cfff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242a1518-966f-46f8-aafd-8c001d5e4034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91818849-26f2-4920-b525-234ac0fe56d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6116169-f542-4414-bb10-f8a51cf8fb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2338eba-a413-4fc1-9301-a6f79d2d9b48",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2b4d6a-8644-4e54-b450-9ddd3b1fb9e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327de4c4-0273-415f-b4bf-4c2ec0f36d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d2120b-3a8e-45a7-93c6-55a406bb35b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676f7d4f-323f-49d1-ac9a-2ab469fd4817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c5a747-b75e-41fe-b596-128d390c164b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5ce8de-d0ee-4f4a-a7cb-f50556ff3dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60db69f-971a-4bf1-9dad-4ac28897319e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8263173d-d767-4e52-9268-e9db07b907ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdff5b32-948c-40b5-bee9-0b149edfb029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac910de-3d4d-4a70-ae2f-6828ad88ade5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5edb31-cbf9-4b3c-b75c-5a0d537d2f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "264f5f40-b58a-46c7-9b37-a026b6295d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c904400-88db-452c-a803-9fe804c83322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb967c12-3186-43c5-8e2e-6185f4a41620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeab91b4-45b3-45b2-8122-c1132e443f63",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5bbe6b-22b2-4881-8211-02896d33ac8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290347ae-a1b9-4b42-984c-6fa0308e7cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc594bc-777d-4618-9ca4-3611de778daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda0b7d0-7608-4fc3-af29-3239686fc041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8291369-f469-49de-ba6c-5e46e46e6522",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b303c519-4d18-4cc4-a912-78da393eebd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cb3126-952b-4402-89e9-e1ee8bf9ad35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fea6816-d92c-4b41-9151-f1885bbef7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270d36de-1f00-410d-948e-5a3476f757e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79f8c98-2cec-41a7-80d1-de1f2d44ec34",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae3fa4b-942f-42f5-8001-2ae8f683aed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25859d3-8593-4b67-a400-23b00823da10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73416d8-1619-441d-ab2a-83ace6e7da16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31c2dd0-81a5-4f7a-889a-df4c1f25e641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2353270c-08e6-485c-bd53-4faaa040c091",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc12e1f-fd05-4e7d-ba78-e5401ca103d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aae7c3a-eb48-4de9-8c19-3681b18e131b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978089f4-37b5-4e62-aef7-6f574a1c5e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fb08f3-70a4-404f-8452-f44a9f66a863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93001874-707a-4ba4-920b-177a26a0dd91",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38035fa8-831a-4229-a5d9-c282efd3861d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39779b08-9d1e-4dcc-b2f8-d74dd53ed0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be2ab4a-3e35-43ce-bfe0-a5ec8c1366ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35050446-3135-4f33-be18-74e98cef2a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a50d2ce-8515-47ae-8474-1cca75f9e8f6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcff8572-3241-4726-aee8-fcde70db3fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e932b1-b8ab-4826-a020-5139f40c06e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfc1072-a322-4ecc-801a-182fd36b659b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050e3f49-e56a-4c11-a465-a25a381b78c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c94db8-e092-44c7-a5e0-616bbd03d42c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21502b9f-6c20-482b-a74e-7475d7e663a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e46af3-fcfd-4022-9737-e93007538539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910f841a-3f2c-4865-b0d4-bd9b1f9c4ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfcf8c9-1a84-40c1-83c2-d3af821d0f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0c1366-e64b-425b-a80e-5c2cf654b6e7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd68d44-2ac8-4a64-a375-8c7caf2b401f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a91154d-9f53-439a-a6a7-78cd622c6883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4fb58a-930d-48bd-ad9b-888f76a4f6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c09b07b-7dd0-46bd-b9c8-b7c33603da0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09435475-2950-4af7-a14f-d6c111bad451",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebe8813-e0c4-474f-b796-9a965fa0425e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd1c64f-2ea6-46f4-b475-f8f15395111b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d1f99f-67e6-4f38-a856-f1be5a07fb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7d8e0d-e9f5-4d9e-8e49-f570100af4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12582d18-824a-4676-bcd6-cb0e0aac6454",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9253dfb0-d859-45e5-86c5-b11f9c73280f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba77a67d-219d-4c73-a459-6e177d4c7b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b6413b-cb05-4c3c-94e3-80321129dbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f4627a-c788-4ff5-93b1-3ffd043f623b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252a6486-7aa7-474c-bcba-049197c7528c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128414c1-e2e4-48dc-9598-723b6ae70f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b879c6-200d-4006-a3d4-eac6c6b87cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b49553a-2258-4f52-a316-b58414934b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28d63c8-ad6f-4e3a-a70f-6ab73b5ac1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ae4d79-7ca9-47c5-a804-54a493b18b86",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff55b5d0-7187-470e-814e-4f70e9b6fc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf2aca0-bbdf-44cc-8999-2f65a54202a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b52a3f2-dca6-415a-8603-96f5f49682bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8ed02f-1755-49d6-92e9-ece69bb06af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8921cbd5-8119-42c3-a8bf-86d35c47153a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670d5915-fe88-450e-bcae-da2061acda15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afa1da9-2390-44d0-8eaf-dc8ab9f4c4de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737bf936-582d-4cce-9708-2d6aa56a2074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b794783d-fc71-4b4d-8479-8aba6931d7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7690258-aac4-48cf-acc4-fa9f9c6f7d56",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205ee243-02fe-4155-ae79-b6336b5e7071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1afcb1d-d8f5-4a54-94d7-4b2106903246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e574ca8b-5c02-4ae4-bf4e-b44a6b1af373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8682e7d4-28e7-45f5-a99f-752a1af8a9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e60a49-0406-4d60-ae44-123e6eb07fea",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0090aa85-c9b3-4436-9945-a29cfbef6de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1814c330-b6ec-4801-846d-3839113873c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d43d165-5730-48f3-b3a5-7365e5136a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69251b33-ed4c-4b27-851b-18e544429d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f000a0c7-68fc-4ca9-b4a5-7dc54c6b76a1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96486a8-07fa-46b0-951f-8208981a11dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b60789e-0e00-47df-a0e5-88be0f2d44e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2580a4-4510-4ba9-956b-aed920687bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda4df21-a154-4cd6-8220-fe00ba64cd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4f3a24-f3a6-4114-ba1a-b3f67fb0706a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8eb041-1076-4014-977e-363cac7322b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18847b3f-8599-45c7-b012-612b3c8a7534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82a24e5-7259-4106-b722-f8d57b9ffb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d21851-d063-4d85-91d1-543c489640e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0085d352-76fe-4919-b770-d127e8a63ab5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1f128d-f934-465d-8007-808e90185e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7622ee67-02be-46ad-8aef-631c6216888e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4e17c7-e223-4098-9030-93f261dfabfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b757e47c-52c9-4ba2-b919-a9cfc2d4e6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7db7e27-b098-409c-a83d-7e45cf8a664f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a38020-9aea-4bb0-a44e-f821c425f8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338f1ff3-0d7e-4091-96c5-8777e39b8a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2583016f-d146-49b0-8e2d-848609f3563e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b7b124-3728-4528-8585-4a3854501cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dae4b1-63dc-445a-9ce9-ae4246537f84",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c305d9-fffa-4281-b177-61e27dfa7845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ffc632-d33a-4574-8d38-35a581079dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961d99e4-2802-4769-a247-322fc7a094e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c0cada-59db-4710-9f1f-7546475884f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdffcd1-a98a-4847-8944-d44f31673ced",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae79ac9-fac2-44f9-a401-e3ac2f3cd017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322514d7-0b5a-4f78-b5cc-f2929ed98cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a3dce1-7e5d-4f96-a916-746c8358d396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15090f8-83c9-4975-b0fc-a6079170552a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d58c27-af2a-4791-9750-d4cfb6a16830",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96273bc-ad21-438a-9ed6-07e4c89aa611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60abdb46-e41e-40cc-986a-cf51a99d1948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ecaec5-0f04-406c-942d-37462a86c5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a505e7b-dfd9-459b-87e2-3a0ef41e54e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ddfc9d-e519-4979-b02d-ef9525a76fa2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2901d3-0ad3-46d5-b784-c5c132460164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1b6483-3d4b-474b-834d-ede8df153004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409aa994-bf91-4e0d-8c4e-59e4da427e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb06dd0-1061-4b5f-ae9e-b4a535dc820a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b49061b-f5c2-44d8-9194-b4514ee2e665",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaded14-b030-432b-8f21-c1782c58cf94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba2461d-0577-44dd-9e40-d70bdfd02d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8acce6-f0f7-4c5a-9571-5d2a77fc9432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9598d96f-08ec-4389-b441-62fca5c0fde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76301a2-7513-4016-a3c5-24e8c6f37f2c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5fccae-e4e1-4c1e-801c-f3f472ca992c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f1acaa-ac16-4ef4-a482-e99c19891a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce74f36-c466-4c6b-ace8-38f0aff486fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4da8b7-4e17-48fb-8dc2-378d659ed30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb1be63-3705-4830-9865-cf8b42b6085a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f12ca1c-24c1-44b6-acaf-58116662c6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ba723b-24c0-408e-961e-d58afd4a3642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c54559f-1506-474b-acc1-cde4d372bca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df23d27-83c7-4307-946e-9ce2c8017798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e00def-9189-4966-9145-376f72afae90",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936da1d0-bc17-415c-be95-fd5ab7397002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610b9b5b-2832-4fba-b222-da2acb37af76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25891ed-c412-45f2-a216-f85dff796a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74b012a-ad50-419c-8c7d-ce40d2f03074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f34c06-e938-4f07-ac80-26b78d092c71",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecadb51-d68d-49a6-84cd-bd5d82ba0e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17dd16c7-a18c-412c-90a9-683367f1aeb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d6ee94-18ce-4d6a-81fc-02ba6b832156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bbbcec-e2b8-48bf-a1db-c263e8358e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ae8931-7670-4fe3-8a8e-a11275c665e6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1a0a14-6cd7-4d66-ad59-57d257a3c262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4222e809-0ff9-4efd-a8e0-664c7f2cafec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98813408-c039-4888-9c4d-d4e8ce5b9715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e33d25a-50bf-4caf-832e-38a01b7be411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8a137f-6fab-48dd-a071-512c13d25255",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62357d9e-ae43-440e-b0ba-1aa7a6fd6d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16fa4c4-951d-48b1-b582-8aaca6fbc40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab841c9-5fbf-4bcc-bac7-41b0e36547c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40273197-f928-4b06-bd52-e123648f7acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9cee18-57f5-4eb0-b977-af16c5fed18b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2947aee6-5a6c-457b-874b-b5c86a85da66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a18320c0-be95-453b-9915-4d04f6a8aaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bcbeb6-6e3a-425d-8c5e-7eb055410273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d4574c-20ee-40cc-9442-9042a084e70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8edbb4-3415-436e-9c95-d22f91444fc7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14418cc2-ab8a-44d9-a40b-e28c95a9ca30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34ef4c1-ce7a-4800-831b-090e935e1d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dadb22-4f4b-4d9b-8688-3f9f3b9b344c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce6e50b-ccf0-4cb2-8e25-e5723d300ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c295d1-a69b-4cae-88fe-cc8f5cdbb2fb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7a607e-e078-4450-b39d-45775751106c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2267af3a-86e4-4371-965e-4864428b1b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dd8119-57e8-425e-aa9f-db5fa004ea8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8b9518-af41-4b2f-8389-d4f8213a397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8b7c5c-4301-4d3a-bbce-d37c0f3471a4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490b2b69-74ec-427e-af05-0dff0f885dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26de11b9-61ef-4e28-ab91-31d619b4d471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f52b70c-8b72-4d58-9575-9f2b0f9c9719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21278d26-2fde-4b42-b1b5-8bc223f9ddd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe84f2-2a9f-45db-80fc-fb899d5b6fe7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b83b75-1198-4817-883e-d346c5486fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f33e99-68eb-41ce-9812-2ac72de30f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86ce9d6-4227-42d8-b907-3753b9b337fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b35896-5bdb-49da-bb40-2ebc01f54625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6eea62-83a6-4760-b3a3-5a4520cfda62",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e89fdf-4c60-4757-84c0-dad71a78c63c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555f09ff-f48a-4a65-90d3-62e604849117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cd8721-bd15-4172-ba83-4c3774cfa425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0c583d-6e23-42e0-8f7c-dfb0d81d1ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af87dfdf-1077-426a-910c-fecc2986a68b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc45f26a-9bf5-4ed8-a1f9-a974391a1eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d9d21a-ffbe-4452-ba23-2a0c68552545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714da812-c864-45a0-97ed-0aedab16e1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f29367-cbef-4f71-97d1-6bde928a7e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bcc00c-6bd9-4c5c-a56e-46eade0df145",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af81b84-b4a8-4b2d-b202-82dffd454560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70bbc016-bcc7-4883-aa9f-6c8c8a1af862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c78043b-b6f3-476e-986b-e6e2de20763a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b251659-7f15-4eb8-93b6-2d77a87f8979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda70226-9321-40bb-9d15-b5d73f2e348a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a24e9f3-5388-4b2c-b9a3-0344b4742d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171abeb6-902e-4ba8-838c-2d0afb2b971f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ce075f-d3a5-4dd1-87db-5c8d2d42b99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2092d7-bef6-4ac2-95f3-d3d9306bdec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8499686-cdc7-43cb-87e6-438ab464cbed",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44985f31-53dc-4ecc-b255-da59cd700809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f559e7-27c2-49d9-a49a-16376595572b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cf4dca-b970-4308-851d-fe7d06dba798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33689409-3b44-4283-a455-41cf3fa36598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3f69dd-ac52-46f3-8fc6-0663afeb9b50",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce76fec-045a-456e-983b-699f4ba5cd8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb20b00-cee3-4006-8b9a-08dba033b6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678db643-b6eb-45c0-bb52-00224c2e7875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2e3f86-2cc6-45b6-82dc-6c45f5a8ecf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393bb997-08e9-406f-91b6-58a180ba9dc7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf510d7-e41a-415b-8431-b26ea57d2479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12983efe-b5c0-4ab2-82c9-be34c3e5df70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab34e07-2629-4a70-9115-3915962e309f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a021dbb-760e-41fb-99c6-8590cb9682fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b63e2b-acfc-4243-b4af-4da9e8ffa187",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19697182-7951-49d4-90a3-6a6ada78015a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ce630d-a39a-4a7e-833e-9461766ebfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6475595a-e284-4842-948a-9c16da34414a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8681bf-96a5-4a5c-a691-cd0f10de8b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daea6cab-71f7-4a1c-b839-ce37b6a6c269",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9294c7-8fdd-4229-af66-46aa7c157a18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a7cf8c-fa14-440f-8ab1-5d4edb4993e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1210a9ad-10d4-43ab-a6dd-f44866e716bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26affa56-d0b3-422f-9d35-ce76c01091ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ec11d8-4e42-42b0-b746-a594835fc7bf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad12ecf0-f25a-4ee3-9ba8-bf1bbdb8bfb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a9ca0a-9df5-45dc-ab7e-863f2bcf21d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef891c62-49ef-44a8-93cd-3cfef200e5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0198e1-c90b-42c6-93d0-6b4466be8e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67bd218-84ca-4060-8832-104b4adbb66a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fd336b-5cc0-4c11-93b2-4994386c6e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e910bbec-9da2-4a86-82d1-97f68b26f1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7527bc5d-dde3-46d7-950f-0bd218dc8774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcc0fa4-802e-4576-a68d-3a2e68c56fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cb44f4-49af-45f8-9c6d-83339a87b4a4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c21d4e5-b986-47e5-b39f-0c57037e6673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656347a7-efd3-4363-b8b9-1119933b3082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bed4b0f-5d48-4c1e-b673-17733aeee17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd39c70-cc89-467b-abed-9b5ee9b42896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f068be90-93b0-4bad-be5a-7d9884335aae",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ea885b-21f5-4ba9-bc12-2403262f1c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4d20a1-43aa-4971-a4f0-d65369c08b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c66c39-6365-4037-a508-bc2c6711ed6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b8929e-e2cd-4b78-aecf-7cf6a1514d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23019f11-e0b1-4142-b426-b67265ecd076",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c56810-e3ff-454c-85fa-4fbf24735e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fba8fd03-9f93-442e-b2fb-e1acfeaa9463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9482840-08ed-46bb-8f52-fb68dad3c210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ae92cb-b52f-46d3-b498-b99414e3ceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739245a3-74d7-42bb-9fce-470ce947d5b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97468d4c-d38b-40f9-8f4e-ddbdc002da95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de13e1d-c181-4d20-b8f9-10c58d8506ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ffbc04-dfd7-40cd-adc5-f395075874d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df8475e-4c09-46e2-b7ad-d142db21b530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6d37d4-cc5b-4f5f-933b-7891049a789c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be677a7-6c68-45c2-923e-f78a4528664d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451ffc85-ac4b-481e-b9cc-68e298c973b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782c4984-459b-4d05-8f9c-8a45a11035fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bf0957-acb6-4c27-96f3-555c1a84eb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530cc7e5-065f-46f7-83c2-e2a60d8ced59",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f6b266-f96c-4834-85ee-57c4c94c7bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc84c5f3-777c-4973-b170-f41ca3608cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ded0087-7427-4d85-8f95-7ac5ba4f46be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49574701-c6e6-4592-91c8-cb92bba2c335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32849eab-1d24-4bea-bc2f-a5e110c41934",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6a3cc6-2107-496f-9e37-f179601a7a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d85c5d-b973-4928-9d30-286e196caf94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48564496-71b1-418c-82c1-50bb1fcad190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe55554-f3c0-4381-888c-39e17ad01717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ed4111-c64e-405c-a07f-f06887854dee",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebb6676-fa86-45e7-86bc-59b78a7a531b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d444b9d4-18ce-4e9c-a824-a915c5fe9294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72415ea-9e65-401d-9cf1-43af23b22395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68ce8c0-784b-4f9a-b5b8-ca3d6ff36842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cade554-3676-46ef-931a-d285bbfb7f5e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adce588e-d0ef-42f1-a044-46264a567fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f26b21-208b-402e-a241-77039b805b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cad908-e2dd-4f38-8452-17bf9a9f9d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279681c2-fdd1-487f-89d6-6e449af0df28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4df277-7738-4551-abca-aa41c811486d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9326e4b1-edd1-491f-b297-008ad9fb5bd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff54c530-7f05-4377-b932-34f98e027219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84713965-25ca-434a-b16e-7cb56a4c1d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d36e19c-1867-434a-9df6-c8207a9d27d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ee9e36-0417-4cb3-bd89-2beacb76e4c3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba320adc-58e9-4b9a-87ba-79da18be28ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b47866-7b5c-43a0-9b49-18f9318d8d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573c3f87-dbbc-46a2-a7e9-64e9a6e07baf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e558ffc6-21e4-4133-b248-84a03d8be389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb73969-1ed0-4f97-bc63-7456b242a671",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3420c0-b200-45ea-bada-5787b360716d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0502af0-b934-4c97-9d96-262e2b664c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9170c4d-d058-4c04-9685-00a1d7ea7a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c806797b-e03e-4148-a3a7-a1ba2453aab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783a8508-84bd-47df-bc12-508463f100b3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b045250d-d024-415e-a830-913542d4a472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3383cb44-4042-4a96-841d-57b016d772e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6635123-3aca-4530-8bf1-42644358f66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5536f404-6084-4ae6-bc18-116800e5a123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23b280c-83e5-4d57-b44c-e2429ea53eb6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3febbf28-f8f9-4d57-975f-9c73a5586868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3466d07-ecd7-4286-be1a-092fe5251645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a21a812-c89a-4313-a30a-c26a8f6ef565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba24d6c2-6465-4e85-8c61-6ec6a57212f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734a6055-972f-4af4-aff7-c756abfea958",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2c21a4-dd60-405d-a5c6-bbb7f8ce8ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69cb1d75-ffa8-4a7c-a2e3-73a878b79e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc55fb10-d6d3-4bc4-843e-9b5057feea37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c83640-1fbd-410a-bf0a-394d7d52c7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900b5d89-112a-4ff1-8aab-8d178341684e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644202e1-0702-4e73-93dd-109ded375736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c5bb35-3f63-488c-8a09-2605c8ffa47c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e32a0b-042c-4560-8632-d4260dfce70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7d6bf7-884e-48ed-8235-9c3c84f99828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8092bff6-bade-4f05-b614-0abadebf8170",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1516eaab-3343-47d5-814f-80b666f03f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64064dc8-6178-4869-a1fb-c1e45daae1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1b8f47-0e63-4064-8107-4ad093bc0369",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45db1e51-a2dc-4941-b209-570d9c209933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e249d47-3c40-4d29-9190-b7bdb05aa5f4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42bcb15-0256-4db3-b947-559104277479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c2c7d1-ecfe-4004-af5a-7b88c972a1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38849ef-ba9a-4a1c-af23-5fc3cd8be0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9666fc60-a5c2-4232-8324-06e629f66d55"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63bc8cab-f4f9-41d1-9fe5-6663c2b89b0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eee4ab2-d8fc-4f11-aa92-dbcafd0e1d5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8c9954f-4450-4ee4-81bf-7f0bc87d9925",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c2bf5ab-ba4a-42f0-b7b4-51768187e83d"
                    }
                  }
                ]
              },
              {
                "id": "e98ea7d6-d23f-45a6-850e-59e689e2a3fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef980794-ee63-4221-9aa5-21982a0290c4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b6315e-b9c7-459d-9305-c3f53f197164",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f78109a9-93a6-42ca-ae03-01073215f1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5428aad1-172f-4141-99f2-a16fba6b3ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dad959c7-7659-4abd-b665-031d9368ae1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57041783-2117-4987-969d-7040e2c59ff2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23fb6fd2-a80d-4d64-8e4f-18022a39cb7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c95d742-6c43-4e53-9393-7bda0e77c29a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4948e0e-6b5e-4762-ab71-dde13bdce2b0"
                    }
                  }
                ]
              },
              {
                "id": "de353801-23f7-43dc-aae3-997bf612c6bb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b59b31a5-1813-4ec4-8ac0-16ed9ce80952",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709c63dc-6384-46f7-afcd-284ae8b168f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f8b3bbca-26ba-42ba-a336-830fdecf8b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fcddad-5d1c-499b-a5be-5a95dd2ec8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f533528-c447-4306-b305-89af423faa25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d394d376-bfcd-4b2e-bb59-f686c6325026",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1badad3-6643-4ef4-bff9-23f4675c1c2c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2a71fd5-433f-4857-9579-f83ebfffd867",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1b5072dd-e360-433c-bebc-d1808e48c197"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a462cdac-3add-483f-b0dd-55359ca9eb3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf0bed16-356d-4def-af3b-b8870f5b1b5c"
                    }
                  }
                ]
              },
              {
                "id": "cb2fbb34-821b-4845-99bb-4384d72cb9f0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f0de122-9eb6-4e6a-b26b-ecb678f1d46f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49d851d7-f6b9-41c3-b962-0b5ae1f4b159"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78bed7ef-b62a-453b-9e2b-5cea227e5649",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75f448f6-3de6-4442-94d4-be8445b368ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbe403db-23e0-4cde-96b1-486f8a9683cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ff9014a2-9083-47f7-b644-ba84087774a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19d28b08-5132-4559-8ca9-0033836fa0e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43b91093-6856-4ee7-aa81-e49646d9b727"
            }
          }
        ]
      },
      {
        "id": "0dfc1b29-6671-4ca9-90ce-8f1fca57f5ad",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2526ccba-fba5-4ecf-af5f-56837dacd033",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a996e409-02d9-4c66-a875-5bf3b464b4e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed9f3ebc-9c2c-4e6a-bfb9-d6de9b16ba2a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefe5b9f-6b35-429a-b4cb-b6b17eb139f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc3eea1c-a4c8-465b-808f-52a94c36c6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae05b1b-6cf6-4509-b028-01cbf808bc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9810b157-6d19-446c-9a9e-6c5515e4444d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63d097c1-7dba-488e-a2ab-a7612d8d5230",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "add0893a-469f-43b9-926c-7a180819e14a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6f1a2e6-9f56-490f-a08b-5d829437007c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73e54f00-7712-4b97-ab60-aa530fca9917"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d017575-8574-498d-967a-4837777e98ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e51051a1-eb1c-4e6f-8dbf-5b8d18f041f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2133d3ff-54c3-4d8c-bca7-4e3a644b194a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65734aea-1c8d-4b06-8d8b-9fc837269f97"
            }
          }
        ]
      },
      {
        "id": "5cd641da-4e80-4921-a251-f2b8e682ea0d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "47424315-6779-44f4-977f-dc6f87a78647",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c27290b-de98-4ebf-9a99-76eb052da67c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d40ea68-f46f-405a-840f-438838a4c4b6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ce9024-5415-495c-8a6f-5deb6cc7e96e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5c6e3d7-4751-4b17-943c-36f91be18880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b66cd0b-b58d-448c-bffa-e94a54402c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71116617-a802-4487-954e-6efff3e5f759"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "686db574-5583-40c0-8562-81655af08cae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c69ddae-46ba-4355-be07-ee1f97d8bbc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba0310f8-bc14-45db-9a1e-333cd59f3311",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c55eba8-f47f-4c33-912c-ada6e5e57c8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54e0add1-b55b-464f-b59a-3bb33f5114bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9603b200-3f19-4534-8104-d6fbdce2e4e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfc04af8-55c9-4b60-80cb-35884f8851ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a17577ce-be56-4abf-8423-212676d616e6"
            }
          }
        ]
      },
      {
        "id": "6066f2e1-dbc5-4586-ba77-2c4bf172fc46",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d9bd830a-8278-45f1-8c17-4442962199fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c841492-6792-4a13-843d-788cbf9b6520",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a234abb4-eb2f-40be-900f-b6f884becd27",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f8cbb7-61fc-4422-9934-9c55978ea907",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cbecca3-f14b-42b7-b187-81a5a2d0728d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aea217-2cf5-4d75-900b-de3078b4e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "807d6020-3eda-437c-ac64-e244a8b7dcbe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03b609ea-89f0-4dde-8654-d9375b14a169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ad0da6c-f57f-435b-adb9-2ee1ed5b611f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d839c79-bbfe-44ca-be1c-25bafa32fcee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4ccb4e0-0327-4200-a074-a39ba268bce8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "157c96e7-921b-4996-b448-ae86b00563d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13226be2-8653-4121-aaf9-1052ed46e08b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b1d40f4-c622-4db5-8669-36b20b10cce0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20f20a99-55f3-4fbc-ab88-cd91f6c82768"
            }
          }
        ]
      },
      {
        "id": "6a18555a-205c-43e8-abf7-a4d7b0ea391d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fa812c4-5d5a-42cb-8cbc-f94b7c00f44a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf84c402-c9ce-4a7a-b083-3822cf33f100",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bc27730e-2ce1-4410-b483-894ffe4d6d69",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d4bf6c-c55d-4743-aef8-c237eb487f43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00130529-d644-41ce-8531-e0096f7ae8e9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.58802816901407,
      "responseMin": 15,
      "responseMax": 301,
      "responseSd": 24.904663238868707,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695083620855,
      "completed": 1695083647151
    },
    "executions": [
      {
        "id": "af13011c-1c55-4002-849e-627487d70bbc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cae58d39-acf0-4e8f-933a-1096c29f311c",
          "httpRequestId": "e02744bf-f403-4de9-aa73-337e1e045a04"
        },
        "item": {
          "id": "af13011c-1c55-4002-849e-627487d70bbc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3fb54712-b822-4bdd-8379-a959f16aa8fc",
          "status": "OK",
          "code": 200,
          "responseTime": 183,
          "responseSize": 0
        }
      },
      {
        "id": "49e985ea-c302-4362-95b8-b41f39f3dcaa",
        "cursor": {
          "ref": "1d4749ee-0152-4ae4-bc07-db96f4cc727f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1adab665-656e-409b-8924-0b983920842f"
        },
        "item": {
          "id": "49e985ea-c302-4362-95b8-b41f39f3dcaa",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "67f984b0-f833-4ffc-bbea-d064e29129a2",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "80b4a155-4892-47f8-8577-b6c6f40f5ca6",
        "cursor": {
          "ref": "ab67fa71-81c3-4fa0-9530-f72a6b0508d0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ab6fd2dc-988f-4b86-87fd-8422345e6db0"
        },
        "item": {
          "id": "80b4a155-4892-47f8-8577-b6c6f40f5ca6",
          "name": "did_json"
        },
        "response": {
          "id": "20b5d32b-e008-4269-b532-0e21cf71fa85",
          "status": "OK",
          "code": 200,
          "responseTime": 246,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07685564-3ee1-4ba9-826d-4a35c3a5c962",
        "cursor": {
          "ref": "8c57ae16-9c47-4e20-be94-157f4d640dec",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2342c6e1-d7d1-4788-a7ee-53d2f05dbd94"
        },
        "item": {
          "id": "07685564-3ee1-4ba9-826d-4a35c3a5c962",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c13fa2b-fae6-4696-9ef9-918639e4667c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07685564-3ee1-4ba9-826d-4a35c3a5c962",
        "cursor": {
          "ref": "8c57ae16-9c47-4e20-be94-157f4d640dec",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2342c6e1-d7d1-4788-a7ee-53d2f05dbd94"
        },
        "item": {
          "id": "07685564-3ee1-4ba9-826d-4a35c3a5c962",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c13fa2b-fae6-4696-9ef9-918639e4667c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ede3b2-16fe-4641-8106-df5067199ae8",
        "cursor": {
          "ref": "2d0f1ee1-7c65-4035-99b4-ddbc6fa886bc",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cf31c01f-345d-45e9-97f8-2302330b6bb0"
        },
        "item": {
          "id": "f5ede3b2-16fe-4641-8106-df5067199ae8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3061c39e-ae90-445f-9144-89a1361a4cc7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0a7299-7217-4f70-ba48-a91ca2eb3f40",
        "cursor": {
          "ref": "543809e3-8ef2-43e3-96b9-4f6d609878cf",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2fb7405f-e58e-4a5a-a463-b72af56212fd"
        },
        "item": {
          "id": "3c0a7299-7217-4f70-ba48-a91ca2eb3f40",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4082c15c-38f5-4a37-8316-e7d310ec6907",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1618b23-89f4-4932-875b-03d714e1b131",
        "cursor": {
          "ref": "7975effe-cc2e-497f-83c7-feb193d9291d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "65b18825-9cde-45c3-876f-5a12d4057434"
        },
        "item": {
          "id": "c1618b23-89f4-4932-875b-03d714e1b131",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4ea3c8a0-512e-4afb-ae55-b6349fd35514",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a719ffe-9fcc-48e0-8e0c-d4c81fc7d411",
        "cursor": {
          "ref": "6cfd1be8-8802-4bdd-bffd-cef17ad444d1",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3e9276d1-1a23-466e-b4ae-4d12b3228564"
        },
        "item": {
          "id": "6a719ffe-9fcc-48e0-8e0c-d4c81fc7d411",
          "name": "identifiers"
        },
        "response": {
          "id": "7b79525f-6fc5-49a1-96fd-62079db61ec3",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f27741-8bcb-4071-9df3-5f33f35151de",
        "cursor": {
          "ref": "06641e19-bcc2-4fcd-9251-307dbb943162",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "69d2fb73-b440-496f-b718-cd9c53632cf1"
        },
        "item": {
          "id": "81f27741-8bcb-4071-9df3-5f33f35151de",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "552feebf-2aba-43cb-953e-2293134da826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f1f85e-bfd0-4dbe-9462-b1a5d1705f2d",
        "cursor": {
          "ref": "0c6a974b-3eab-4858-bdc1-caaee09f2ac3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2e858a41-ddc4-4c18-8d32-28cf1988e832"
        },
        "item": {
          "id": "d8f1f85e-bfd0-4dbe-9462-b1a5d1705f2d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b1ae7a0f-575b-468a-8ab9-a3ad3baad2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e641cdce-366d-43a2-a220-73e3dceed293",
        "cursor": {
          "ref": "a19f3061-62cb-4048-b146-40ac2c58882f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "416eb52f-ab01-4f90-baf1-638aa2d5124d"
        },
        "item": {
          "id": "e641cdce-366d-43a2-a220-73e3dceed293",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "935d42c9-705e-471e-9302-a8b10ade262a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149fc22e-0411-4a8e-9bdd-88abc59199ac",
        "cursor": {
          "ref": "73667664-eb41-4c59-9a6e-131e994b54a3",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "17a540b4-ae16-4b9e-85b5-a47dc9dbe816"
        },
        "item": {
          "id": "149fc22e-0411-4a8e-9bdd-88abc59199ac",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1807b1b7-8b89-46c4-b111-2e35a6596b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77117b1-34fa-4568-b359-f62dca6aed4d",
        "cursor": {
          "ref": "98b1f0db-34bd-4971-9297-5fc50bc00d1b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bff42617-5a2b-46a8-96f8-e4f2d14665e2"
        },
        "item": {
          "id": "e77117b1-34fa-4568-b359-f62dca6aed4d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eec6c40f-9919-4770-81dc-ec6e242b0741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa765bf-bdf6-4e56-bcc5-e9dea9ca7365",
        "cursor": {
          "ref": "8ec687e5-a246-4aed-8789-27d93a578671",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2a7288a1-5260-4bea-a708-2b5acc206821"
        },
        "item": {
          "id": "8aa765bf-bdf6-4e56-bcc5-e9dea9ca7365",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8ef79aef-4e0f-4c74-b04d-a564d8ea7de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370504f4-e06a-48a0-8f31-789b931f99e8",
        "cursor": {
          "ref": "65f44f77-dd51-4c33-9e70-d95570a0cc61",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "51180610-993b-4cb3-937c-6cbb8103ba49"
        },
        "item": {
          "id": "370504f4-e06a-48a0-8f31-789b931f99e8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f8279ce7-a38c-4fd3-91cf-36068d9000a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4043cde9-0a83-4186-b494-af97cd9b33cf",
        "cursor": {
          "ref": "90e906a1-2587-49a6-b3b9-b6be2726d20e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bb795c56-82a5-4e51-9801-7603691f02f3"
        },
        "item": {
          "id": "4043cde9-0a83-4186-b494-af97cd9b33cf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2872bde5-4c29-438a-8797-786c8d87ac34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb024332-5a0e-4cb8-a942-3c6f2ebfff95",
        "cursor": {
          "ref": "13c84e22-e06c-44b4-b0b2-2c0d0ceadb9a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7eb42f12-cfb4-42f6-ab15-54a539aa4805"
        },
        "item": {
          "id": "fb024332-5a0e-4cb8-a942-3c6f2ebfff95",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f87259d7-dc81-4b85-99b6-621a9d71bb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139424d6-88c1-4398-b222-10d748449cce",
        "cursor": {
          "ref": "4f5eb4bb-27ce-467d-80d9-842a2935b1ba",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c4e9c722-2cb1-49d8-8ab9-df423136792d"
        },
        "item": {
          "id": "139424d6-88c1-4398-b222-10d748449cce",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1953014e-1e54-4bda-b711-103d7479f078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181c3278-6fd9-4bf1-8994-2b55da7088be",
        "cursor": {
          "ref": "6c4bd94f-67fe-467c-991b-dc2d91aa1977",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c32d83ce-eac5-4668-b6c9-01e89861155c"
        },
        "item": {
          "id": "181c3278-6fd9-4bf1-8994-2b55da7088be",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f03cfbf1-c28b-461f-87b9-f31ce0b18945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82335062-9061-4636-8f40-84d0392963e2",
        "cursor": {
          "ref": "f7b7b93f-44d9-4e75-b113-7381322ecfe6",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a4b0243c-49bc-4560-b7d0-e794dbffca5b"
        },
        "item": {
          "id": "82335062-9061-4636-8f40-84d0392963e2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "85b21cff-1787-4836-abcf-e9d16af31567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca4a9c7-db20-4244-9e0b-6f70022c7bc0",
        "cursor": {
          "ref": "873e6fae-3572-4b5a-91ed-6ccb9f047a3d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a9695d2e-84b7-4e90-b246-1286272dd99f"
        },
        "item": {
          "id": "3ca4a9c7-db20-4244-9e0b-6f70022c7bc0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c91af6de-32d3-4b9b-9a43-0582058cdc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65acaac5-bc23-4b8f-8f2c-1a0e73b930d9",
        "cursor": {
          "ref": "263c0601-1b6c-4ad4-9ae1-940c21325f03",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "639d0816-4db3-4502-b73c-40e8d6b5fe49"
        },
        "item": {
          "id": "65acaac5-bc23-4b8f-8f2c-1a0e73b930d9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55d53b07-925c-4c30-88e9-153461c04bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9777f716-56a7-49a2-8c7e-a0c84dffccdb",
        "cursor": {
          "ref": "1449d862-467b-43ba-854c-db0c8cf61d17",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f88c2418-5a74-4d7c-adbc-6a82f44f1276"
        },
        "item": {
          "id": "9777f716-56a7-49a2-8c7e-a0c84dffccdb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "17b03093-c43d-4e50-adca-7f7b919b3f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e2e10c-16e6-4516-ad03-ab8db5e78c86",
        "cursor": {
          "ref": "c0c02e09-71b7-413d-a089-8f49a928f8e3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b4a35464-c323-4a92-9014-fec68ac50eaa"
        },
        "item": {
          "id": "63e2e10c-16e6-4516-ad03-ab8db5e78c86",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1d749408-e73c-476d-85ee-d8853f79d509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccec50e0-d644-45bf-98a0-149e19ea55db",
        "cursor": {
          "ref": "90e06406-e463-43e3-8e90-de7b8af6380e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7da3f06e-c5f2-4d79-9640-8cb342d6679f"
        },
        "item": {
          "id": "ccec50e0-d644-45bf-98a0-149e19ea55db",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6b301a87-74ae-4d5b-ab05-166496fc8c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbe917b-82d9-4a4b-8376-56530333de54",
        "cursor": {
          "ref": "aad68612-8de9-4268-8865-19d0fb492acb",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4d2f0947-e316-492b-80c5-1e4fac9b451c"
        },
        "item": {
          "id": "3bbe917b-82d9-4a4b-8376-56530333de54",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "641157ae-c44d-408c-8828-a48bfa589fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d187918-84a5-478d-86f1-cb2b5b645687",
        "cursor": {
          "ref": "263c83f0-4529-47d8-b868-444ee7ff3add",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "12605f1a-3936-4c11-840f-ef30ed08cb07"
        },
        "item": {
          "id": "5d187918-84a5-478d-86f1-cb2b5b645687",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "748db370-eb88-4ab6-96b7-e03c8a1e405a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d346b-0467-4b7b-8a8b-3b67ccf55e9b",
        "cursor": {
          "ref": "87c8ce9b-b0e9-4914-b0da-2ead67e82f6f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7f054999-770e-4d69-ae52-bb53149693c7"
        },
        "item": {
          "id": "366d346b-0467-4b7b-8a8b-3b67ccf55e9b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "28dbe5c4-dfe6-45f5-a6df-75dd0cbde52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40669ebd-aadd-4c25-87c0-42803d5d5d96",
        "cursor": {
          "ref": "48951194-79df-426f-9f81-0a2290f087b2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9355ecb4-fd89-427d-a067-53b9f4ed7467"
        },
        "item": {
          "id": "40669ebd-aadd-4c25-87c0-42803d5d5d96",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0fe1317e-cf72-489b-97c1-136fbb3cfb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394e915d-1025-4d2b-80db-81fdd92d4651",
        "cursor": {
          "ref": "4560180a-c332-440f-9f89-b0a4f020da55",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "93487e38-e203-4ca5-9f7e-4a362dbbdeb7"
        },
        "item": {
          "id": "394e915d-1025-4d2b-80db-81fdd92d4651",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "69e1f994-d192-4194-9481-8df2cc99bcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd198ed-8392-4240-b9f0-60d163440275",
        "cursor": {
          "ref": "695b8db7-4e4c-467d-983c-cdc9f390e58a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6cdea062-87ab-40d3-8160-a8d1522e63d5"
        },
        "item": {
          "id": "1bd198ed-8392-4240-b9f0-60d163440275",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2368fa35-03fd-401b-9c69-4e382b7cf280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b5ff12-67b0-47a0-a504-4491dc70d95d",
        "cursor": {
          "ref": "b7d03949-6710-4115-b708-acb282bed5cd",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7e1eca6a-71c7-48e4-879e-20c50d291b3d"
        },
        "item": {
          "id": "25b5ff12-67b0-47a0-a504-4491dc70d95d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ec90481f-3aa4-489d-9926-71a18fa519fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac028e5-34b4-472e-88a6-0b595bbf1f63",
        "cursor": {
          "ref": "eb5d8aab-fe62-4533-b666-c8cc32b4efe5",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "16a6ba49-c738-4141-9799-48ff329bf314"
        },
        "item": {
          "id": "aac028e5-34b4-472e-88a6-0b595bbf1f63",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "10f58ace-ef79-4b29-a299-af9a88e82182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165ec946-8bb3-40f7-8c6b-c5e6a7e7d0fe",
        "cursor": {
          "ref": "d82cab31-7a8e-428a-b945-9ea606a88966",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6191db04-3d53-497e-89eb-c4b5c074b046"
        },
        "item": {
          "id": "165ec946-8bb3-40f7-8c6b-c5e6a7e7d0fe",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1888c51c-07c9-4aa8-88db-72baf3805f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6feb06e-a6d9-4a48-8cdf-a23731550a47",
        "cursor": {
          "ref": "3d76a8d1-9a26-4785-9ba3-d39cfb1d246e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1784a083-805c-4809-8973-db243431240d"
        },
        "item": {
          "id": "a6feb06e-a6d9-4a48-8cdf-a23731550a47",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9c6527f4-2672-4445-97b6-1e638b66dc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb337cd-abdc-4d9e-802d-0beeaa97fecb",
        "cursor": {
          "ref": "c19b4e93-8796-446f-8903-ed77a84b4917",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "662ab67f-e9e4-48bc-b5dc-4f20c7425506"
        },
        "item": {
          "id": "0bb337cd-abdc-4d9e-802d-0beeaa97fecb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "00e2cdf3-5dc0-4494-ba3b-243b91e6b1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a541c3-00dd-403f-9b83-2544a7410566",
        "cursor": {
          "ref": "29eb4376-eb47-4678-9127-6032cd08019c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5afd678e-8f3b-4cf3-9d3e-f40271e538d8"
        },
        "item": {
          "id": "50a541c3-00dd-403f-9b83-2544a7410566",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3636aae2-29eb-4021-8b65-a1272ff8aec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ced798-b0b7-4f60-8719-d71a6e9ea809",
        "cursor": {
          "ref": "472d682c-d241-49cb-ab4a-40620a3e1370",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b1a6691d-88e0-4d71-9dce-cb4ea4cc45e3"
        },
        "item": {
          "id": "a8ced798-b0b7-4f60-8719-d71a6e9ea809",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0d72c713-e5ba-438a-a27f-5a803df25673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095aff4c-d9e6-4b4e-b05a-324ae85d1f91",
        "cursor": {
          "ref": "36c9ce5f-fb58-4dd3-a973-95d154ac0f33",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "24af2991-a1b5-4f57-a4be-9f51a78ca3fe"
        },
        "item": {
          "id": "095aff4c-d9e6-4b4e-b05a-324ae85d1f91",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "43c3f8be-a3fc-40bf-9fcc-37a38f79c717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b480963e-8cbd-4d62-8597-9073b70aec11",
        "cursor": {
          "ref": "31affb37-4749-44da-95b8-fa919810f2ac",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8ef42b7e-b059-4941-9037-94deeadcf801"
        },
        "item": {
          "id": "b480963e-8cbd-4d62-8597-9073b70aec11",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e68a1ade-103b-4088-8569-ff64fd00d01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d8967c-c384-422d-b0c6-2005d1f2032a",
        "cursor": {
          "ref": "4a8e27d4-5d70-4f14-9c09-a0c00d932404",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "574e1499-8a46-4e8d-b722-dada9fffc314"
        },
        "item": {
          "id": "41d8967c-c384-422d-b0c6-2005d1f2032a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "067ac793-963b-4bc6-9849-cc4e14a18625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3467bb30-b336-4626-99f8-29c39840e410",
        "cursor": {
          "ref": "336bdaf2-6f53-4ee0-93ce-246ef2f7b2f3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "46827f94-696d-4fce-9507-f2613cfc7aac"
        },
        "item": {
          "id": "3467bb30-b336-4626-99f8-29c39840e410",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "59eded4a-f375-4608-bfe1-406d1d7fb335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd3bae0-d33a-45c3-a7b2-63944a8e2844",
        "cursor": {
          "ref": "b93438d8-f74a-419a-9d53-edc4bb6ba22d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cb58c99f-229d-46db-abb9-8e51933ee173"
        },
        "item": {
          "id": "5bd3bae0-d33a-45c3-a7b2-63944a8e2844",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "311e5a65-7846-4c71-8d46-528ca476e4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6461d6-8af3-4ea4-9434-83defe382214",
        "cursor": {
          "ref": "d5d1c451-bd83-4000-99ab-b3abf5f52bb6",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4b4b8d87-4c00-4197-a002-d03bf048b9b6"
        },
        "item": {
          "id": "ed6461d6-8af3-4ea4-9434-83defe382214",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e304e457-190a-44a1-96c8-d141c4ed8045",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfeae9e-e10f-4082-9890-099f666918a7",
        "cursor": {
          "ref": "d62dab14-b649-4c24-9a8e-4636cf7987c1",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a4e948ae-dcdd-427b-a759-4f3531958322"
        },
        "item": {
          "id": "bdfeae9e-e10f-4082-9890-099f666918a7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "77959bc5-b92d-4c61-97d4-bf395a8f09ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc90648e-3742-4bda-976e-07286d110847",
        "cursor": {
          "ref": "14ed9533-0785-4ae5-8ce3-4baa88b201ab",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "648f87cc-a9f4-43fb-9b3f-fd2d204c92b6"
        },
        "item": {
          "id": "dc90648e-3742-4bda-976e-07286d110847",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7401c5bb-204e-4a60-8e9e-41a1fe94b91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63e1a63-36e2-49eb-adc9-2ab7aa98d931",
        "cursor": {
          "ref": "e7e46038-5abe-44ad-b9aa-ee97cad47c58",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "79c7deea-cd01-4f67-a9aa-5be8fec355a6"
        },
        "item": {
          "id": "e63e1a63-36e2-49eb-adc9-2ab7aa98d931",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bdaa5166-133c-4fd4-aa2f-6f5c4f5f55e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88f3c0f-d4e4-457b-9e24-cf57e08f8a63",
        "cursor": {
          "ref": "7e479ef0-8778-4dc3-bacc-186932f5089d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5a39aa43-0b1c-45f0-be77-21aab344def3"
        },
        "item": {
          "id": "a88f3c0f-d4e4-457b-9e24-cf57e08f8a63",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a3cf1044-90c8-474c-a215-050a93f28919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691c5b87-b099-48cb-9bed-b9c193b5fd75",
        "cursor": {
          "ref": "69d68006-3966-42c0-a2ee-a2f3cbf12d58",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c0882dba-1b68-4761-956c-f5b81efac494"
        },
        "item": {
          "id": "691c5b87-b099-48cb-9bed-b9c193b5fd75",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "89525a78-e163-4aa6-a4f9-3da761711b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9078e9-d936-43b7-93ec-215277877d73",
        "cursor": {
          "ref": "4acc2ab8-7e02-42f4-9823-30b9399c4e71",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3329ac1f-f1d4-4432-93e5-13881a53e01a"
        },
        "item": {
          "id": "7c9078e9-d936-43b7-93ec-215277877d73",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f307e469-59b4-49c2-ac26-ef966c24daac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622c6564-f76e-4a7c-ac0e-195151beac77",
        "cursor": {
          "ref": "b9ac22e5-9722-4d97-8677-bccc539ae87d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "58d8c6f0-2501-4957-aa47-fe88e6fa2a3a"
        },
        "item": {
          "id": "622c6564-f76e-4a7c-ac0e-195151beac77",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "665b50bd-f981-4517-8b9e-768dd1acc344",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54b1c90-db67-47cf-a85b-ba43c82ef736",
        "cursor": {
          "ref": "26717848-ff06-42db-bd08-1a5edd1d312a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d699a4b0-a260-4002-905b-e7ba05a21a32"
        },
        "item": {
          "id": "d54b1c90-db67-47cf-a85b-ba43c82ef736",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8aacc696-93e9-4075-961a-301a0d692011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc6dc09-40b2-48bd-b6dd-cc4590078e5a",
        "cursor": {
          "ref": "a407c33b-b830-4261-8b4a-93ec592e937e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "651a2998-7f96-455d-92f9-563f798f2a23"
        },
        "item": {
          "id": "1fc6dc09-40b2-48bd-b6dd-cc4590078e5a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f21f0a43-cf63-4225-a7a7-34fcfbff321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d24462a-a7a2-47ba-ac02-1a5647bc6654",
        "cursor": {
          "ref": "fabb06f9-c30f-4e69-8b67-59144265b239",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b86a57a9-b28e-4156-afa3-136f23f17b86"
        },
        "item": {
          "id": "9d24462a-a7a2-47ba-ac02-1a5647bc6654",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "58682105-ea4c-448b-8937-9828cd0d05b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1242346-c978-4843-8abd-e26c42423586",
        "cursor": {
          "ref": "5cb0af9e-b09b-49f8-8448-38cc7b3332fc",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9f851a41-04e6-4052-bfcd-7304b77bbeed"
        },
        "item": {
          "id": "b1242346-c978-4843-8abd-e26c42423586",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3e70360e-2cf0-4105-98af-e4ea8bd36132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258fd3d4-ba6f-4d0a-9b1b-43042d9ed470",
        "cursor": {
          "ref": "ab4a2304-f6c6-4983-9904-86e4467bc963",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2e443110-315c-4bca-81cd-85d7a74c3bff"
        },
        "item": {
          "id": "258fd3d4-ba6f-4d0a-9b1b-43042d9ed470",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "27a31fd3-1692-479d-b1d4-3941630fb059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f17ec78-d8e5-4b54-bd27-ce7e1150d967",
        "cursor": {
          "ref": "86f62465-f022-4052-9153-9907709a62c1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "06ec8883-4355-4b90-b13e-9c21bd90fa7d"
        },
        "item": {
          "id": "8f17ec78-d8e5-4b54-bd27-ce7e1150d967",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5604a773-ad99-4f7c-9cc6-672a010517bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4864d4d-65bb-42a6-816f-f1fc7bf6e4b9",
        "cursor": {
          "ref": "4e82a7ce-5bb2-4e0e-905f-a14cbc1f82bf",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6e520ad7-4560-4d84-bd36-cb3c4859ef22"
        },
        "item": {
          "id": "a4864d4d-65bb-42a6-816f-f1fc7bf6e4b9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fd73be88-b3f2-4b72-982a-07ce32f0ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ac0fc5-56b8-4f94-8ace-2fb126dbce67",
        "cursor": {
          "ref": "f169a741-61cb-4796-aff5-dd5c4601699e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f27e5864-3f24-4060-99dd-6f29cda17a0f"
        },
        "item": {
          "id": "c2ac0fc5-56b8-4f94-8ace-2fb126dbce67",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7b6bd91d-62e5-4808-919c-89f86f06b273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443c1f82-3560-44bb-af70-6ac25d32d36a",
        "cursor": {
          "ref": "2a1c3de9-a245-4543-8096-a17cee7570b0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1004afa8-01a7-4db4-b170-f549d44a18ad"
        },
        "item": {
          "id": "443c1f82-3560-44bb-af70-6ac25d32d36a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5f0f872d-05a8-4582-8d1d-808f16724a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9477d426-dec1-4cd5-8e12-85a2d4fc3398",
        "cursor": {
          "ref": "3b38f7d0-e141-406e-abbf-66ccf327531f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c8668cd9-21ba-440f-a4f0-d8c7e458a25c"
        },
        "item": {
          "id": "9477d426-dec1-4cd5-8e12-85a2d4fc3398",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "160483be-fdce-43f0-ae98-0241fe6fc815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f5a89e-1e97-41ae-8552-05103b3d515e",
        "cursor": {
          "ref": "5adf5c45-83b8-4ad3-a6b1-4ae2b1cf1623",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9879b538-1362-4ecd-8973-ce27fe610ffd"
        },
        "item": {
          "id": "c9f5a89e-1e97-41ae-8552-05103b3d515e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "53a25306-a9b2-47ba-98b7-a975cd5c8f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a605c1ae-dff7-4afc-9a5a-9491251b69ab",
        "cursor": {
          "ref": "99379327-dc21-46f0-826b-8498a744fd49",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "11b5706f-c11f-406b-afb3-b82d5fd9b7ad"
        },
        "item": {
          "id": "a605c1ae-dff7-4afc-9a5a-9491251b69ab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bcefc24f-a632-43c0-b4e0-44f3c364c543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620378f9-b54b-4544-b508-ff88dedc6c1b",
        "cursor": {
          "ref": "1d49b5ed-1ece-46ba-91c4-f8c99bec7efc",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "687425aa-864b-40c3-b967-3bb8c352e7b9"
        },
        "item": {
          "id": "620378f9-b54b-4544-b508-ff88dedc6c1b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "19c43904-6315-4ca0-916d-6195a732dcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd6189c-8e1b-46e0-9f80-f409fd90d073",
        "cursor": {
          "ref": "d4234897-137b-4e2e-9e4a-7e30299df9f5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "705e0f41-4aab-42ef-998e-fc817dcb3606"
        },
        "item": {
          "id": "8cd6189c-8e1b-46e0-9f80-f409fd90d073",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a50fb211-eb3f-4442-8a6c-2ae436c52bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00610180-0de9-4672-a785-213a7a48ab15",
        "cursor": {
          "ref": "6388b111-c02d-4b5e-b058-9807268b2027",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bddb7e70-7524-4be8-8026-75227f803808"
        },
        "item": {
          "id": "00610180-0de9-4672-a785-213a7a48ab15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cd2997d8-8312-4a8b-9f3f-7d242ec30349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0851e2-7a78-48b1-8928-7c20d3334630",
        "cursor": {
          "ref": "8a6abc65-94d6-4546-9c8b-66e874c466e5",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cb61c033-0180-4669-846a-c04a65cc27e6"
        },
        "item": {
          "id": "eb0851e2-7a78-48b1-8928-7c20d3334630",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ce5a6694-327d-4621-bfc6-db811335367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfc069f-55e3-4fed-8f53-f3458bc39909",
        "cursor": {
          "ref": "6f505876-6e1f-42e0-9766-eb294d6472c9",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "773ef540-43d3-4883-96aa-f6cf32a7b8b8"
        },
        "item": {
          "id": "4bfc069f-55e3-4fed-8f53-f3458bc39909",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4d39917d-3910-4b92-b3f3-5725238463d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcf0c40-3444-4c21-b4f8-567cb61c1f16",
        "cursor": {
          "ref": "8c907674-f9ce-4792-98c7-02a6abe90244",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "941cdd14-d980-410b-aca6-4ec53960d816"
        },
        "item": {
          "id": "0fcf0c40-3444-4c21-b4f8-567cb61c1f16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a409199f-b2ee-4994-8c9c-09e4a20897aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1eeaa9-8e96-43c8-9550-ecfa53d098f6",
        "cursor": {
          "ref": "1e86a427-7c04-4442-a45b-dd7a782b56b9",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "70c49dc0-3445-4edc-9c31-f3344f85e21e"
        },
        "item": {
          "id": "ad1eeaa9-8e96-43c8-9550-ecfa53d098f6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1fb82c51-bd4e-448b-adf8-0e43c3cc5ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ec0cd0-43af-40b0-9b44-168e561b1984",
        "cursor": {
          "ref": "90d847df-18e9-4d15-ab82-7d19958e162c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d360c05b-07fc-42b4-b01c-365899eb8b59"
        },
        "item": {
          "id": "89ec0cd0-43af-40b0-9b44-168e561b1984",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "31bd46fa-1043-44a3-b96a-a2f93d244947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec770f-3fed-499d-9b5d-1dd3fec6c06c",
        "cursor": {
          "ref": "23e66589-7c8e-4305-999d-44dd85a3bded",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c0463a03-2420-4d49-9c4f-c28affea50d2"
        },
        "item": {
          "id": "62ec770f-3fed-499d-9b5d-1dd3fec6c06c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "48ba76fe-b0d5-468e-995c-4656abb72c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c43c8b-ffae-44e9-925e-8dc57d3c3066",
        "cursor": {
          "ref": "c46f38f4-bfa5-45e7-a003-bf6792a9dc2e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e48a0e8d-9003-49aa-aef6-ae351510d952"
        },
        "item": {
          "id": "98c43c8b-ffae-44e9-925e-8dc57d3c3066",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e78b925b-85a5-40b8-bce5-634f08d9a5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43677ab7-30ca-4205-8036-d5d641d0784b",
        "cursor": {
          "ref": "ba85c2b2-1ba0-47f1-bb2d-d0d9cd6d8a37",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "426bb6ee-aa85-4c7e-8069-f12a3a422834"
        },
        "item": {
          "id": "43677ab7-30ca-4205-8036-d5d641d0784b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8121d32d-93f6-4491-a638-3133007df5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933bc9d7-b6d1-4db6-8631-2e05331d0b63",
        "cursor": {
          "ref": "dfc267e8-1b0c-4064-9b33-b0114cd5944a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e8902bd3-6330-4d41-8c9b-548b51cabe13"
        },
        "item": {
          "id": "933bc9d7-b6d1-4db6-8631-2e05331d0b63",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2bc0855c-7398-4d4d-8d3f-90f0d652c980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234f01ef-3c64-414c-ad51-a38bd46f7539",
        "cursor": {
          "ref": "e8f66e70-0234-490d-9d59-5b989f60ebeb",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6a2129e1-5cd8-467c-b340-44870ae6e25f"
        },
        "item": {
          "id": "234f01ef-3c64-414c-ad51-a38bd46f7539",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2c8c97b5-734b-47b3-94ad-6205dac814ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cedac05-0016-4fc0-840b-4ea9f9b4f51d",
        "cursor": {
          "ref": "85d0a1e4-4fdb-426a-a395-fd1b93c9c4e8",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5755e6f3-479a-45f2-aca3-de2a9803a54e"
        },
        "item": {
          "id": "9cedac05-0016-4fc0-840b-4ea9f9b4f51d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "90cfdc52-0aa5-484e-8b5e-fed1cc943c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efee7cc-2f0d-4d04-8181-ff7e0248b6e3",
        "cursor": {
          "ref": "a3071478-975f-49b8-b67e-e9f77774cb7f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c8dac162-6bab-424e-a231-e8c7d12e2fa5"
        },
        "item": {
          "id": "3efee7cc-2f0d-4d04-8181-ff7e0248b6e3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2765d891-f373-45a3-92b7-91dfa1efdb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0ba57a-b18b-4699-8581-ee79ae2c47dc",
        "cursor": {
          "ref": "d2dabf6b-bb90-4be9-aeb5-a2d02d1ce567",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f7ceca15-ac14-4742-8b00-2ce434d46b80"
        },
        "item": {
          "id": "0a0ba57a-b18b-4699-8581-ee79ae2c47dc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e93e2436-5bb3-47c1-8cea-3917f92f8ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4821ac-cbc9-41cd-b505-42fb110fcb3a",
        "cursor": {
          "ref": "121b19e0-a24d-49c2-aeac-d368c4bbaa9c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0ad9ddd6-4821-4db0-be08-644eb2257c48"
        },
        "item": {
          "id": "1c4821ac-cbc9-41cd-b505-42fb110fcb3a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "50113fda-557f-413f-a1e2-73823f186104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5af4a2-e5a9-4cab-99e6-5cb6a175307b",
        "cursor": {
          "ref": "78b46be3-2a85-450b-9a56-08a51f603c6c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ed319d19-c09b-49f5-a1db-97c88eb4ce9d"
        },
        "item": {
          "id": "0b5af4a2-e5a9-4cab-99e6-5cb6a175307b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6f1214c0-35a3-41ee-a6f3-26c372c2d1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa290fd5-3ebb-4fd3-a69a-579e51be1bed",
        "cursor": {
          "ref": "3cca071d-1719-4441-bb78-d25a27908c33",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b95a37f0-cd1a-4199-a104-0b837a1ac732"
        },
        "item": {
          "id": "fa290fd5-3ebb-4fd3-a69a-579e51be1bed",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "924c24d0-2fe9-4f11-837f-870e510eba40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d1bf2d-a5d9-48f4-a9ac-076796ad0649",
        "cursor": {
          "ref": "52a74223-6b16-42ac-b785-26b1d69a9a9a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "65ed0a27-1ee1-4dd0-b389-d5332990c56d"
        },
        "item": {
          "id": "05d1bf2d-a5d9-48f4-a9ac-076796ad0649",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3a24c894-20a1-460e-853a-5a1186c34a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f47288b-4985-41e5-a373-cfd45f15dc5d",
        "cursor": {
          "ref": "e5775593-2a49-4187-9622-0f13455da388",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "34bf4751-3793-47d5-897f-428408ba09f8"
        },
        "item": {
          "id": "9f47288b-4985-41e5-a373-cfd45f15dc5d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "09c98997-4044-46c2-8a20-cc7b29b77c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1542bc-3f84-4da5-9b33-b1561798ec97",
        "cursor": {
          "ref": "f8670321-25df-4d89-8f45-ffd9f746e457",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0093a36b-9b40-42f1-b6a7-58c0fb67e264"
        },
        "item": {
          "id": "8b1542bc-3f84-4da5-9b33-b1561798ec97",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c23640d9-b1f7-4a18-9ae7-2aca6aa32be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801f499c-7023-42f2-a3ed-70b71e3d7f78",
        "cursor": {
          "ref": "7bad7b35-4049-4524-bf55-51a7a1f87a43",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "df69adcb-e51b-4a7e-91db-d07bb3353ec5"
        },
        "item": {
          "id": "801f499c-7023-42f2-a3ed-70b71e3d7f78",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "714cdb45-b337-412b-82c3-cd0e36687784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abbb4c8-db7b-4b01-9943-ef5629448637",
        "cursor": {
          "ref": "6eb57392-9046-42bc-8007-96af5f535d93",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "90da84d7-77fc-4f05-81bc-1cf49f9dfbc3"
        },
        "item": {
          "id": "1abbb4c8-db7b-4b01-9943-ef5629448637",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9ce4f8f1-2a64-4e86-9f8f-5b11909e9be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f5e21b-3fb0-4f36-9c58-231079fd6aa7",
        "cursor": {
          "ref": "42e187b4-44a7-4c37-8791-2f4a43541e07",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b2a15f85-374b-4c23-9867-93f353d74e3a"
        },
        "item": {
          "id": "49f5e21b-3fb0-4f36-9c58-231079fd6aa7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dd8a2b3c-94c8-49a2-97f0-50f194eae8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4803da2-46b5-43b5-bbd7-ec459298da2f",
        "cursor": {
          "ref": "357b2582-9654-467c-b533-ac1406a8668d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d0e891dd-5675-4cc4-bebf-a9c071c51543"
        },
        "item": {
          "id": "a4803da2-46b5-43b5-bbd7-ec459298da2f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f5a4ac2d-64f8-479d-a8ab-3869905594ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d18db7-1af4-4cc9-888c-bd5d67f86903",
        "cursor": {
          "ref": "979983cd-00c6-4d19-8630-ae82cd35e933",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "40e12f3d-ab80-44e1-bc42-22fa4e824bb9"
        },
        "item": {
          "id": "c3d18db7-1af4-4cc9-888c-bd5d67f86903",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d6b98381-578c-4c5d-85c1-565945fb5538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1265e30f-10ae-4d3a-b76a-e1b79ec190ad",
        "cursor": {
          "ref": "f5829aa3-31fb-49ea-9af0-a9d384e101e9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cc1bbbea-a817-4728-9a1a-c4592b34e591"
        },
        "item": {
          "id": "1265e30f-10ae-4d3a-b76a-e1b79ec190ad",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9aabffbb-35c4-4c5f-9aa1-ae382d1a1792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b25a82-f202-40db-b7cd-3b623b54920f",
        "cursor": {
          "ref": "e3bc8f5b-8b20-464c-b517-5ede898bcac6",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "40cc559c-85c3-4781-98ce-c14f76528487"
        },
        "item": {
          "id": "63b25a82-f202-40db-b7cd-3b623b54920f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4fd72c16-f800-4c71-8017-ddcc5e9bf0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015bd540-6654-4c90-b5e8-e75f9008125c",
        "cursor": {
          "ref": "e54411d3-043e-4bf3-9009-8ab582238e49",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "40ea8e66-f8fc-40f8-b411-0a0aed0c66dd"
        },
        "item": {
          "id": "015bd540-6654-4c90-b5e8-e75f9008125c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aa249f49-f9d4-4cbc-95bb-e11608067045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fee590-9ca2-4ba3-8921-d39808177f64",
        "cursor": {
          "ref": "40affde2-dbc1-48ca-a024-a605b415307b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "41724d7d-9381-416b-b5b9-3925f05d85db"
        },
        "item": {
          "id": "e0fee590-9ca2-4ba3-8921-d39808177f64",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8655e373-6f22-4cff-b1b9-63630bbb82ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef0a2d1-49f6-4871-9a4f-f6cda7a3df62",
        "cursor": {
          "ref": "12f3fa42-df0c-4ca5-80f0-d86482d2c21e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9e23da2c-ba56-4494-a925-0936670b592b"
        },
        "item": {
          "id": "0ef0a2d1-49f6-4871-9a4f-f6cda7a3df62",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ab352a1f-4d7f-488b-a45c-eb3a7cec12f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5aa66e-4dfd-4719-a552-c2be604c75f2",
        "cursor": {
          "ref": "12f5908b-3e2a-49fa-b37b-8f8d324aefe4",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6594ae92-b624-46c3-a8e9-1cb535df9dd2"
        },
        "item": {
          "id": "1a5aa66e-4dfd-4719-a552-c2be604c75f2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1cd64651-1c6a-4456-b6c8-8c9a1eef3a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e6d35c-18f7-444c-ae4e-706807bfa7a8",
        "cursor": {
          "ref": "c5c6b02a-58f3-4066-88be-0b43073340da",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "843d1ebf-13d4-42b3-8a18-d23ec5dc2238"
        },
        "item": {
          "id": "62e6d35c-18f7-444c-ae4e-706807bfa7a8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a415a468-6549-413a-b053-8b99fcf67597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2601b7b-4a65-406c-a514-aaabad335eb0",
        "cursor": {
          "ref": "c152f1c7-ab24-486a-b530-c81e6c3d6b05",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bcf06dd4-2ee3-4695-a9be-803a901c8835"
        },
        "item": {
          "id": "f2601b7b-4a65-406c-a514-aaabad335eb0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ff61becf-a2af-48b1-acaa-6909867f011a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d41137b-26c5-4cce-b018-e6acbee99311",
        "cursor": {
          "ref": "19015df1-abf4-42da-af92-6b7043422eb5",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "14c1b9a1-1676-4a13-a1f3-fc47b41af72c"
        },
        "item": {
          "id": "0d41137b-26c5-4cce-b018-e6acbee99311",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1a79afa3-c2d5-4973-9bda-ea29600419e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9145f6a2-7c4f-4e1a-ae72-a459d2a198d4",
        "cursor": {
          "ref": "a057afbd-04ec-4763-b051-f5ff0b9d60fb",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "21a8c86f-2da8-449f-95b0-75ceca78366a"
        },
        "item": {
          "id": "9145f6a2-7c4f-4e1a-ae72-a459d2a198d4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9b31df5c-5fae-4049-9055-08899c29e43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073760e8-bed2-4610-ae24-f384e403538e",
        "cursor": {
          "ref": "8db5b788-05a6-42f7-b1b9-505201e26e7e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b2c2e552-b73d-477b-b071-a9101e0bc05e"
        },
        "item": {
          "id": "073760e8-bed2-4610-ae24-f384e403538e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a84070a9-2f7b-4990-bb3a-fb1d62113292",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd5954e-053a-4369-8fe7-faed699c0d2a",
        "cursor": {
          "ref": "857d1f8f-3137-4093-9cd3-887446bc3aa3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d33f52bb-3c8c-48f9-a159-bd42b0842710"
        },
        "item": {
          "id": "abd5954e-053a-4369-8fe7-faed699c0d2a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "209f716c-237f-400b-a54a-c66f3449d183",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc75886-fe29-432a-8888-417a69b553b1",
        "cursor": {
          "ref": "8413f019-880f-42ab-b92a-b9dd3bcea89b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e585ebb0-5891-4ae5-8cb9-d476f0c30523"
        },
        "item": {
          "id": "9cc75886-fe29-432a-8888-417a69b553b1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "89a3d0c3-c5f3-49b1-930d-c365f7c035c0",
          "status": "Created",
          "code": 201,
          "responseTime": 176,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e647db3-c25f-4724-a769-5daf63b61816",
        "cursor": {
          "ref": "1ab9e2ac-585d-46e0-a2ac-fd804d3d0b7f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "be9deee7-95d2-4587-8ae4-9fd64b5b9314"
        },
        "item": {
          "id": "4e647db3-c25f-4724-a769-5daf63b61816",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "413f924f-193a-4f03-be8c-a57aaed8cc26",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "55544924-1dcc-4630-8700-54b0182d9edd",
        "cursor": {
          "ref": "c4ade4cf-5c8d-40d8-ba63-5de334a462b7",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d7863923-bb9c-4857-9044-aaa0b87d46de"
        },
        "item": {
          "id": "55544924-1dcc-4630-8700-54b0182d9edd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d6b0c5b9-3082-470a-87e0-eccbb4cf753e",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd0c602-3051-42f4-9c3c-433b420dc9e2",
        "cursor": {
          "ref": "8b04e2c1-0e01-406f-8271-d1f984915dad",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8c447f1b-7717-419b-b3a2-a0a86d49e514"
        },
        "item": {
          "id": "ccd0c602-3051-42f4-9c3c-433b420dc9e2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6cb72421-044c-4549-9c4c-46bf65ab2f9b",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7649d08-82d9-4316-b379-a28de38eed35",
        "cursor": {
          "ref": "c757c621-b0cf-4c5a-9b02-2e7a024e218d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "87c20bca-c35f-4d27-b7cc-e9229b0696fd"
        },
        "item": {
          "id": "d7649d08-82d9-4316-b379-a28de38eed35",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c8213c23-fc78-48cf-8ca7-3dd9a956a11d",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3a7611-65be-4550-837a-8c545c2f9e12",
        "cursor": {
          "ref": "fd94c365-0dc9-467d-b06a-0581910fdcaf",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0b56c9d0-6640-4d7a-9f61-db5bf2ac374d"
        },
        "item": {
          "id": "bf3a7611-65be-4550-837a-8c545c2f9e12",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ade6ab83-231b-441d-a424-d52564295bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b001c24-5142-45fa-be20-96ccdde86c61",
        "cursor": {
          "ref": "c707755d-ee83-424a-8290-736c43570452",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d9524cf4-d246-4c6e-8cb7-30f18e8506c6"
        },
        "item": {
          "id": "8b001c24-5142-45fa-be20-96ccdde86c61",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4d717e91-b449-4f39-9872-76b80a72243d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0021001-1794-4de8-be0b-da817316e578",
        "cursor": {
          "ref": "1d0e16be-5a19-4981-bf93-33a0e1e4879d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fdd1e68f-f545-461f-a47a-4bda6d17b502"
        },
        "item": {
          "id": "c0021001-1794-4de8-be0b-da817316e578",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "607c04bb-1df3-451d-ad9d-cd4bbfeb89e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2181e6-798f-44b0-815a-7cfd84fc9a2b",
        "cursor": {
          "ref": "78179191-442a-43df-a559-adb092fe4d04",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "797bfe98-6461-4700-b90b-3d1be8119529"
        },
        "item": {
          "id": "7e2181e6-798f-44b0-815a-7cfd84fc9a2b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "69b8fe18-662c-4668-9777-ae2a9a21e241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550028c9-fd3f-4153-8cbe-d17641c7126d",
        "cursor": {
          "ref": "4d379947-c9b0-4641-821c-85e96daf006c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d35fd6e6-8132-4a03-9663-5787544a6e79"
        },
        "item": {
          "id": "550028c9-fd3f-4153-8cbe-d17641c7126d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ebf2bd1c-632a-4a9c-9c60-df3b7131097b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5adcbf4-e022-4213-9f6f-6fc664031a24",
        "cursor": {
          "ref": "0cbfb759-62a9-4ffa-81c4-51c4fc5415c8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "91c5287a-04c8-45b7-ab5b-441b11ddbd4b"
        },
        "item": {
          "id": "d5adcbf4-e022-4213-9f6f-6fc664031a24",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a43cd8ca-5e8b-438c-89ab-0057c670e1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f574e220-a3e6-4fb7-8503-2879dd78106d",
        "cursor": {
          "ref": "39ddf906-d971-457f-9f7a-2f9d3b4dc0ab",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8f3e4c6e-b9a0-440a-b1ce-4206dd3259cf"
        },
        "item": {
          "id": "f574e220-a3e6-4fb7-8503-2879dd78106d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "57e51521-7bb9-4fe2-ae64-3665e8ce8fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d32688-cb74-4899-8f24-cd8e2ccbe251",
        "cursor": {
          "ref": "3070d409-159d-4eed-b729-167f89eb7ecc",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "da457dc4-816c-4e18-adc6-6f3eb8b79a76"
        },
        "item": {
          "id": "13d32688-cb74-4899-8f24-cd8e2ccbe251",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "10d1969c-7a37-47e8-8ad3-f99310a242a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70efbdf3-0d00-403f-9d2e-d3de6acbeeaa",
        "cursor": {
          "ref": "b50ffdbe-8341-4863-abef-2dde7dc12679",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "150d4ff8-151a-45b2-b042-7f880b3d4f23"
        },
        "item": {
          "id": "70efbdf3-0d00-403f-9d2e-d3de6acbeeaa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2c04504c-d3d1-40ee-ac0f-51c21102c428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ea2e32-c073-4939-a075-04831c4d7f64",
        "cursor": {
          "ref": "7308fa06-f54c-4428-b0c1-7b322263668e",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2db86bf9-09b2-41ce-85fd-225a98f58286"
        },
        "item": {
          "id": "97ea2e32-c073-4939-a075-04831c4d7f64",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7af52ca3-9b4e-4204-8d6e-c1a661798b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a9c21d-93d9-48ce-bf76-199d08d11f73",
        "cursor": {
          "ref": "2a3ccb20-ec10-413e-9aaa-0e5d548772c3",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6914e06a-a2a4-4044-8e22-93896a395e31"
        },
        "item": {
          "id": "12a9c21d-93d9-48ce-bf76-199d08d11f73",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d1a72077-9417-4d08-bd29-3c79c2f5228f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e424e8-d62e-4ba2-b016-c1d390c53569",
        "cursor": {
          "ref": "ff792131-e022-463e-8758-90f6ec724a23",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5a30447c-82ca-41d6-8862-0c5c3349ac20"
        },
        "item": {
          "id": "b7e424e8-d62e-4ba2-b016-c1d390c53569",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "430627a1-bfda-4797-b8bd-7c8a238d166c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd886c9-0e22-4906-8d12-84c5cb1e53ec",
        "cursor": {
          "ref": "f6e848c1-7372-4931-8fd8-e231818430db",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0bf333a4-ca80-4cb2-81d6-5b7327edcd21"
        },
        "item": {
          "id": "1dd886c9-0e22-4906-8d12-84c5cb1e53ec",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "757666a9-9b14-4277-a716-515d734817d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ccf5a2-dc2e-45be-a052-fa476cc08910",
        "cursor": {
          "ref": "60ea6ad9-7874-4fcd-861e-ef67d48a9a73",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2b73d33e-c6d1-4ae7-90db-a816ed40acd2"
        },
        "item": {
          "id": "b0ccf5a2-dc2e-45be-a052-fa476cc08910",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14fecf68-6dfc-4487-9d0b-50c1d8052947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261097ca-596d-4e11-a70a-e4c4d56581db",
        "cursor": {
          "ref": "0e56cff9-e6d6-41ca-98f4-ee741bee89f8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "797a2f0b-7aba-405e-aa1a-5bc387fb0295"
        },
        "item": {
          "id": "261097ca-596d-4e11-a70a-e4c4d56581db",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3d4b35ba-8924-4b98-92cd-678cddd420db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fbf781-1bd4-4174-8231-f30c0172de16",
        "cursor": {
          "ref": "9408d847-25e4-4254-b6b9-5b7718d6161d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "762abdd7-f8c8-4ee7-a260-d3828a65a3c7"
        },
        "item": {
          "id": "d0fbf781-1bd4-4174-8231-f30c0172de16",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "503ac815-51fb-46fb-bf8c-9abe562f34dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25757b8f-d06c-4cb4-b799-478052dd950a",
        "cursor": {
          "ref": "adb6e96c-701d-4411-b59a-63812f6802ae",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "670b5f17-3c84-4f47-bb6a-fb43d4a7fbe1"
        },
        "item": {
          "id": "25757b8f-d06c-4cb4-b799-478052dd950a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8519dcd3-a585-4379-9e6c-bced3e9e9afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7a519a-ad6d-429d-a900-068307738564",
        "cursor": {
          "ref": "2f854969-9678-4469-b7f7-3d0830c0409b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "97b46691-ac8e-4aa0-8be7-65b77dd2000a"
        },
        "item": {
          "id": "9a7a519a-ad6d-429d-a900-068307738564",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c7311ea7-2186-4d93-b0a2-7846cb009278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d18c5d-1463-45c1-b14a-4f8c97231a4b",
        "cursor": {
          "ref": "4a39fc3b-c20d-419f-8c90-dc4f15e49a63",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ba528059-8fae-4bb1-a42f-97297106c0a1"
        },
        "item": {
          "id": "74d18c5d-1463-45c1-b14a-4f8c97231a4b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8d7d1684-3186-454c-95d8-29c668f9da36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9be0daa-af57-4762-a577-d491e2725c77",
        "cursor": {
          "ref": "2d77a008-da92-4f39-9ab7-0e3f1ce360e9",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7744da49-6923-4d57-8fb0-d0f064d81dfb"
        },
        "item": {
          "id": "e9be0daa-af57-4762-a577-d491e2725c77",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "16c42254-f3ce-48e0-8890-e1951260cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ab8bd9-73e4-4dd3-9d59-7285c844031a",
        "cursor": {
          "ref": "cd57daf9-70dc-4d09-a28b-703abc965e1a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "509d8bbe-8b67-4937-9078-444d0e3bc68a"
        },
        "item": {
          "id": "45ab8bd9-73e4-4dd3-9d59-7285c844031a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "842bc65f-774a-4dd2-883b-704e5333a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f6719-4abe-4b19-a938-cd681d478847",
        "cursor": {
          "ref": "d3368c66-f40c-4417-9b71-c2712ff5eeda",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a32db996-98ed-44a7-ab04-6f25ef3adac2"
        },
        "item": {
          "id": "1b7f6719-4abe-4b19-a938-cd681d478847",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a27ebc07-8a14-470d-a307-c10f6481985c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf4589c-2e39-445e-95fb-7b8605e3da1e",
        "cursor": {
          "ref": "ea8ad3f7-bc42-4cde-b5d8-a18509dcd121",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8dcc66d6-3f7b-40ca-8447-dbb1aabaca62"
        },
        "item": {
          "id": "ddf4589c-2e39-445e-95fb-7b8605e3da1e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c2ccb287-67f6-458c-a1e6-86586d274cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0778d694-fbef-4307-bf95-19cd7cb2795e",
        "cursor": {
          "ref": "52d53d1a-19cd-4b8d-97bb-111a62103041",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "439e756a-6152-478d-a58a-d95f634610df"
        },
        "item": {
          "id": "0778d694-fbef-4307-bf95-19cd7cb2795e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "981a8300-1d43-466e-a9cd-2d7c2efbd335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae4a208-3d56-4fb7-a332-3b176f33f219",
        "cursor": {
          "ref": "3fa30af8-32d6-4b10-a83a-fb333e976e05",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ba9cfa87-1b82-4f0a-85b1-98171133218f"
        },
        "item": {
          "id": "0ae4a208-3d56-4fb7-a332-3b176f33f219",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ffa61f16-d1b3-470e-bf8d-7504e997797e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b508d8f-7695-4ea5-8eed-19dd423f3940",
        "cursor": {
          "ref": "92b78604-bfd7-479a-814f-87763016e421",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2c5528e0-7d27-45f2-ab70-c47642c4a6d6"
        },
        "item": {
          "id": "5b508d8f-7695-4ea5-8eed-19dd423f3940",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e3f1c43f-f849-43f9-9ea0-75eadc50f707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb4547d-4669-4197-b0ea-f1b69fba624e",
        "cursor": {
          "ref": "da49b909-06f2-460f-9351-a878c9a8e7d4",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7cbab89f-109a-4cb1-bc6f-f14efdcb62ba"
        },
        "item": {
          "id": "afb4547d-4669-4197-b0ea-f1b69fba624e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ca478827-baa7-43a9-81f3-c47333d529c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d378f8-67bd-4320-be85-8671ee3fc705",
        "cursor": {
          "ref": "41ffaee7-c12e-489f-8e02-5bde5d053111",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "22130346-f139-495b-a4c7-ed980c0b4ce2"
        },
        "item": {
          "id": "36d378f8-67bd-4320-be85-8671ee3fc705",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "225615f2-7927-4e8d-91f4-057800dcf3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814cf0c0-6a4b-47b3-b9a1-115210e4b631",
        "cursor": {
          "ref": "219be60e-13f1-4411-afa5-e5115774cc60",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8c69db31-8271-4f13-8965-5f9691c0d6fc"
        },
        "item": {
          "id": "814cf0c0-6a4b-47b3-b9a1-115210e4b631",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1e016225-10d2-4523-b74b-15e248b3e171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736ceefc-6615-44b0-bc45-d62510f1f9bb",
        "cursor": {
          "ref": "74d62271-09d1-416a-86be-a12b36226a82",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bc108515-6062-4e89-8094-d77dbea122d1"
        },
        "item": {
          "id": "736ceefc-6615-44b0-bc45-d62510f1f9bb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d61bb7fa-cab9-4d0b-a136-2c5c6f6377e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9506fd58-e4b8-4770-9012-a690298aed4a",
        "cursor": {
          "ref": "71333a78-9c08-4133-bfcc-ffbbd8c53b27",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ba932da8-a746-4013-939a-7735d49b4ab6"
        },
        "item": {
          "id": "9506fd58-e4b8-4770-9012-a690298aed4a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cacb7f89-5e83-46a9-846c-0e570f8e2c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c8b20b-4c7e-4366-9bc0-132b576a1f3e",
        "cursor": {
          "ref": "70f24363-4911-4228-a11e-a5ca11819f0b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "295db732-6505-4e99-88b1-003b3dcaf051"
        },
        "item": {
          "id": "c6c8b20b-4c7e-4366-9bc0-132b576a1f3e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0caacc51-21c9-496b-b164-c48a92291c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddd94de-80ab-4973-94c2-9f3018092f3e",
        "cursor": {
          "ref": "b5c4be66-2d60-433c-9dbd-9796b950ab67",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2e586a49-4fde-4e13-bf37-42280fc81149"
        },
        "item": {
          "id": "0ddd94de-80ab-4973-94c2-9f3018092f3e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "067ca5ea-7d96-4fd8-a002-0fe50582dcff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2880d42-a610-493a-a5f3-1d4830f60b94",
        "cursor": {
          "ref": "2a2bf374-1eeb-4436-8948-4a870f76c32c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1a109ed0-9070-4018-9a8c-6b76ed6b8b5d"
        },
        "item": {
          "id": "d2880d42-a610-493a-a5f3-1d4830f60b94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3073a39b-2d6e-4a9e-9c02-3cf3aef6a4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fc676c-66d9-4311-b7be-0028e2335715",
        "cursor": {
          "ref": "1adf5616-68c2-4db7-aac6-d01b3bbee66b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "88651001-ae5f-48f8-8938-4d33c828d3c7"
        },
        "item": {
          "id": "05fc676c-66d9-4311-b7be-0028e2335715",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76f0f4ac-af2e-4248-a599-8da2bcf4cea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4050af-fad4-4da3-a0fc-9a17649a251a",
        "cursor": {
          "ref": "fcf6eb0d-34f2-4af2-97ba-a92148481425",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d581797c-5a0c-4dda-8576-cdf81b6d5a43"
        },
        "item": {
          "id": "6f4050af-fad4-4da3-a0fc-9a17649a251a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d193d19f-8c77-491a-8627-9b4d3e6e32ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ca5810-1400-487a-8678-5f0117b58346",
        "cursor": {
          "ref": "f873d164-2beb-4d4e-a0d5-8d96691bd898",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c0c2c5b7-4d42-4946-a8d7-ba4000d200d5"
        },
        "item": {
          "id": "42ca5810-1400-487a-8678-5f0117b58346",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "883271c7-b30b-4038-a13d-771b330a54fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8cb474-63dc-4409-b541-6a774a8104ea",
        "cursor": {
          "ref": "aae9ef82-8ce3-4387-8492-b60cbccc8efa",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "700f85f3-ff1b-4f4f-ba12-63766b66bbb0"
        },
        "item": {
          "id": "4a8cb474-63dc-4409-b541-6a774a8104ea",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a5ce80b3-fcbe-4001-84ab-ef0c86680626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4e241f-0eb2-45cc-b3ea-317b3144ea27",
        "cursor": {
          "ref": "3a56c55d-f512-4ab5-b4d1-35c995472384",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e96521f8-93ea-44cf-97c5-d7be93e31ad4"
        },
        "item": {
          "id": "0f4e241f-0eb2-45cc-b3ea-317b3144ea27",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "057e2b34-7965-49c1-8e96-feb7126c39de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286fa5e5-c969-4143-b07f-9993e01e884a",
        "cursor": {
          "ref": "66b10a4a-1348-4eef-b5f8-3f9c4ddb648f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2eee7e06-92fc-4b64-8125-8120d67b3626"
        },
        "item": {
          "id": "286fa5e5-c969-4143-b07f-9993e01e884a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5817a4ba-4415-43b0-9196-5237d74a89a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec6d659-bb7d-4456-bbd2-c89210368b36",
        "cursor": {
          "ref": "cee22bb0-470d-4aa2-a9a7-2f9dc42cdce8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "04c8c9ca-2777-4f20-b9e7-165c0e4b350a"
        },
        "item": {
          "id": "0ec6d659-bb7d-4456-bbd2-c89210368b36",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0d08e2b9-6912-4e99-8ee6-e9f465e0c3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651013a0-8dd3-4499-bb13-d933204bfdf4",
        "cursor": {
          "ref": "42d943c7-cece-413b-ba64-f023830d1bde",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "30a8a65d-82de-465e-b8bb-4cc260166660"
        },
        "item": {
          "id": "651013a0-8dd3-4499-bb13-d933204bfdf4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3fd6878f-5b3b-4a75-9996-6d3ed7248728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d208c953-0425-451a-b0ea-66a440540468",
        "cursor": {
          "ref": "ae4e0385-dbd1-4c0f-bb2d-135ebf8b1866",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2c891170-ceba-4925-a543-950fe4200fbf"
        },
        "item": {
          "id": "d208c953-0425-451a-b0ea-66a440540468",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ecc4c476-8ce2-4167-8335-f90372826a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd4fec5-6cc9-4c8c-a11e-080915ff4d3e",
        "cursor": {
          "ref": "a3281e57-62ad-4d7c-a40c-407e8692a96e",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "74b517b7-dde5-4be1-80ff-f517843d6480"
        },
        "item": {
          "id": "fbd4fec5-6cc9-4c8c-a11e-080915ff4d3e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9028f319-58f9-42b1-8c18-0b859ab69138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f9944d-b7ee-455f-9006-b526c566b8d3",
        "cursor": {
          "ref": "9fc238e0-65be-4750-ada2-ef123ac313b8",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cac72c62-822a-42cb-8956-bd164f3cb223"
        },
        "item": {
          "id": "a2f9944d-b7ee-455f-9006-b526c566b8d3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d756cfa-12e2-4af8-a312-34fbfcbf80a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa639013-9370-4516-9909-b1f1272c63d6",
        "cursor": {
          "ref": "fe411a74-e759-48ca-8308-57102cefe6f4",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3037d683-2359-4c42-ae60-44b2460069af"
        },
        "item": {
          "id": "fa639013-9370-4516-9909-b1f1272c63d6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f75063e1-8f39-4986-a2fb-2d930eecbcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d8333f-9a0e-4e3e-b8df-827c6c21b9d9",
        "cursor": {
          "ref": "f1a7f25d-8083-4aa5-94fd-58b842e331a3",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "78aa89ce-8f6b-4d99-a18f-4e9fe8a12c08"
        },
        "item": {
          "id": "29d8333f-9a0e-4e3e-b8df-827c6c21b9d9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1eb91065-d989-4bd0-a2ae-d0a2a65d7233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf32534-5f06-4f04-b27d-43288b30defa",
        "cursor": {
          "ref": "0f6e274a-0794-4b1b-b9f9-553e7b6592e7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "597b425c-bf44-4efa-875f-ead2ccb60610"
        },
        "item": {
          "id": "dcf32534-5f06-4f04-b27d-43288b30defa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3f97a607-2645-4f8d-aa40-393648d62617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e502c2c8-e04a-48bd-9012-c70f4fabcddc",
        "cursor": {
          "ref": "f8c796a8-07bd-4339-b513-ec8462f56ad2",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "352e7ade-1909-4eab-9d19-546cce44b440"
        },
        "item": {
          "id": "e502c2c8-e04a-48bd-9012-c70f4fabcddc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2af7d0c8-e7a9-4f18-8656-6f0cc3d2210a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9c1bb4-f7e6-4250-9ad5-711b896d91ee",
        "cursor": {
          "ref": "d0d539c8-55d0-467a-9529-0bca44c97ac2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "19217876-468f-4a8d-b0e1-a5bcedf2b5e3"
        },
        "item": {
          "id": "cb9c1bb4-f7e6-4250-9ad5-711b896d91ee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bf92cb4f-ef1e-4e51-8305-640ee67f9ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8793a910-c375-4193-9f68-b48f8f45fcc0",
        "cursor": {
          "ref": "cbd0e7c1-683c-4dba-b526-f8d079a3cfab",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bed01b6b-b9dd-487c-b8b0-39a0a64d0ff2"
        },
        "item": {
          "id": "8793a910-c375-4193-9f68-b48f8f45fcc0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e8f95532-cbea-414f-8989-231e569be711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2271277f-86f7-4837-ac64-f0a903cd50bb",
        "cursor": {
          "ref": "cbf59e40-5e5f-4d6f-bda8-18f0d4cd2b7c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "715273f4-888f-4240-a257-953f6ed56ea8"
        },
        "item": {
          "id": "2271277f-86f7-4837-ac64-f0a903cd50bb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "493b6466-a1ae-4088-9cf6-3b13676a5f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9033bd-63de-4566-b5e0-c94554466942",
        "cursor": {
          "ref": "c957fe95-5448-4a65-b159-e61ef547b0a3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f3df6b3f-c334-47bf-bb9f-2f6d3a381a73"
        },
        "item": {
          "id": "5f9033bd-63de-4566-b5e0-c94554466942",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f360d8d3-fb6f-4d03-baed-bb9f885e9579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b72c8f5-4097-4ae1-a712-ac55cabffb8e",
        "cursor": {
          "ref": "09662e44-1bac-4d44-997c-db9b9c6f2f92",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "10bdf4e7-4837-45f9-97db-132c5297a8aa"
        },
        "item": {
          "id": "0b72c8f5-4097-4ae1-a712-ac55cabffb8e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "82e89f36-220c-4117-ae94-26917c8682cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d24f036-9425-4c1d-9eb2-8c76aeeb78ca",
        "cursor": {
          "ref": "c716812a-9e68-4035-943a-41a3609877f8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "194533f8-12b5-4c5b-958a-202a58af0517"
        },
        "item": {
          "id": "8d24f036-9425-4c1d-9eb2-8c76aeeb78ca",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5509ea1d-cf3a-4901-a517-261a8c3f0f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6b9043-f355-4f11-bf84-fc9fec05a5f8",
        "cursor": {
          "ref": "1f3700c9-55e6-4e86-add2-2a693af0b369",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "24da92d4-3876-4039-83f4-3379989104b1"
        },
        "item": {
          "id": "fe6b9043-f355-4f11-bf84-fc9fec05a5f8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "07c03705-205d-41f1-8cb2-4932827b7332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c49491-6971-46b8-b83d-aba8eca5cb66",
        "cursor": {
          "ref": "b788ae4d-3d0e-432e-a8b3-fd7b88fe8744",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6a053d06-fe38-4c17-8f40-6017b2118445"
        },
        "item": {
          "id": "83c49491-6971-46b8-b83d-aba8eca5cb66",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "03b31a27-b585-451a-b77c-87c7be11f01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34e680f-e4e7-4963-badf-d8e2b4abaa04",
        "cursor": {
          "ref": "fd413177-b160-415c-a443-d1ed85e539a8",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b65095b5-e7d8-4d22-a382-840bec3b86e2"
        },
        "item": {
          "id": "b34e680f-e4e7-4963-badf-d8e2b4abaa04",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1d49e5e3-077f-4471-a3f6-f9109476a954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd743e6-1191-422f-aebc-6e9633fb7b45",
        "cursor": {
          "ref": "9c2496cf-f6de-4a97-b4aa-75ac73cd1a43",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ca626f88-9a40-4157-a008-ef95f1568705"
        },
        "item": {
          "id": "6bd743e6-1191-422f-aebc-6e9633fb7b45",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "40912069-477d-4e3e-9ecb-3ef1018e9b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3beb97bf-742d-402c-803e-2b809b672e37",
        "cursor": {
          "ref": "40604658-4aa1-48c4-94fd-c4f1716e8b13",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "57b3f02b-6ac4-4d69-8de8-9a558371a53c"
        },
        "item": {
          "id": "3beb97bf-742d-402c-803e-2b809b672e37",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ace08aae-3277-41d9-b0e8-84c4667e41b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e53fcf7-82f9-473c-99e4-dd7a636ff3d1",
        "cursor": {
          "ref": "c1a3cf0d-4723-434b-8bba-b4a78fca8eb4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1119c14f-65c4-4c22-a2d9-60fb061b8be6"
        },
        "item": {
          "id": "8e53fcf7-82f9-473c-99e4-dd7a636ff3d1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25b6557c-34eb-4b56-b133-37953b7cff31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a80598-31a2-42d1-8d9f-0085774cfc5e",
        "cursor": {
          "ref": "420f1f23-7284-40f7-82b2-2374eee64ee3",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6bddd14d-11e9-4ac6-b6a1-97516986b712"
        },
        "item": {
          "id": "50a80598-31a2-42d1-8d9f-0085774cfc5e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "401bdadd-d64f-41e9-a63c-f18c9cfd4013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c143ff2c-82e3-4e2e-bae7-a3547f0dd4d2",
        "cursor": {
          "ref": "a5b21480-9abf-493b-9fde-ab613a949d55",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "02aae7ba-38cc-466d-a18b-44fe5db0d879"
        },
        "item": {
          "id": "c143ff2c-82e3-4e2e-bae7-a3547f0dd4d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6505e772-6ab7-43fb-ba8c-ca068f34d2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b807cf43-be72-46d7-97ca-b2ce704cb2bd",
        "cursor": {
          "ref": "c601c332-101f-4dc0-a22b-910ec2c0cbb6",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6a7874fa-0dbb-4088-91a6-19596788f493"
        },
        "item": {
          "id": "b807cf43-be72-46d7-97ca-b2ce704cb2bd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a014bf27-fe2e-4207-9f0b-a17ddc5f0550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e61e4e-5f7c-45dd-b4cf-320cc010c57d",
        "cursor": {
          "ref": "a3bfddb0-e61d-4cfa-bebc-615bd620def1",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b34b8736-7251-4e3a-ad4b-18fc1de4b27c"
        },
        "item": {
          "id": "53e61e4e-5f7c-45dd-b4cf-320cc010c57d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e068fd48-2f67-455f-b9f7-60b64697cc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4dfd3b-ea6c-4ed0-9a2c-d832a7438fba",
        "cursor": {
          "ref": "02dd0fd6-c53d-4162-8092-0583ab8420ee",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2a3e43f4-c7cb-461f-85ca-35a83a6a9808"
        },
        "item": {
          "id": "db4dfd3b-ea6c-4ed0-9a2c-d832a7438fba",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "684a1156-3b99-4156-842b-fed5acb7387b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9a4e9-81c3-49dd-a7c5-fc5102d067d6",
        "cursor": {
          "ref": "7a3b25a6-e2fc-4aca-ab63-70d11f04e268",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "721e8898-dd0b-454d-a492-471bf99da9d0"
        },
        "item": {
          "id": "6cf9a4e9-81c3-49dd-a7c5-fc5102d067d6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a7fd3cb2-22b7-4e47-b7ef-40a95a59e387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f71830d-adfa-41a2-9d67-e5fe56319ac1",
        "cursor": {
          "ref": "de027578-5a4f-40dc-8a8e-ef6bc3201b61",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e84f3323-352c-4c29-8b96-5117a2655e68"
        },
        "item": {
          "id": "1f71830d-adfa-41a2-9d67-e5fe56319ac1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f51e8d01-73f0-4d1b-8e2c-b400cd2bbc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1e4a35-ff05-4797-88b4-0235d63563be",
        "cursor": {
          "ref": "97afda7f-b106-472d-9efc-e37856bca3b2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6faa14f2-b854-47d3-8f16-7511ba41d00d"
        },
        "item": {
          "id": "1a1e4a35-ff05-4797-88b4-0235d63563be",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d2a51f8c-c985-4b61-8bf1-909e1881c24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d722686e-9de2-4ff0-9620-633f5641b8f7",
        "cursor": {
          "ref": "ea1049d1-123c-40eb-8c9c-32232d768c28",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b69b78d8-464e-4a70-9889-8bb78e7245bf"
        },
        "item": {
          "id": "d722686e-9de2-4ff0-9620-633f5641b8f7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4eb55d50-7487-4e2e-9557-d7d2551426cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72c4742-01fa-4df7-9139-56785ecc5abd",
        "cursor": {
          "ref": "27bff91f-d331-4eb9-87bb-4085ed9e3080",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "60ec09f8-50df-4dfa-a0d5-5076a117e51c"
        },
        "item": {
          "id": "c72c4742-01fa-4df7-9139-56785ecc5abd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "818cf31a-cd4b-48d2-99b8-264163609a7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4285293e-036e-49e7-98eb-cae63c1a4e67",
        "cursor": {
          "ref": "f6b0c99f-597b-43b7-b646-46d615c5c532",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bf09d497-09b4-412b-be8f-f1863dc99e9e"
        },
        "item": {
          "id": "4285293e-036e-49e7-98eb-cae63c1a4e67",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c27b1de3-6697-4823-b994-1a8be384a49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e68ae5-7278-4e19-b38c-597c3a662dc7",
        "cursor": {
          "ref": "0182139e-ef11-4c6d-9849-d949149e3d4d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f339ea6b-ca13-4977-822c-a61015b961f9"
        },
        "item": {
          "id": "52e68ae5-7278-4e19-b38c-597c3a662dc7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "706c60d9-44f7-480a-bfda-1cb6c25a7787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9c5a33-f7a9-4bd5-9ab1-9523b5cb81a7",
        "cursor": {
          "ref": "252f7c10-d882-489c-8eab-a1285e853bde",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c776d659-9189-4e2b-9bb5-fa6aadcfc182"
        },
        "item": {
          "id": "9f9c5a33-f7a9-4bd5-9ab1-9523b5cb81a7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "de44dbc9-b4b6-4a47-be5e-4aefccab222b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba7f610-4998-48f8-aa82-a4a48c961ab8",
        "cursor": {
          "ref": "388b9df9-b696-427a-b292-b13e13a06f2a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "440f0fb0-34ae-479c-9aad-b245ba438386"
        },
        "item": {
          "id": "4ba7f610-4998-48f8-aa82-a4a48c961ab8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8dcd3c10-dd51-43a4-a240-be0f528bfc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a712d5-72ee-4e2c-83a3-e1a9a0548ba9",
        "cursor": {
          "ref": "b8f82fe3-769b-4837-b6a8-661f217dede0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "85d74e7d-2446-4ddb-860f-721c44f07d97"
        },
        "item": {
          "id": "39a712d5-72ee-4e2c-83a3-e1a9a0548ba9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2440dd89-a2d3-455e-ab55-a9c6779ebc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a61610b-425b-4759-8235-27e71b3810cf",
        "cursor": {
          "ref": "cfd974c9-240e-45c5-b87a-468df7fe381f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "baaa9f2b-cabc-4e86-9cd2-30078927f5ff"
        },
        "item": {
          "id": "5a61610b-425b-4759-8235-27e71b3810cf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c5f1b44f-b710-49f9-a8c1-e7cf7e55cd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f568002-6782-4bb4-8d50-21b72bba721a",
        "cursor": {
          "ref": "11526c9f-4013-4235-b926-3b790dc0d147",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8578faee-6e01-4ada-93a0-df4904ad1ecd"
        },
        "item": {
          "id": "8f568002-6782-4bb4-8d50-21b72bba721a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "989ed842-931f-4e3b-9883-87ca09160f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf92209-4206-4438-b528-40c9ea01d58e",
        "cursor": {
          "ref": "226ecd4a-5b2c-4e54-beb8-7e02339d8794",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8d6b7d6f-933b-41b8-a409-c92e732e2ebf"
        },
        "item": {
          "id": "7cf92209-4206-4438-b528-40c9ea01d58e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6cdab39d-1a43-4aea-82fc-16fb799247c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ef72c0-904d-4b4f-9d67-40f9f685abe2",
        "cursor": {
          "ref": "b244087d-2696-4dc8-8a33-ed2e19c27061",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8caae235-383f-4ba1-ac77-f1debf253817"
        },
        "item": {
          "id": "87ef72c0-904d-4b4f-9d67-40f9f685abe2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4af4d208-c339-41a3-b66d-c24bed5dfe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fda204f-5faf-4514-b3e1-dd4b0140ba33",
        "cursor": {
          "ref": "e76ff5b1-dcee-4f1a-b9c6-8644b19e7511",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2c877daf-f6d3-48a3-8bb5-809bef1accf6"
        },
        "item": {
          "id": "6fda204f-5faf-4514-b3e1-dd4b0140ba33",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bbc74fb6-cf99-4c5b-84e7-379ea676f69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985f52b6-3fb5-4ada-a6be-2d85740f972f",
        "cursor": {
          "ref": "0479f771-b698-4465-9690-570e93bb9b66",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "45e39766-f5a4-43fa-8a43-b7aba33bba5b"
        },
        "item": {
          "id": "985f52b6-3fb5-4ada-a6be-2d85740f972f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f17515ca-aca9-41de-9ea8-04cf516c8fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0941f5e-d705-489c-a4e7-d15605fc7a34",
        "cursor": {
          "ref": "9fd9783c-bdd4-4fbe-a886-298994a36583",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8a7162d2-5bc3-437d-a42e-67d4c64df5af"
        },
        "item": {
          "id": "b0941f5e-d705-489c-a4e7-d15605fc7a34",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ca3130db-19d0-404e-aa90-3a6cdbc9c8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ff7a63-df90-4814-843f-87fdaebac273",
        "cursor": {
          "ref": "e3bff749-d0e4-49ab-b2e1-b2af5a6ac2c8",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "690f250c-edd4-4033-a69a-f313b4a77a8a"
        },
        "item": {
          "id": "e1ff7a63-df90-4814-843f-87fdaebac273",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4633c2ed-7e66-4ec3-9703-5e13990f42dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93831cd-1a9c-4487-8171-c7dec9744f2f",
        "cursor": {
          "ref": "4d13934f-14ce-4567-8079-4f4f6e4c0b94",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "85643c3e-d680-4aa1-be95-48b935f656c9"
        },
        "item": {
          "id": "c93831cd-1a9c-4487-8171-c7dec9744f2f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c4a59a9d-bd54-4c6f-9a57-313fd639ba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51731916-c94b-461a-898e-3c0b19409857",
        "cursor": {
          "ref": "2554b1d5-4a17-4cfd-98ff-c3ba2f2f48d2",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "18c53718-3c8d-4e39-b076-0469cf78ee68"
        },
        "item": {
          "id": "51731916-c94b-461a-898e-3c0b19409857",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5e2ff4a5-dee3-4d64-910c-a1536988af6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b99d89-ce01-4a68-883e-9069455b5ee5",
        "cursor": {
          "ref": "d15fff99-271c-4b11-8eab-073d3b777752",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "11c21ec1-427c-48be-a44d-346a0cc9e229"
        },
        "item": {
          "id": "68b99d89-ce01-4a68-883e-9069455b5ee5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9bedc01b-1d95-4722-8af1-535bd7c14cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6c8404-5f2c-40f4-9c62-6ee98fddd07a",
        "cursor": {
          "ref": "ad49aed3-cf34-49e7-a485-7305d4f849e9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7e90ea4d-95cb-4628-9e64-20add73e8a80"
        },
        "item": {
          "id": "6f6c8404-5f2c-40f4-9c62-6ee98fddd07a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bb259ca2-232a-4a24-9345-8108223cb776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4304ca11-e043-4269-b517-53ab61d4a32d",
        "cursor": {
          "ref": "372dc0d4-7704-4bc8-a751-4e46ada5c76e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "76ad4317-0ebf-4349-be8e-a4542eb03793"
        },
        "item": {
          "id": "4304ca11-e043-4269-b517-53ab61d4a32d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "983bcd91-ccec-491a-8577-64de097fd109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4225b83e-3622-49fc-93b0-9450a14e0825",
        "cursor": {
          "ref": "f30e9d33-da9d-4db9-9a53-7186a9fd98a4",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2bff8dfc-e9ce-481d-aaf1-a845f91cb0a8"
        },
        "item": {
          "id": "4225b83e-3622-49fc-93b0-9450a14e0825",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c53e71c0-ad79-47bb-bc88-9bcf46f6ca92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7949f8-c426-48d2-a5fd-996baa9c60c0",
        "cursor": {
          "ref": "9f994821-d9cb-443d-b875-dfd93cb8a1b7",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8070d099-aaa3-4cf0-b0c8-5dcb8639718a"
        },
        "item": {
          "id": "3f7949f8-c426-48d2-a5fd-996baa9c60c0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a50475ae-8542-4088-ba18-fb0274d771ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ebd2b0-e25a-4264-acfb-f4c87346413b",
        "cursor": {
          "ref": "c4cba2d9-5649-48f3-a240-545eae7b80a8",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a064994f-67e2-4e82-a40a-6952428d835b"
        },
        "item": {
          "id": "79ebd2b0-e25a-4264-acfb-f4c87346413b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b8dcf86a-8423-4119-a7bb-c72ff745d441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ae0f91-51c5-4b77-9ab3-f88fd95dc328",
        "cursor": {
          "ref": "4661d3c0-c736-46a7-a6f8-e7ca66ac290b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c76846d9-dd22-4b01-abe0-17946930f42a"
        },
        "item": {
          "id": "40ae0f91-51c5-4b77-9ab3-f88fd95dc328",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "96b37619-0482-4f09-93ef-936c855b29fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15dd5fb-a00c-447a-ad69-b6306eb48d1c",
        "cursor": {
          "ref": "38edb69b-0290-49f8-9312-b2f34fcfa815",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "45c827ca-d8ca-49fc-80cd-640d4df97cd3"
        },
        "item": {
          "id": "c15dd5fb-a00c-447a-ad69-b6306eb48d1c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5a8bc480-5ce5-470b-b958-7088a475c4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35315df3-8737-43e9-b8cf-ee42dcf42871",
        "cursor": {
          "ref": "b3d24eee-61a6-40a8-a259-b5ff7995fce5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "06836439-5577-4b5d-8a81-cf18a77bd24b"
        },
        "item": {
          "id": "35315df3-8737-43e9-b8cf-ee42dcf42871",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9268cf6c-3682-419f-8dde-c7e207afcf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cdadaf-b0d8-4737-a912-8b6dcefc7799",
        "cursor": {
          "ref": "05872fc0-d8c9-416a-bcc1-6e40c8d1ca11",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c08c2d26-560f-4352-ac00-79a68116672d"
        },
        "item": {
          "id": "27cdadaf-b0d8-4737-a912-8b6dcefc7799",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "581a8dac-a5ab-44cd-abdb-34b05f56ee08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd58a01b-1716-4923-9152-b6b19bf1d6ac",
        "cursor": {
          "ref": "2ed16064-2f07-4073-8094-699b1b9c10d1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b9eb8655-0dec-4832-b224-162af0f79398"
        },
        "item": {
          "id": "bd58a01b-1716-4923-9152-b6b19bf1d6ac",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9ab4b566-5304-4c21-8638-b8fba9e5f4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4643fb53-f5fd-4241-ab97-634aac06be37",
        "cursor": {
          "ref": "a931e3ef-9faa-4ce0-9f91-46e29cec88b4",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "907cee05-dec7-417c-bc7c-6b4684438cdc"
        },
        "item": {
          "id": "4643fb53-f5fd-4241-ab97-634aac06be37",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0f8f0653-c9db-4b54-b5eb-978d723280f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b2712e-c77d-41bb-a8b7-885e9734cd49",
        "cursor": {
          "ref": "3a7cf4ab-0985-49d9-8c14-ca1ed9f73bbb",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8e14a9a9-7d7e-41a5-8e13-803fe79eecc7"
        },
        "item": {
          "id": "03b2712e-c77d-41bb-a8b7-885e9734cd49",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8441de7c-f39a-4a57-a1cc-971d94bcb837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d111242-7feb-410b-b909-7ba28c582a51",
        "cursor": {
          "ref": "19a3709a-e920-4d59-a740-e1f78d8d5d1a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b77260bf-8031-4d23-b579-b55151efc60c"
        },
        "item": {
          "id": "2d111242-7feb-410b-b909-7ba28c582a51",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5d17b7de-eddf-4aba-8e71-c37417ad2ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f429efb8-1cf6-415e-967c-2da32616656a",
        "cursor": {
          "ref": "43f0404f-6385-4a09-b4a5-23c8c35a20c8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "02eb6165-b3b4-486a-8384-04bfaf025cce"
        },
        "item": {
          "id": "f429efb8-1cf6-415e-967c-2da32616656a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d3d8cd18-4689-49c6-aede-75cc9a023bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2338eba-a413-4fc1-9301-a6f79d2d9b48",
        "cursor": {
          "ref": "55fddca9-9803-4897-832e-9ae8972b9346",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "63fbdcae-24f8-4017-8cce-9299edc2527c"
        },
        "item": {
          "id": "f2338eba-a413-4fc1-9301-a6f79d2d9b48",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "70664464-ff52-45ad-b854-b7d964ba6613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5a747-b75e-41fe-b596-128d390c164b",
        "cursor": {
          "ref": "bef41903-01ce-425d-bb56-88fb81eb569e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "05b10a89-31fa-45a3-ac78-c149ba08b63b"
        },
        "item": {
          "id": "48c5a747-b75e-41fe-b596-128d390c164b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fe0bb495-2983-4b26-81ae-a6525486f301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac910de-3d4d-4a70-ae2f-6828ad88ade5",
        "cursor": {
          "ref": "3ecd1869-ca3e-422f-b21c-eb834f79c860",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bbb4b1c7-cdcd-4865-9019-9e0c088bb424"
        },
        "item": {
          "id": "2ac910de-3d4d-4a70-ae2f-6828ad88ade5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40f0f9f3-5e01-4c38-91b9-080059ed378b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeab91b4-45b3-45b2-8122-c1132e443f63",
        "cursor": {
          "ref": "1ecda54b-5cd4-4a66-872c-48bfda05c8ea",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "15bfaf75-c4ef-44de-8535-22ab96ab483e"
        },
        "item": {
          "id": "aeab91b4-45b3-45b2-8122-c1132e443f63",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "902fd05d-e625-4802-bd68-1727700c9889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8291369-f469-49de-ba6c-5e46e46e6522",
        "cursor": {
          "ref": "8ebf1dee-c7f6-4a42-81a6-76b18f915eb7",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6cd19214-8436-471c-8bbe-8c8f7807408e"
        },
        "item": {
          "id": "c8291369-f469-49de-ba6c-5e46e46e6522",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3cd235a0-0c5e-45dc-828b-bf485ee071db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79f8c98-2cec-41a7-80d1-de1f2d44ec34",
        "cursor": {
          "ref": "d13c6e38-b8d8-4264-9e18-62ea2933a475",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0966f95c-1095-44d1-9870-c792cfb386ca"
        },
        "item": {
          "id": "a79f8c98-2cec-41a7-80d1-de1f2d44ec34",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "31ce2f98-189b-45c9-87e7-77298338e2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2353270c-08e6-485c-bd53-4faaa040c091",
        "cursor": {
          "ref": "c7e8e5e3-b1f8-4539-83d6-6639ebf5f06a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b2e93d8d-b2dc-409a-afa4-f722249cf9f6"
        },
        "item": {
          "id": "2353270c-08e6-485c-bd53-4faaa040c091",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "093f4bdb-0575-4d47-a3c6-2505339654f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93001874-707a-4ba4-920b-177a26a0dd91",
        "cursor": {
          "ref": "6c902eb6-47a0-4104-a2bb-5e42e91d1354",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "55b747ca-cf79-4d6c-afa6-03b406cd417e"
        },
        "item": {
          "id": "93001874-707a-4ba4-920b-177a26a0dd91",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "401a456b-d509-47bf-bf2a-947ad35a2de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a50d2ce-8515-47ae-8474-1cca75f9e8f6",
        "cursor": {
          "ref": "cb27831e-1ef4-489a-9af5-c7b7d9a447d9",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "21d6a5e6-b4f7-4e80-9323-1ac630961a47"
        },
        "item": {
          "id": "0a50d2ce-8515-47ae-8474-1cca75f9e8f6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "589a5ebc-fada-4be2-adf5-b9580148e5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c94db8-e092-44c7-a5e0-616bbd03d42c",
        "cursor": {
          "ref": "45d5f6fc-4a26-4e0f-9dd3-d769bfd3bf7b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "85c5b6dc-6f68-489d-8dff-66f58dbfc790"
        },
        "item": {
          "id": "64c94db8-e092-44c7-a5e0-616bbd03d42c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "26de512c-7b92-418b-9083-55b0d31fbbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0c1366-e64b-425b-a80e-5c2cf654b6e7",
        "cursor": {
          "ref": "09b4bd2f-11d4-4669-ba3d-f8dce157316a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7bd9f9c2-8d91-49a1-964a-4eee1a573056"
        },
        "item": {
          "id": "2e0c1366-e64b-425b-a80e-5c2cf654b6e7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f19ef332-f21d-4fac-bd5f-17f4cf1ce887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09435475-2950-4af7-a14f-d6c111bad451",
        "cursor": {
          "ref": "983e2108-4b01-491b-82e2-b522d999d929",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b5679836-181a-416c-88d6-cd512433f8e1"
        },
        "item": {
          "id": "09435475-2950-4af7-a14f-d6c111bad451",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7e16d5ac-a795-48b6-ac40-5b56297d1dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12582d18-824a-4676-bcd6-cb0e0aac6454",
        "cursor": {
          "ref": "766978f6-237f-4681-8852-595920daed00",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4231f6b2-3b56-46d6-a133-d8b87dfa61e6"
        },
        "item": {
          "id": "12582d18-824a-4676-bcd6-cb0e0aac6454",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1b243bd5-358d-4fb6-b86a-5a3884625173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252a6486-7aa7-474c-bcba-049197c7528c",
        "cursor": {
          "ref": "c6e5fe86-e9a2-4d7a-bee7-9a83ef87e9bb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d0fb13fc-0bfa-4827-82c6-be56e9b743a1"
        },
        "item": {
          "id": "252a6486-7aa7-474c-bcba-049197c7528c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "78ed2d55-1edd-4763-99d5-49c760926afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ae4d79-7ca9-47c5-a804-54a493b18b86",
        "cursor": {
          "ref": "9a4b62d2-291d-4dea-a47f-e8384136a526",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "29d75685-73ee-4953-9e08-dc0b22d08c47"
        },
        "item": {
          "id": "c6ae4d79-7ca9-47c5-a804-54a493b18b86",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2ec8c813-036e-4b12-9eca-0fdf9e9ce7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8921cbd5-8119-42c3-a8bf-86d35c47153a",
        "cursor": {
          "ref": "cb72bf1e-a3fb-4138-a11c-148d98185407",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1822d008-2974-4859-b9d3-9197f01207af"
        },
        "item": {
          "id": "8921cbd5-8119-42c3-a8bf-86d35c47153a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "83a3ded2-57f9-4a71-a08a-ab6e4e0ad92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7690258-aac4-48cf-acc4-fa9f9c6f7d56",
        "cursor": {
          "ref": "6c9abf9d-3047-4f89-9052-9be3d40e70ef",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "239d673a-5910-42e1-83ba-5328dfdbd246"
        },
        "item": {
          "id": "c7690258-aac4-48cf-acc4-fa9f9c6f7d56",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f9056058-6681-4157-87bc-4775632101f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e60a49-0406-4d60-ae44-123e6eb07fea",
        "cursor": {
          "ref": "382d2279-e739-4604-87dd-f4795cfdda8d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bcbfa053-9e48-431b-972e-8999dd93ff41"
        },
        "item": {
          "id": "34e60a49-0406-4d60-ae44-123e6eb07fea",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "35fb3349-59ab-4dd9-b498-a4e13660156b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f000a0c7-68fc-4ca9-b4a5-7dc54c6b76a1",
        "cursor": {
          "ref": "7bec439f-0f2f-4c2e-a0cd-fb98fe668577",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "96d30ec1-b47b-4bf5-ba2a-b36d98622555"
        },
        "item": {
          "id": "f000a0c7-68fc-4ca9-b4a5-7dc54c6b76a1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c446cde6-663d-4b74-b5b8-4e8ac5a9a733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4f3a24-f3a6-4114-ba1a-b3f67fb0706a",
        "cursor": {
          "ref": "d3564a58-f721-4fd5-81be-63e099a9ee8e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b79353c6-0115-45bf-a8e7-dfa1f91477c2"
        },
        "item": {
          "id": "0c4f3a24-f3a6-4114-ba1a-b3f67fb0706a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ac33e70e-7ec4-4eaa-a100-6373d54cba9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0085d352-76fe-4919-b770-d127e8a63ab5",
        "cursor": {
          "ref": "8b23dcfc-5dee-4473-af21-f5ff2ddf8c8e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "17f57484-a542-4882-9d9c-b6d4a13ddbb8"
        },
        "item": {
          "id": "0085d352-76fe-4919-b770-d127e8a63ab5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "67bb9a70-5396-486d-9cc5-96b8fb88536a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7db7e27-b098-409c-a83d-7e45cf8a664f",
        "cursor": {
          "ref": "d896e698-eb35-42a8-afae-641194d091ef",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2e65e886-7552-422b-8ce5-e7986817b2e1"
        },
        "item": {
          "id": "a7db7e27-b098-409c-a83d-7e45cf8a664f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "964fd266-b7e0-46ad-bc31-23ee2166e719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dae4b1-63dc-445a-9ce9-ae4246537f84",
        "cursor": {
          "ref": "c247074c-648a-4fd3-81da-80ecfe331d25",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8317b539-c6ac-4e01-a06d-19824363a542"
        },
        "item": {
          "id": "77dae4b1-63dc-445a-9ce9-ae4246537f84",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a2662087-9529-4eab-9759-83ad4707a170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdffcd1-a98a-4847-8944-d44f31673ced",
        "cursor": {
          "ref": "bf874f6a-666c-444b-9655-fb9741000d39",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "eac8491b-6761-4054-b263-fea58ad3547b"
        },
        "item": {
          "id": "6cdffcd1-a98a-4847-8944-d44f31673ced",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6e2254e0-1d1e-4f7d-9e25-4be21418d6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d58c27-af2a-4791-9750-d4cfb6a16830",
        "cursor": {
          "ref": "baade662-a012-4ef8-a6c1-8eca73dbf367",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9a9209fd-b81a-40cd-8342-d1896d277cfa"
        },
        "item": {
          "id": "a9d58c27-af2a-4791-9750-d4cfb6a16830",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "90773277-6255-4776-b0b9-d62b7bd3436c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ddfc9d-e519-4979-b02d-ef9525a76fa2",
        "cursor": {
          "ref": "38d4e08f-5138-458f-a52c-4a550ed747cf",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "86101571-cfb5-481c-8842-c80073ce9477"
        },
        "item": {
          "id": "11ddfc9d-e519-4979-b02d-ef9525a76fa2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "125fc3b8-6548-473a-9c91-ab1444cca5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b49061b-f5c2-44d8-9194-b4514ee2e665",
        "cursor": {
          "ref": "4b5e38f0-334d-4b2a-a835-f21ead150994",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "95b34de8-4827-485e-96e0-93f6de38117f"
        },
        "item": {
          "id": "0b49061b-f5c2-44d8-9194-b4514ee2e665",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "81679e0c-b2b1-4667-9aeb-f4bf01e70a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76301a2-7513-4016-a3c5-24e8c6f37f2c",
        "cursor": {
          "ref": "aa601f83-8689-40b9-9376-9bd3f6856eb4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "35143485-3345-4cb6-8d4d-5d2f9370af8e"
        },
        "item": {
          "id": "b76301a2-7513-4016-a3c5-24e8c6f37f2c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e4e4b471-acfb-4ff4-824b-22b178da7793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb1be63-3705-4830-9865-cf8b42b6085a",
        "cursor": {
          "ref": "7292909a-2164-458a-8680-e8561fe6549f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9ab69cb0-81d3-4b0d-b39f-eafb2ce64ab0"
        },
        "item": {
          "id": "fdb1be63-3705-4830-9865-cf8b42b6085a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "25dd64dc-c40c-4a98-a7f2-1377d8db3ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e00def-9189-4966-9145-376f72afae90",
        "cursor": {
          "ref": "8a9c015e-75eb-424a-a9f5-7be7aab01815",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "53074ec6-58b8-424e-8bdd-698785d4d916"
        },
        "item": {
          "id": "56e00def-9189-4966-9145-376f72afae90",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2964b74c-1b06-4ad5-ac64-9db31dfb4073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f34c06-e938-4f07-ac80-26b78d092c71",
        "cursor": {
          "ref": "251914f2-6368-4762-be4d-e3834a5578a1",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "37d03515-f1dc-4b11-b740-bbcadf454238"
        },
        "item": {
          "id": "81f34c06-e938-4f07-ac80-26b78d092c71",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b1cf8b84-aaec-4154-a488-ec398da76edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ae8931-7670-4fe3-8a8e-a11275c665e6",
        "cursor": {
          "ref": "efe28e84-3ef5-4f4a-a7aa-867fc4fe25c5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dd40434e-346c-4aba-af80-a8c228b2ce2e"
        },
        "item": {
          "id": "75ae8931-7670-4fe3-8a8e-a11275c665e6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "94ab625b-a079-4f30-adc1-17de05b4a1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8a137f-6fab-48dd-a071-512c13d25255",
        "cursor": {
          "ref": "efb79bb3-c8bb-478e-bb65-416e4ae59227",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b04766d9-1776-49ff-a968-b8de3e38add4"
        },
        "item": {
          "id": "6e8a137f-6fab-48dd-a071-512c13d25255",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e8996f3f-67e7-4bde-8c37-30916e0e9543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9cee18-57f5-4eb0-b977-af16c5fed18b",
        "cursor": {
          "ref": "a633f610-675f-4ca1-934e-e1e7ed7a151e",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c6495765-82b4-4354-bf61-7b5c0054ec5b"
        },
        "item": {
          "id": "6f9cee18-57f5-4eb0-b977-af16c5fed18b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6efc11c5-3c21-497d-8a0e-5cf59c1b227b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8edbb4-3415-436e-9c95-d22f91444fc7",
        "cursor": {
          "ref": "033264e2-41c7-41d6-8714-8380636b8e4f",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8537142d-dcc8-430a-8d38-7a38d4749a79"
        },
        "item": {
          "id": "0a8edbb4-3415-436e-9c95-d22f91444fc7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d918f126-4b77-4226-8327-74076ead3a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c295d1-a69b-4cae-88fe-cc8f5cdbb2fb",
        "cursor": {
          "ref": "62cf6ee2-ac46-4740-a871-609d047eb0cd",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "10046ca2-f1e7-4d88-a7ef-3dbd8b6644dc"
        },
        "item": {
          "id": "91c295d1-a69b-4cae-88fe-cc8f5cdbb2fb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6511ffe2-4a37-480e-9bca-1f88444ee655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8b7c5c-4301-4d3a-bbce-d37c0f3471a4",
        "cursor": {
          "ref": "de5d3af8-08bc-4dff-a92c-d2e4aa64c74d",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e1c4be95-449d-4f1c-89f7-f37aa10c3cb7"
        },
        "item": {
          "id": "3c8b7c5c-4301-4d3a-bbce-d37c0f3471a4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "62992e56-e951-4537-83dd-27edda38474e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe84f2-2a9f-45db-80fc-fb899d5b6fe7",
        "cursor": {
          "ref": "e7431404-016e-46bd-bd90-8e1d45f0184f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "83fac0ce-6615-4bbe-b0c4-d226041efc21"
        },
        "item": {
          "id": "fafe84f2-2a9f-45db-80fc-fb899d5b6fe7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ebc4231e-ac76-4738-84ea-5d665ecc3e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6eea62-83a6-4760-b3a3-5a4520cfda62",
        "cursor": {
          "ref": "04fc13c6-8245-43d8-b0d9-cefe05d2d3f0",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cc14b17c-2dae-4b99-91ad-ee5d73527c68"
        },
        "item": {
          "id": "6c6eea62-83a6-4760-b3a3-5a4520cfda62",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1a1f362b-4ba3-444c-ad98-5246f903cbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af87dfdf-1077-426a-910c-fecc2986a68b",
        "cursor": {
          "ref": "9f191645-003e-4902-b044-2a05578dc454",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9b37c240-814a-4b30-b818-267c34095b61"
        },
        "item": {
          "id": "af87dfdf-1077-426a-910c-fecc2986a68b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b0e5700e-e270-4625-986d-6261c3cf6cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bcc00c-6bd9-4c5c-a56e-46eade0df145",
        "cursor": {
          "ref": "7ac78d6b-620d-4045-844b-e776596a3d65",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4b3caeb1-ac24-441a-89c7-f629ed286d87"
        },
        "item": {
          "id": "c2bcc00c-6bd9-4c5c-a56e-46eade0df145",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "20461e62-75bb-4398-84df-b02fe5772326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda70226-9321-40bb-9d15-b5d73f2e348a",
        "cursor": {
          "ref": "4a7ef6fa-f204-4009-a9b1-15c87389b769",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "899a2892-72f0-4fcb-9dd2-dada33dd9666"
        },
        "item": {
          "id": "fda70226-9321-40bb-9d15-b5d73f2e348a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2304fa81-1c9f-447d-933c-1b4899de4ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8499686-cdc7-43cb-87e6-438ab464cbed",
        "cursor": {
          "ref": "e94a4be4-169b-4b06-b902-22bfc2c23eb9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ddeee6db-cc52-4fb2-bcb2-d7ce209f786b"
        },
        "item": {
          "id": "a8499686-cdc7-43cb-87e6-438ab464cbed",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "56be0a2b-26b1-4887-82d3-027cb9dc5b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3f69dd-ac52-46f3-8fc6-0663afeb9b50",
        "cursor": {
          "ref": "5e4ebebc-7f6d-46de-89e0-d78fef078ce6",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "896aa00a-7f99-4307-acd9-ccbd33122248"
        },
        "item": {
          "id": "3e3f69dd-ac52-46f3-8fc6-0663afeb9b50",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b7e203e9-6133-4ae4-8904-c5e431efb891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393bb997-08e9-406f-91b6-58a180ba9dc7",
        "cursor": {
          "ref": "8343abd3-9925-4fdf-9981-7565a239b7a4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "501826ed-d4a6-49c9-8b90-c4f51cea4868"
        },
        "item": {
          "id": "393bb997-08e9-406f-91b6-58a180ba9dc7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "88691f1d-f3df-44a1-9d4a-8fbaf3234719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b63e2b-acfc-4243-b4af-4da9e8ffa187",
        "cursor": {
          "ref": "3b19399a-f914-4488-9b4f-3fef9629497f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0115a37f-ddbd-48ff-bd5b-9b6f39244436"
        },
        "item": {
          "id": "e1b63e2b-acfc-4243-b4af-4da9e8ffa187",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a5ce387f-f8fc-477b-aa50-54e2daba4da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daea6cab-71f7-4a1c-b839-ce37b6a6c269",
        "cursor": {
          "ref": "67020409-ea9b-4798-9254-4c9e5325523f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "92f7b228-19cc-44fb-8879-af6f343ab1f7"
        },
        "item": {
          "id": "daea6cab-71f7-4a1c-b839-ce37b6a6c269",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ef8b8fb3-a493-4243-af02-9ff7f3b1374d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ec11d8-4e42-42b0-b746-a594835fc7bf",
        "cursor": {
          "ref": "7f866d05-aa58-4f7b-b6c4-fb15a7c6872a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b23a5f52-4280-450d-906c-e32c3246fb5e"
        },
        "item": {
          "id": "e2ec11d8-4e42-42b0-b746-a594835fc7bf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b6b819bf-ea8a-4d90-814a-9bb199911b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67bd218-84ca-4060-8832-104b4adbb66a",
        "cursor": {
          "ref": "1097a31d-2d7e-41d8-bc9a-8ffaf69de7ac",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "18adad46-1f25-4a38-8201-9e2909c17af3"
        },
        "item": {
          "id": "e67bd218-84ca-4060-8832-104b4adbb66a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0c3731cb-a620-42dc-8e0f-1abcd88d53e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cb44f4-49af-45f8-9c6d-83339a87b4a4",
        "cursor": {
          "ref": "83286b3e-ca0c-45ac-bd87-de28bec66d7e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dbbabe26-4544-4a87-9ee6-1c0ba1cfc2d1"
        },
        "item": {
          "id": "57cb44f4-49af-45f8-9c6d-83339a87b4a4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f379e59d-1f7b-4f96-94bf-1950117202ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f068be90-93b0-4bad-be5a-7d9884335aae",
        "cursor": {
          "ref": "577b2d3b-3290-483d-953a-827ce063edff",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "09a5f973-9de0-4edb-bbe0-f007a1d687e9"
        },
        "item": {
          "id": "f068be90-93b0-4bad-be5a-7d9884335aae",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b90033f8-1192-4f04-be72-3ae7dc9cc73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23019f11-e0b1-4142-b426-b67265ecd076",
        "cursor": {
          "ref": "95c288a6-7f35-4ef3-856f-c76826472eca",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1fb79e82-cf00-4d6b-8c2e-1799261dd973"
        },
        "item": {
          "id": "23019f11-e0b1-4142-b426-b67265ecd076",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "28da0281-aa2a-4c01-91c1-3a1d842cbe40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739245a3-74d7-42bb-9fce-470ce947d5b3",
        "cursor": {
          "ref": "13e30d8b-c9eb-412c-9083-516f4dc4dc36",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8341ecf5-1347-44cd-906e-4ba5d0f30905"
        },
        "item": {
          "id": "739245a3-74d7-42bb-9fce-470ce947d5b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f7df5478-4efe-4e5c-9191-7df241ca1a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6d37d4-cc5b-4f5f-933b-7891049a789c",
        "cursor": {
          "ref": "10749b7b-1545-42d1-9ca7-847a35db8597",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e44dc448-25bd-49ef-84b5-0cb77f5f9811"
        },
        "item": {
          "id": "cc6d37d4-cc5b-4f5f-933b-7891049a789c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "89c5df9b-553c-4ab5-9f01-e40a6dff31b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530cc7e5-065f-46f7-83c2-e2a60d8ced59",
        "cursor": {
          "ref": "e233d8a9-60ad-41f7-a50e-5404170f3183",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5c6a2d93-6598-4459-9293-0321b11de7ff"
        },
        "item": {
          "id": "530cc7e5-065f-46f7-83c2-e2a60d8ced59",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1345b525-97e5-434b-a725-882caacf1e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32849eab-1d24-4bea-bc2f-a5e110c41934",
        "cursor": {
          "ref": "573c107e-64b4-479f-87f1-e53a85ddfd03",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "81f13d73-4a1b-4605-ae2e-cc8aefff8c82"
        },
        "item": {
          "id": "32849eab-1d24-4bea-bc2f-a5e110c41934",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2e1837fb-15c0-4337-85e8-021d53c5341d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ed4111-c64e-405c-a07f-f06887854dee",
        "cursor": {
          "ref": "9f8fd526-a8b0-4c92-a99c-55b6e638e2f6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "757af09a-c100-42a1-b538-b1ecf506b936"
        },
        "item": {
          "id": "97ed4111-c64e-405c-a07f-f06887854dee",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4aca4905-4094-4c67-a12a-8b26e865c044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cade554-3676-46ef-931a-d285bbfb7f5e",
        "cursor": {
          "ref": "88aa2561-dec9-40c1-ab82-197f756190b9",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "42089180-9ebb-44a3-bd58-6643fa431b56"
        },
        "item": {
          "id": "7cade554-3676-46ef-931a-d285bbfb7f5e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "922740b6-5092-4c00-9673-0b1490eda61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4df277-7738-4551-abca-aa41c811486d",
        "cursor": {
          "ref": "61297fa5-c232-49df-8bfa-b8adf39cb447",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6d91877f-5c79-4671-92e4-67ab555f0c11"
        },
        "item": {
          "id": "bd4df277-7738-4551-abca-aa41c811486d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ded62150-2787-4b6e-93d6-a4951c7799e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ee9e36-0417-4cb3-bd89-2beacb76e4c3",
        "cursor": {
          "ref": "092e5d6f-cd33-4a67-9680-b8688f6061fb",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "65e68806-8114-432d-9d97-efbab31459d7"
        },
        "item": {
          "id": "a5ee9e36-0417-4cb3-bd89-2beacb76e4c3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "39cf2cba-3863-4e53-be2b-d2e0fadab308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb73969-1ed0-4f97-bc63-7456b242a671",
        "cursor": {
          "ref": "ce3658cc-b8bf-4c0d-b388-76874eea249d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9419e109-12d4-4928-aaa4-6843c374199b"
        },
        "item": {
          "id": "aeb73969-1ed0-4f97-bc63-7456b242a671",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aa0ef4cd-74bb-4378-a771-06006bf9ca47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783a8508-84bd-47df-bc12-508463f100b3",
        "cursor": {
          "ref": "b1128d4e-5234-4fa4-b79c-baf2c6795bf3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "86d70707-7f93-442e-b5af-dfdbd96094b2"
        },
        "item": {
          "id": "783a8508-84bd-47df-bc12-508463f100b3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "872f6e2c-01e5-4b31-b13e-42a82eef88d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23b280c-83e5-4d57-b44c-e2429ea53eb6",
        "cursor": {
          "ref": "2a42954e-3264-45b4-981f-ddea12446c10",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dbde88ca-5447-49a6-8861-85d0ce28565b"
        },
        "item": {
          "id": "b23b280c-83e5-4d57-b44c-e2429ea53eb6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "df6d1ee9-1971-426e-bffa-27122d82ca7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734a6055-972f-4af4-aff7-c756abfea958",
        "cursor": {
          "ref": "ce3eee75-12ad-4702-aef7-65b358d72247",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "104e3e35-22f5-4b6e-9d8d-a5c5855ea143"
        },
        "item": {
          "id": "734a6055-972f-4af4-aff7-c756abfea958",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "57a69913-81ec-4cf8-a1f1-36244799b6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900b5d89-112a-4ff1-8aab-8d178341684e",
        "cursor": {
          "ref": "953ab640-6a63-4f49-8a98-1fc3a3954605",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3a2c6ebd-008d-49c8-9e3b-ae863cc2c634"
        },
        "item": {
          "id": "900b5d89-112a-4ff1-8aab-8d178341684e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dcbe0288-5af7-4c91-9ba3-fd8cf26f62d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8092bff6-bade-4f05-b614-0abadebf8170",
        "cursor": {
          "ref": "8d875712-db17-4fbc-a437-a6b0baa47adf",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ffeb64b7-e0fa-4a33-9248-f3d8db85df4e"
        },
        "item": {
          "id": "8092bff6-bade-4f05-b614-0abadebf8170",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7c61698f-6cce-4e7b-bbb0-0977ebdcf54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e249d47-3c40-4d29-9190-b7bdb05aa5f4",
        "cursor": {
          "ref": "361cf9a6-2dd2-4390-a032-b4bf313063ec",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fcc5a215-3be8-478e-ae4b-19a4689a66c8"
        },
        "item": {
          "id": "1e249d47-3c40-4d29-9190-b7bdb05aa5f4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fb1e5e61-8d95-420e-9e49-cfc316c52b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef980794-ee63-4221-9aa5-21982a0290c4",
        "cursor": {
          "ref": "de32c39a-823e-4f80-8d73-4c6a2554160f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2c7c4522-7683-4299-ad0f-0a1cee8546af"
        },
        "item": {
          "id": "ef980794-ee63-4221-9aa5-21982a0290c4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "42e75d6a-8dcf-48b2-9d99-06dbed5e3438",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59b31a5-1813-4ec4-8ac0-16ed9ce80952",
        "cursor": {
          "ref": "2644731c-f633-4aaa-a282-97dccab9a92d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b9c47b11-564e-4944-ae6c-91a04d88be2e"
        },
        "item": {
          "id": "b59b31a5-1813-4ec4-8ac0-16ed9ce80952",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f45d61a5-5d3a-417b-9636-bdde24ff1fc9",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1badad3-6643-4ef4-bff9-23f4675c1c2c",
        "cursor": {
          "ref": "1e16c20e-b994-4f13-8ceb-ca659cc1c1ee",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ae425cde-62ea-40f6-9e00-2419a1a748a4"
        },
        "item": {
          "id": "d1badad3-6643-4ef4-bff9-23f4675c1c2c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "46f8ecae-ffd1-4995-b15b-bff81b3fd3e1",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2fbb34-821b-4845-99bb-4384d72cb9f0",
        "cursor": {
          "ref": "e89839fc-c07c-4158-93f0-d8fb203f511b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5536b6a5-94e3-4fdb-9851-9bbd80d2f50c"
        },
        "item": {
          "id": "cb2fbb34-821b-4845-99bb-4384d72cb9f0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "efde0f5d-9bda-4332-907d-9a4cd992f91e",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9f3ebc-9c2c-4e6a-bfb9-d6de9b16ba2a",
        "cursor": {
          "ref": "9ae4ed42-4705-47d2-80cb-993712551dfa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "24cbb5a4-6328-43fe-9c30-6fde692693af"
        },
        "item": {
          "id": "ed9f3ebc-9c2c-4e6a-bfb9-d6de9b16ba2a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "931bed10-eb07-4c87-a422-6b31dbb153c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9f3ebc-9c2c-4e6a-bfb9-d6de9b16ba2a",
        "cursor": {
          "ref": "9ae4ed42-4705-47d2-80cb-993712551dfa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "24cbb5a4-6328-43fe-9c30-6fde692693af"
        },
        "item": {
          "id": "ed9f3ebc-9c2c-4e6a-bfb9-d6de9b16ba2a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "931bed10-eb07-4c87-a422-6b31dbb153c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d40ea68-f46f-405a-840f-438838a4c4b6",
        "cursor": {
          "ref": "df344d3f-0d8c-47eb-bc11-4044c6e9a589",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1db633b8-9737-4323-bda9-997746cdbb83"
        },
        "item": {
          "id": "4d40ea68-f46f-405a-840f-438838a4c4b6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ec204e16-d8a1-4137-bdae-590f72c4a016",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a234abb4-eb2f-40be-900f-b6f884becd27",
        "cursor": {
          "ref": "3967729f-c210-4455-a18a-42ad323d2cfb",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4e352d34-dc39-41b7-8e04-fe0cb2190b63"
        },
        "item": {
          "id": "a234abb4-eb2f-40be-900f-b6f884becd27",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e80692a9-af95-43bc-a806-070318c10857",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}