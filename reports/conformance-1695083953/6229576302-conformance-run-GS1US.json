{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "17e0746b-1c8e-4ef8-8030-945bf3e21fa7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4c19c1c4-cb4b-4c55-bc0e-dce59f47312b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81546c21-aa46-4a0a-8084-3c5275d74010",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4f963683-dd2a-4a26-b65a-f88ec222ce62"
                }
              }
            ]
          },
          {
            "id": "3f8bffa0-caaf-4ccb-9fa9-2fe07f5de98a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "727ef323-920d-4cbd-9c6e-56505c2b14d4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aad90836-afe7-4c5c-a320-ae6a2f9bc346"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7fffd6cd-e4d7-49db-9ab0-9565f41ad446",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "68628224-100c-479a-8c45-f8cf443ce0d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51407bbb-cac9-4eba-b3b4-c6b26390844f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b85d31d-e3ca-4bee-b0ae-188b4eb4e3b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0832d1d3-0831-49d9-bf14-1cc5d49a8e0c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "255e2486-3655-42eb-8de2-6774b9e550c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef09e88c-36ce-4969-be06-80ca05fc146c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8cd1af3a-4130-4273-861b-480fe7e26f13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fcc1d3e9-8a84-400e-9562-30aabcdf9b83"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2517c956-f1a6-476a-8335-c3488742a33b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b2adc61e-c278-426d-82bc-f620c61896e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c38b2c8d-42a5-44bc-898b-752068c77eca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd2d9795-ba09-4342-bcb1-9a27b611e859"
            }
          }
        ]
      },
      {
        "id": "360b1e03-a93c-449c-9f64-d208fcd7557f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cea48f73-4472-4963-a16c-a5ea4dbd0543",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a69f0867-90ea-43cd-89b8-a11d4c871ad7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3843b9d3-4b56-4609-9d8b-55d85075ea99",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80c24ca-a92f-4103-b721-6208e52992eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d9ff6df-2e01-4385-a446-5b12a84864ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c9117a-6795-4126-be5a-7f8b1dcf7600",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a535984b-d682-43fe-b8e8-b6297addb892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f51bdbc-b64d-44ed-b6e5-eb9de607eed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7eb21ec-58c2-432d-81c8-119508ccb940",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d94359-d08e-4beb-952f-98024a131d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be7bdb32-e536-488c-b57b-7b804bb5ad87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac04df9a-6802-45f5-9fd7-0e159f66e124",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "473608ab-02eb-4098-8149-ad676c0c609c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6b89bb-f645-4b25-aafe-b16516d47e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe20c813-376b-421f-a799-6776301735a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf01ae2-3823-4e66-99b7-879be7cde641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442494e4-f76f-4a0e-ae8c-760c267eda62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac482ea0-83df-446f-83fe-d20adb2df71a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ddc37f7d-dfc8-4cfe-af17-c2d493f61993",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aa9391f-e165-488a-8d65-201625c4e81d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "89488c88-45ad-4d5b-9f1b-c3e7a2b4e543"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e2ae56f-67f0-4ed8-a26e-469c234bb62f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6fdbff96-dd9e-4c12-a5d4-4aa6d092798f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6950e810-6c34-42cc-84ac-21f327007525",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a1db6a9-ec0b-4899-9ca7-7c2d1935157d"
            }
          }
        ]
      },
      {
        "id": "a43fa0c5-1832-4c02-b7ef-562a8a88c2ab",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53527f9b-3a02-4ba6-981e-f47f93b9aa37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12d8ed5a-f7a4-4e64-a336-b7d5a8531b65",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3830ad2a-512c-466e-9792-e11fd728bae1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224beaf4-be52-46f7-83b2-251512f174a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31de8a59-4159-4a00-9cbe-a4ac3b520829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f98bc0-3dd1-46e1-81ee-11ea636aed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fd333f5-1e00-4c0a-a1d4-79a83e6bd881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8bc246-a251-4a6c-8108-1b89516d5718",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552ea45f-f901-40a3-ba21-b4d7d65e5fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690f64d2-37e6-4d85-83b3-f279eaab4b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84936eb-d83f-460b-a6c4-8929c046c4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "029a8b0d-f43d-4346-82ff-8911e12e3fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c8c667-8099-4424-9e2f-d373e09cea94",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe0d4df-cf60-4b5c-b4b7-20566fc0ff1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7248acd7-33fc-4bc7-8a67-1292b323bb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1238b750-c47d-4344-bcd0-2121387cf17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc6434e7-37a9-4ea2-b614-52f602794c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50505483-67b4-4531-b28a-d5d47236930a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd36e26a-fbac-4c8e-bcdf-67992d98c18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083888c9-8f4b-4d9d-b9cb-15acd3631efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87ecbde-33da-4410-8c9a-cac95d26efc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bf1e5d4-1d73-48a6-a82a-14d01b6121b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439f278f-7cd8-46bf-86bb-483dcdd213ea",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988dc1e2-1019-41b8-a52d-852c50456b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0926db-f7a1-47d4-ad74-19ae1312ce13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b72bef-da8c-43a7-9cb2-b921ecafc9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6916f079-4403-4e22-be84-2e6d154eaa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81074510-58e7-4024-8bb3-1547b9b0105f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727ab0a2-c2e3-4925-b184-10cedb177390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d41f6e0-199c-428f-b5cb-17bfaab49685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0674831a-be2a-430a-8179-5285ce4f702b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "332be551-313f-4e7e-878c-c264de75a79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bde64ad-b9ef-4752-be6a-ab0718b7b3cc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2498986-5a32-4f35-81aa-a9b29c956f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc2ebb1-e2fe-44ae-b9f4-73ed55a7a5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5eb0b3-5cfc-43d7-9f8c-fc2569853fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e25aee5c-a4c4-4382-80ff-c423baf3d6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b174ec1-d5da-4930-b2c5-e4c800e1383c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6997491-e6cc-4d03-9658-30e2b311b62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012cdaed-b927-4814-8200-e1f4a9820687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2f9425-d5de-4152-83a2-9d3678e110e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c201840-4e23-4a73-ac7f-00d48a28bb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ff677-f2c2-4bca-a2e8-a00b67544093",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5fa54c-7da5-4ff6-9263-eb20a909f9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c540dd6-1fe5-48f4-a8ce-9ab78b8ff121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb65d10-4ee8-47bb-9981-fb23661300dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1236b5c6-39fd-482d-840b-d3e3e2f82225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9688a3f-e09e-4729-a79d-6bbcbfe192a5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c33f3d-4484-48f8-b7cd-0b0cd9936c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c73674c-a4f2-4230-8cea-9045b38bc2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4875cf31-8229-4c5a-9a28-1de4da9fc864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba5a2879-83c6-46ee-883f-22962c4aaf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df766a0-e515-4a4c-9ef6-1287445f32a0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1decdf89-5ea4-403d-9a9e-ff0fe76a2c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3181f5-f339-4e50-b692-902c67de623a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6fc492-dcb6-4032-bed2-e7a0145cbb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e032bbe-c43f-4d51-a22d-18d9f90448c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e55657-c368-4ff3-9c03-9de695e4d09d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5771bf29-4f2f-44cc-949a-d866ad50ecb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d23212b-28c4-45a4-97aa-22f57fccc89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed879083-4426-494b-a72f-378b954171a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcbc8dc7-5c51-4f46-9391-6c4df48806e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5078d51-5162-427d-bc75-dbfc89b7fca1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a1fad-e948-42ff-b41a-3821b38bcc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4dee17-8e4c-493c-b235-628ac897423d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894e95ba-4ba4-4c39-8b89-f780bcbe1d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aacdd299-134b-4700-8549-ecfa675b7b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301826d7-aabf-4e65-acef-0b7c6f9d51f7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bfe4fb-5ac0-4c48-8dbf-bd5a9a9c4e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e21b70-8401-4c28-86ff-9d2e0e33e900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838a5185-3284-424c-92d9-c079da57e1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45332acc-937d-489b-8da7-4dfadd55acc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f202a5-4e29-47bb-b622-9f28ad8d5a76",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3990985-bab6-4143-9b1b-c9811ffd1634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5027d8-4947-45c5-b196-9211eaf2056e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe7249b-b038-4705-bf4f-84cfbdd1af38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1b3b299-979e-4a6a-b3db-29baea4e6ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff0869f-8430-45a0-af4f-733e9fa55beb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0b6a5c-91ce-4e71-92de-ef33ffa1e811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc8038c-7ccf-4170-9b1b-a10c99b62b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feec4d83-0d44-41e2-a2c1-aac5bc28b94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b420d8c9-6888-43d9-95b9-af9c1cba8528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5403eb3c-ba29-4f9b-867a-a3236274d74c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa973397-e85b-4340-ab59-4eb57ec87e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b975214-c0f2-45ef-a5ed-15b1f4a3f7ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6758584-0cbf-4d58-bf7c-d5ca791b5af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed6e889f-4405-44be-8813-731a05be96dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91aa5509-bcb5-41e0-a48a-9b1f7742cb27",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fb3e42-0076-4cd1-b0ec-81651bc3d220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673f38d8-1ff3-47ff-a25e-a2d17e8b15fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e962adcc-056e-4cfd-a6b2-9d5dc3af51dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2114d31-d867-48de-bb98-0ffff226596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd6b851-9283-4948-af4d-fd0b07f3c456",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680174d1-0699-4c72-8687-3b710d7d1356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a7770c-be2a-4927-8b7f-ab12a9a1c47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f70dfa5-b429-462a-96ab-43a1df769bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9e6668-948a-4048-93a9-212f3a72f44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e141c2e-e99e-495b-93c5-de4480bb1ba0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f789b33-1768-4a82-a04e-2bdbf35d2500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0d5d9d-5fba-4ede-85c9-c54c846650f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2980e460-26fa-4247-b292-d52bfc10bb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c66f1c-c1b4-43cd-82d9-b199e4da0949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a143fd4d-c990-417a-a8ab-239cc49f0e04",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd44dbb-420d-4a13-8c18-cde88c196ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51304020-ef29-4908-a99b-8b762218aec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3653aa3-b807-4ef0-89c4-dc65ef628198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bc7b13-d766-4794-95d5-cd3701a63903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f62180-a425-4111-8379-dd59ee438260",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae180cc5-9b68-4dbe-834a-08c1c81881ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95245fc8-c2ea-4ed0-874b-09389c53fd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd43cab-5ded-4156-b42a-500a7782ee9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3da444-ff97-42bc-9875-2e0b8fe0075e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7c18eb-1c6e-468d-b6de-be283bc0557c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65cdbf8-a619-4d36-8eec-f9c7ddef4c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63439c8d-51d1-4f63-b06e-e9bf13ba9181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1d5213-e230-4e12-8b60-51e597660a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2662d1c-e198-4990-8157-92402414a4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10733dbb-fb60-4265-93c0-c08a134eac59",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2bae59-9e0a-4cbf-a700-fb2afa1e5f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac3820d-01c2-485e-8608-9ea1a0f65a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff89506-fef9-4108-9836-12f0acef0ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e660352e-48b4-43f1-af3a-eb52493a9cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b358c7ac-1932-4195-ab1b-3f17e2d54b23",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd93d50a-a44c-4d39-9cdc-0edce5a22dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211c3115-5ec4-4b26-9ad1-c52e7d94e7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9773d9-c0fa-4bdb-90bc-fdf403fcc962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1cb3328-62d8-40e1-8ad3-c4386b8a72da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc41349c-b240-4ff4-9395-64cbbb7002e5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37550f88-7e6e-48fb-91c6-5d6411119e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ba56f6-bc98-4564-8daf-ec3924072a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0c5f94-3c50-42cd-8807-9ba0ffe5cea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "262d9e02-0041-4a62-b365-2190542d8574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdea90a7-9c50-4203-84dd-309a737d44f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059db813-c96d-4dea-a88e-70f4819270b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6201a8-f622-4cf1-9f4e-e7ea5ecac30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea75f3c2-6c58-4bed-9d13-7fc5ff792ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd8c8fb-28bb-4f0c-8522-2e1d58067dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0bebe7-9b17-4326-b78a-82a63d778797",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c88d38a-8e9a-49df-b11a-5f919b09dc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d2f713-8212-4ac2-9270-e786369cc6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9796a864-3204-4096-b469-a7372aab65b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c94d71-e6b3-4099-ba18-9d2cf6f8d8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f98d93-c674-456c-94fa-ad06eed244a0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ed52db-c8ca-4625-89fc-4e07dd14fe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e46fb55-1d84-4ecf-9aff-65f05d0b3f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b5af73-84b3-4027-9b89-59c206481e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ee0781-b5ac-4545-945e-771136307b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6ee5da-8c9d-4105-a3ce-b0140ea23c5f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aaece1-761d-436e-9cf6-6584e064fcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4928688-bf7d-4239-b6a4-e964f580d04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b3130b-337f-4bd7-ba12-8fcbf85f40f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc7943e-58bb-49d0-adfe-3f7e71305e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74045f03-c5d9-4d30-89c5-d3952267d45a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8695ab-c71f-459d-9cf8-4231e7459105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb0092f-3190-4387-8ef1-581383dce338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa04a89-e65a-45de-bbdc-50ed168b882e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42b24acd-832a-46d7-84ec-bd99be8d5f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c7ef15-6578-4b8b-a120-f0ab7083bdc7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44876b4f-76b0-4dfa-b54d-33ef81c8dbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c920b2cc-7821-499d-94ca-a7b7096ca8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cbf7a8-3641-4fcd-b2df-2c57e313d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "601bb005-92ce-459e-84a7-41c6e6f19c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8965d863-564c-44d4-9f6e-d9994909b67d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c73892-5ff3-477e-bdef-f7f0619e5252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87539233-103b-4d67-b545-574ccf451b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1359bc24-98d8-49d9-b05c-8474ce311fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d710d0e0-6fb0-4068-8cb4-7e59468a58a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3edb980-ba39-48ce-aabd-64b2fe8a2b95",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0b9140-041e-4458-9dd7-7b0605a72061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c999ef32-1692-493c-b6e6-521e07c471bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16641f09-a6c9-454a-a832-d8b3df1d0aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "306d1c98-db10-49a1-9c18-b617540ff9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b264c0-6c80-4ff7-9dfb-d6feee45d011",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd7aa59-8229-4c31-9011-42403eb12e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc589292-7c60-406d-a46d-8b0a9a4f3c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00fd11d-b3db-412f-ad0f-c4f1ff7a3a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6107263d-caf3-4de4-a9f1-68a7d7861a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d7562e-38f8-4b83-9fe1-94270ca14d7c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d4bd95-c6a2-4143-961f-f6685cc6ddbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8833b32a-445b-4faf-8b76-00d1393001e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79cf01f-adf2-4d70-962e-cd9ff65e2d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4295b230-f1cc-4a44-a155-748c6d2d408e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fe19cd-d2ce-46c5-a8b9-7e423e9ce69d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc659c4-dc87-4be9-918a-1131250affce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678bc1fe-106d-413f-a28c-af500144f207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e447a718-ac7a-46b8-9b38-8cc4e4f61318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b173d83f-6583-429a-a3b6-d4948411b835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea2a010-a712-443e-bcf0-9d233da8ee9b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530cad76-7341-49c4-ae0f-4e3b8e97927e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28e05c0-a205-41c6-ae33-7c00960c0aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c09705d-6007-49e6-bcad-69037d336c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff3ed52-d62f-4f33-87c4-2c4203885eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7695d177-4dc7-4f44-a31b-56dee599ec09",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28375a67-6f2e-450f-b206-a05c6f5251b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c2dce3-3f76-4d66-9d97-6b73a841d9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df63870c-9e2b-41e1-abf8-3e19b3516dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ea4b5f-b8fd-48e2-b864-30ce11569836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2040be-fe6a-483c-8bbf-434243f3db04",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fd9f16-3e26-4fe5-94f0-7efe78540f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6749f24f-8ea2-4386-b372-fd9037d18537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1b9a06-efeb-4fbd-8a91-51d94322d920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2f2c27-dc21-48f3-8d00-7a6c9b018240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd80ca48-2e18-4e0d-a0d5-c42ada9df7f9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2385d7-e2e2-499b-b2f7-34c676fd08c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01e9cf8-dde5-4c56-8fec-9df9477dcdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cbcdc4-1c85-4602-8096-8aeac4eba5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc1e0a6-6b20-4685-a52c-c767028eec85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0770b465-b253-4dc1-9dd6-012b54c1089c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eee2f8-eee0-40c7-819a-d4882b551efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3934b3-c5bc-4fb5-8468-16b7c6132c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b742af47-c9f8-434d-b099-21b9f4c1988e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6270ea8d-10ab-45b9-8809-9cedc032921d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247b9e71-52df-4e64-8a84-5709989074ef",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8957b9-d704-459e-bd19-dd1e8143259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d76787e-8ab8-4f35-82f8-5348f0160cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8952c2b8-675a-45a3-9988-1aa59d054c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "852f502e-2774-4ba4-b4c3-a4e37d7622bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398b0d07-7ed1-4932-a078-55a1fd427491",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d728fa-80ed-4ac6-98d3-9c23cc483a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fd8c54-81b7-4819-822f-c17c0fe804c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2decc6-5d0e-433f-98a6-3bb1070fe6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce564e2-269f-4d06-9ac5-1101f342cb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437d783b-6e21-4285-a24f-b2c1148b48e8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d0e57a-f7d0-449c-802d-f98ff6bef832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd359ce-f18d-48d5-956d-bae54628eb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eed6de0-dc86-474f-a248-695500a69e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8de0a399-714f-423c-b393-6f666fab622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254a734d-bf27-424d-a2a4-a9b967f829d4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37acbd0-1dd6-4f1d-8786-2f80b904f1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393022c1-e3bf-446f-8af4-d87acd187bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1279510e-4557-4cce-97c5-6a64cb103f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d04f0c-42b1-4a95-bbaf-96b43bafa3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1a7550-814c-4521-a99c-51a55a076486",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca52c59-d700-4d50-8e52-ba94f00c32dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41523597-1b45-4a8b-8ba1-8bd5694c6bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7843c21-2a11-4d3b-8138-f5f11e2aa767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afabde31-2148-42e2-802a-bb202e312043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b5efe6-006f-4eef-8ac2-23f15aa8430f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ae2e9d-1366-46d7-b2b4-1d33195cd401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43eb810e-a746-42c4-aade-bb104863a54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1b8cee-ad31-4a3b-befa-5aa3d7823c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad3f79-bc71-447a-8a06-d7fb269f5808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052b7ea9-2bcd-4e98-a745-6e864d1b988a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c02796e-e97f-4ec2-852c-709688f7120e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07e8e53-ed76-4d63-807f-587d054326b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c834b3a0-0372-49a2-bb12-e45e47dd36dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "264122bb-cda3-48b7-8890-212a1e275e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660ddb9d-6044-44fc-b59d-247c3ee7c0c9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3e96f2-6c2a-4191-bea3-d63e8b83e37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8f6489-9b7d-4f0b-a106-6990eca035d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3613617-13ed-4115-915e-a5814e962d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e07d917-0fb2-4dde-bb90-50bf621a1f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e761f7-9b3b-4472-a0ae-386a15f282e4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a91ee4-19dd-4fbb-af60-2375b65ace72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be955d36-6b2c-4d17-b028-6261012a1a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59acf1d1-18cc-4df6-ade7-e90200b04b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49aaf28-e391-4f3e-b36b-95693c10fc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88942812-61f4-4882-932f-cd37216df98a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8ba4ab-e24c-4be7-916d-f8764863cc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d339c0-35ac-4968-bc20-a50984aea8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12937c1f-d22d-445e-bcc8-434fd9cd144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aafcc379-4793-41d2-8a88-f0c01c784635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b925f3-81d7-4e7d-a020-94c054ba9d75",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b6ad3b-47ff-4ecf-9fad-f611a77241f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08a9f21-5dd0-4e63-8266-bd3b69330b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516a2792-2093-4ae4-9809-31fe4dc4b357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37077f7b-4343-4283-8fc4-6984a8034aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5989a02b-7ec1-43c9-880a-421b054d6fab",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5113a6-f5cd-41a3-9653-c6ac49ed8e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230f21f5-cd17-432d-8c75-597759965c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3888cb2e-63ad-49ba-bcc6-6ce4b0935721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afe53439-322f-4187-940e-854b18d68286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89374566-9dfd-4390-8257-dbdadd57a501",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fcd510-523e-43a3-98b3-dc9cc551911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806e8333-35b3-4283-96f9-2647c03ce4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ec8c42-443e-4dc5-b7ef-b2cf6364ee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd16188-4f8c-4a7e-90d2-1b5cc64aa4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f98fe6-9c07-4d11-a643-aac5607116f7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e84b23b-d757-45e4-abaf-45e84673f6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92b21d4-8a46-49d5-aa27-f061559a0d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ec4d14-69b7-4950-8440-baaea97b789f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa0697f-8c50-46fa-ad88-968c23be3d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbea7eb9-64f7-4801-9a60-10c571e04c99",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed73de97-c9cd-4adb-b069-cadada58bd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5427d3-e188-4f71-931f-e40a2e55a489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e146e21a-6c9f-45f2-9999-775ebf7045de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77559a04-aab2-4315-b5ac-050f2151f8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc89a3c-9cac-449d-ba16-c512123c9734",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94902e4d-af26-4d5c-b223-b9003db72ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09738db5-fdcf-4186-a9d7-e292ffc026e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac7a294-bb92-41dc-ae23-462fb496e960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b751c63-5287-4c34-b843-639f224415c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27026096-8ede-4694-853f-39f1d002f14b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e2bfd8-066c-46a0-8def-ce49697578db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633a3aa5-3756-47b6-80cc-839ffebd734e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e919c6dd-0814-46ec-a26e-35376dff671c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46cc920d-63bd-4259-a8fe-0a83365608eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0c17ba-7a1f-4bf7-b736-7db66fad14ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08197eb9-2c62-444c-b0b3-3b387ce89ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d426395-70ee-40d9-83ff-621b9c8cdf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6037eb24-6c50-4395-ae92-c60846a43ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "17cde896-2d0f-401d-9712-ffbc0a763f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5b1c02-526f-47a5-adc4-bb3b8a9c5b43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84070e5-904a-4005-be3f-09cc121f5484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04014a2-e5d1-4096-995a-43de29d2785c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62185b2f-bf8a-4bcb-bdd0-8debce42dce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73a19a9-62ab-4294-b516-03f404c7bf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509acb77-5574-4f04-8760-248c4572a446",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795ef215-da44-44c9-ad97-02e61590bbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5599e9-b5ff-46cb-b32e-423e4937afe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c26aa9-e538-429d-b347-4391f7b00550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf64473-44f7-4f6d-8025-9c58d386e837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a26063c-d051-4be3-8441-1626c553c603",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de8f27f-e409-4385-9a5a-21d56aaf34ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0728bcf9-0d2f-4159-8401-a9154769db11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e780553-dfed-46a9-9372-8332a6891868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3c3cf2-4bd8-4ec5-8f97-9bb3dee7946e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654e8d1a-3ba6-4f21-90f7-d4d30e2c5bc1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778a9384-9ef8-4d56-b721-ed803838584a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c91bd8-4515-431d-83b7-a77cc8131c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06162088-bb15-43fa-be4a-5ca7555221ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fca8a78b-5a83-4db6-878b-cb6d6bac143a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dc981c-fb65-4770-adda-821aec25fa2b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c377a22-61e6-41bc-9b54-cb29d2544833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6488d2d0-1a4d-4c44-9dbc-265160a671df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6c5307-27e0-4fa5-87f1-99d7a29d7962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee173068-2cfc-481f-b1f0-41096d2e82b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ad9816-27fc-4620-9d0b-b520f23eff25",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd37153-1362-4c46-99c4-8539dd6bbaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f48123b-195b-410b-81d6-57b6266137f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f662d696-6c5f-4516-b6b9-8c1265edfa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bbe363-505c-4be5-9dda-1722d51387bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1f7e55-74a7-402d-b292-121b8b19da70",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ba6565-9105-45e5-a693-7cc5cc6eed52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7974bb74-3068-4dce-841a-b372624b559e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f603500-4114-4d03-9722-4eb68521f1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25cb5eaa-03ce-4841-8bed-18507cc8f28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d079cb7a-654a-4ffd-a396-c0ed6888f24f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da61e3a-e2ae-4085-a618-312d3ef37083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bf11fa-5536-429c-8b0c-40d02e17bc07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87eef60f-2acd-4298-b3c9-b46b1cd4a04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d359aeb-edbb-45c6-8b4a-7735557789b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e63dee-fa34-40ab-8b60-94f88efd60a5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e80af1-eda6-4ffe-a685-c245d3aac95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b3d3dc-78b2-42b3-8ca1-6553c2d22192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd0de54-4ef9-4df6-8489-4cdf898b0e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10be123e-cdac-4616-bded-6515077a09ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613a68c0-538a-415c-a60e-f12fb86de0b1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60849fb3-00b4-4f6f-8914-8d68caf85b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ca9a8f-0b01-4693-be12-cf6c06d34c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529d79fa-fe96-468d-88ba-332f4d0da288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6585b517-e2c1-4646-bd5a-72507b905f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ea0d4d-3e5a-4676-8cca-12544ec67c49",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab581d2-8376-48f1-a213-418b3842900b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b1e40e-00c3-497c-8802-f6f9bbe64895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a07ae1-5cfa-4612-9d98-f7603502ab27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e26ef37-0335-4098-a4a3-be9416fb992d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6d56c8-d5c6-43aa-8304-fc4d81e8d5c4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29a87e5-3a2f-4562-bbec-ed27c01a8dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a4eb0d-bbda-4551-a0fb-a294de336c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20c4be6-c180-4629-9766-05c0986fcb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "056e5e78-4948-4c34-afeb-a60417e863db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db84453-0f7b-4559-b2b0-02245b6c13de",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ef7cb6-8c28-4161-85ed-6c4d03b0c081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37721ee7-dd48-4cc6-9555-5103988daa0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe04a2e-e2e0-462f-aef0-e50fb9d903e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "485bf26e-e3f2-4e0c-aca3-b26b0fe3101e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ac8765-e692-4ce3-bac3-825819254f5b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af381944-409b-4d49-abea-f039b61adb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58067fbb-9944-45a6-8ade-16c7a6218141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6560ba-91b5-4ffa-af53-af3c7e3d567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf02b2a-9cc6-4183-beb0-b67093902c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c46053b-7d26-46bc-947a-2a15607c96af",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d724af7-075f-4797-bca1-6f4afff48e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c483c57f-64d8-4ee0-8a5d-6687f97e374c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15acc775-37cf-4147-9ecf-cd09a3c3c58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8fd085-be91-4c70-8546-cfc653e59c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500e5ee3-9ab1-4a34-b239-f7102ff20eab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63405753-c634-43c1-8c98-d354954844d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7895813-13d6-4dd0-b17a-82778b8e886b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea07652-236d-4c92-a243-820e99e5e3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0f3c8a-377e-4c8c-8983-541106dc5b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0686aca-66a8-4942-9be7-af497ce8d4ae",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13213bd3-557f-4f6a-8683-6b1a77596258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd442f8-4140-499d-b373-2e7402cba75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41369143-9d6f-45fa-9360-2e8cdf4ec1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d00b8f5e-1c56-4dbf-9d07-ed42de66706c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7059bd46-8c12-4e9e-a6d4-5b911478f82a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1ee5cf-32ea-402f-860f-2d6c13a8dc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e896b7-0cf1-43ee-9d79-101e5b584567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910cc93d-5c48-4c47-9165-c3c79c131539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56027b6d-237e-447b-8822-d5626ea0d329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119d42b4-cccf-492a-9f86-3bb2325dc9bd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e86da13-f8b8-4024-ac3e-6bd10ae3d7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7f6856-7548-4ec3-a2eb-052ff4614089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5658d57-bbf8-4fb5-bb2b-69f720eb6c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7924c33c-66d7-4603-a0c8-19115c2c3b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adcad96-00a1-4257-8e2f-378efae66b81",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c47972-a4ff-4b43-bc4a-3720fe395670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59546612-9e6a-4644-ada1-4ed2763609d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81f75d5-9b32-4d02-a404-ba9fe80b1501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20b0f281-4a99-496a-af0e-eb0e1de06db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494ef289-992a-4d11-bca0-3e7370eb1119",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9dee6f-f565-441b-8998-9216ce2abe1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7698e78e-ea5f-4d57-9291-6cc9f3f60d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c07e57-9d5f-45f3-8c6f-edd22c1eaa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea924d29-53d2-4106-9946-63c73e5265cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3557c88-6845-4366-bdfb-4eea32e8340d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfef7ea-c50e-4457-a011-5dfbc33f7f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50799a00-569a-4c4e-b5ed-a85a7d4f4f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0781129b-f817-4b8a-b0e0-079a078f3b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0568612b-0c33-4574-888a-26e90d1f3be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147d497f-1fbc-4cd4-be33-6506960ebd9c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a915bc-5451-404c-a043-7ec1bcc6ed66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c17957-67bf-4223-a720-965dde4451be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea15da1-35a1-414d-9985-3be9f3c14962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4337c14-7392-4503-a898-c51e237d0152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3398f08d-c4f2-4059-9ecf-18d83fb69e16",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b81c97-2a3e-4ab0-b2b4-664e3cbe4613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48ad105-181d-4255-a5eb-86b6ed3dbb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec7e496-602c-4ff9-8e34-550b19bc4c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "835864e1-1492-4669-8dab-cb1140fb4331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615bc79d-b816-457a-b289-9b2d39efe968",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19eab24-c554-43f3-ad7e-ed7b5c8a131d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee691b9-8f55-48a6-a8b8-aa4b78e84da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347e8152-5d20-43d6-9694-cd1d8c5f180a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcd7139-4eea-4651-99e9-0b89b87bdd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c123575a-ffad-4bcd-b6cf-184fd13b8fb6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7505f7-4375-40e9-803b-797a5e6a6acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04541fcc-dfb6-403d-bbf0-8bc281bd53f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede2fb7b-51f6-4fbf-89c1-7d08350ca208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b14b2ef-cd96-43ab-9e4f-e7cc3645f9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0534a426-7fd2-4bfc-adfd-ef294766952f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0192ae4-8e99-4251-95b0-c216da18c64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5c326d-bc64-4c9e-b010-c207d08d1428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff6aae1-d15b-427b-b688-3f35b7b5d51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3285dc3c-7dda-4ef5-b758-26889d279151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c774b69-f23d-415a-8f4a-755eee824625",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b0ec27-b13a-456a-8912-23ed9e2a6a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c59d8e9-6c29-4cfe-a53d-f511741f071a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459a9958-a0e1-47c5-a175-af8ebba3cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a54eff-dade-4ef7-8890-65c48439b172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85b855a-b798-4fc9-8282-adb64b761e79",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f09f3de-40ca-4da4-b523-5887ffd84947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b9779f-c8f2-4bc6-8fc7-1b472fbf5eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37aa760-f3ba-484e-8090-cdeec26ed454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f707b55-5444-4bc9-8971-f878f6bff7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ce1b12-ff09-4c1f-bca3-28de383dc817",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c125b4-c354-4117-bcc0-2cda1da48382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96415603-d563-4d5a-b980-0275e0825b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174328d4-99c0-4289-b03c-76f7cbde0360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3e9c3d-fef4-449c-b132-bf6a041c31ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8797f3a0-bb1e-4ed2-81d6-e3e17945a413",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14889e9-f8e3-4c2f-8cd0-8a2be3b53cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572c4361-6869-4986-8174-02f68de5ce21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c8e527-0140-41e8-87da-4f1d085dc7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6a0301-6249-4cc0-a2b8-181cdf8accdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91d9eb0-46a8-4883-ab11-bdec0d57e405",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2070481-2d05-4322-9bad-d3245ddcd8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c2b8bf6f-7f2d-457c-a8c2-f4b5d72af78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73df1544-ec51-4cb6-a8e3-e0055470ba64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc30893-288f-4129-ad44-e7382d3b6727"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e592c90-3fe3-4ca3-900a-92cbc7c246d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86f4fede-b805-4c44-a070-1e2e52e7f178",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2a8bca-b0b1-4cc1-b4c4-979d691f9649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78206505-0b85-4ef6-b874-676bc9e9ac4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc80580a-bc12-4a10-9914-b311be60782b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f2555a2-50eb-4a1d-96ce-4a6a82311070"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c365b453-be29-4136-ac80-340f192804e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e68d6ff-f6b1-4269-a787-f364a75e97d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6359757c-292a-4d28-9876-f04270711258",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cedb9160-6a1c-4413-b6a4-a435ac9c1639"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18bfbbc9-2726-422d-a663-adf00ab91c60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a13e718e-a206-4d7d-b589-8b02b3906b46"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc2511e8-db4e-43de-b3da-e297e201138a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8755a5ca-8b7f-4f91-ba52-2d1e3ffdbf74"
                }
              }
            ]
          },
          {
            "id": "36dc3081-caf1-4c19-9710-cc803d6e0586",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa365a69-5d7a-4130-af34-fa32cf127590",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef0c8314-a5fe-4c62-b9a8-61950a2d8be3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69a3f5e8-0188-4223-ab59-362a13a20517"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f912a67-1ec0-415a-984e-0b7dae890219",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df34afc2-feea-4228-b385-06d09221ce32"
                    }
                  }
                ]
              },
              {
                "id": "e1aedeae-9dde-42b0-896d-1482297de11c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "808c7b46-87ce-480c-a32b-f59e864f301c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22717844-0b4c-4d64-b7f1-2ad66b7d4d93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13630c87-f548-42b3-89d9-88dc8589176c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8aa733a6-d288-4924-af4c-c3c778254845"
                    }
                  }
                ]
              },
              {
                "id": "0a0e137e-678d-41ff-8770-f823c38da8a9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de5f5944-e0f8-4429-86c7-16338ec8f6a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "724a091f-10eb-46bb-98cc-5730039fb99b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6540c2d4-10cc-4696-aff0-e9f6cc7e3b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "feeacdbd-2780-481f-9a2b-8d108e4ea6b1"
                    }
                  }
                ]
              },
              {
                "id": "07c99a43-cf16-4df4-9333-bed7a39c991a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9f7116d-f6c0-41ed-a2ef-38ad0c0239ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bd7f98e-505f-4fad-9238-a3d7b4908496"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6ce7360-bfc4-4c46-8d8c-5846f7ee7730",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ede9d1d3-9d74-4369-949d-e655d04e36b8"
                    }
                  }
                ]
              },
              {
                "id": "e37f95f6-a59f-4845-acf0-b8aa5713c2b5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16bb978d-f4d4-4187-9532-d442210b42e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21b512c9-caa6-4417-b507-78ef20502e8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "592d2df1-6f89-4468-9456-48f963198908",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a86b661d-a652-4667-a228-6629e6918f15"
                    }
                  }
                ]
              },
              {
                "id": "7486baa4-ba4e-4bcd-9283-2f9c9a89432c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da3e451f-aab0-4c95-8753-d49d4a21a4d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c98b6a8-09b9-45eb-bcfc-0c23674df1ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a73e60a9-9430-4633-bdf3-0e17b35bcde9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "162355c6-e2ad-496a-aebc-2e98e0f75f2f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e80a66a-bf82-44b7-bb36-9567b946ab6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93a4676d-aeba-4f54-b2b5-e210dcf23b48"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8641cd30-39fa-403d-b0bf-54210e6a3751",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85cd4022-d636-4fbe-8532-e87980a29958"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14054fc5-a503-48ca-bddb-38542f8bc51a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2aa6b1ac-79b0-4d46-9be8-edf87d1c11d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e94d8dd-219d-4a86-a9d1-47085cd24838",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf4b15b3-c9d9-436d-83ee-ef2783f2c4ee"
            }
          }
        ]
      },
      {
        "id": "963490a1-3621-4942-99d3-cc262bd26260",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "60737caa-bd85-4c78-81e2-78243ce0aa06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89939015-50dc-4063-8cd5-f0aca8945c52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "521ad110-d7eb-4a0e-b3e4-897ebee94642",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1f8a29-fa0e-4aff-aafa-8c5786c3ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3dc845-1658-416d-897f-d35492f08a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1706b9-6f85-4cb4-a38c-158cfa836a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "534c7b7d-1934-4669-a244-da8143f818ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379fc8d3-a41e-4530-b6bc-e0516b3cf520",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b2307a-62dc-4003-b1ba-4aa2b6f1a0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54072e79-e121-4640-ac62-ecd38e0d0a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b20d54-4c45-4e93-accd-5185ec4bf5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d14d0c-58da-4aa6-ab6d-baff57ec9c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03969de-8f01-44f8-b5fd-08fe7ec230f5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97958d1d-9971-4d06-a33e-05c19d6dafba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f2ea6a-90c1-4a24-9e65-f0b800fad76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5030c3-9cc9-4a9a-95df-27a4c2d68c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2604b05a-9b20-4426-911e-b1f322bf46e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0990a032-62ff-4eef-b0d4-da883ecc586f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37edc0c5-f29d-4846-8a8c-4e2f7b4afb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69bc4ae-3e64-4266-8830-3c0c0e4a47b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97f3663-5d94-4e79-9455-dce0739ed0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc53728b-5f6b-41d7-99ec-d3626895666e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696a55e3-5310-4ae0-9686-a43130524686",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c06ab39-a25d-49bd-91a9-081fc2745d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4bc868-06f6-4215-9aae-fd98cfccf415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dc59cb-ae4f-4423-9985-b4cfee5e2a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cbb666-bd87-432d-93b0-60b6c9cd33ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65eb374d-f91c-4bad-98ec-2d698f3186a4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affb0c76-18f2-4713-8f2f-3ec91f1bf199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cb0600-d004-4708-833f-47bbce0159fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b21541-51f2-440a-af24-fd5e0d024e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27ca2f03-5420-4993-a5ea-7889d6e472a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a25a3b9-7062-4ee7-812f-e8b2efa81c89",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389d67f4-2114-492c-8035-04b8b7721840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f49451f-197e-41c4-b75d-93614ba09e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1865641-6718-4eb1-a063-f55c0f244dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "791152b8-20ca-4531-8e92-8a9a4d8c5394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16e250a-5348-48d3-b389-f90414c8b2f8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08f9de5-e3e4-446a-a2c6-d6dbca25c90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86315f76-bdbf-464b-9c63-6eca22b58548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdf2de2-fb4c-47ee-83ca-4a98a194aa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4daffe-0411-4bb1-b8a7-534bb960c9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b43fec9-c6b7-40e6-8528-f42add6068a1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb2c720-835b-4b9d-bdf6-df812aee24cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1203199-d57f-437c-be58-077dd7c17385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeb2020-f63b-4147-bd47-f9d822b68852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "879cab9f-915d-41aa-b4f1-fde9cc68855d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe094f2e-6517-4abc-889b-7f97809266c7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64120d60-5ada-4e39-808f-b5437432305a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc0a77a-e625-47b9-a393-95b4cf3803f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18650c31-45cd-49b3-96e2-fda852a1950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46354b45-3749-472f-b38a-f7fe88bfe009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff52db04-97c4-418e-a2b4-1bb5b1284719",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5390c867-578a-4e39-81e2-9d8d56515af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d72ea5-7a0a-4cc6-a25d-b414781174e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7530d6a3-1f57-411c-a7de-9e817d4322cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f215f2-145e-47fb-8607-e6ff71c53d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f49756a-78fa-41cf-9a66-8cbd27178eff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523d77c4-22ef-477a-97c2-d0d535d89665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650945e6-5858-4ffe-ada9-84c066a3329c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc090e7-12fe-4669-afef-9310a18f8bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a15d73a-0170-4ac9-907a-3dcc992a4a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da7a186-76ac-4da8-97f0-013ecd8fa3dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30416b82-cba7-4367-b307-12fa93129bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b962340-7004-43bb-9b23-baf6dbc2b60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9450fa-726e-4ca5-90f5-80a9b945ae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ea857d-f01e-4471-bfeb-fca754a2a9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e9c993-5aa4-41d9-afc8-7ae09a20031c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324937e5-9c5e-4454-a6de-031f18fb8dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9bbfd0-ca94-44c6-bfc1-c7ffde4346bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0495c6c-e649-4d3b-8ff8-b404124d038b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8a7c66-1e26-4077-b029-11392276fd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fe0d26-ff9c-414d-a9f0-77eb14f5961e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c46315-b466-43be-bbe5-f44d734e5e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431557e3-0fc2-4ff7-984c-4221ec240922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fa1509-b262-4b67-a368-58536087c5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "496e6ad7-e169-40fa-8191-a3563e3c0358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d0edce-76b1-43d0-8026-e626f3b6ad69",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ec7bcc-91ee-48d5-9daa-1b50c5c7cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8689051c-aa3f-4f48-93ad-e26bfc0c902d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5f7a90-79af-4df9-9e4f-d919e9c284bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc8364d-5d4e-43fd-99c9-785d84667d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e7b7c9-052f-4852-9063-429c87013f8b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabf56d7-cd37-4ee5-97cf-a6cdba31f8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4615590-019a-4438-abab-32f4871d1e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba808c7-8241-4d23-8f03-ad9a58bdcd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0489a343-c272-4ff6-8168-41ff283c9f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b37c7c-864e-4ca1-b687-f9c332a258eb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0106a8-c8f9-4226-9ebc-b4f006f130ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5b93b0-be8e-45b9-8228-98a656726dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeacc20-4193-4062-a860-cd4f7d186d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e29cc46d-9100-4166-a75e-8d19e3b7e655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533b7c8f-90a7-4b0e-977c-6fc67670f35a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f164ccd-aa58-4290-8302-3ccdc030a626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2835cf-f354-40c6-a314-fd7158bad6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902a740d-86fd-468d-bf95-019c31e5b96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf5e19e-8023-475a-90a0-e6cd66448058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3d3de9-c452-40ed-ad47-97120052d825",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49afa0c-2939-4c45-9044-9c4a0d27c84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c078d994-f966-4bd2-95ec-9c64217afb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09f0552-42f4-43ce-8954-c11bf14bf460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4298ca2-b125-4c3a-9d41-19a434212afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a05ecb5-0dd4-4ae3-9a0a-71de315477da",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ff0481-c13a-46b2-8594-c27d3f2b43ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbd54cd-cae6-459b-8184-de425964aacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb0be85-264e-4acc-95ce-46319d5b19f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81f84a0a-52e9-4bf4-a836-04bee91333bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9dad77-e51e-45bf-9db7-30e3073e09b6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75bf1e7-ef0b-4fcf-8042-e7de767e9559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d4049a-2efd-4be4-9746-01ffcb44dc05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655a5d17-f403-4f59-8c24-28e379cd4910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc5d1a2-0655-4a6a-bbd0-a54829b1c0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddb7f31-a73f-4cbb-851c-0c6696bf7975",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e2d245-5d43-44eb-a2f7-f5af4f03becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695ee467-c9c9-46e8-92e8-bee16bc46980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1acda6d-5c4a-409a-a029-b538dccc0ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fb0a56-2f77-4652-b826-76b9df4eb33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf57b321-7be7-4068-a593-eaf8daa3428d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c35bc50-389b-4f8e-9b56-cfd3238a7e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff14a28-e34a-441f-a67e-9f90cff9da8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0743cf98-df9c-4ceb-af82-0a7814e4fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24da2d74-2ed5-4539-b10a-d853b3bd13ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5a086c-fe5b-4688-8fa5-cf6d0eec5f1a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64cb116-cbdc-42f7-bcbf-a591b2564ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959861ea-2ded-4a32-b40e-084f7865e826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e21bc5-d805-4936-a707-ac582de94793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12ddfdd-76b8-4bc1-b7cf-f5558a154145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f57d45-9ca0-460a-b611-7795e9932df9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e698de-2d5b-4b07-a85d-dbada00a25fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7138796-9191-46de-9b3f-75eace2859d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3709881-7071-4fb7-908e-49d431c924c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a26ed912-cb5c-45b9-9ffd-34143c0d5364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0143a68f-7b53-450e-b6f6-540dbce27b8c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8752af-e83a-49f9-bc38-9a3ae1e5d679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce9ecaa-7699-4ded-88e9-0ed31b560a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb56e471-70fa-46b8-aae3-c322ec1f1bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32fafdb-7473-4320-8456-7c4a7ab53d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d87505-30b7-4749-bb45-cd41c33c39f5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08aeb4eb-3bce-48d4-b2a5-b330af3cc86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1241c0d-e12f-4a5b-99de-bbb19629b94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308a7667-a63f-4218-a193-959bf56f8afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac889cd6-0500-4a07-9439-a6ca49f31d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cdd296-8351-4172-9f9e-3bcf23cfd476",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76572623-7759-4503-aa41-b6a00118e04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79057180-ec3b-4ad4-ad28-421d48c00a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb7c2fc-b9b7-4055-9570-ba6016083e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15985b32-88bf-4c77-ba56-913e1949a77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59de452-1163-497f-a58d-50669f9f0a6b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfde9a9-ce48-40ac-b1aa-2ae6eaa652de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e928b94d-a6a3-4858-871b-c91fcc448efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51873bf-6ef2-481e-b8b5-3fa15b2a61f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb15e8df-1fe1-40bd-bad4-c3a37696280e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b488211c-2cc5-4ca7-a442-abc57a460fa8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5ad02c-3a8d-452d-a423-a06cac27cd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7774f388-4702-4844-a75b-d80d42b205c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4329e603-5718-4000-9f50-e619425d282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2303c8b3-d873-4bca-be5f-8bc6f54b0b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99290feb-d6b1-457b-bede-0e43a2429d57",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bd37ea-650d-4430-8c43-fb2bcb768fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62d2f82-3ff2-4015-a2a4-73e74cdf5735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19fdbb0-63b1-4eb0-8c66-720183d4cc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "978e02f9-79ba-4314-9309-8b252d337f0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6eb9651-da4c-46e7-838d-ca1a3890f913",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96ad94ce-90e1-4c2d-a0e7-53e33ed77229",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f5ac32-7f67-4034-80dc-129fd78b739c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "59896cdb-104f-467f-83ee-975cb4f4fb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013d699b-cbf8-4026-92fb-00fd888a5502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98f97010-bd4a-4199-ab44-ca719240955e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66e6fcf4-34d3-4460-bb6b-29541fd7396e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1fdfd7e-f4ff-46b0-98b7-af0e62b1ca52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdd26ff4-365f-41a9-8c1b-5726169bc5b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0ad80b9-8652-4bf4-99ed-35423b319578"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0949d7e9-0789-4cfd-b287-c3f635192117",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14013ccf-42f7-49c9-8898-4cd57e35c62e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31ca75a2-f2d9-45cb-9e27-b9c113b6b288",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc6eed9b-baaa-4495-918b-160fadf35580"
            }
          }
        ]
      },
      {
        "id": "1af83e0d-6a13-4c8b-a81c-d7721c26462c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0c73aaf7-ed58-450e-9d63-668876319cc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14f58e53-9c61-43f4-8ec4-8338b94e30ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc8e9132-f69f-45a6-b2c9-15fbe123a284",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48440f7-5276-4f4e-af7c-a6292a4d311a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5858fb-674b-4c08-9118-b80bcd9acd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c8ac61-7623-4907-a875-65bc32a7f65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f6f17c-7ea3-4831-8ef9-6e7098a005f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1072147-5006-4ce9-b620-b9863a81b46a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb19584-9f35-4f9f-ac3c-61b8d800d654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abf386d-f9b6-4cc0-ad69-04b60ae93e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92709b01-3264-4643-bef3-0942339e8622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba92ee98-6fd1-437c-8cc2-3a2727c9c13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613cfa85-b5bf-4253-9d9a-694f3ea1f496",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50c0172-35e1-4abe-a700-925f8774645b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817c2c61-bacd-4f2b-9ef3-47063e9e1b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f43e76c-5af9-4805-a540-47739b0325ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ede2ddb-c19b-4907-823b-1887636b8a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61983fba-6596-4d27-b875-97e740743caf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96fe114-c2f9-4be1-814a-70725e1496d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e28c400-4032-4a88-a6c2-935faa67bb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfd503b-2559-4432-81d7-77ad35b591d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c05c072-ef6b-44d7-9370-f13197af1397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf5fd64-7369-471c-bf03-0bc8c1b32a64",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d61a6c-b4b3-4dc8-94aa-c70ceded9098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae630075-ef0e-49f0-90d4-92e2974edbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701b4d49-aacf-473e-bd8e-efdb86653c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0229baa6-2f25-4550-9e03-17800917646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9a8ace-ef70-4c70-8b88-920a2b3d3207",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be129ee0-df45-41d6-80de-b5acfb4de73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db95f2ab-0e84-4cb0-a915-2422fef67901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7ae1bf-72c3-4e3d-88c5-0ed5c620ff37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d60274-de9f-480c-9691-faf4e159a743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b795a82-987e-4a1c-a717-d15ce24736e0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a03e13-e50d-49e2-89b6-8bb4d0eb667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a8944a-e7a3-43a3-b317-bef219bdb541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2686ad-6133-4f16-b89c-b4566cbff7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b79890-62a8-4e8e-9529-a4a0d43d95c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7079c3-6024-4597-856a-845b9d4b3ad7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558e1351-f79c-4f1d-92f8-d54e1926044c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca6af72-4bec-4776-bbc4-8a100a2714ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377dec52-cbf4-4747-ae16-36b7e6af4b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2be315ea-a89f-4dcb-b412-419cd7260ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877930e9-ace5-4ad9-9429-63f515726f5d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fedcc2-f618-4923-81c7-4d7d72b66919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33da555f-4dd7-41fe-a9f4-4b6999166bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cb40fc-2ebf-4811-b8f9-6801d45134e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d5d353-3dbf-4a19-acef-5c200e108c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07180599-439f-47df-b955-49e6b6cf44f7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c001095-79db-4489-bd7a-d70a279f8420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a8b18f-8601-49fd-b261-9bb06724d236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a7b8ba-2e7b-4da0-a8b6-973eecfb5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d36dc7-f578-4b07-9473-2ac35816f5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e1d83f-f096-47cb-ac0d-e3369c187282",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0522ff48-3b89-4967-a522-45a58e5d805c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff744c7-039e-461b-97ea-8abdae6ad03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1daf24-5284-41b3-bbc8-a07d8d48203f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4d207ff9-7686-421b-a5e7-651e0e21774a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a475e277-3332-471d-993a-cf4f42d8cef1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7518cae-69a1-453f-8fed-adce0b88b8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0a9a2d-8617-42e0-b01b-0a2c1bf9ceae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57883b9f-dd2d-435f-b26f-d8607a2f494a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "413d1918-fa6a-4445-8b30-3fce9207c967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906b3ea3-2edc-4adf-bb1c-4e10f189beeb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81151c64-5f4c-40d6-bbb6-29f652967293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f0e2f5-e63d-4eee-b945-73dbe48bb68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80577204-2479-47b0-a362-bf45ff7e35da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "261ec722-2fcc-4c18-916f-2b3f18998df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65022ac4-a965-4f32-a4f9-c698c62b19ad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f7b1b5-b7b0-4c23-96bc-d5b6cf2e1c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567d08ce-328c-44aa-b34d-242aa2eecada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9906fb87-4631-4b3b-8717-33a26055e82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a9db0e-9566-4d0a-a816-eb22d77c6143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b81fdcc-ec69-4a7e-a219-b620131caab1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e03e16-ad81-4457-9ea8-cbfe92b2d044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10384444-687e-43b0-b50f-e3a5a3ab9d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6c6963-b4ac-4ecc-a68b-884c07904eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee16ae91-fe4a-4d05-bac4-4abb8fabae64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0145efb-dbf3-491b-a92d-e53305db1dc9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad8875e-14e1-47ea-bcc0-413a0b6e8dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8020f9-5627-4b55-ba43-6427326f32fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01e7bda-06ca-472e-a2bf-37988f7f23e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7b0eb0-1285-4a38-8e2d-2f2890c4ca8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e97f9f4-5ffa-4162-bf89-21beefbd09e2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b0c2c7-dae3-4e0f-ab7d-be24918d0a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ef9d59-cf58-439c-ad4f-39a40a0b7eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2325713-dcff-490a-8dcb-5378490fe098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f932c0-a2d0-4d41-b800-6953676e7448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff241e09-7385-422f-8515-7147a3a9cbfb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c38d6dc-964a-4e15-861d-23e51dc1ac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0711d5b9-1da0-48ed-809e-4486fd71f816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7830d2c3-2334-44a1-a59b-e817f063d42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf82215e-7766-49ae-b53c-b888cb22a977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6812bed-e064-40e9-8e52-40025b7268d0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59eb263f-f1a6-4fee-94a1-73cfafffffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb332f32-40cb-4c7b-8391-09c330082ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3988844e-a390-43ef-98cb-5b6c329a68f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7133fb6b-3ace-46f5-8acf-7bfdd10a1f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a27ed8-89aa-41ca-b280-d21eb2e5edb0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e705ab-3bd5-4b44-8e41-815498a54d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcec184-37ee-41aa-8675-f05781862c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfbc7e4-0a62-44f7-880f-7352b7809e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "966a689e-067c-479b-8805-4e39a421a6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f456428a-1168-4865-9997-66c12a7089a5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e15732-463a-4e10-8d91-a75af1665e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44888380-87da-4afc-8bd1-4d2b8b458327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b5639e-5f4e-4312-aecd-05c01e78025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ab2035-3423-4593-9826-a2aecd716e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2282a1e-1101-4ab6-8774-2fab83383db1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb52c28-5ba5-4ad3-91f7-4f65c3ffe228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bd3c1f-c0df-4471-b0d2-20f10a624aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7625a2dd-3ccf-471f-9de5-fbcd8b5bcccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d75e1e-b497-4836-a9c2-9995f120f1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b8f3a4-2482-4087-b4f0-28a4037f386c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca20d23d-c9f2-4a96-b067-1d0da73790ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b13708e-4aba-4150-b358-329bb5a8fe2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba742ab-3d13-40ce-b8dd-cc7a2890b154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e04940-dbbe-4332-98ec-d8c68c76a250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2840e63-d053-43a9-9499-38f0b6a7c9ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa7c326-e82d-4f3d-ad6b-935af97fc076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881e2743-709b-4d6e-acd0-0fabe1e921b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e20848-f4ac-4a7f-bb40-863865f8e3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4377f818-0f6b-4608-a103-75336b18b5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293ab882-0305-4f65-b7e9-eae438e1ef16",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c48e58-2e57-45a4-97dd-bb4ce902fe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff2365d-8bab-456f-823d-d3d528fbffcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c92a9b8-2628-4392-b547-d2c0af318e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd3ee62-e372-47ee-b10b-acf7e642346d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3d3aad-fa0f-4907-8703-954671a4acc8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d7f31e-20be-4c5f-9a6a-624891ca8842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4ea2b0-a67f-422f-92db-0a5b60c19932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170307b2-e248-41f1-a6b7-5d2da73c6d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa5aac8-0729-4aa4-a8ef-35d9131fd3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a214665-cc0e-4779-8597-648b10ce1ff5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26609275-2ffa-46a0-8818-6905ba7f9e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002546a3-37c4-406e-b243-6cdbb268be06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b181257-f072-423c-916b-4e8c69cb4feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc310727-fd54-4271-bce9-26aeeb8783be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6d522e-6df6-495b-92c0-439d27e503c1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b8866e-4abe-46de-a5cf-f03d9f24c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785ccfca-4c79-4b0b-a5cb-c8a25b1746a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0359719-e47c-449a-8eb4-2c776d31998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7292a66c-53b4-47fe-b278-60fa62f9b3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f8351f-26f8-4bf5-aae6-7a7fa77dff2d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0ee8e9-899b-40dc-8bc3-9529cf2a559a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8811ad8-4fa4-45f1-846c-edaad270b592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1a1e0b-e64b-4adc-8098-dd966a8a7982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f16339-0915-4c3d-9969-ffb0a32014bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fcddf2-7750-4f69-ba23-dea11ad2f198",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d034db-3d7e-4fa8-b0c1-7ea60ae78c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d2d39f-7c0d-4e87-9427-34f273c8d722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cf291d-2db3-4602-a976-ed4f480dccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d5fa19-8176-4f0d-bb7c-38455e735666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c14000-77af-4a38-b6f8-53215b1dba9e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78e632f-e0b1-45b5-8ec1-367fa5b5ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0581a35d-237a-4406-a4e5-4c817648926d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a546020-7b3d-458e-9ba3-8f9ec5329417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a47c9804-e0cf-4c6c-b9b1-3b88e9762e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445bb91f-84bb-482c-8c88-3479dc8742b3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b35567a-4502-45e3-833e-b1d7e7753cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913a73e9-acee-4fdd-8ddc-4cb56e4b8e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b876c1aa-9425-4bc5-b3c8-921ff414944a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f55ea4b-5477-4b80-82cc-9acc8f4ad831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ae24fa-bacc-48ed-bba2-b9ce2c9b8a5a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b9468-d467-4e57-b06d-161432199300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716bf2b6-a370-4a1e-93c5-1aa951bf6128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a605fd6-fb16-4124-9ba8-6a1b225e9ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf24c78-bfd0-4eac-be4c-c4d6f7a74df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370c1f74-cd8e-4792-b17d-722ee22a46fb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ba80fa-57c3-423d-b073-ae581ca346be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298c46f6-ffb7-472d-88c5-4fe260320df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b140c1c8-b43c-40bc-bc3d-500d174c8a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8608b68-7972-4abb-8c03-ab1f329115ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39915154-9374-4b6f-ba5c-2fd298444808",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529b04d5-5a12-4887-ac3f-178ba93a0883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefe9550-187f-4d2f-a8a9-c6efd1f1dfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1e3980-2334-46c8-a5f9-8005e91920cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea40b73f-8c4e-40d2-b4a8-3fb03eacc52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2463b4e2-554f-47a6-906c-2c6e3c493456",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ad30f6-8c7b-478b-b1ed-108d6ee6bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653c34b4-4448-4960-b1f9-4ca24e69364c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7237cb1-9841-4be8-9244-545dff2a14d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3d6d5f-13f7-43f0-a21e-7f9a8ca5950d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f0d575-9409-4b6a-a4b4-ea62c339a206",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82fcb21-518a-4bf8-ae06-cc686f820a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f135b122-1e60-4004-9717-953caf31b755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9faad12-2ea5-45bc-ab4f-a1e939993b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d92968-2f55-497c-8e7e-16bd5cce8aa0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abd35d7b-f81d-441c-a604-f6d6c62327b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63c4a547-c651-4d99-92be-ab9333274131",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1396b0e-512c-44c4-acce-5c65899ad536",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6e9544-de9f-4606-b6ff-6837246d963b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61959c89-7ce9-45ca-9386-24c626526c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18b2d0d6-bb41-4c00-affb-5bfc476ac7bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0173d9ea-a88f-4313-908b-2d71bba0b985",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "609826bb-b5d6-4a27-aa17-f9784a69d265"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e79e3d78-d35f-49e6-bbcd-29e8ba44e097",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43ce3d50-5169-4c58-89b3-fbd6c3eba32e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c037769f-1a3a-4761-a3f2-5c96f7c84600",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "364cbb43-2771-42de-91e0-ec249b6d0b09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9b887c5-eaf7-47a6-9502-499b7e3ff469",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae8a421b-d1eb-44f4-92a5-151339000d70"
            }
          }
        ]
      },
      {
        "id": "705754a9-71a2-4b9f-b973-5bed6e4d26c9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4e62d0a3-0f1d-40e8-a8f0-ee155857f6ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6331d15f-fc89-4e4f-99bc-e628d0b20090",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8cc4fc9d-e0cd-4fa9-889a-5087b4ed7b6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d87de0-2461-486a-91f1-a697de57f670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e68fcfe-02cb-498d-b10a-6e5faa0eaada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9006f7-0291-48a1-9fa7-0ce67a03b6f6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1199d8e0-8001-42de-ada9-e6cc3234bcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5c5fb2-0c1c-4dfd-8544-d6d552767cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0351c6-d9cd-462e-9c41-f272082dd8bd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c3e16f-62be-453c-ad83-4a0ec3f83a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbd03e7-0955-4a18-a420-cf97346308b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d9cc3e-b567-4579-9678-c77359ac74e0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5853a43-0658-469a-b8d8-146c3552f7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e4cab1-c15d-45b3-8669-d4525e8d5829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e06a581-9adb-4297-97c9-bccf60022249",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d352d6b-148d-48ab-9e08-531131516e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc407738-21ed-4d5b-8056-e724d7bb0080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76339f8-6800-44d5-94a0-1731361dcb8f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884bbf89-5b79-4257-8818-0e9be4d2fe58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36da3fc9-e888-4917-9749-2e905c131ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8b24fa-9227-45f5-a20e-368d38f57b53",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443c8f16-1abc-4ea9-aa84-f06cbbbe59c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb1c51d-01f1-4960-93cc-40f3f57863e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad3c54b-b12c-43c5-a881-8b77c18753c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0b2dde-ca7d-4df3-8b0c-ce1775d3f833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9fe0c2-cd20-4ab2-b954-80492f0d8507",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b144b1-d22b-4af2-8ed7-9ad834a264c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849dbb3a-e13f-4621-8854-47c4914e7e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32f19ea-2988-4b8f-b25e-ada844908d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c1ab73-d1e0-4a77-89cd-eae385695755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d4cd3f-ce8d-4984-a87c-b8056622dbd5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473fc036-f1d3-4a12-8868-bf0d2b88c029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a65e7095-7c54-4c54-896f-997805f6770f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaa1a0a-0e49-4ae1-9f56-ee310501b7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b848a9-4446-411f-a8e7-961c51377d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0132b1f1-2204-4141-9ba1-bd3a65eccb16",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588bb266-39ca-46db-a08a-8764fe68b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3315d4-7964-41bf-8420-54d5de233e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611dcb94-4dab-4825-a844-f04574045cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c9d22f-71c7-4e4f-9583-2812848b5895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9d0fe7-4042-4ba1-874e-b0c9e9102273",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfde3a7-92e2-40a2-a56c-efb432786cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cca90d-4355-451c-b379-ca6f09170a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4977b1-4071-4509-a0ed-3f3967a017c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dc0f14-f78f-411a-a056-59040fb21be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9149c1-15b3-4186-ab9e-3c488f9ddfd2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0522cf-2fe3-4206-bef0-c4858b4aee10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e979d14-6039-4b9f-a50c-c08a452b6d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f411173c-1278-4978-97c7-d26558052edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf35bcca-dded-4fcb-8402-88fc06a0bc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70925633-61a3-4910-938c-85e68a092b65",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb53b83-9d63-434e-8df9-2720506fc5dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45048a3d-5655-4f0b-be95-608f8934bb92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ab270c-0673-49de-a41d-1b915eeb6ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f5cb75-3770-486c-a9c5-6e7ee9a92d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677a9c17-7fa9-4194-854e-f4c22929b540",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63dded19-2795-4a66-a821-339576abd86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1461a60-f068-465b-a6d9-dd8f0668722b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56a0c30-1df0-4a3b-b031-e5d835a39473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f41bc9-eb19-4717-90d5-7b6c695a6921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74762217-cbf6-4686-a793-de27b56317f8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82886146-65b8-4c20-af39-c8815911b0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0927521b-5077-442b-bda6-b38254bb7595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c265c709-4717-4334-b8fc-d39d3e3c7f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56206a75-4fcf-4389-add3-9e2c373ca601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f960cc-78a9-4423-8c89-ee4c1cfe070f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058a00b7-1863-4f1f-b35a-0eb1358e6ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e17e80c-c316-4c94-991b-0128079c3d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd668f1-a4b0-4c25-a470-1362f9e3dd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476f8825-048d-4754-8d9c-7fc7f4fb6c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5fb6ee-b169-4385-afd7-596a1865e93e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522f0298-5ffc-4215-85d0-c9514845b7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15eca111-ef54-429b-938d-4b7bf34acd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073f602a-249c-4d1c-a3be-67b7ac657b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb9348c-1066-47d3-b8f3-6850b7de5bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0fc1d0-dc44-4155-8c97-52b8a30f3836",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2bb19b-581d-4008-9c37-ba6846d72ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62ab6ec-f73b-492e-bf7a-a81487130601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dfd9eb-f524-4374-8b9f-0d13a86902f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd042d9-2020-4574-ba51-2082817ee199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7b6059-ab69-4f91-986d-818c6bb3e922",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286e1d2b-3cb7-4594-89ab-77bba5a7cde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daac29df-74f4-4119-821b-b04ef59f5a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18ccb7a-a879-4245-8156-4f9c8ef864d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e04e5ec-3bb5-49cf-934e-778a952fb5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23599d4f-a1e9-4823-ad2c-ea7c8672629a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d856f567-f016-4c70-a517-f5a74bb80251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46837a5e-de21-451d-a312-f270737022dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c739d066-f8e9-4f81-8363-a20f82e41262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c69ca7-fcd9-4111-ace5-e4e0055cf679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4356a926-3017-4a22-bb35-6d100aa3b8cd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1282a5a-5a3b-4e86-bde6-c43ba386897b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb436ed-af6e-4909-a78a-12754d3f7f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99343b6-7910-4188-af4a-2e3eae3eb3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac60183-3bc6-4c8a-9696-d4d8033ff1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35fb077-a8b4-43a9-a716-40a75a594e09",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8930ea2-4627-4e16-bdbe-f2f8b2c63618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28386f1d-d012-47fb-9476-9645113a1ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcb17b8-ac5c-4346-afa1-8acef0c5c56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5a98fb-1995-41b3-af96-5ccb4632d339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa8c17a-3ba9-4fd9-959a-d698c2669850",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354644c7-545b-4701-8e0c-261b7e5c6d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a4a79e-73c0-4d69-bed6-130930604589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c075ef-446c-4019-b8dc-6222118895cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ccf43d-6b9b-4295-9c85-f28bd91534ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73c943b-3a99-439c-97c6-d4437cafd795",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85fa336-91bf-4f37-8f91-5d080cb3a632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e37f4e1-487e-460e-b973-91549ce0a0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23728338-4ffe-4cc8-aab6-068062a2a4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494cc0c5-d72e-4fbe-81ab-364d4726a2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25de1ef2-627a-4f80-a4a3-9edc8d4590bf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c10e2ec-df09-430f-8afc-0a556272f77a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0f9d5c-3a8c-4647-a25f-866af5e772c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be574e97-ce82-4a24-a69f-f92201470566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad52d21-7393-4c0d-9d32-0feb89240810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f71246b-1c33-42be-a922-488e37631528",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c4a0ed-78f8-42e3-bcc4-3ceae7a10f31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1219b38-2149-4ad6-8187-601e1ef94c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5324153c-9df0-4ed2-857c-ae15e2a7a829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9c8a19-e7b8-41d7-8f9a-d5a0e4ae9144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba0940f-e4f6-431c-b6e8-7082fbcfed98",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517c5319-f334-48f0-b2a0-6ffabb48d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac83986-b587-4032-a684-35574ce73f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd3295b-705e-4757-b792-d5b57af59da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66629a0-f9fb-43c4-a6a8-0f156336761b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0361f5ce-c171-4c18-827a-e6ff6384348d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cf7ad3-80c1-4c3d-aa72-1bf0fa7d8753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cef465-5811-4b68-b353-0a09df2bca55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b03ffa1-3385-427d-b5e7-6583ce42e034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc4bfb4-0c76-452f-8136-1d2f24fde8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45b3a75-3058-4278-9019-d2e35cb5839c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4233bbc3-ae34-4fa7-8319-b2bd9f928dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e5d9e3-daf5-4fed-8c42-627fc198c7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61ef203-43ce-4877-a28c-de3eb2e667c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f432cfea-bfb2-4115-bb7f-a117df110047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71614037-8da6-4a81-a8fc-ca259598f89e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740c00d8-adf9-4596-ba67-74c6f9f871ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f174b7d3-37ec-4158-af4d-48690be7790e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537a99a6-54fb-41ac-92df-f4aa4b2cf1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a377b93d-6585-42f9-87b7-5df898f3bc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56ff7d9-1020-447a-9df0-e37cad4528e2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c494e80-3bb5-4493-b047-05efc1509b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec874d4a-eb65-4c85-b136-2312b2a451eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7b47c0-6644-48fb-8ff7-2cb61db90f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd9931d-fb20-4b8d-b3a2-3967e0717f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7af6c4-15af-4437-b449-975424a0388c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce366cc-594a-4d28-92d2-4ef60cf0dce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67ec348-1a0e-4179-8acc-2d1c3ae65017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa861dd-c003-42fb-ab17-6987e4acbf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44eede1b-33a7-4976-b869-28d102bf97bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c73a3f-a119-4878-8d96-a0554213d6bf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b55f7d-03a5-48e6-a944-9d07c59ab1cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f16149-3bc9-499d-a71c-8d13f3fc2052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973cdfa8-f45a-4dfc-8467-46684c9ec04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862edf19-c724-41f2-919c-0b613ccc4e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331b964d-39e8-4fcd-b479-299003e0ae55",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917ec611-aec9-4853-b68d-49fb9f6505a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e849d55d-465e-4ab9-892f-06767c163079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcdadfa-e5f5-48ff-8695-55d6f69e8c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe2a909-5c58-44c3-9bcd-70733e75d634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdceb629-5a02-43bf-8f20-200201ae1c57",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68744a17-723a-48ae-a06d-74dd15fe4869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c88991c-61ca-4fc8-a5fe-8ba1327a6802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8f7836-817d-4095-a091-874ce31f183b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af7270f-dd2a-49b5-9c9d-39bf4a869084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eec7bd-e5a4-465c-83cc-6a67e50b0eb8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28444c97-7434-4bdc-bb45-570d27a114a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7cce34-d7f6-41f8-9484-f97bbdfe8710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be293eeb-d6ce-4031-a9a1-b9d22ea08a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0d7fd4-4b03-4dc2-ac01-2934a7ccfaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd38c983-5392-4c5f-ae27-e36ab5d5b26b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6875991-cc14-48e6-b7ba-148706a8efab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8627f07-26bc-4884-9f25-caf0a3c8453e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16360f0-0ba8-43fc-ae8a-4eff2ebd26e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb613ba1-97e0-47d9-bee5-7bafea719554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49d8c43-fecc-47fe-874a-cd07c4f7e86c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf727862-3dc6-489e-85ce-e800911e0186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6714031d-2548-4fd7-adf0-bc2f35ae126d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16c30ed-eb1f-4364-b778-f982362b2b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb113105-200c-47c4-a9e1-d3e07879ac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc6ceb6-ad5b-4666-b05b-2265c997a276",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b8a7fa-1cf4-4d02-8eb4-317be46bd280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25211985-6e6e-4a17-b979-cf93d5666907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97a55a3-ea29-481b-b73a-df9da815871b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd470be0-b923-451a-97c6-c506d505efb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e6a2a0-e1e5-4d3a-9486-5f4b67e0ecbd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0b4ba2-8e5c-4b50-84c5-4a153017c22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ad9d86-5ac4-4f6c-b03d-7ba54a32fa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a59ea4-c4dc-419d-a991-d449a972f212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc755be5-9c73-4b50-9f98-31a07ea3c6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d19a7d7-3aa8-49cd-b91a-1eba9b4a9c51",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6030ae-5730-4ec7-b6d2-24d7d062c0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf4b117-98a6-4719-bd9f-00501531fe12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f015b70b-772b-4e11-8056-f8af70370ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab90b18-1b9f-4ccc-8935-0e8bd94bdfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f486bc9c-4127-49b2-8732-b23c502f1025",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92b371a-db9d-41c5-b32e-81c15cdd09b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b2afd8-370a-4520-96fc-ad82f9da0153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35979d78-3da7-4a29-9a32-06ec0f5b5fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2298f1a9-b509-4d30-a633-5681f45bb610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7d56ab-9c72-4110-94d4-fb069ddc994f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e33263a-d4bc-43a6-98c0-fe9bfc21d836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93893e8-8c4a-45ef-80cc-815dd7664cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad54557-4f87-4364-9474-6287b2ec3f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2b7c5c-6fab-4e2a-be4c-dda754b47b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a999cb76-bd98-4e3a-bfcd-a378161a31db",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd450af-eecf-46cf-8abe-983dda7f12fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f895eee1-3de6-479d-88ac-4e7e02db6e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42224fb7-abd9-4645-8919-79f904a06e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1842b3-efbb-4e60-b8b3-1caaa377918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ec34af-869a-4403-b14e-ce7848c1e705",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9cc720-179d-428b-a716-095577370abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9847030e-97f5-41ec-baff-e19e978da314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5798f60c-c74f-4076-86ac-87cfc7f94aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c3a767-b8e8-4283-8d22-1d9e1c4dfd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff2194-36e7-4679-9d0d-bb2b7e975a4c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea74ada1-3227-4877-a8c8-c7fff1fcb8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d851fc1-f207-482a-a736-0dc309a3a07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d449436-76a3-4964-8223-1a2f7704a561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08c6d47-ac49-42f4-844e-f6ca76c2f64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8781f51b-ce41-4a9f-86bf-21589f50dd06",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18466b3-34c6-45dc-a9d6-f089d16f9770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9156c150-b4e6-4294-a6d9-72465af65e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c57664e-4120-43c5-a9d5-a16841bdd4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a063fcdc-571c-4006-a878-9482b6c30535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec343f3-98a0-48c4-9302-b07abfbe618b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e16504e-c59e-4d3d-9ef6-3a1b4064d9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f120e794-cbcc-4213-ac02-e4395389164d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3674aaa8-ccc5-4bba-95e6-edac7efd84df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474286e4-81d6-47ad-932e-5f04273a1dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b63b849-ce04-4153-ac13-dcfb77756f5e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ed266c-b335-4394-9c76-a97f5d7d61f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862623d0-ba99-4f4f-be26-ebeaa4270b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d4cced-2044-48b3-a8e7-4f218b69ab14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a66afd9-7ef6-40ba-9181-f668ba4b17b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0786d150-78e9-46ad-9530-293b4574a1b5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d61ff1-33cc-42cf-8f2d-61bc59ce65a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030f9d4c-065f-497b-b92c-81c57f34ae89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ace27fc-ffd6-4ce1-928c-a3af83d3615d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b98f5c0-b9dc-48fd-9c41-acc6bc453675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d33124-f40a-414a-8392-984edecc9f58",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658b9ea8-b395-48a7-9a2e-1797774b491a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2da517-582d-466c-aa5a-82bc2ba3e62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df755cc-4a15-4f6c-8009-cb2daead939f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b41b0a1-c306-497b-b18d-607b85a0dde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd442529-a513-4f65-a394-91ce926d7cc1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90927ce4-1313-4423-bb36-74c0430461fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6535a60-1eec-4ba4-950d-bfabbd75257e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef605107-3b3f-4fc5-aed7-58a4bf942789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fabf038-6954-43c9-bd6b-18c8749111df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c470f508-41e6-4cd9-ae38-52446dae2abc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06ea7bf-51e8-44a2-80be-61925cf21fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2b334d-6bf2-4ade-b09e-710d247f459d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda60dcc-eb01-444f-a724-17716d8b737a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e0f810-5169-4937-aa02-eb73fe824206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a3ebd3-0b56-4fbe-bd31-0d79dfe2a6bf",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d0200a-740a-445d-b638-4e60b1024cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c999b39-e73d-4501-a2f3-5db9f698d45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afdc7f0-eafe-4c3b-9566-ecbcffca441a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f044df3-d2ec-41d3-8ab3-75ec4722850e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98dc257-9025-4dfd-8af0-68d484ac514d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5217295b-5d6d-454b-808d-be363f7277f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5e245f-7469-49f5-b95b-66b3d5cffb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb20a27a-d622-4a67-adf9-ce7efeb09582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117fea83-0b7f-4b3d-a1b0-72f1accb039d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb21d9a8-a007-4cde-8e9d-8e7211fdd0f7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21177a3c-7db2-472b-b8d2-80ffbafde49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372fc9a3-1ed5-46c4-b5dc-8a952cbbd5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765e5a2d-273c-4fc0-a62b-7b2d12f42b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc38f92-4648-4334-9c00-f4de5c341507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef05796-591a-46cd-a75b-2c0c65654f70",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ac0e05-bf79-4749-91a5-6d1ba671b1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f0fcb5-510e-4f36-a653-613594615cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140df0f4-5488-4fda-9fb3-d0da9a786250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ed2baf-46a1-4709-b0e3-a7279562bb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0539c970-a734-43cc-8cab-00f2357718e5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4466ea0a-f970-477a-90da-bd2fb026a80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7714476-bf19-4627-95d8-6713e5f893ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637eaf22-27a3-4a57-a4fb-1a08121c7957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19edc09-d218-4f4e-9376-e89cc091da54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c31ec7b-5422-4e25-b183-6219892a5efb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca2c0e2-59b1-494c-98fb-9ffda179fb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f63873-cdb0-458b-8432-9c7544645544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a7737d-b100-459e-8f86-d7075241b597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801e48eb-0b83-4796-aeab-d0574b6c4306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f22e3e-cbeb-4abc-ab20-d6e2c147e4ac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d3f8a1-65d0-4ec4-8c36-e90e5281cd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e3af27-d0cf-41ab-bd3a-09778781bb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16034107-32f7-4dd5-b521-7acc629c0c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b631a71-4748-4be9-838f-30b1a977187b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bf5510-051a-4de3-abaf-299b74f9dc7a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c92eb7-0eba-4c88-9d34-1880ea013d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cdead9-0255-4bfe-aabc-6424e5bfd423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b0cf4b-8e60-48e8-85d9-03f675ecbb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccaed13-d4fb-4a21-bc9d-7bcdee78998c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e7ea15-14bf-4fea-8f93-f02ee2cbe119",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660cc0ea-d971-4b8f-970b-89a568c8c89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061195e3-26a6-4c4a-a62d-37fe273a2537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0063b6-bf9a-4409-a91e-76ed9309fe2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796de02b-78e6-4898-9bfb-4566fbeaf624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a882991-a7d8-408d-8f6d-7e305faca1fd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9476685e-0502-44ce-ab17-66748074841b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4530f8f-2cd2-495b-9515-58bf38ce4e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b501379-e045-4482-81b6-645f6dbfad35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479fde65-8d6c-4356-b215-be26897633aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4f9dfc-34d9-43c6-955d-e65f4ff0ed8a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a90ebb4-ff4f-418a-9e3d-e404c042ebcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08054f37-87a1-43ae-9637-6432068b933f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1a3b1e-d4f6-4e66-84f6-b0acd005b7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df559561-cd19-4062-8ded-d59c7b550039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86faa239-6eaa-43a0-bca6-1dc06432501d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e194b6f0-dfca-4e00-a60e-28c7e4563b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "075f96d2-ad84-406e-a3a8-e5dd05f31dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d185f20-4896-4379-a68d-cd32a8b5eb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e9abbe-22c7-4e41-9f5c-850064b67a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b46bea-2277-464f-ac6a-f09a84e6a87b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87350990-41c1-4092-af1a-7c5d1d8dd830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d57461-3e18-4103-81db-67c5b30c5250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cce3fd0-46e1-4e89-9f48-a23e4f40ba80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010fe9c2-7b6c-4e26-9cbc-b3386738749f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ae941f-155a-4219-be81-5a5acdb55b37",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed920de-5e3c-4851-a6ad-f886543edb6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7990d5c7-e1d0-458d-b1bd-faf89b665498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc247ae-8984-4a57-b67d-de3f7e5fda4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40349b0-758f-4b60-b604-9d1429be0b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc9cec8-f4f7-4b61-8059-45da49aac2b1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa7ea7d-069a-42da-9446-2fccc3443573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76557baf-2830-4cad-b57c-674585f1badd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2963bdc-27a8-433e-b15b-10c72052a6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebb5909-3071-4c8b-bc03-57865960b236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1303a845-eae0-4d96-85d5-7e9c248c74ce",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58897bed-a6b8-4e68-b36d-bb8fff62344f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4dfc9d-e56f-4de5-9ecb-7456d8059263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9252b30-cf61-44bc-b7a6-55f6795b87d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242c3203-6502-49b0-8378-404dd3ff916e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aa59dc-6dc1-4745-b3b4-3ee3f112c13f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651778d2-84a4-43c4-9195-3facfce798cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a8f7cd-d0df-4e97-8b7a-c71446f83fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42599b5d-057c-4e46-b90a-3331840261cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d256c7-ab96-4e3c-bd89-fbfd7677173e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f282e95-43e4-42ac-bc38-34d4d16b31ee",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e56d695-ebe7-495f-953e-6512af8ab0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6ed155-1907-489d-bc55-dd3ace6495de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96855dc-4ae2-49e4-ab41-b149f251321c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21402a9b-f3c1-4342-b537-c69fbb89086e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8553cb95-b000-4342-8675-f124290127c7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6091685-b316-44fb-9d10-a4d225143edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736e48f0-2c2c-447c-b3c5-f204aa64a77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d6e79f-ac90-4355-a7dc-699db77d9f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5350411-4f69-4118-8bc5-7b8f43cf6744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95a78fc-cb8c-4b6a-b210-53eddafbd873",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ef91cd-e9ea-4881-839f-2adcb83c2878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f837543-0390-4c77-80dd-8b5d333587d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fea872-f902-4aff-990a-d596cebba527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2308db-953d-4e5e-9fb4-1ac78b91cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde3808c-befb-44d1-8f0a-c7aa58c2adc4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c328c5-6a9d-4696-bfb6-77b8544c834b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6988f5-0409-43cc-a91f-57edb3c9cfc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6df19d-bd23-4348-b93c-01f885b013dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1412d06-3116-4a6e-966d-6d4a75715d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fdb3c1-9678-47b2-8068-90344f4e5832",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c263a7-d43b-4a13-a298-588d04e55a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7771820-fd5a-4717-9851-8568b1aaa7ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a396fbe0-ee66-450f-be20-5a6e85dc71f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e38cc0b-53bb-4c02-8b77-8d040b5731e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ebb397-6df6-40f5-8216-25583a443965",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c4f745-814d-47f5-afff-001b28a5aa49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1713d95f-bffe-44cd-a398-ec2062b003fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad54d2a-fe7f-4ded-96e3-132837da1ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3146ab8e-7455-493a-9740-ae446f98b404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12e2e2d-fabe-427f-89b6-aeccee521e27",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419a1ec4-b603-4950-852a-08a24ce46bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f47277-833c-4ed5-bee9-4f8642180781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437d0c12-7513-4538-903d-5f3384ccb9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a32b366-0b07-4d34-85dd-a5be2736ed5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542b2fae-82b3-4b91-b85f-d55f3ed34d96",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca65ed2-5cfb-4c5e-803c-abaeaf64d00d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57599b9-b8cb-460e-a7a0-6714283a9a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53559558-b1db-42ea-85bc-85d345d90846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af459c20-a150-483a-adf2-10be777043dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892df082-4346-4054-bd65-16574a3ba9db",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5617244f-f013-4473-a179-8c48eee2eee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853bc85d-c0d2-4372-b8ee-bb251b7659ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34a020d-b351-4dd8-8fd0-d46e941335fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133e31f3-0aea-4206-8ac2-6d2d2c50db10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2b7a5f-676a-4c31-92ee-b9586a4dc0bb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7eb45f-44d3-4ca1-97f6-ecb5b564dbc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda1382f-887e-4648-acc5-517dd731739a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b42377a-3982-42b4-939a-eadf90acdee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6fb8a2-f675-4fd0-933a-351b27d3364c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b365ea-fc54-4fe8-becc-8b14bf50caba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e0e6f6-c8e4-44cf-a37a-b8ae21ce8ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424bfafc-3479-4ec3-943b-1ed68ecf4562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61626443-4948-46ed-a9ca-f12f277e5a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d0ae3d-c6bc-446f-a028-022af55b9322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b517de65-5cd0-4655-bb4f-2e1d8b437679",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9063b9-828c-4962-b2e6-4f12c9b2591f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11e1080-5a9c-44c6-aecd-5ac4064f43f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506e2f28-d028-45fd-9b57-5caf977d8416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c500a7-bc26-414e-94c5-7ad71ae60c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db36101-7e41-4e4b-b35d-a7dc68bb58b7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831a9dda-4059-4b88-a86c-21ee3e3a33e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a071849-817f-4293-8e22-223de2b68484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b73db9a-8950-4445-8e72-62f0737b1fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d4c029-8934-44fb-b7d4-a75c1d34ba30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551b40b9-6f9e-4bbb-a34c-81975613de93",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11d5375-4c72-47f0-88bb-09ac20305ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf9f56e8-c9e3-40cc-b195-87c2713cf72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20b564d-3d2a-44dc-b129-5c3e9a69eeaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f95521-105f-4914-8c2b-e1d4e4dbde73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b4f0ba-ffed-40b2-8b1d-431fef96afa2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf9007b-2c18-4d92-b382-bcd950fcd2ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37fef0e5-2450-4d1d-904e-003f5b511225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be349c63-c577-4a43-b612-ebf420fd3b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bda7ba-fd01-40d7-bd52-1c34e83b6f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0204c9-ab4b-43a5-9ee4-8c1e56b9a615",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5199dd2a-28c0-44c7-9a2c-6d208a6729d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7d9824-5953-4f10-baa4-03ad866bb20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a019105e-0021-49d9-b808-419e84dfa6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74696a4-e9d5-442e-a6d3-a48d9c2d8b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f954ff-601c-4993-bc0c-ce1eaac5eb9b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c267c4-5723-4771-9571-291304ada915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad68720-d640-4d69-8d14-8f45ee16d211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb5e1fa-15db-4fdb-b539-0546fcc66a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34975792-78d2-45e1-82bf-abcf15f3fb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a9d352-0100-4a2a-864f-fc95a19d0b9e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b49a5f1-0b20-4e03-b409-c7d40e69344b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03b5dd8-c381-4b73-a2ff-ba60defdf28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdd56c0-eb52-4b06-8f4e-e983c4c0c703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fc5188-87ee-4679-8334-fc7e41c7154e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1d3490-2340-4d7c-956b-3c991f287b09",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13ba90a-6a9d-4141-8848-b613644e14e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273d808c-34e7-44b5-9040-8501c2c00c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7a2fa9-7cf0-48a2-9329-5e05f53795e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a8c2d9-8734-4ffe-bc08-99ebbc792215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d73e7e-2832-4763-a659-e3e61f4bd78a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef054aa-b5aa-4edc-bb7f-7b983030a379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4911d8-0cb9-45b8-acaa-8029013e91b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedbf408-a8a9-4170-ac10-a22cdeed1f35",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbd33d6-8e82-4459-93e0-a5f683a30049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539550e0-1aa8-4c18-a275-c438f133f2db",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1145580a-979e-4175-b114-8e636c4e7206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f9b8df-04ac-4734-ac99-b5ccef70fb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1eb861-2224-4950-bda3-4c53a6c7e29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b21524-8a00-46e5-ac31-c7fb045390f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1b0dd2-7d94-4e36-8165-9a133bb5187e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b787d1-51e3-43fe-8527-4d27d14684b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e27a1dfa-9466-4f07-8c76-77e96b44d22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a7c1af-84ac-4f2d-93c5-3a916974ca1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd8a2be-704d-4552-a77c-2baa255aa78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588ba650-c4f9-4df2-88bd-bbb3ab669710",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb69e93-5887-4148-915e-079ce08e3fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d98035-963c-41dd-86f2-14d2c4826873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25974b9-de5f-4402-a423-bb0a016f0b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf836c0-b115-45fe-87ef-403887c90949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee16d2a-2d10-40f5-b41d-c887664968d1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7856509e-b1eb-4118-916e-e030e14b2db6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fac7cb0-e563-4672-ae94-90052e3ed36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6948815c-45ce-4b9b-b815-9d772755e980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bcbe15-6653-48f7-9e95-a531df6c214f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ad837c-cd91-4ccf-9231-fd19f294761a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c826e54-f052-4dd7-acdb-011388d4496f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c6fd01-8425-4eba-9df9-0ad7fbf13f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623cad92-22c9-46b2-94c3-d7837085bee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff2e5d5-3f9d-4ce5-9dc1-76069115d1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e05b72-dd0b-4a41-80cc-8421da8b1409",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6528357e-9607-4396-8ee9-04c5de7a5312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0e0616-5bf9-4477-bde3-b7c5b1c7c5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee96297-008f-4e39-a492-eaf996b1f9f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999a767c-64cf-4915-adf4-c6f19ec7bc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449a80da-64f6-4853-83d9-a3a2210bcadc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065a96b4-f36a-4fbc-8b10-e8a45fb3b77d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4202a698-72c3-42db-98e6-bcf5a60b3e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edfe712-158e-4842-9238-b20a07c5b84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e1efea-d41e-4127-861c-153b08345d39"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "756ab2c8-475d-49e2-a11b-1f371e3a5759",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69e95938-79fa-46ad-9cc4-6b4e7d68984a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cedae4f9-120a-41b5-acef-1c76cefcdefc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6a53016-4a2d-42b9-814b-536e60ebaa69"
                    }
                  }
                ]
              },
              {
                "id": "fd712496-03d2-471c-a7da-d46b38691999",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02cedb13-a23e-4f8c-9b72-e6535dbab800",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef524dac-e791-460b-8753-d12523757451",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4c9cd022-6db1-4add-b82b-5fdf02d11872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc92e1a3-335b-4bfd-a10d-ba8abc20191f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99b9419f-6aa8-443d-986e-90fff3c10061"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c63a4d7-8fee-48ca-846b-eec122bb5ee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c549adb9-2f36-4a6d-a9af-7e3b5fc3e20a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b96d832b-36c6-4ecd-8ae2-3b6dfb10d3bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7942cd6-b7df-4f22-899e-abfdb526128d"
                    }
                  }
                ]
              },
              {
                "id": "6f827249-78e8-4025-96c0-fb975ee8c9de",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0db5948c-7770-4fc7-8b5f-7d34e5bbdcbc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f02f48-3024-4c17-860f-3fc4e74cc44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2dc56c64-4740-4ec4-a4ae-c8090f9f4c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cc149d-9bc8-4c52-b813-a32d7808f5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90438e2d-530f-4bdd-a3ac-e95bc4e4affd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1a4a119b-f5c7-42e0-8977-167e05fa0e6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72f75627-286f-434e-9e6c-41a3a6acc2e7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4c259d0-f253-4169-973e-00df0aab8876",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf513531-92e2-4b2c-98dd-e5580581ff95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bad8bd1-9d78-4726-96bb-5d793181d013",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be05002-f780-4bd5-ad0e-8ae06f96d754"
                    }
                  }
                ]
              },
              {
                "id": "6e99f141-af56-40a4-8ff0-23d3f67b4550",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4187f18b-60ab-4c47-a5f4-f7fdd1cb55b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1a29d8e9-887f-4c18-b510-0c36933a5fea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e82bf51-e657-4ab8-9728-9ca070524c8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ab97785-563a-474a-88aa-abf4311ef07d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "455b74a4-d434-43b1-9639-74493da007d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "79582feb-0844-4154-b505-63dd9566bad2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aea237f1-af50-4ceb-b959-103ff56f5a49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4ed28d4-be58-4698-b9bc-35b1446ba23b"
            }
          }
        ]
      },
      {
        "id": "59d354ec-1cbf-401f-a899-0ed9d2256e22",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "12fe2d8c-61da-4d59-953f-c4058e955201",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f82d482-06bf-4671-8ee5-9383a154c251",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4a9aa43-89c2-4f62-9fea-c1ffddd38fad",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9669ef-be1a-41c4-ba1e-6069676b55e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ff6ee3b5-e6ad-405a-bd78-1dc7383ad846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac67627-e195-4290-b64e-87cfdb5a909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f88e81d-98e1-45fe-b71a-dadb9ac0ec3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9434c071-3904-4e18-8ed1-ae5314b9d81b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e16586cf-a7c5-4323-8fb7-8759602705f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4db537eb-bbdb-4352-a68c-1a527c0722b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9f2fe89-5038-4d01-b1b9-4fa1e4e2c8f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f502152-1b18-4f36-8e49-afb0018e9828",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1866b46d-ce95-4c9e-aabc-45ab8eedf0a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "152e3cf7-cc0d-413c-9140-487abe65f5c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0999ec3-d433-4f38-90f5-76f347875842"
            }
          }
        ]
      },
      {
        "id": "f673c083-716f-499c-85e9-3a3d49a7bd94",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f29520b9-23d4-4926-9eea-1cec905405d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21c4b63a-1345-4f49-9b9e-6f51e3e53fe5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01e8d7c9-6cda-4c8b-911d-d4cb979b4947",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d42c44-a9bd-425b-a3b9-24447ba35f60",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "008bcc1e-3555-4d1b-bd99-cdce812f5ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dcfb92-8434-4549-8dcd-614db9fb118b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96931294-9dd6-4247-8c53-a33691b2b17b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd88653a-8c81-4180-a31b-d1571a73ef8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53c8509d-4c88-4702-aba5-901a00da98bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "affa8855-2f2c-402a-b25e-6d71aee11279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "510f318e-8224-47ce-b8a8-fc124549c69c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c94e78f4-8c2c-41d9-b218-8b66f4eb029a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4fdac81b-c8ef-4ac5-a970-44c5d88612bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c5388b0-eba5-48e5-b290-d933bf72547d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33dcf1e3-430c-4e07-9e3d-608cdc677f1d"
            }
          }
        ]
      },
      {
        "id": "cac0296e-07a8-4800-96a9-cb33c31074a2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f4c94a96-c169-4dfa-b6b3-ebe3dc06b027",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82b42864-b497-4998-bc4b-d4e6c0392cb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb67e51e-9666-4cb1-a73c-39f8b68dc082",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca3511a-3f86-4898-ae0f-45d07d8c22e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9710e1e-09a7-44d7-9b53-1047938a4a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26e69fa-b482-408a-9d36-493a236c2689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a398023d-ec34-4d3a-9837-3b798b8e49ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a38b8181-01bd-43c3-a8be-9b6c22baf7ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2549336-6bbc-4e31-a1cc-a867304fdcd8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c5d74bc-a25b-43df-b33e-839695942675",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "733cbd22-b9a3-489a-aae2-c363f84b54a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f404f4ec-98a4-4a56-9f3f-3b6350610e3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d67920c2-1025-480b-aa5d-bb2152260c7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0c8fddd-81bd-4c49-a2b9-9ed101cd1569",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f23419c8-beac-4240-9e10-08eea353ecc4"
            }
          }
        ]
      },
      {
        "id": "876be81b-b53f-4d5b-b9e0-d00718b30069",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e96270f2-67b3-4143-b325-887b1d321e5f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcd963a5-e72b-459a-b202-bf3679430375",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e5da64da-7054-4786-80bc-4825c10c6105",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d01c924-17a0-4bfd-bff8-5ffa53eabbf5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3c62c92-a6a2-4618-8c0f-de68f973d2e1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 128.14084507042253,
      "responseMin": 7,
      "responseMax": 4268,
      "responseSd": 363.10152794953376,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695083617594,
      "completed": 1695083667990
    },
    "executions": [
      {
        "id": "4c19c1c4-cb4b-4c55-bc0e-dce59f47312b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dd343600-c584-491d-8767-fb544bf744d3",
          "httpRequestId": "24aa3cc3-6127-44d1-8c44-3558facabfa5"
        },
        "item": {
          "id": "4c19c1c4-cb4b-4c55-bc0e-dce59f47312b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "57209eb5-160c-418d-8698-78f4807ca2a5",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "3f8bffa0-caaf-4ccb-9fa9-2fe07f5de98a",
        "cursor": {
          "ref": "67d429e6-a4f5-4e02-82bd-c7f2cc233e84",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "edec0c0e-abc4-451c-bc00-ff0ff58e47fc"
        },
        "item": {
          "id": "3f8bffa0-caaf-4ccb-9fa9-2fe07f5de98a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a350b53f-143c-44b8-aaa1-f5c684fce9f3",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "51407bbb-cac9-4eba-b3b4-c6b26390844f",
        "cursor": {
          "ref": "a3152506-e825-4bf8-914a-fe187f4c23c9",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f3f22ba6-c065-42ed-b1ee-1788ee6eb3e1"
        },
        "item": {
          "id": "51407bbb-cac9-4eba-b3b4-c6b26390844f",
          "name": "did_json"
        },
        "response": {
          "id": "e5792d3e-93b4-417c-8342-732f847beee2",
          "status": "OK",
          "code": 200,
          "responseTime": 411,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3843b9d3-4b56-4609-9d8b-55d85075ea99",
        "cursor": {
          "ref": "9f7ddab2-9d51-4974-a331-658b15cbfb91",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f825cea8-1981-4fcc-999e-9d544234d7ff"
        },
        "item": {
          "id": "3843b9d3-4b56-4609-9d8b-55d85075ea99",
          "name": "did:invalid"
        },
        "response": {
          "id": "b4ee0b5a-94b5-4a95-b9dd-1cce1b1e42f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 579,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3843b9d3-4b56-4609-9d8b-55d85075ea99",
        "cursor": {
          "ref": "9f7ddab2-9d51-4974-a331-658b15cbfb91",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f825cea8-1981-4fcc-999e-9d544234d7ff"
        },
        "item": {
          "id": "3843b9d3-4b56-4609-9d8b-55d85075ea99",
          "name": "did:invalid"
        },
        "response": {
          "id": "b4ee0b5a-94b5-4a95-b9dd-1cce1b1e42f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 579,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c9117a-6795-4126-be5a-7f8b1dcf7600",
        "cursor": {
          "ref": "382ec391-772d-44b6-86fa-41f06a23df21",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8d15375c-41e1-4c5c-be17-a27c46143a9c"
        },
        "item": {
          "id": "e4c9117a-6795-4126-be5a-7f8b1dcf7600",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "67bf4da4-e647-4dca-b538-31449482533b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 93,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7eb21ec-58c2-432d-81c8-119508ccb940",
        "cursor": {
          "ref": "d15a9e44-756e-4f4b-ba5e-6b3458550da7",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9f33431f-2dac-4bc2-aefa-1acb54e0d248"
        },
        "item": {
          "id": "a7eb21ec-58c2-432d-81c8-119508ccb940",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4845768e-f156-4f69-ba66-164d2f9f66f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473608ab-02eb-4098-8149-ad676c0c609c",
        "cursor": {
          "ref": "0f92d5c0-a6ba-4d67-9bb9-831c5ca4ec33",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7d35ed8a-00b6-4349-939c-6d07e703a2c6"
        },
        "item": {
          "id": "473608ab-02eb-4098-8149-ad676c0c609c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9256add9-9af7-4af7-b88e-8728e4ea6720",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc37f7d-dfc8-4cfe-af17-c2d493f61993",
        "cursor": {
          "ref": "dc5726bd-45fc-4b81-a095-6e7ce4f159ca",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "325abd29-6b91-4ddf-b2e1-118bd726de97"
        },
        "item": {
          "id": "ddc37f7d-dfc8-4cfe-af17-c2d493f61993",
          "name": "identifiers"
        },
        "response": {
          "id": "6a5a0040-feeb-4e24-947b-911349616bfd",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3830ad2a-512c-466e-9792-e11fd728bae1",
        "cursor": {
          "ref": "ca709dfd-6bd8-471c-9832-8beedaacb845",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8ba3f540-18f8-45a0-b235-7226c0bc90fb"
        },
        "item": {
          "id": "3830ad2a-512c-466e-9792-e11fd728bae1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f5222412-6e91-4f77-b64d-515e70383a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8bc246-a251-4a6c-8108-1b89516d5718",
        "cursor": {
          "ref": "8a2c9cc3-9262-46e6-af24-0f2f71551c9d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e3ef656a-5b2d-489f-b885-dee1b632ee5f"
        },
        "item": {
          "id": "fa8bc246-a251-4a6c-8108-1b89516d5718",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "90e45280-775c-49d2-8632-41f8cea7dd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c8c667-8099-4424-9e2f-d373e09cea94",
        "cursor": {
          "ref": "5ad676b1-1021-40eb-928a-063f3bb6902c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "90d24af8-2db6-4118-af54-5e12f7087ad0"
        },
        "item": {
          "id": "85c8c667-8099-4424-9e2f-d373e09cea94",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1f97102d-bf1f-437f-a917-78d0b45d4780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50505483-67b4-4531-b28a-d5d47236930a",
        "cursor": {
          "ref": "c28a85b8-6750-4ad3-baf3-28a2daa71c2e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "140d6561-6c85-4136-bd13-49cc64ed6ab7"
        },
        "item": {
          "id": "50505483-67b4-4531-b28a-d5d47236930a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f52c494d-acb3-41e1-bea5-f9224dd948b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439f278f-7cd8-46bf-86bb-483dcdd213ea",
        "cursor": {
          "ref": "3e65002c-c89d-4f59-93d1-59acb3c8289d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "999321b4-ac53-431e-8c7a-87b60091fc5e"
        },
        "item": {
          "id": "439f278f-7cd8-46bf-86bb-483dcdd213ea",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "909f769a-e190-44ee-8ab5-cf950be86c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81074510-58e7-4024-8bb3-1547b9b0105f",
        "cursor": {
          "ref": "de492e81-3257-4460-b954-8d478865a371",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "853a1566-e9e2-446c-848e-ee8cb67ab87e"
        },
        "item": {
          "id": "81074510-58e7-4024-8bb3-1547b9b0105f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "645d52e7-a746-4a23-a099-e5db84078096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bde64ad-b9ef-4752-be6a-ab0718b7b3cc",
        "cursor": {
          "ref": "fc9c2499-6c5a-4131-8dac-968060165296",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e367f610-1278-4c87-8ac8-a6ac0342711b"
        },
        "item": {
          "id": "4bde64ad-b9ef-4752-be6a-ab0718b7b3cc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d3681540-ce2a-414f-ab19-06332bef2feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b174ec1-d5da-4930-b2c5-e4c800e1383c",
        "cursor": {
          "ref": "ae7d80a2-57bc-4db0-9250-e7c02129e2e3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cf2238ac-4442-49fe-a74c-ec970dd7a9c3"
        },
        "item": {
          "id": "0b174ec1-d5da-4930-b2c5-e4c800e1383c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a9b3a67d-c8ee-42ef-b9d9-8ca23ca2d432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ff677-f2c2-4bca-a2e8-a00b67544093",
        "cursor": {
          "ref": "edc17170-3e1b-4d17-b75d-d2db7ac79ad6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a6e67433-2544-44b1-b24f-7c4bba0da9b7"
        },
        "item": {
          "id": "263ff677-f2c2-4bca-a2e8-a00b67544093",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fff9c4e5-ea01-48ce-bab0-7e78dbe26c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9688a3f-e09e-4729-a79d-6bbcbfe192a5",
        "cursor": {
          "ref": "6a06065f-2ad8-4cc5-b1ce-d5a5e4863b17",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fa551471-7c04-466e-82d0-4829a870c054"
        },
        "item": {
          "id": "c9688a3f-e09e-4729-a79d-6bbcbfe192a5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7b4efb01-3364-484b-85c4-437230a2e224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df766a0-e515-4a4c-9ef6-1287445f32a0",
        "cursor": {
          "ref": "d18e9c1f-13db-4ace-b8c7-53d14fec84ad",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9abab01d-1909-4f7c-8030-2a3d4c054481"
        },
        "item": {
          "id": "1df766a0-e515-4a4c-9ef6-1287445f32a0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ad2e30fd-05fd-4bb0-9ef8-cfb819423732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e55657-c368-4ff3-9c03-9de695e4d09d",
        "cursor": {
          "ref": "8792d572-5ef6-45ec-87f5-5c1fd0e428ab",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d9bf106e-9cfb-4e2d-8533-5a9bd925aa50"
        },
        "item": {
          "id": "d6e55657-c368-4ff3-9c03-9de695e4d09d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "42e6a593-f533-4212-afea-7cc1a1c54dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5078d51-5162-427d-bc75-dbfc89b7fca1",
        "cursor": {
          "ref": "46ae75aa-dfad-4789-b6c0-6c9c1711d26f",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1807c201-bc23-4747-91db-ecbc60c73872"
        },
        "item": {
          "id": "b5078d51-5162-427d-bc75-dbfc89b7fca1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "36ee4ca7-08fb-4d2f-bb82-143efadfb06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301826d7-aabf-4e65-acef-0b7c6f9d51f7",
        "cursor": {
          "ref": "84310ef5-4267-4a81-87a1-20b5381eb784",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1ebbc976-ab36-4cdd-a0c3-e44e3e45e3cf"
        },
        "item": {
          "id": "301826d7-aabf-4e65-acef-0b7c6f9d51f7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b0b1c215-7b11-40e9-b56c-83c7827f98ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f202a5-4e29-47bb-b622-9f28ad8d5a76",
        "cursor": {
          "ref": "28ca3a8b-4b86-45a2-be64-05e252dfc537",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c5e44981-a9b0-4dd2-b7da-1073f6609c3c"
        },
        "item": {
          "id": "86f202a5-4e29-47bb-b622-9f28ad8d5a76",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "115615c4-1060-4854-aa66-8950089c0385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff0869f-8430-45a0-af4f-733e9fa55beb",
        "cursor": {
          "ref": "8c9cdb1d-3333-4851-ba46-b4b306b9786d",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a530ce7-4405-4398-aca7-cfd3699187f8"
        },
        "item": {
          "id": "bff0869f-8430-45a0-af4f-733e9fa55beb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ce811ce0-c4e2-44b1-b892-8527e2d9822f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5403eb3c-ba29-4f9b-867a-a3236274d74c",
        "cursor": {
          "ref": "5be1affb-1815-4029-a737-859bf2ee52d0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ca83ac1c-56e4-4204-a557-64256134c1b6"
        },
        "item": {
          "id": "5403eb3c-ba29-4f9b-867a-a3236274d74c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dc579cd9-4876-429e-bb05-1af68a32cc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91aa5509-bcb5-41e0-a48a-9b1f7742cb27",
        "cursor": {
          "ref": "1a20361b-3490-4bd9-b9ef-1e7e87fb3f18",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "acf66182-cf65-4597-bc9f-892e5b91acea"
        },
        "item": {
          "id": "91aa5509-bcb5-41e0-a48a-9b1f7742cb27",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2cde6ea5-7947-49da-abdf-4bd81fa6b85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd6b851-9283-4948-af4d-fd0b07f3c456",
        "cursor": {
          "ref": "3451ec50-f2f3-4045-a355-23fe22aa276e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "eaea6212-8371-4c7e-8198-ba510e9e0259"
        },
        "item": {
          "id": "9cd6b851-9283-4948-af4d-fd0b07f3c456",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f5e664cd-b3cf-47e1-a411-a0dce969d6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e141c2e-e99e-495b-93c5-de4480bb1ba0",
        "cursor": {
          "ref": "2f66a045-3336-4922-b6e0-61bc1285df10",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ee91f3b1-5164-4d02-bd2c-c0169cac43af"
        },
        "item": {
          "id": "0e141c2e-e99e-495b-93c5-de4480bb1ba0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "da52369a-0736-493e-9d65-5507e4a1687f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a143fd4d-c990-417a-a8ab-239cc49f0e04",
        "cursor": {
          "ref": "7ab1f71a-e557-4896-a792-25b13c8b759b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4a423a9d-10c8-45c3-8e62-c4f35aaefea0"
        },
        "item": {
          "id": "a143fd4d-c990-417a-a8ab-239cc49f0e04",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f0017dea-3d54-47a5-939d-5167edbc9107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f62180-a425-4111-8379-dd59ee438260",
        "cursor": {
          "ref": "ee9905ee-7608-487b-9cef-3cbe7255e1ae",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1404c78d-a00e-41c8-9920-df2df54de1d4"
        },
        "item": {
          "id": "47f62180-a425-4111-8379-dd59ee438260",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7c930522-8c5d-4b17-8dda-fe3d93afee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7c18eb-1c6e-468d-b6de-be283bc0557c",
        "cursor": {
          "ref": "262169b7-537c-45bb-a632-d69f1ab9fd34",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "95cd76b8-dfa5-40d8-99db-6df36dc34a95"
        },
        "item": {
          "id": "ad7c18eb-1c6e-468d-b6de-be283bc0557c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b64f966d-f18f-4480-9c10-ade9cf8e5f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10733dbb-fb60-4265-93c0-c08a134eac59",
        "cursor": {
          "ref": "22a4fdd4-c16c-4ffc-b3f9-139727b370df",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8e3eae9c-8f8c-4de7-980e-fc7d0eaf31c7"
        },
        "item": {
          "id": "10733dbb-fb60-4265-93c0-c08a134eac59",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a634f6e7-9df1-4f71-bbd9-3e4ffd688d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b358c7ac-1932-4195-ab1b-3f17e2d54b23",
        "cursor": {
          "ref": "4d30bf4a-2bb9-4c96-bde6-bee1475bccfe",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a83749c9-5390-4d78-aa57-7b887055aa64"
        },
        "item": {
          "id": "b358c7ac-1932-4195-ab1b-3f17e2d54b23",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6d5ba2b6-9221-4345-813c-03731b0b91fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc41349c-b240-4ff4-9395-64cbbb7002e5",
        "cursor": {
          "ref": "d5bc0cf1-dac9-4bd8-ba19-fb9c8a14c49f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "20bb2b5a-ea4c-4919-97c9-a7cd4ff68782"
        },
        "item": {
          "id": "fc41349c-b240-4ff4-9395-64cbbb7002e5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1f24e45a-b87b-4112-8c61-c36f39e1a12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdea90a7-9c50-4203-84dd-309a737d44f5",
        "cursor": {
          "ref": "bf35252c-6f8b-4e22-b3ee-ae7b3b4527e9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0e6dc102-9caf-44d5-a483-0a8fe99ad401"
        },
        "item": {
          "id": "fdea90a7-9c50-4203-84dd-309a737d44f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "16a49886-5cfd-40de-abb3-9e5c759ddaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0bebe7-9b17-4326-b78a-82a63d778797",
        "cursor": {
          "ref": "868a61c6-0626-4fe0-8e75-bbbd31d5668f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0bf5cce1-63b7-4a0d-906d-af3580b22ac0"
        },
        "item": {
          "id": "5b0bebe7-9b17-4326-b78a-82a63d778797",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1ee837a5-8ad5-4aee-8061-f61d99c5ee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f98d93-c674-456c-94fa-ad06eed244a0",
        "cursor": {
          "ref": "c60c57c2-ec10-40a6-9e5e-1a2d3db0e66a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e62718e5-a54f-4794-ae65-9e3bf669ad80"
        },
        "item": {
          "id": "b8f98d93-c674-456c-94fa-ad06eed244a0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "12454f49-46a0-4ea7-9b2d-d6ad9f1d0c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6ee5da-8c9d-4105-a3ce-b0140ea23c5f",
        "cursor": {
          "ref": "51322309-1897-4a2c-894d-e410aa6dcfcd",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "34f94acd-2ae3-409e-a9df-838e33977a30"
        },
        "item": {
          "id": "ee6ee5da-8c9d-4105-a3ce-b0140ea23c5f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "907f7b3b-a80f-4404-a36b-f85d624dea28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74045f03-c5d9-4d30-89c5-d3952267d45a",
        "cursor": {
          "ref": "4bdb73a8-0d8d-4be3-90ae-cd8c10a26924",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4184847f-efb6-4cc6-acb2-06891c4f48be"
        },
        "item": {
          "id": "74045f03-c5d9-4d30-89c5-d3952267d45a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8ebdf8a0-af4b-400b-8c91-8927def82df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c7ef15-6578-4b8b-a120-f0ab7083bdc7",
        "cursor": {
          "ref": "b3916453-7e6c-46cb-87e8-7ddc03022367",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9b2ec516-c16d-44cc-9b56-bb79e62cdbdf"
        },
        "item": {
          "id": "99c7ef15-6578-4b8b-a120-f0ab7083bdc7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bc2f52f7-aa0c-43c0-9b33-98cca4a4f991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8965d863-564c-44d4-9f6e-d9994909b67d",
        "cursor": {
          "ref": "02d81ce2-4c71-4019-995c-3581e2501ef9",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "29edf24b-8418-4a34-b57d-417951b2025c"
        },
        "item": {
          "id": "8965d863-564c-44d4-9f6e-d9994909b67d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cd387153-887a-4045-a13e-29687111af9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3edb980-ba39-48ce-aabd-64b2fe8a2b95",
        "cursor": {
          "ref": "cfcb3d0d-db6a-48f5-8d79-154817253368",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "542a0257-16ec-44b7-82f6-01da0f3dea67"
        },
        "item": {
          "id": "a3edb980-ba39-48ce-aabd-64b2fe8a2b95",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f5d88fd2-fcb1-43ac-b486-faeaf95698b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b264c0-6c80-4ff7-9dfb-d6feee45d011",
        "cursor": {
          "ref": "0d086b5b-14d1-4b63-8813-d76f3c7000c6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8c0e5d27-e0ff-465e-9748-d61e74240dd3"
        },
        "item": {
          "id": "72b264c0-6c80-4ff7-9dfb-d6feee45d011",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f00fc844-efa1-4484-9b15-2f562e6c8c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d7562e-38f8-4b83-9fe1-94270ca14d7c",
        "cursor": {
          "ref": "629f675d-b83c-48bd-88ae-26b30c57a838",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "475747ee-6f58-4b3f-b164-17c3542109ef"
        },
        "item": {
          "id": "d2d7562e-38f8-4b83-9fe1-94270ca14d7c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "60f3ac25-01b0-4fb3-b364-e2e78ec91d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fe19cd-d2ce-46c5-a8b9-7e423e9ce69d",
        "cursor": {
          "ref": "2c13a762-d3a0-42d4-b90f-9ab02f84c5f9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f90d899b-ba11-41fc-8ff2-eb0b115431c1"
        },
        "item": {
          "id": "60fe19cd-d2ce-46c5-a8b9-7e423e9ce69d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c9ec6819-76b9-4e10-ad75-f7f1115da487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea2a010-a712-443e-bcf0-9d233da8ee9b",
        "cursor": {
          "ref": "37fc3b1b-ca3a-46d9-a92c-61c278b40e82",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9881ecc7-c6dc-445f-a0c2-5f0944556e66"
        },
        "item": {
          "id": "bea2a010-a712-443e-bcf0-9d233da8ee9b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fa4daa37-fc26-492e-a46e-223a9797404c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7695d177-4dc7-4f44-a31b-56dee599ec09",
        "cursor": {
          "ref": "53fe453c-bfbc-4542-b85d-921c369ba221",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0a2dc00b-e904-4335-99f3-3ecc33b6b84f"
        },
        "item": {
          "id": "7695d177-4dc7-4f44-a31b-56dee599ec09",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "69528724-fe46-4bcb-b76f-bafd985e4106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2040be-fe6a-483c-8bbf-434243f3db04",
        "cursor": {
          "ref": "0d62900a-2c11-49ee-92e1-216818d7d2a5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c3e8e831-33bf-4b49-b53a-745670b85e30"
        },
        "item": {
          "id": "1c2040be-fe6a-483c-8bbf-434243f3db04",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c52f2e3a-cc56-424b-8bb5-7b1635214612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd80ca48-2e18-4e0d-a0d5-c42ada9df7f9",
        "cursor": {
          "ref": "ba64e2d6-bd1a-40e6-a3ed-da1bf8b16ed4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3c56835a-a239-4af3-b359-2a1eeb2e7f3a"
        },
        "item": {
          "id": "bd80ca48-2e18-4e0d-a0d5-c42ada9df7f9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e9c5d5cc-5324-4995-8c35-8cc7a90e3e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0770b465-b253-4dc1-9dd6-012b54c1089c",
        "cursor": {
          "ref": "3c60d001-0ba1-4125-8639-13d9090fc99c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "472f59b8-0cc9-40fe-9bae-6b588f811393"
        },
        "item": {
          "id": "0770b465-b253-4dc1-9dd6-012b54c1089c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "176b08db-f2ec-4a6b-9fd4-0af80ff8e52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247b9e71-52df-4e64-8a84-5709989074ef",
        "cursor": {
          "ref": "706c9b52-aa53-4d7e-a9bb-72ff17681337",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cfbc9928-b48d-4c22-a9c0-c2bd0f62e343"
        },
        "item": {
          "id": "247b9e71-52df-4e64-8a84-5709989074ef",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3e2513a2-8da4-4665-b1a3-ad284fef7211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398b0d07-7ed1-4932-a078-55a1fd427491",
        "cursor": {
          "ref": "61d45567-2673-4139-aebe-58a55d762728",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a99f4a72-64f7-4be3-820b-3d90d45f604c"
        },
        "item": {
          "id": "398b0d07-7ed1-4932-a078-55a1fd427491",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "447e2b17-7d0d-45a4-be38-25bc7efd6a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437d783b-6e21-4285-a24f-b2c1148b48e8",
        "cursor": {
          "ref": "0787c46b-d4fa-48ab-88c6-457586235e15",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1668fb00-445d-443e-9c86-5541710e71fc"
        },
        "item": {
          "id": "437d783b-6e21-4285-a24f-b2c1148b48e8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5df5ff20-5ebe-4ecf-a761-b6933d4e1d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254a734d-bf27-424d-a2a4-a9b967f829d4",
        "cursor": {
          "ref": "e42bd310-b2fd-4221-82bd-e53fa4e4494f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7cf34c31-1f31-45b2-8fdd-e415e0789c33"
        },
        "item": {
          "id": "254a734d-bf27-424d-a2a4-a9b967f829d4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8fcbf404-7fd8-4809-82be-5ac23da75ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1a7550-814c-4521-a99c-51a55a076486",
        "cursor": {
          "ref": "ac47740e-4bef-4db8-9e4f-82220ec40a55",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "518d9606-b06c-4234-87d1-4eddbfdb86e0"
        },
        "item": {
          "id": "0f1a7550-814c-4521-a99c-51a55a076486",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7dd4ffb9-658d-4f7c-b73f-e673cf5d53de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b5efe6-006f-4eef-8ac2-23f15aa8430f",
        "cursor": {
          "ref": "4de257e9-daba-45b8-90dd-37db1d67f25c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c9eb5794-4f7d-429c-bad6-8d3b4121f0f6"
        },
        "item": {
          "id": "c4b5efe6-006f-4eef-8ac2-23f15aa8430f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1ebfdf77-9fb0-43fa-b1b3-6b68347a39f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052b7ea9-2bcd-4e98-a745-6e864d1b988a",
        "cursor": {
          "ref": "5f84b64a-67db-4f45-a056-59ca30a02801",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d3ba4ac3-71d5-4faa-af94-9279d92ebe53"
        },
        "item": {
          "id": "052b7ea9-2bcd-4e98-a745-6e864d1b988a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dc051aae-03f9-452a-8a7d-fabf81c6deb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660ddb9d-6044-44fc-b59d-247c3ee7c0c9",
        "cursor": {
          "ref": "e1da2dde-109d-4034-b915-c41ccbd79b8e",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aea81bc9-94f0-46bd-a935-10cc4e0bf2dc"
        },
        "item": {
          "id": "660ddb9d-6044-44fc-b59d-247c3ee7c0c9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d2a15b64-65f2-4544-b365-cf924c5ce605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e761f7-9b3b-4472-a0ae-386a15f282e4",
        "cursor": {
          "ref": "46d622a8-3581-47af-91a6-7e08a2872181",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5f6bba0d-e03f-41be-9dcd-6c275c9137c1"
        },
        "item": {
          "id": "a5e761f7-9b3b-4472-a0ae-386a15f282e4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "eeb14dbc-71c5-40f6-8d5a-3703e3a96980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88942812-61f4-4882-932f-cd37216df98a",
        "cursor": {
          "ref": "401c67d3-5732-453b-a88a-7068e4d7166d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a5781ae5-8b8c-46cb-ad93-10973f80dbf5"
        },
        "item": {
          "id": "88942812-61f4-4882-932f-cd37216df98a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d53f3d12-f0b3-4772-abc7-f8ea7d324d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b925f3-81d7-4e7d-a020-94c054ba9d75",
        "cursor": {
          "ref": "ed82a171-c96c-4844-aa10-17e54a6e11fd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7a638c84-b58b-4626-9888-a937b41da1c0"
        },
        "item": {
          "id": "77b925f3-81d7-4e7d-a020-94c054ba9d75",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3dc94d03-28f1-4597-855b-18571b7aa802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5989a02b-7ec1-43c9-880a-421b054d6fab",
        "cursor": {
          "ref": "69259f80-bb60-4414-8e95-118fda05ef9e",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fe045b66-5962-4930-960d-6ae8b72d4e94"
        },
        "item": {
          "id": "5989a02b-7ec1-43c9-880a-421b054d6fab",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95aa31f7-d562-4f47-9c0c-bfb02386a481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89374566-9dfd-4390-8257-dbdadd57a501",
        "cursor": {
          "ref": "0abd5709-aea8-4e0c-b40c-1ba2e84311a2",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "57bd7a99-55a8-4e58-be58-fd20384e6c9e"
        },
        "item": {
          "id": "89374566-9dfd-4390-8257-dbdadd57a501",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e28c53aa-9d13-4451-bfd0-c2891c6ce7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f98fe6-9c07-4d11-a643-aac5607116f7",
        "cursor": {
          "ref": "0c4a2e60-f3b8-4e7e-95b7-474bb0e99ab4",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b8e34469-012a-4973-ad59-6f8e415acd0a"
        },
        "item": {
          "id": "f7f98fe6-9c07-4d11-a643-aac5607116f7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1954cf2e-e406-4e5a-8b19-68fc6e91c9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbea7eb9-64f7-4801-9a60-10c571e04c99",
        "cursor": {
          "ref": "92588dbc-abbd-4fd2-9bd6-3ff0ab58fcb9",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "07b07456-9439-4ad1-aac0-23d80c1fc652"
        },
        "item": {
          "id": "fbea7eb9-64f7-4801-9a60-10c571e04c99",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b145b253-452d-45b1-83fc-2a06c7e45644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc89a3c-9cac-449d-ba16-c512123c9734",
        "cursor": {
          "ref": "743c4d6a-e245-4d12-89e0-243d6457d772",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f3d52fda-bd72-4777-83a4-7e5d3832ead4"
        },
        "item": {
          "id": "acc89a3c-9cac-449d-ba16-c512123c9734",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e6069415-29f2-4a4a-9567-458c1c3f146d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27026096-8ede-4694-853f-39f1d002f14b",
        "cursor": {
          "ref": "cacc7507-f91d-4b75-af91-c2d5543aa0bb",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "515ba822-786f-47cf-ac10-605b87e30a60"
        },
        "item": {
          "id": "27026096-8ede-4694-853f-39f1d002f14b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "54acdca4-ca90-4b72-9443-a9ded1724ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0c17ba-7a1f-4bf7-b736-7db66fad14ad",
        "cursor": {
          "ref": "d88be57a-9a32-461f-bba2-a761dec1207d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d10c08e3-713f-4694-82e0-e326163eb927"
        },
        "item": {
          "id": "5f0c17ba-7a1f-4bf7-b736-7db66fad14ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "158f41b2-9d61-4e7a-b021-60e4c402c953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5b1c02-526f-47a5-adc4-bb3b8a9c5b43",
        "cursor": {
          "ref": "b71838f7-355c-4426-ac89-987ee3f04722",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "26929df2-53cd-402d-8ab6-17d22957138a"
        },
        "item": {
          "id": "1a5b1c02-526f-47a5-adc4-bb3b8a9c5b43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5431e3ae-51d0-4a96-9abe-ed2806891769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509acb77-5574-4f04-8760-248c4572a446",
        "cursor": {
          "ref": "b6bb3eb7-1439-4746-ad3c-2e4692a15903",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3b216780-c70f-4f45-b528-b6c235d9ed3a"
        },
        "item": {
          "id": "509acb77-5574-4f04-8760-248c4572a446",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bb1e4347-3a71-4ba3-8a0c-ca1d7d48b014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a26063c-d051-4be3-8441-1626c553c603",
        "cursor": {
          "ref": "470f3907-0bfd-478d-af0c-db3b76c4f98f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4581df88-cbba-45fa-80ca-9bd29d4ba46c"
        },
        "item": {
          "id": "3a26063c-d051-4be3-8441-1626c553c603",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3441ec5c-8e30-46bf-8179-e80ea06c41c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654e8d1a-3ba6-4f21-90f7-d4d30e2c5bc1",
        "cursor": {
          "ref": "5ba0283c-7af6-4a89-b5f0-c1fe02ed9769",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "02df8acb-029f-49b7-9c46-146e2ce4a128"
        },
        "item": {
          "id": "654e8d1a-3ba6-4f21-90f7-d4d30e2c5bc1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "920e9e9f-d3dd-46fb-a29e-ee9f9775a063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dc981c-fb65-4770-adda-821aec25fa2b",
        "cursor": {
          "ref": "42ddecd5-b79f-4f21-a6bf-28c6bbf5da4f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3b36ad8e-05b9-40e0-b2d9-72054b4008ec"
        },
        "item": {
          "id": "58dc981c-fb65-4770-adda-821aec25fa2b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "17ea48d6-d6f2-4855-8249-925e982c35af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ad9816-27fc-4620-9d0b-b520f23eff25",
        "cursor": {
          "ref": "37d7e767-9574-492d-91b2-4aa9305143a2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "97c82908-b8e0-43d1-a9c2-d2804b8f52cf"
        },
        "item": {
          "id": "25ad9816-27fc-4620-9d0b-b520f23eff25",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "73799bf0-6178-4abd-ba07-294ab5a82846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1f7e55-74a7-402d-b292-121b8b19da70",
        "cursor": {
          "ref": "7328dda2-21a4-466e-8544-eb95e3765ab5",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3b62a6e4-899a-4f96-9f53-3e65d816f6dc"
        },
        "item": {
          "id": "af1f7e55-74a7-402d-b292-121b8b19da70",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d8f32f9f-1f96-41d1-ae77-ebfe2dd8304b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d079cb7a-654a-4ffd-a396-c0ed6888f24f",
        "cursor": {
          "ref": "3bcf8235-c229-4686-8919-60f0d905fb79",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ef86ae67-2d8d-4a03-a5ee-0c425e6d797c"
        },
        "item": {
          "id": "d079cb7a-654a-4ffd-a396-c0ed6888f24f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "66899d8e-e8b3-4301-b449-a8cecc801e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e63dee-fa34-40ab-8b60-94f88efd60a5",
        "cursor": {
          "ref": "dc5df0ea-4604-4470-a2d4-b85162bf3d2f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c168b9c3-ed70-4952-9217-50497f5dc152"
        },
        "item": {
          "id": "53e63dee-fa34-40ab-8b60-94f88efd60a5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b13df77c-2091-4a9f-ac85-4dc570d1fd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613a68c0-538a-415c-a60e-f12fb86de0b1",
        "cursor": {
          "ref": "dd302673-3608-4bd0-9c33-c392e19a2458",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b63e3f22-0c52-4a86-98e6-ad38bc2cea97"
        },
        "item": {
          "id": "613a68c0-538a-415c-a60e-f12fb86de0b1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "66fea1f3-8a12-49fe-9a30-6eba65f1787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ea0d4d-3e5a-4676-8cca-12544ec67c49",
        "cursor": {
          "ref": "c872199b-ee78-41b3-b63e-d180f351bb75",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eef831d4-841c-4eae-984e-1b37d6f8a788"
        },
        "item": {
          "id": "85ea0d4d-3e5a-4676-8cca-12544ec67c49",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d25b4376-3525-4eb3-949b-f5c47a510864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6d56c8-d5c6-43aa-8304-fc4d81e8d5c4",
        "cursor": {
          "ref": "05ea45e6-8714-49f6-baec-6dbfae162ca9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fa8c1ccc-76c7-4a67-927f-0c8a3d557935"
        },
        "item": {
          "id": "3f6d56c8-d5c6-43aa-8304-fc4d81e8d5c4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "93d5f19a-00aa-4f55-afe8-779df237b3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db84453-0f7b-4559-b2b0-02245b6c13de",
        "cursor": {
          "ref": "2d0e8aae-4ff7-48e1-af7f-674805667994",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "98081c3f-40fb-4b77-ac42-cbc5be68a936"
        },
        "item": {
          "id": "6db84453-0f7b-4559-b2b0-02245b6c13de",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e1b11c5d-e514-482c-99eb-530353bf8df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ac8765-e692-4ce3-bac3-825819254f5b",
        "cursor": {
          "ref": "29f1e893-ec01-43cf-85e8-d268e1d11a80",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8173714b-8caa-4fcd-a895-9f09438801a6"
        },
        "item": {
          "id": "65ac8765-e692-4ce3-bac3-825819254f5b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "26d6ce60-8d96-4ffe-b8cc-139ed32ae6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c46053b-7d26-46bc-947a-2a15607c96af",
        "cursor": {
          "ref": "5a860f2d-067f-4fb0-930c-e5753a577b33",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3699d872-1e1e-41a4-b9ca-920a330f01b8"
        },
        "item": {
          "id": "2c46053b-7d26-46bc-947a-2a15607c96af",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cebd3cf3-3180-4d43-b62a-20f4a152c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500e5ee3-9ab1-4a34-b239-f7102ff20eab",
        "cursor": {
          "ref": "87485660-3ad3-47d4-9900-d1cdeb3cc204",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "172c0121-4032-477a-b5bb-c312d78e3aa4"
        },
        "item": {
          "id": "500e5ee3-9ab1-4a34-b239-f7102ff20eab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b03869d6-d271-4b05-8c77-29bc352cad64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0686aca-66a8-4942-9be7-af497ce8d4ae",
        "cursor": {
          "ref": "8d37be8b-d949-4042-886f-cf9e5a755864",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a0057f7f-d5d1-4cba-ab49-dfe1a662f5b3"
        },
        "item": {
          "id": "d0686aca-66a8-4942-9be7-af497ce8d4ae",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3418d778-efa1-487d-82df-646039615163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7059bd46-8c12-4e9e-a6d4-5b911478f82a",
        "cursor": {
          "ref": "15caae40-b526-4068-b257-b6cfb3b351c6",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54b481c8-7680-4471-9b37-4f49f45b6a32"
        },
        "item": {
          "id": "7059bd46-8c12-4e9e-a6d4-5b911478f82a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "10d2197c-41a4-4868-ac1d-b89e4cb6548d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d42b4-cccf-492a-9f86-3bb2325dc9bd",
        "cursor": {
          "ref": "224ab48f-f83c-4f57-90c0-8c551520358d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9b833c2e-654f-4216-b478-9a0994915d99"
        },
        "item": {
          "id": "119d42b4-cccf-492a-9f86-3bb2325dc9bd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "71ca30ef-d6d6-46c3-8411-e17365c4eab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adcad96-00a1-4257-8e2f-378efae66b81",
        "cursor": {
          "ref": "ff6d400e-be87-45b4-b1ec-99d0ac63eba9",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "57e2f331-8aec-4507-97f3-72308f791344"
        },
        "item": {
          "id": "2adcad96-00a1-4257-8e2f-378efae66b81",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0b74f66f-e668-43b2-8e06-636ea3641d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494ef289-992a-4d11-bca0-3e7370eb1119",
        "cursor": {
          "ref": "a2c726a5-5c6f-464a-a8a3-265c2445b058",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a71a24a5-258e-4954-869f-f255abec00cd"
        },
        "item": {
          "id": "494ef289-992a-4d11-bca0-3e7370eb1119",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6ea0a075-57fe-4876-ad77-fce94e26e603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3557c88-6845-4366-bdfb-4eea32e8340d",
        "cursor": {
          "ref": "fe9d3a4e-3858-4d6b-841f-4718c16b5863",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3e5fe130-fee3-4324-afa9-0352e93d3615"
        },
        "item": {
          "id": "c3557c88-6845-4366-bdfb-4eea32e8340d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "757f0db4-cfc4-4dca-9600-ce0472e56178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147d497f-1fbc-4cd4-be33-6506960ebd9c",
        "cursor": {
          "ref": "c7080140-2009-499c-8cfa-299c6c34251a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fb1e53f0-bb25-471d-87ee-cd524bd9b506"
        },
        "item": {
          "id": "147d497f-1fbc-4cd4-be33-6506960ebd9c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "830c766d-c858-4100-88b8-eff0c78da5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3398f08d-c4f2-4059-9ecf-18d83fb69e16",
        "cursor": {
          "ref": "de31305f-8b4d-4916-b103-a76ebc4e4e75",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b0051a4a-f715-455d-a42f-54306a8c3485"
        },
        "item": {
          "id": "3398f08d-c4f2-4059-9ecf-18d83fb69e16",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "29e8d50a-e125-4fbc-8166-b5bcc1ca6324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615bc79d-b816-457a-b289-9b2d39efe968",
        "cursor": {
          "ref": "359da6b3-b097-4d68-b69e-29611c09eb1c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f8be34ee-7f41-4eb4-ad85-718478820438"
        },
        "item": {
          "id": "615bc79d-b816-457a-b289-9b2d39efe968",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "112ed906-9f60-4ed2-834e-a16768a51e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c123575a-ffad-4bcd-b6cf-184fd13b8fb6",
        "cursor": {
          "ref": "efcddd02-417b-4711-8a47-86713f0a4d18",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "77fd087f-2631-41fc-bfbd-b05360cfe191"
        },
        "item": {
          "id": "c123575a-ffad-4bcd-b6cf-184fd13b8fb6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "36d4fd23-7150-4f53-8363-7a247257bd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0534a426-7fd2-4bfc-adfd-ef294766952f",
        "cursor": {
          "ref": "0dde8a60-b125-4988-a54a-21587f10ea30",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ca0d08d9-a00b-462f-af8f-bb1508688cc9"
        },
        "item": {
          "id": "0534a426-7fd2-4bfc-adfd-ef294766952f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "57b94fa7-c683-46eb-8920-36c72b9b6806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c774b69-f23d-415a-8f4a-755eee824625",
        "cursor": {
          "ref": "3df321a9-de02-4b77-bf20-7a234adbaeb7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "77c2eb3e-ca8f-451a-9a85-81f44e83198a"
        },
        "item": {
          "id": "2c774b69-f23d-415a-8f4a-755eee824625",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "98f7631e-2f83-4aca-8cf0-29fa2ec2887a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85b855a-b798-4fc9-8282-adb64b761e79",
        "cursor": {
          "ref": "7dbab8c5-09bb-4dd2-9bef-c13e20b37178",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "23cf6aa5-f6c4-4770-9844-3ac19d0709ee"
        },
        "item": {
          "id": "e85b855a-b798-4fc9-8282-adb64b761e79",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1679e8c7-d745-4024-ab31-a4ef95dd174a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ce1b12-ff09-4c1f-bca3-28de383dc817",
        "cursor": {
          "ref": "a2230db0-e713-45e0-9e80-b2561aad6217",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "023b51d6-6722-480a-9561-64520093bd20"
        },
        "item": {
          "id": "45ce1b12-ff09-4c1f-bca3-28de383dc817",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f92efb82-5634-4036-b496-7d27423b9b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8797f3a0-bb1e-4ed2-81d6-e3e17945a413",
        "cursor": {
          "ref": "1601b560-217d-4ae1-9ec5-bf59954a804d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d55ea546-7891-4dfe-8e80-191d3baaba6b"
        },
        "item": {
          "id": "8797f3a0-bb1e-4ed2-81d6-e3e17945a413",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "779ee7e3-d014-4522-ba8e-1d338a2a73ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91d9eb0-46a8-4883-ab11-bdec0d57e405",
        "cursor": {
          "ref": "714eedb9-6454-4383-afd3-7c24ca65b5ac",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0eb9c082-4da9-4b59-a2c5-8aaad61d5e53"
        },
        "item": {
          "id": "e91d9eb0-46a8-4883-ab11-bdec0d57e405",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "62d4a3c1-ca43-415a-9edd-7b4cd49e1e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f4fede-b805-4c44-a070-1e2e52e7f178",
        "cursor": {
          "ref": "fa6b78ec-e1e1-4b04-bdc6-37ba0f20ea33",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3dcf7c93-e1db-490b-825b-263d194c6642"
        },
        "item": {
          "id": "86f4fede-b805-4c44-a070-1e2e52e7f178",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "18e7d6df-37d8-4387-b529-f3c5d53c6483",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 92,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa365a69-5d7a-4130-af34-fa32cf127590",
        "cursor": {
          "ref": "c1a6b28e-02d6-45bb-82f0-44d94ee28288",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f5c6564c-aa67-480a-b2df-d2bb407f624e"
        },
        "item": {
          "id": "aa365a69-5d7a-4130-af34-fa32cf127590",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d74c7f67-ae0f-4c36-a3dc-c927bb50ee0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "e1aedeae-9dde-42b0-896d-1482297de11c",
        "cursor": {
          "ref": "bbf9897d-391a-4004-84da-0472118635e2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "48bc2239-c0e6-459e-ae1d-e6e170dede39"
        },
        "item": {
          "id": "e1aedeae-9dde-42b0-896d-1482297de11c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e2fa661a-af7f-4973-a57b-9aac34b3d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "0a0e137e-678d-41ff-8770-f823c38da8a9",
        "cursor": {
          "ref": "d4cad81c-972a-4438-9e45-6d1a08a1645c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a820b6bf-2f6e-4644-b0e8-c3428ffb89a1"
        },
        "item": {
          "id": "0a0e137e-678d-41ff-8770-f823c38da8a9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "02172a34-90a5-4adb-a02f-0f158d8bb84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "07c99a43-cf16-4df4-9333-bed7a39c991a",
        "cursor": {
          "ref": "d5c33d3b-c044-4997-8d3b-14ab989a9e44",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c4ace8d5-0430-44d7-b8ea-15bb38596a70"
        },
        "item": {
          "id": "07c99a43-cf16-4df4-9333-bed7a39c991a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "53a99ff2-f6ee-4e14-a553-0a151e1a7f8b",
          "status": "Created",
          "code": 201,
          "responseTime": 4268,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37f95f6-a59f-4845-acf0-b8aa5713c2b5",
        "cursor": {
          "ref": "756d3411-a701-4bac-a589-b8db43c92cbf",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "39466bf9-7db8-4e42-bca8-4332e3b05328"
        },
        "item": {
          "id": "e37f95f6-a59f-4845-acf0-b8aa5713c2b5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "19a97129-6c4d-480f-9163-02d60dfe6fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7486baa4-ba4e-4bcd-9283-2f9c9a89432c",
        "cursor": {
          "ref": "d0f9d8e3-3662-43e5-a875-b6a2327d6ac8",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f160df8b-74af-40ca-a1a0-d9cce6008c2d"
        },
        "item": {
          "id": "7486baa4-ba4e-4bcd-9283-2f9c9a89432c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b5b14927-b65d-4172-ae15-dfea478a1aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "521ad110-d7eb-4a0e-b3e4-897ebee94642",
        "cursor": {
          "ref": "4648c548-28cd-4063-92b3-6dc8ccf7d27a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3ef26654-a326-4281-a332-c8f069694048"
        },
        "item": {
          "id": "521ad110-d7eb-4a0e-b3e4-897ebee94642",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7fc65e26-a89b-4415-8ca2-b4f11466e13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379fc8d3-a41e-4530-b6bc-e0516b3cf520",
        "cursor": {
          "ref": "8ce18754-aec8-4d15-ab3e-4854622c33ec",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1a33d06f-2569-4dee-9665-416306d7015b"
        },
        "item": {
          "id": "379fc8d3-a41e-4530-b6bc-e0516b3cf520",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "32c02a39-b1b7-425b-9d42-a235027e28d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03969de-8f01-44f8-b5fd-08fe7ec230f5",
        "cursor": {
          "ref": "f0c503d4-e67d-40d3-9c55-cc8a50c2c4c1",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3b78ca37-1ffe-4cd7-be7c-08faa3309ec6"
        },
        "item": {
          "id": "e03969de-8f01-44f8-b5fd-08fe7ec230f5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "72880ac2-3cca-46a5-ba8a-d2e8e0208e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0990a032-62ff-4eef-b0d4-da883ecc586f",
        "cursor": {
          "ref": "e653c6e9-26ce-4cc0-8adf-849b9cf3baa8",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d8fa372d-7c0f-4b74-8cd8-55f49d252b36"
        },
        "item": {
          "id": "0990a032-62ff-4eef-b0d4-da883ecc586f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fe5bf9a7-c4ae-48a4-9013-dda55ee4558b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696a55e3-5310-4ae0-9686-a43130524686",
        "cursor": {
          "ref": "4380c8c4-4a38-430c-9c05-3bf531b997b7",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1ef9159b-3c47-465e-b4a0-4ab9df82e453"
        },
        "item": {
          "id": "696a55e3-5310-4ae0-9686-a43130524686",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "82e19810-c46e-4c53-8e2f-f63fc9388e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65eb374d-f91c-4bad-98ec-2d698f3186a4",
        "cursor": {
          "ref": "6321ae06-ff16-4230-89f2-8f520ccae3f3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d0f286e0-e1f8-4414-8e7d-b93aef85e464"
        },
        "item": {
          "id": "65eb374d-f91c-4bad-98ec-2d698f3186a4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d87596b3-2f3d-4c89-8446-870d8ed92e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a25a3b9-7062-4ee7-812f-e8b2efa81c89",
        "cursor": {
          "ref": "094b8e0a-5ad1-4c50-96c4-82e7f09885dc",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3c80c932-beec-4050-9673-471f01cc804c"
        },
        "item": {
          "id": "8a25a3b9-7062-4ee7-812f-e8b2efa81c89",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "95808135-08d4-4680-889c-14be91cb64a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16e250a-5348-48d3-b389-f90414c8b2f8",
        "cursor": {
          "ref": "023e35e8-d1cd-4ec1-a6de-cf041aa38db3",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7badc076-5de2-4636-b34a-a84063d2c9ef"
        },
        "item": {
          "id": "b16e250a-5348-48d3-b389-f90414c8b2f8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e739b71c-be7b-4b54-9e3d-5e72a5255bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b43fec9-c6b7-40e6-8528-f42add6068a1",
        "cursor": {
          "ref": "3b25124f-670a-4dc2-abb0-98fefa1b91cf",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a7a9bf33-ea74-48c8-b491-2a048514af94"
        },
        "item": {
          "id": "4b43fec9-c6b7-40e6-8528-f42add6068a1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8c2de262-aeff-421d-8804-332b0df5324a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe094f2e-6517-4abc-889b-7f97809266c7",
        "cursor": {
          "ref": "0b2726c1-a614-45af-a2e1-c288fdb7de58",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f143267a-ed42-4819-83e1-27b149c61f2b"
        },
        "item": {
          "id": "fe094f2e-6517-4abc-889b-7f97809266c7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aa7c6991-0668-4ce7-b2b4-f230906388d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff52db04-97c4-418e-a2b4-1bb5b1284719",
        "cursor": {
          "ref": "797ba089-5ac6-402a-9140-732ba79eb5f8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "823c14b2-b3f5-4724-b8bf-f8ab9801963c"
        },
        "item": {
          "id": "ff52db04-97c4-418e-a2b4-1bb5b1284719",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0060edcd-52fd-499a-a8b5-70e6e3eb317f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f49756a-78fa-41cf-9a66-8cbd27178eff",
        "cursor": {
          "ref": "4de0c6cc-2db1-4279-aac6-4857eb3c20d2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6dd95e6e-4dae-48b0-86ad-2636284afb1b"
        },
        "item": {
          "id": "2f49756a-78fa-41cf-9a66-8cbd27178eff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "31e8d901-10c4-471b-9f20-66e0f57924ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da7a186-76ac-4da8-97f0-013ecd8fa3dc",
        "cursor": {
          "ref": "77861e3b-db0d-49d3-8e50-24199d29d6da",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2603cf9b-b792-4abc-bcd4-5118c59431be"
        },
        "item": {
          "id": "5da7a186-76ac-4da8-97f0-013ecd8fa3dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "596372ee-51f7-4869-8a8f-57e6cb6786ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e9c993-5aa4-41d9-afc8-7ae09a20031c",
        "cursor": {
          "ref": "c39b37ac-f660-4b5b-b57d-1559259a579d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "26613d86-ddfa-4f03-8fab-bc86a0d067d5"
        },
        "item": {
          "id": "a1e9c993-5aa4-41d9-afc8-7ae09a20031c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "70449113-be8f-4cdc-a542-77a357010897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fe0d26-ff9c-414d-a9f0-77eb14f5961e",
        "cursor": {
          "ref": "4fa0b60f-a028-43d4-8602-957437bc6630",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "df246165-bfd9-4db5-9015-51735191231b"
        },
        "item": {
          "id": "32fe0d26-ff9c-414d-a9f0-77eb14f5961e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1d2a3d54-df94-452e-b5dd-3b3cdb444820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d0edce-76b1-43d0-8026-e626f3b6ad69",
        "cursor": {
          "ref": "81f5d27f-741f-475f-98b8-35b53c2987f7",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4d53d88b-fbc2-47fd-9c51-e1847ee8a587"
        },
        "item": {
          "id": "a9d0edce-76b1-43d0-8026-e626f3b6ad69",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1023be2f-45e3-4d73-ad90-92d7817f67c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e7b7c9-052f-4852-9063-429c87013f8b",
        "cursor": {
          "ref": "13873f95-f039-4923-af13-66c3b0b622b8",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c85b9782-35f4-481a-bf6d-4b7b3242ec57"
        },
        "item": {
          "id": "64e7b7c9-052f-4852-9063-429c87013f8b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be2d3e72-910c-451b-9450-79b3aeec42fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b37c7c-864e-4ca1-b687-f9c332a258eb",
        "cursor": {
          "ref": "f63a143f-6fc5-4653-825c-a0faa09f83d6",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4643be1c-645e-4352-955d-33c43c1936f2"
        },
        "item": {
          "id": "27b37c7c-864e-4ca1-b687-f9c332a258eb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3b25df16-1a86-485f-85d9-f062296d50f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533b7c8f-90a7-4b0e-977c-6fc67670f35a",
        "cursor": {
          "ref": "8cbd3a5a-a644-472b-904f-a56d0956d4fc",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e460ab26-d69a-4324-9263-cfb6ea798950"
        },
        "item": {
          "id": "533b7c8f-90a7-4b0e-977c-6fc67670f35a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "319fffbf-9b84-43bf-af4c-5c794e1142b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3d3de9-c452-40ed-ad47-97120052d825",
        "cursor": {
          "ref": "e8a199b7-b750-4a32-8fe4-4e3eda71cdf2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e687073d-13ac-49ae-a3b3-03aa97616ec0"
        },
        "item": {
          "id": "8c3d3de9-c452-40ed-ad47-97120052d825",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e9f8b77b-59f7-46db-8eb2-05a0ae75bbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a05ecb5-0dd4-4ae3-9a0a-71de315477da",
        "cursor": {
          "ref": "2b0672b5-2d00-4202-bc2f-c1f165dd6bdd",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ab965dff-daa9-47f1-bdf4-b8e9076bfb5c"
        },
        "item": {
          "id": "3a05ecb5-0dd4-4ae3-9a0a-71de315477da",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8759e870-3242-4346-b458-a80dc5598ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9dad77-e51e-45bf-9db7-30e3073e09b6",
        "cursor": {
          "ref": "8b05cf74-d31f-46cc-bd55-43b3b9f9f630",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6eee7f3b-2be7-4a83-9533-b2156ce48523"
        },
        "item": {
          "id": "1b9dad77-e51e-45bf-9db7-30e3073e09b6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1646abab-bad2-4a21-bfd0-fb9fbbebff3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddb7f31-a73f-4cbb-851c-0c6696bf7975",
        "cursor": {
          "ref": "98037d9f-a38c-4bc9-b131-7476222fa66b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c7a85d41-58a8-42a5-aaac-a8e31743d475"
        },
        "item": {
          "id": "5ddb7f31-a73f-4cbb-851c-0c6696bf7975",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c52d9891-c796-4068-8a25-38846725c2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf57b321-7be7-4068-a593-eaf8daa3428d",
        "cursor": {
          "ref": "a48748a2-0d56-4017-bcdc-889d8d3303e7",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0920ee63-e9d0-4f9f-9b21-184bd6442d78"
        },
        "item": {
          "id": "bf57b321-7be7-4068-a593-eaf8daa3428d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "402c7b6a-2a12-44c5-86e5-4f645e60f255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5a086c-fe5b-4688-8fa5-cf6d0eec5f1a",
        "cursor": {
          "ref": "73626195-ba7d-4a98-894a-0685367a056b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "76b4a089-5d8f-496f-9f0f-08636e28a209"
        },
        "item": {
          "id": "9d5a086c-fe5b-4688-8fa5-cf6d0eec5f1a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "077d73fa-1aa7-470e-a583-a55f50bc851b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f57d45-9ca0-460a-b611-7795e9932df9",
        "cursor": {
          "ref": "4bd6c481-1cc3-4e6a-ba77-056caa1a7772",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c52a5fcc-4b59-41af-85ef-71ac4e1ac8f4"
        },
        "item": {
          "id": "90f57d45-9ca0-460a-b611-7795e9932df9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0c738247-d5c1-498b-b5a5-20f7f4b254eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0143a68f-7b53-450e-b6f6-540dbce27b8c",
        "cursor": {
          "ref": "e4f79fed-637b-46cc-98e0-077d4afcb4ee",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "da386f55-58a5-4ca1-bd8a-b0de77e46f4a"
        },
        "item": {
          "id": "0143a68f-7b53-450e-b6f6-540dbce27b8c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c37291ce-9c4f-4803-8321-baf359a22e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d87505-30b7-4749-bb45-cd41c33c39f5",
        "cursor": {
          "ref": "9fee5ed8-80a6-4439-9fc1-7e2283c33c2f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "87aee644-7218-4315-81c4-a0d26de592e6"
        },
        "item": {
          "id": "a5d87505-30b7-4749-bb45-cd41c33c39f5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "179e000b-04b3-4191-9f4b-d667630a53c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cdd296-8351-4172-9f9e-3bcf23cfd476",
        "cursor": {
          "ref": "e192e24c-6117-45e0-b664-5cfeed2f15d0",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4d64f86f-7241-4cdb-a3ce-2bd5863d7c45"
        },
        "item": {
          "id": "62cdd296-8351-4172-9f9e-3bcf23cfd476",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f392bc06-07e7-47f1-89a8-e87e77538e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59de452-1163-497f-a58d-50669f9f0a6b",
        "cursor": {
          "ref": "99f8153c-cece-4822-aa2f-40980fc77d07",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9aab945f-b92d-4227-8a58-2b321a07a800"
        },
        "item": {
          "id": "f59de452-1163-497f-a58d-50669f9f0a6b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aad847a5-162a-4d9e-b03d-419e9a2da157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b488211c-2cc5-4ca7-a442-abc57a460fa8",
        "cursor": {
          "ref": "95d1d865-538c-4d53-b3dd-15ff2dd052bb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "85ada4f7-b624-4e43-ba66-ed357bf4db0a"
        },
        "item": {
          "id": "b488211c-2cc5-4ca7-a442-abc57a460fa8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9b8fab3a-127e-4683-8a47-a5d0ac1871fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99290feb-d6b1-457b-bede-0e43a2429d57",
        "cursor": {
          "ref": "8e6ac8fc-4948-437e-bc50-38ebc7164223",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "43bdead0-830b-42ee-9536-d36f8818ca3c"
        },
        "item": {
          "id": "99290feb-d6b1-457b-bede-0e43a2429d57",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1b6024b1-23c4-4edc-9537-54e0ca5c6c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ad94ce-90e1-4c2d-a0e7-53e33ed77229",
        "cursor": {
          "ref": "169442f9-1dd1-4975-a3cc-cc0b2fe75151",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "48bcbeb1-0cee-4260-9bb4-e5f1bcb866d9"
        },
        "item": {
          "id": "96ad94ce-90e1-4c2d-a0e7-53e33ed77229",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "43fff0ef-54d6-4824-ac65-5b32fa44ec16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8e9132-f69f-45a6-b2c9-15fbe123a284",
        "cursor": {
          "ref": "2782c648-704a-44cb-81d2-3c66e744f92f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f27534c5-553e-4a06-9a55-77ad41a192ed"
        },
        "item": {
          "id": "cc8e9132-f69f-45a6-b2c9-15fbe123a284",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6dbea127-0871-4b4f-9d26-94c98948c65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1072147-5006-4ce9-b620-b9863a81b46a",
        "cursor": {
          "ref": "6eca34a6-e3d0-4148-af5b-da1c644fe8dc",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d4b9142a-4de6-4e64-9af7-8d5e3c15aaa7"
        },
        "item": {
          "id": "e1072147-5006-4ce9-b620-b9863a81b46a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d127d66a-806f-472a-a2e1-052be80793ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613cfa85-b5bf-4253-9d9a-694f3ea1f496",
        "cursor": {
          "ref": "96c88306-a5da-45ea-b4ae-358e462a798b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c502d32b-408b-4d4f-9853-7b7b12ed9d2c"
        },
        "item": {
          "id": "613cfa85-b5bf-4253-9d9a-694f3ea1f496",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c57cb741-d238-4585-8d1d-9d9a737a2027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61983fba-6596-4d27-b875-97e740743caf",
        "cursor": {
          "ref": "b5910237-4d60-4da3-8363-e55309dd1e3f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cdab7821-2b95-4b4a-8d15-20313ffbc1b9"
        },
        "item": {
          "id": "61983fba-6596-4d27-b875-97e740743caf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "51a86cf0-3cf8-41d9-ad79-6d8d42f17b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf5fd64-7369-471c-bf03-0bc8c1b32a64",
        "cursor": {
          "ref": "271a6c6f-c9fd-46be-a876-25d99cbcb983",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f09fd99d-0ac3-49ba-9477-91b1c5a9d57d"
        },
        "item": {
          "id": "8bf5fd64-7369-471c-bf03-0bc8c1b32a64",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3abd13a2-df9c-4a8e-86a5-0ed51c6be9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9a8ace-ef70-4c70-8b88-920a2b3d3207",
        "cursor": {
          "ref": "fb18e64e-40c4-416a-97ba-33cd0fe7bdaa",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d865c646-5f68-4f22-85f8-469549e6751f"
        },
        "item": {
          "id": "1e9a8ace-ef70-4c70-8b88-920a2b3d3207",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "56f1877f-2f62-4029-81c8-a030ecfd76c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b795a82-987e-4a1c-a717-d15ce24736e0",
        "cursor": {
          "ref": "a3c26d4b-e057-4291-af50-f133da0a59bb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c4f9062c-840a-4fe1-b343-4f7d3e47cb92"
        },
        "item": {
          "id": "7b795a82-987e-4a1c-a717-d15ce24736e0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "08e893d5-c915-43e4-86e1-8c3a3d658b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7079c3-6024-4597-856a-845b9d4b3ad7",
        "cursor": {
          "ref": "83f0f3c4-0f86-46a7-a3d7-3757d5c7ab39",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f70f4a0a-1577-4fe6-850f-b372d99f3951"
        },
        "item": {
          "id": "ea7079c3-6024-4597-856a-845b9d4b3ad7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5403bfab-d4fd-49c4-a56c-2b9546345427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877930e9-ace5-4ad9-9429-63f515726f5d",
        "cursor": {
          "ref": "ff480902-2f4c-4d2f-8de9-7a232c5147a0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "229da250-5dea-4010-8b2d-0eb3b0ce0e52"
        },
        "item": {
          "id": "877930e9-ace5-4ad9-9429-63f515726f5d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fce3081a-6fe4-4e17-8a4a-8f6be81b0f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07180599-439f-47df-b955-49e6b6cf44f7",
        "cursor": {
          "ref": "8dd2441e-9adc-491f-ba7a-21bb67e18bda",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "396c7593-2853-4333-8440-cf82046f8a29"
        },
        "item": {
          "id": "07180599-439f-47df-b955-49e6b6cf44f7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "68e9260b-afa8-487b-bbbb-950293a0440b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e1d83f-f096-47cb-ac0d-e3369c187282",
        "cursor": {
          "ref": "3f2afd7d-5b0c-4181-8ff4-f425f34e5acd",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5ccbddae-6b21-4e2b-bd30-a482c8e24b82"
        },
        "item": {
          "id": "d8e1d83f-f096-47cb-ac0d-e3369c187282",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa37c2f7-dd1e-4188-a73a-09d2bdac724c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a475e277-3332-471d-993a-cf4f42d8cef1",
        "cursor": {
          "ref": "42d08d03-eae6-43ac-b89e-e6c740cd3aff",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "de421a19-ca79-4468-a9dd-a375e06de089"
        },
        "item": {
          "id": "a475e277-3332-471d-993a-cf4f42d8cef1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3be22bec-ba9c-4d8a-997d-817172a07451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906b3ea3-2edc-4adf-bb1c-4e10f189beeb",
        "cursor": {
          "ref": "6c147b66-4b58-4b0f-a7bf-6b14964f9e95",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "02c3ca75-bbdc-4ff1-88c9-48176e9120d7"
        },
        "item": {
          "id": "906b3ea3-2edc-4adf-bb1c-4e10f189beeb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b1a4c726-ba69-4738-a614-c900e42d7012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65022ac4-a965-4f32-a4f9-c698c62b19ad",
        "cursor": {
          "ref": "e1204e0a-ee45-4fb9-a7f4-e0473c114ec2",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a2cf8bb5-db2c-4f56-9b1a-eee086f8b211"
        },
        "item": {
          "id": "65022ac4-a965-4f32-a4f9-c698c62b19ad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "35a24d59-6def-446c-986c-c5a9cd4169ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b81fdcc-ec69-4a7e-a219-b620131caab1",
        "cursor": {
          "ref": "1c4c936b-602e-4b24-b8ea-4e3eb171d677",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b33927d2-3917-4cac-bf56-820e7eaf490a"
        },
        "item": {
          "id": "7b81fdcc-ec69-4a7e-a219-b620131caab1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "29624905-a995-468d-a9b3-df5e1cbdc0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0145efb-dbf3-491b-a92d-e53305db1dc9",
        "cursor": {
          "ref": "6e615132-809d-46a1-afa6-ef4d09ffb973",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5942d99f-c5a6-419e-9adb-91d84f2eb7ff"
        },
        "item": {
          "id": "e0145efb-dbf3-491b-a92d-e53305db1dc9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0a953cc9-3bee-420d-a6ec-8a323656b301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e97f9f4-5ffa-4162-bf89-21beefbd09e2",
        "cursor": {
          "ref": "c80abdf8-1e98-4bea-ba3a-a2c78c34d087",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "452936dd-d718-4416-8c2d-5b3cf4c0afbe"
        },
        "item": {
          "id": "9e97f9f4-5ffa-4162-bf89-21beefbd09e2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cee4fd65-ab8d-444b-8a85-2006fe11d7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff241e09-7385-422f-8515-7147a3a9cbfb",
        "cursor": {
          "ref": "13387f0e-45c0-4300-87da-ca6898c8c72a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "be577f68-da0e-49ac-a4ac-c1433ae7485c"
        },
        "item": {
          "id": "ff241e09-7385-422f-8515-7147a3a9cbfb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "88378bf0-9575-439f-b6e3-6c9b3dc3d56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6812bed-e064-40e9-8e52-40025b7268d0",
        "cursor": {
          "ref": "2ccedbcf-42d7-4129-8310-0f2500a3fb44",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "46479a58-ce8b-4403-9ced-95aadcd55750"
        },
        "item": {
          "id": "a6812bed-e064-40e9-8e52-40025b7268d0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "356f78a7-6611-41dc-a6bc-f541daaf15de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a27ed8-89aa-41ca-b280-d21eb2e5edb0",
        "cursor": {
          "ref": "6b39dcd6-7692-4ac3-94f9-1f783aa4aef3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "80cd2acc-25d3-44c0-bd11-16b4e451ee2c"
        },
        "item": {
          "id": "b5a27ed8-89aa-41ca-b280-d21eb2e5edb0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c15ebe7a-88d9-456b-a2e5-8ee3d6b8457e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f456428a-1168-4865-9997-66c12a7089a5",
        "cursor": {
          "ref": "f914b480-9cdd-49c7-8341-789d6fab4241",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "75b18209-6687-4aba-a242-db8db207f381"
        },
        "item": {
          "id": "f456428a-1168-4865-9997-66c12a7089a5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "770f024c-78c0-487f-b4ee-8f0b4ce030c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2282a1e-1101-4ab6-8774-2fab83383db1",
        "cursor": {
          "ref": "99b00407-b295-4c44-830a-5e7c85e69d76",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f777adab-09cd-4f9c-afe8-a405e72ec3e6"
        },
        "item": {
          "id": "b2282a1e-1101-4ab6-8774-2fab83383db1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "26ae39fb-84c3-4e44-bda6-4bdcf7d5193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b8f3a4-2482-4087-b4f0-28a4037f386c",
        "cursor": {
          "ref": "eb2974d7-4aff-4c2b-bf39-0feb2dbf4e95",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "08b34239-e10b-4b46-97c3-2898828e261f"
        },
        "item": {
          "id": "a5b8f3a4-2482-4087-b4f0-28a4037f386c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1af5cb8b-39c8-4935-8af9-e9d9bbd8b3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2840e63-d053-43a9-9499-38f0b6a7c9ee",
        "cursor": {
          "ref": "fa0aa869-c37d-4630-888a-7f0fcc921741",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c4e6de28-5ce5-4234-9cd1-5b37d72c6038"
        },
        "item": {
          "id": "c2840e63-d053-43a9-9499-38f0b6a7c9ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b922cedc-c19e-40ff-9577-a0c489df21f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293ab882-0305-4f65-b7e9-eae438e1ef16",
        "cursor": {
          "ref": "d59104b6-e337-4572-86d9-590512a81b87",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5f831d90-3ff3-4db5-8191-329761d9dcc9"
        },
        "item": {
          "id": "293ab882-0305-4f65-b7e9-eae438e1ef16",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6100eda8-3143-4cc3-b223-3f7e16805877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3d3aad-fa0f-4907-8703-954671a4acc8",
        "cursor": {
          "ref": "dccd38fd-15c0-4b59-9da6-1ac2e270d070",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "089977fa-8015-4ae9-8bde-dce517a6a579"
        },
        "item": {
          "id": "6b3d3aad-fa0f-4907-8703-954671a4acc8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "df422fd3-0d3c-48ef-a3f6-f8d3c2bfca6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a214665-cc0e-4779-8597-648b10ce1ff5",
        "cursor": {
          "ref": "471dc46a-1eb5-4298-bc63-6847b32e3391",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5364dd36-e842-4dad-bad2-d5472e660972"
        },
        "item": {
          "id": "7a214665-cc0e-4779-8597-648b10ce1ff5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2cd223fb-adf7-4526-91f3-eee6bd9935fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6d522e-6df6-495b-92c0-439d27e503c1",
        "cursor": {
          "ref": "3f9b63d7-4291-4d81-ba9d-4b7ac33c78a8",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "22d2d721-ee5a-44a2-871f-e202daabf96f"
        },
        "item": {
          "id": "6e6d522e-6df6-495b-92c0-439d27e503c1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "65b6109f-3f37-4b19-8c67-c6d13a42e108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f8351f-26f8-4bf5-aae6-7a7fa77dff2d",
        "cursor": {
          "ref": "2a35bff1-3a5f-4b50-9e7a-36b094df0c97",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3d2a057c-c016-4606-993a-4fcff4d5093f"
        },
        "item": {
          "id": "09f8351f-26f8-4bf5-aae6-7a7fa77dff2d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "265cb234-c6e7-4b83-8828-dc96ffccd5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fcddf2-7750-4f69-ba23-dea11ad2f198",
        "cursor": {
          "ref": "b9ebb817-74b5-4203-9d73-24252f6665ff",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7f54433b-19e0-4007-b8e0-2715c2324cb4"
        },
        "item": {
          "id": "99fcddf2-7750-4f69-ba23-dea11ad2f198",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "18c248e3-34bb-4331-a60a-35b765526627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c14000-77af-4a38-b6f8-53215b1dba9e",
        "cursor": {
          "ref": "130c2d95-81c8-45f8-b475-d9f224b6ee6b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "48e1cac7-3efc-4f67-a7a3-6ee94509c48c"
        },
        "item": {
          "id": "b7c14000-77af-4a38-b6f8-53215b1dba9e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "778c1a9c-6a98-42da-b76f-b5f1b17a2736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445bb91f-84bb-482c-8c88-3479dc8742b3",
        "cursor": {
          "ref": "ca5d7ca5-9748-4d7f-b8f0-899ec7a3f826",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e460b99d-8422-4b1d-a437-5fb33af7bdd0"
        },
        "item": {
          "id": "445bb91f-84bb-482c-8c88-3479dc8742b3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c97b1730-d638-4a22-9c24-7bbc3da0b8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ae24fa-bacc-48ed-bba2-b9ce2c9b8a5a",
        "cursor": {
          "ref": "591e1587-4297-4348-b1ee-cfa5e24f878b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6985dca8-3ac2-417e-bca3-99112dca7fc9"
        },
        "item": {
          "id": "14ae24fa-bacc-48ed-bba2-b9ce2c9b8a5a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "da17d87c-bec9-4511-804f-c1af912e77b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370c1f74-cd8e-4792-b17d-722ee22a46fb",
        "cursor": {
          "ref": "02e58b77-a71a-437d-9afd-640a78ae09d2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cc520a14-6188-4bd4-9293-00be6d25da78"
        },
        "item": {
          "id": "370c1f74-cd8e-4792-b17d-722ee22a46fb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "04902ead-9efc-454d-aecd-78559e474fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39915154-9374-4b6f-ba5c-2fd298444808",
        "cursor": {
          "ref": "86fb55b5-75a7-4a06-a5b7-2c78e10235ec",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "89d11500-cabb-48c3-bb52-3512929e2a2e"
        },
        "item": {
          "id": "39915154-9374-4b6f-ba5c-2fd298444808",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9a2c76f6-0840-4635-9b70-09492c0b2dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2463b4e2-554f-47a6-906c-2c6e3c493456",
        "cursor": {
          "ref": "67d5dab5-3d30-4dd0-92d7-d2e1a9702388",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ef2f3f15-2aba-4fe0-ac26-fb1b6072f572"
        },
        "item": {
          "id": "2463b4e2-554f-47a6-906c-2c6e3c493456",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9880a524-7630-4ad6-a700-5a997cd65553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f0d575-9409-4b6a-a4b4-ea62c339a206",
        "cursor": {
          "ref": "97a42593-b5fa-455c-bfa7-ae0ad25301d5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c809dd6b-1d96-4e62-97e1-dc5a5f78b210"
        },
        "item": {
          "id": "87f0d575-9409-4b6a-a4b4-ea62c339a206",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e4d43d11-4ace-41d4-9a2a-acce42a4d2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c4a547-c651-4d99-92be-ab9333274131",
        "cursor": {
          "ref": "f383fd77-d530-4afa-9c3f-2fd28f2f8795",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c0d7c41c-b3cf-4d41-9df4-011f0e2c97df"
        },
        "item": {
          "id": "63c4a547-c651-4d99-92be-ab9333274131",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "70c2b7bd-1b73-47c4-8095-bd51553e6df7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc4fc9d-e0cd-4fa9-889a-5087b4ed7b6a",
        "cursor": {
          "ref": "66077131-62c1-42ce-b9a4-5627ad19d108",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1db962d5-7e84-4d90-a58a-95b09f817b93"
        },
        "item": {
          "id": "8cc4fc9d-e0cd-4fa9-889a-5087b4ed7b6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4ed65f70-072d-433d-9089-da926231fdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9006f7-0291-48a1-9fa7-0ce67a03b6f6",
        "cursor": {
          "ref": "8a95e092-c07a-4a78-9db7-df415c8dd354",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c8b9079d-4bb2-425d-8028-41a8f99f5eb9"
        },
        "item": {
          "id": "5c9006f7-0291-48a1-9fa7-0ce67a03b6f6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "198a255a-ddd1-4257-8d87-a8722ab5068c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0351c6-d9cd-462e-9c41-f272082dd8bd",
        "cursor": {
          "ref": "10762af7-31a6-44d9-b867-5148d675f148",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5376bda8-84a5-4ba1-8e83-ed74ca3cb86a"
        },
        "item": {
          "id": "0e0351c6-d9cd-462e-9c41-f272082dd8bd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "59e1c50e-e087-4493-aa8c-a4c6ac3b1010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d9cc3e-b567-4579-9678-c77359ac74e0",
        "cursor": {
          "ref": "18bd8801-c660-4070-9944-52bf4c2415cf",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "212fb91a-c6b8-42ed-b69d-1690ee2f0a16"
        },
        "item": {
          "id": "b7d9cc3e-b567-4579-9678-c77359ac74e0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b25a681c-ab4a-4056-8437-0c4b32114bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e06a581-9adb-4297-97c9-bccf60022249",
        "cursor": {
          "ref": "8587eb02-fa05-48be-ad21-53f154ef9acf",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2eb70016-dea5-4e1c-9f4b-1cff85254ff5"
        },
        "item": {
          "id": "2e06a581-9adb-4297-97c9-bccf60022249",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bf9ae309-a898-466b-881a-08425bfc3e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76339f8-6800-44d5-94a0-1731361dcb8f",
        "cursor": {
          "ref": "d9363b34-38e9-450b-a782-13fc4b430868",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a025c966-bdad-46f1-940e-4b5e9ddfacbe"
        },
        "item": {
          "id": "d76339f8-6800-44d5-94a0-1731361dcb8f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e6452a8e-a46d-4900-9da1-92a33358101f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8b24fa-9227-45f5-a20e-368d38f57b53",
        "cursor": {
          "ref": "29c6b183-2109-46e6-aeeb-52383779cee1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "14b51b56-4ac4-4c56-a569-ed709ec61ac1"
        },
        "item": {
          "id": "db8b24fa-9227-45f5-a20e-368d38f57b53",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ad8a927d-87ae-4b6b-8663-34af458f5ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9fe0c2-cd20-4ab2-b954-80492f0d8507",
        "cursor": {
          "ref": "e1b04fb0-d8ba-4f7d-a67c-c33d3416df84",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2f00b5a3-04bc-41d9-9df1-8f6c31ec96ee"
        },
        "item": {
          "id": "2a9fe0c2-cd20-4ab2-b954-80492f0d8507",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3fd9b928-08ff-4aee-9964-bc82896ec4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d4cd3f-ce8d-4984-a87c-b8056622dbd5",
        "cursor": {
          "ref": "a370ab70-3b2a-4d58-be4e-cca4a6881aaa",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dd5f2a2a-9dae-4370-adac-ed607022da9e"
        },
        "item": {
          "id": "d7d4cd3f-ce8d-4984-a87c-b8056622dbd5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cd55ba59-7cf6-42fa-9b29-c7f2d5064e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0132b1f1-2204-4141-9ba1-bd3a65eccb16",
        "cursor": {
          "ref": "03e40bd9-61b6-4770-a88a-59b7d14b95bf",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dda8816a-d08f-49c9-b6bd-05a5f9c2f247"
        },
        "item": {
          "id": "0132b1f1-2204-4141-9ba1-bd3a65eccb16",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de7a61f5-8bc5-4823-bed9-bf50450bbf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9d0fe7-4042-4ba1-874e-b0c9e9102273",
        "cursor": {
          "ref": "3f343014-56ab-4f45-9c24-54e2fc916d8f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bf92d306-ce2d-489d-8b81-19213b735348"
        },
        "item": {
          "id": "ec9d0fe7-4042-4ba1-874e-b0c9e9102273",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a3c12b19-595e-4b06-8620-02b62b2a5545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9149c1-15b3-4186-ab9e-3c488f9ddfd2",
        "cursor": {
          "ref": "f591e737-25e2-416b-8125-150facd270fd",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cef4e5b8-bd3c-4437-ab96-93dd8e4d971a"
        },
        "item": {
          "id": "5c9149c1-15b3-4186-ab9e-3c488f9ddfd2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f72359c5-37a4-4f26-9183-71271851c206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70925633-61a3-4910-938c-85e68a092b65",
        "cursor": {
          "ref": "34e85382-a948-47cc-81e5-668ad97169ce",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ab6c28f6-ec46-4898-b0c0-cedff480ecf3"
        },
        "item": {
          "id": "70925633-61a3-4910-938c-85e68a092b65",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fe53e81d-d93b-4a18-adf1-90bac90eba64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677a9c17-7fa9-4194-854e-f4c22929b540",
        "cursor": {
          "ref": "52b98eee-b24e-4eb7-8047-cf3920c9c154",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "79ef17b4-1a68-4787-8430-7879c721cfe0"
        },
        "item": {
          "id": "677a9c17-7fa9-4194-854e-f4c22929b540",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "77bba617-faf7-4afe-9687-1346fc951a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74762217-cbf6-4686-a793-de27b56317f8",
        "cursor": {
          "ref": "ae450e18-9a84-432c-9eaf-0da70326d624",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "528f19e7-7a17-4b7c-a00d-03d65ed7a3af"
        },
        "item": {
          "id": "74762217-cbf6-4686-a793-de27b56317f8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "224671e5-700c-4be6-a1cc-6af8b5a026d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f960cc-78a9-4423-8c89-ee4c1cfe070f",
        "cursor": {
          "ref": "d1f9da7e-1300-46a0-9863-a79733d3fd94",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ad07effa-4575-4497-9f3a-20a8f9a933bb"
        },
        "item": {
          "id": "b3f960cc-78a9-4423-8c89-ee4c1cfe070f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "20d6555c-3747-4471-9ad0-c0b4697f3068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5fb6ee-b169-4385-afd7-596a1865e93e",
        "cursor": {
          "ref": "297b4dd9-b79f-4f2b-b693-b80860a4185d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c3c74a72-5140-4fae-b1a3-b35dbac97961"
        },
        "item": {
          "id": "2d5fb6ee-b169-4385-afd7-596a1865e93e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "53c90fda-582a-4f16-a7da-6b11771d21e0",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "9e0fc1d0-dc44-4155-8c97-52b8a30f3836",
        "cursor": {
          "ref": "7b1e37ac-39ac-4b78-b55b-4137b350f27e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "05a687c6-3f44-47f5-977a-226a019ecd84"
        },
        "item": {
          "id": "9e0fc1d0-dc44-4155-8c97-52b8a30f3836",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "daeff0d8-85f0-4f43-b794-203d554bdd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7b6059-ab69-4f91-986d-818c6bb3e922",
        "cursor": {
          "ref": "2b8c536e-3150-425d-bfbe-e3c8d0e35ed9",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f1190e06-26b2-449c-a4fb-e200ff949e0c"
        },
        "item": {
          "id": "aa7b6059-ab69-4f91-986d-818c6bb3e922",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3df811d9-4e3c-4920-bfe5-10b88ad71e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23599d4f-a1e9-4823-ad2c-ea7c8672629a",
        "cursor": {
          "ref": "69a267bf-fb35-45f3-8081-9d7a43c6c5b1",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9aade9e7-19b5-4e5f-a2f0-65b1b574367e"
        },
        "item": {
          "id": "23599d4f-a1e9-4823-ad2c-ea7c8672629a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9f669e80-0b2f-46d4-9219-8a09f964d405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4356a926-3017-4a22-bb35-6d100aa3b8cd",
        "cursor": {
          "ref": "36846eff-8efe-405d-92b4-cff57c572038",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f8b37bce-c3ba-48fd-9298-53351374e9b5"
        },
        "item": {
          "id": "4356a926-3017-4a22-bb35-6d100aa3b8cd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dd47cec3-a929-4b32-9b88-3edafa64b9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35fb077-a8b4-43a9-a716-40a75a594e09",
        "cursor": {
          "ref": "1c65bb19-6594-4d16-bc5a-aa18f0b2504d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8179a6f7-80f3-4cc1-ab73-f0f557a16027"
        },
        "item": {
          "id": "c35fb077-a8b4-43a9-a716-40a75a594e09",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e106fb03-2205-4927-b50e-29f84e657a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa8c17a-3ba9-4fd9-959a-d698c2669850",
        "cursor": {
          "ref": "ad446b48-2ad9-400f-b763-82889a273fb4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8f26aea3-d927-439f-a16f-e159d7793a07"
        },
        "item": {
          "id": "9aa8c17a-3ba9-4fd9-959a-d698c2669850",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "181b69c8-e354-47dd-b391-cc12df1f0993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73c943b-3a99-439c-97c6-d4437cafd795",
        "cursor": {
          "ref": "8fb482ff-6060-4f5e-845a-d4ad43295882",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b518c30e-84bb-4e42-9811-36edaed5b715"
        },
        "item": {
          "id": "f73c943b-3a99-439c-97c6-d4437cafd795",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3c7774b6-64f9-4b72-a3d2-556ac8926b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25de1ef2-627a-4f80-a4a3-9edc8d4590bf",
        "cursor": {
          "ref": "268fafd8-a34d-4175-9a93-8d6349f506f9",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "93efab43-b0f8-4c8f-8b93-74d1f3d54d33"
        },
        "item": {
          "id": "25de1ef2-627a-4f80-a4a3-9edc8d4590bf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "349124fd-ab0a-4500-8805-7d6e763ac179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f71246b-1c33-42be-a922-488e37631528",
        "cursor": {
          "ref": "04e4d71e-635d-4fd1-ab3d-252df8837d79",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1b751a73-3190-44fd-8d67-e523330893cd"
        },
        "item": {
          "id": "4f71246b-1c33-42be-a922-488e37631528",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0f448027-cfa3-4cd9-8084-f6bf40869874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba0940f-e4f6-431c-b6e8-7082fbcfed98",
        "cursor": {
          "ref": "0667e8a0-9638-4bfa-baec-2784c8d42a2c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9ed121e1-61cb-4ee8-8f41-b95bd76d629e"
        },
        "item": {
          "id": "6ba0940f-e4f6-431c-b6e8-7082fbcfed98",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1de0883b-c55a-4103-9fc9-fe90bd7b375a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0361f5ce-c171-4c18-827a-e6ff6384348d",
        "cursor": {
          "ref": "8e0ac682-aae5-4328-9e7b-dc1043d5da5e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ca7485ae-de82-4f8f-a008-5cb1b2de2b01"
        },
        "item": {
          "id": "0361f5ce-c171-4c18-827a-e6ff6384348d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "81c01073-3b36-459d-891d-c27895d5412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45b3a75-3058-4278-9019-d2e35cb5839c",
        "cursor": {
          "ref": "1f14b0cb-081f-4837-b4e3-184e6acedcbe",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c2ab223e-d281-47f2-b425-01fcd164ea94"
        },
        "item": {
          "id": "c45b3a75-3058-4278-9019-d2e35cb5839c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9d8de0ce-d969-4976-8da6-38d089653567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71614037-8da6-4a81-a8fc-ca259598f89e",
        "cursor": {
          "ref": "8c76e083-9b6a-4c5c-aeff-94aed51b3e70",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d85884b3-c871-428e-872e-981d3afe5237"
        },
        "item": {
          "id": "71614037-8da6-4a81-a8fc-ca259598f89e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c5225f3d-f429-4d24-b9e2-cf27b055fd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56ff7d9-1020-447a-9df0-e37cad4528e2",
        "cursor": {
          "ref": "5d53c0f5-542d-4eba-926c-1010a715a20a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9c8b1879-984d-4933-a573-bcaf251e1dff"
        },
        "item": {
          "id": "b56ff7d9-1020-447a-9df0-e37cad4528e2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d1abe879-ecd3-4903-9ac0-c6673f465fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7af6c4-15af-4437-b449-975424a0388c",
        "cursor": {
          "ref": "226bed17-6006-40e4-af14-08ca3732dc57",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "be5af5fc-1b53-4b78-90f5-b1b9111bfee9"
        },
        "item": {
          "id": "3f7af6c4-15af-4437-b449-975424a0388c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8d01879f-8a6f-4f7d-b81b-f9a8e7002cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c73a3f-a119-4878-8d96-a0554213d6bf",
        "cursor": {
          "ref": "59546471-20bd-486e-957e-f89e9c28cab5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9e14d481-8b54-4673-aafb-dc113493b292"
        },
        "item": {
          "id": "51c73a3f-a119-4878-8d96-a0554213d6bf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31778a49-1ebf-4b94-b412-e52f4f97b5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331b964d-39e8-4fcd-b479-299003e0ae55",
        "cursor": {
          "ref": "30a69e07-9257-4db2-a8ed-4b9bcd4953f7",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6f626fa7-321d-4650-85b1-b54955e0ee43"
        },
        "item": {
          "id": "331b964d-39e8-4fcd-b479-299003e0ae55",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e88a01f3-6d70-40c8-8a31-e5d5b0f6abdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdceb629-5a02-43bf-8f20-200201ae1c57",
        "cursor": {
          "ref": "40cb5e78-8421-4d02-b965-0b29a8b6f991",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c0160894-4691-4a2f-af24-9d3d0cde4d6d"
        },
        "item": {
          "id": "bdceb629-5a02-43bf-8f20-200201ae1c57",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e154d388-c56b-4909-ae3d-9219edf33b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eec7bd-e5a4-465c-83cc-6a67e50b0eb8",
        "cursor": {
          "ref": "78111176-9527-4b70-a378-3495c93fa736",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a60f6fdc-2255-461c-9e94-b120ffa474cf"
        },
        "item": {
          "id": "47eec7bd-e5a4-465c-83cc-6a67e50b0eb8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8f705a9f-7acd-47ab-b019-1a3f8141ca66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd38c983-5392-4c5f-ae27-e36ab5d5b26b",
        "cursor": {
          "ref": "61cd7789-871e-4d2b-a778-13b64b1ab30d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c9eda440-227d-4abc-be12-185ec9b5b323"
        },
        "item": {
          "id": "cd38c983-5392-4c5f-ae27-e36ab5d5b26b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b915e380-e1c6-49e1-8eb3-80883e8df62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49d8c43-fecc-47fe-874a-cd07c4f7e86c",
        "cursor": {
          "ref": "50b55142-6e46-413f-b5f6-3f3c155b7ea4",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3472b95b-34af-4913-905b-67ade2ffa6fc"
        },
        "item": {
          "id": "f49d8c43-fecc-47fe-874a-cd07c4f7e86c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "73671724-72e5-4c4d-84a0-5f3476e374f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc6ceb6-ad5b-4666-b05b-2265c997a276",
        "cursor": {
          "ref": "3d2672ac-0f88-4247-8f8a-2217fab6d149",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "378ef6c5-421f-47f5-b2c2-bc57901ff9c9"
        },
        "item": {
          "id": "dbc6ceb6-ad5b-4666-b05b-2265c997a276",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1c5b49d2-d8bd-4de6-8716-dd7e98156249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e6a2a0-e1e5-4d3a-9486-5f4b67e0ecbd",
        "cursor": {
          "ref": "185c9ec7-d005-4bc8-8a59-8c56131fa0ab",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef8ab7be-2094-4734-b41e-df47ab257f49"
        },
        "item": {
          "id": "97e6a2a0-e1e5-4d3a-9486-5f4b67e0ecbd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0ac0fc56-96d3-46a0-86ef-39c8dc747e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d19a7d7-3aa8-49cd-b91a-1eba9b4a9c51",
        "cursor": {
          "ref": "a939ea7b-87b8-4a6f-bca2-6ad105cc6390",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5dc1ca2c-e785-47c4-b9a0-a50412726025"
        },
        "item": {
          "id": "1d19a7d7-3aa8-49cd-b91a-1eba9b4a9c51",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "93ac99e2-7170-46f9-a25a-ff23208d48ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f486bc9c-4127-49b2-8732-b23c502f1025",
        "cursor": {
          "ref": "c2f74db7-567c-4652-96e0-c09b2af3bb17",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5c186814-acef-4057-a3a9-f7a05bd7d311"
        },
        "item": {
          "id": "f486bc9c-4127-49b2-8732-b23c502f1025",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "333dca20-92f9-479e-a288-c3bdd8d2964e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7d56ab-9c72-4110-94d4-fb069ddc994f",
        "cursor": {
          "ref": "d9d00c73-8d61-4418-ae6a-ad54b73af00b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b5d98082-17da-4008-83db-27249f7910be"
        },
        "item": {
          "id": "1e7d56ab-9c72-4110-94d4-fb069ddc994f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e35c7fc2-0c97-4675-837c-28ec3238803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a999cb76-bd98-4e3a-bfcd-a378161a31db",
        "cursor": {
          "ref": "cf9b1a76-7e05-4ff6-b2be-6f5fd7ec0055",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8627e583-37c5-4b57-8bf7-912738b8a256"
        },
        "item": {
          "id": "a999cb76-bd98-4e3a-bfcd-a378161a31db",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "60fd1a06-5d3c-448d-a448-02db08852ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ec34af-869a-4403-b14e-ce7848c1e705",
        "cursor": {
          "ref": "8c546d1c-6965-4694-b96e-81fe07a784be",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fe89f35d-4e99-4f41-b40f-49d8d6b030ed"
        },
        "item": {
          "id": "22ec34af-869a-4403-b14e-ce7848c1e705",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c6a7a69c-37c8-40ef-a694-c8a7f61d8969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff2194-36e7-4679-9d0d-bb2b7e975a4c",
        "cursor": {
          "ref": "912b45f3-365b-439c-b200-8c1ae56ac850",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ed40c1f5-ab82-49fb-bd1d-371d7fdc1ea0"
        },
        "item": {
          "id": "dfff2194-36e7-4679-9d0d-bb2b7e975a4c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0f99f0a6-5012-4629-b171-f73e959ed18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8781f51b-ce41-4a9f-86bf-21589f50dd06",
        "cursor": {
          "ref": "85babbf3-1ea0-45be-8add-3e5b5035c43c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a7da4901-0663-4858-bbb7-4cf8a002d516"
        },
        "item": {
          "id": "8781f51b-ce41-4a9f-86bf-21589f50dd06",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c1cdb177-47e7-4cb0-814e-87fe9c2fa61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec343f3-98a0-48c4-9302-b07abfbe618b",
        "cursor": {
          "ref": "5cc8a167-82a4-4487-91f2-aa3398038e99",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "68816603-e859-42a6-80cf-0ccb5c061c3c"
        },
        "item": {
          "id": "4ec343f3-98a0-48c4-9302-b07abfbe618b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "071770a1-2f3a-4d9b-a966-4b167d6e58d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b63b849-ce04-4153-ac13-dcfb77756f5e",
        "cursor": {
          "ref": "08823697-db83-420c-9f40-d1d69cc2749d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2fe7abaf-76ff-4f83-9622-84364b080799"
        },
        "item": {
          "id": "2b63b849-ce04-4153-ac13-dcfb77756f5e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bef521ad-f82e-42e5-92fd-9dcd72451ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0786d150-78e9-46ad-9530-293b4574a1b5",
        "cursor": {
          "ref": "45d0bf83-d43e-4648-9f91-eb4e78d4da9e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "55d1655a-f621-49c7-93f4-4fc4d5a00d4f"
        },
        "item": {
          "id": "0786d150-78e9-46ad-9530-293b4574a1b5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c3df989e-11cb-4872-b831-655f9f2bc31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d33124-f40a-414a-8392-984edecc9f58",
        "cursor": {
          "ref": "ae7260a3-60b6-4fc7-99a5-f9a377d65073",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3f359edf-49ab-4872-8bf7-6821790c2f77"
        },
        "item": {
          "id": "10d33124-f40a-414a-8392-984edecc9f58",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "69272af9-c557-48fd-bd3f-91e9e1a54dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd442529-a513-4f65-a394-91ce926d7cc1",
        "cursor": {
          "ref": "0ce0e896-b9b9-4b14-bd41-00a07a9691d5",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c2658845-75d1-41d2-989b-b250f6e22981"
        },
        "item": {
          "id": "bd442529-a513-4f65-a394-91ce926d7cc1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "50922080-07b7-4808-af5e-cffdb5d3d2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c470f508-41e6-4cd9-ae38-52446dae2abc",
        "cursor": {
          "ref": "f40caf9f-b290-4b0a-89d5-5c631cd7f614",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "58bd6141-a5fc-4cd7-ba32-23710639b85e"
        },
        "item": {
          "id": "c470f508-41e6-4cd9-ae38-52446dae2abc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a365f582-a735-4921-b098-8db68aeccb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a3ebd3-0b56-4fbe-bd31-0d79dfe2a6bf",
        "cursor": {
          "ref": "9ccc8898-2bab-4bc1-b43d-483f122dc90a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9f52b8dc-be76-4062-a43c-5be98316912d"
        },
        "item": {
          "id": "31a3ebd3-0b56-4fbe-bd31-0d79dfe2a6bf",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ff61e5c4-27ca-4bd2-bf43-d304c4617675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98dc257-9025-4dfd-8af0-68d484ac514d",
        "cursor": {
          "ref": "0641ad09-9881-4978-b3f9-bb881ab6d929",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "854f9885-89b3-411f-af26-a9fd97abce7e"
        },
        "item": {
          "id": "b98dc257-9025-4dfd-8af0-68d484ac514d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0daba4ff-2afe-4012-bd0a-e05f159ac423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb21d9a8-a007-4cde-8e9d-8e7211fdd0f7",
        "cursor": {
          "ref": "b2a76084-0686-4f48-8484-9e6bf442dca2",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bf4a90ba-14f3-480b-88f3-4ce9d8094d48"
        },
        "item": {
          "id": "cb21d9a8-a007-4cde-8e9d-8e7211fdd0f7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "248edbe6-d4a4-49de-9b28-7ae4dd6918fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef05796-591a-46cd-a75b-2c0c65654f70",
        "cursor": {
          "ref": "f04d8fea-0ff0-4976-a813-0f6cff232868",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e2498e04-1dc9-40c6-a8e4-66c369df53c8"
        },
        "item": {
          "id": "1ef05796-591a-46cd-a75b-2c0c65654f70",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "09865621-7634-4af9-94a8-bc08eb743895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0539c970-a734-43cc-8cab-00f2357718e5",
        "cursor": {
          "ref": "4e14f8c3-4267-40d8-a91c-306871efdba7",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c63e560f-b894-4f06-aef9-d0043320b5e6"
        },
        "item": {
          "id": "0539c970-a734-43cc-8cab-00f2357718e5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7500e462-49e9-4edd-829f-933eef51c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c31ec7b-5422-4e25-b183-6219892a5efb",
        "cursor": {
          "ref": "e6260756-8cb5-4b11-8e49-1f701ceac143",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9eb26282-ee43-41f9-bb77-5cba44628fc4"
        },
        "item": {
          "id": "0c31ec7b-5422-4e25-b183-6219892a5efb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c1b4d482-2a8b-48ed-9a6d-ac29afe41dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f22e3e-cbeb-4abc-ab20-d6e2c147e4ac",
        "cursor": {
          "ref": "79442415-7a18-4b01-b7b0-db3be1c94bdf",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f344d7de-d856-46b8-aad2-b57e94b9f784"
        },
        "item": {
          "id": "b4f22e3e-cbeb-4abc-ab20-d6e2c147e4ac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b450425c-0b8c-4a6f-82c0-00b1a08243be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bf5510-051a-4de3-abaf-299b74f9dc7a",
        "cursor": {
          "ref": "f0a3d907-e354-4480-9a5e-d9fde5dc2298",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "89a07531-d2b2-470b-aa4a-609cff5b50b8"
        },
        "item": {
          "id": "e2bf5510-051a-4de3-abaf-299b74f9dc7a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "036af9c0-2435-4043-9a76-a73ffb39d408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e7ea15-14bf-4fea-8f93-f02ee2cbe119",
        "cursor": {
          "ref": "8455b8e1-9695-4654-a8ad-fd21dc00a534",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1e923c47-adf2-4bdf-8d2f-0c9dbf350594"
        },
        "item": {
          "id": "89e7ea15-14bf-4fea-8f93-f02ee2cbe119",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dcec8b4d-aa8d-43b0-b06d-eddc05a2ded0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a882991-a7d8-408d-8f6d-7e305faca1fd",
        "cursor": {
          "ref": "8889f496-db22-4fcf-bb1d-07ede6fa33bb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "af8b2e50-59ef-4f68-8381-c59a5a5e5b7c"
        },
        "item": {
          "id": "6a882991-a7d8-408d-8f6d-7e305faca1fd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3200b3c0-bd85-4977-a40a-90e5967cd318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4f9dfc-34d9-43c6-955d-e65f4ff0ed8a",
        "cursor": {
          "ref": "a69c8568-3811-4d05-ac8f-78ac09415e02",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4960f60c-088c-43b1-a783-2e238f841424"
        },
        "item": {
          "id": "0a4f9dfc-34d9-43c6-955d-e65f4ff0ed8a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4a3be593-b990-422b-bcb3-5649b6f551c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86faa239-6eaa-43a0-bca6-1dc06432501d",
        "cursor": {
          "ref": "d307710a-bacd-4f28-a02c-bc17f1b27e69",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0ee5f945-53d4-4189-989f-7b1b9c770c4b"
        },
        "item": {
          "id": "86faa239-6eaa-43a0-bca6-1dc06432501d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4064aef8-65d0-4bde-932e-f5a5818938d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b46bea-2277-464f-ac6a-f09a84e6a87b",
        "cursor": {
          "ref": "f3be5130-4d7c-44ef-9c21-20c139dd0181",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f65b93fa-3f66-41a2-9db2-f4173292ed15"
        },
        "item": {
          "id": "66b46bea-2277-464f-ac6a-f09a84e6a87b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a236e3e5-de3f-4ecc-b55e-aadae0d6839a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ae941f-155a-4219-be81-5a5acdb55b37",
        "cursor": {
          "ref": "7231985e-48e0-4181-bb28-36aff5ce654b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ff1c179e-3c6e-4c6f-b61f-5adebfbc667e"
        },
        "item": {
          "id": "83ae941f-155a-4219-be81-5a5acdb55b37",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9ad3d9ce-f120-4893-8a2a-0127fadd6a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc9cec8-f4f7-4b61-8059-45da49aac2b1",
        "cursor": {
          "ref": "57dac1c2-51e4-44c6-8726-f1e9d2f17b26",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f6d163a7-f04a-4812-a045-3c4113d0c9b0"
        },
        "item": {
          "id": "edc9cec8-f4f7-4b61-8059-45da49aac2b1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ecd2719e-bc75-4946-8fe7-9f986f67c9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1303a845-eae0-4d96-85d5-7e9c248c74ce",
        "cursor": {
          "ref": "fe1d76fe-3c45-4dcb-94b5-3873d4f4a693",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2e00514b-e8c2-4d0b-b4dd-6d08349bfddb"
        },
        "item": {
          "id": "1303a845-eae0-4d96-85d5-7e9c248c74ce",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d01e4556-8608-466d-9c1f-dcfcd6c2e717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aa59dc-6dc1-4745-b3b4-3ee3f112c13f",
        "cursor": {
          "ref": "632f90a8-53ea-49a4-b82c-f67c4edbaee7",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0a0e84ee-829e-430e-bf53-9feaac5c7b68"
        },
        "item": {
          "id": "52aa59dc-6dc1-4745-b3b4-3ee3f112c13f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ff3bf2d1-a1c9-4d56-8af3-2b0abea21ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f282e95-43e4-42ac-bc38-34d4d16b31ee",
        "cursor": {
          "ref": "0d71103d-4b84-46be-bc7d-adb6fc17e4c0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "40b6a484-dff6-4917-8077-c71d61c7ee8a"
        },
        "item": {
          "id": "4f282e95-43e4-42ac-bc38-34d4d16b31ee",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e436e7eb-4dbc-46c9-a755-04ecaebff533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8553cb95-b000-4342-8675-f124290127c7",
        "cursor": {
          "ref": "729c11d6-85f7-417f-bf6e-2c5f81fc509e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "12e5611f-3bca-46b0-947b-1d29095c4593"
        },
        "item": {
          "id": "8553cb95-b000-4342-8675-f124290127c7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3cc45187-42b0-4093-9ef1-a521e409b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95a78fc-cb8c-4b6a-b210-53eddafbd873",
        "cursor": {
          "ref": "1aa33c2f-1de9-4c8e-b11e-c9f6b2609696",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8fa4bcac-8d7a-4da2-97ed-ef3b0a2d6b01"
        },
        "item": {
          "id": "a95a78fc-cb8c-4b6a-b210-53eddafbd873",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bd481119-f0ec-4b2a-8acc-819dacca3c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde3808c-befb-44d1-8f0a-c7aa58c2adc4",
        "cursor": {
          "ref": "8fbb0c1c-4813-424c-ad3a-c381ac0ea3da",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4eeeeaa7-74c7-4a4e-9ff0-911540dc7b6b"
        },
        "item": {
          "id": "dde3808c-befb-44d1-8f0a-c7aa58c2adc4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3eca2446-c4e4-439e-9cbf-208a212df3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fdb3c1-9678-47b2-8068-90344f4e5832",
        "cursor": {
          "ref": "6cc5925d-4f36-441a-99d1-ecbad05ccc44",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cc7b324c-ae06-438b-94b8-2681e18b2202"
        },
        "item": {
          "id": "39fdb3c1-9678-47b2-8068-90344f4e5832",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "49f6e79b-f68d-4adc-aa50-8e63ff2709b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ebb397-6df6-40f5-8216-25583a443965",
        "cursor": {
          "ref": "147386cc-394e-43c4-8dbb-969750bb3a15",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3bb22b33-63a2-4df3-bd5c-4e3abd20854c"
        },
        "item": {
          "id": "21ebb397-6df6-40f5-8216-25583a443965",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0dfe0769-1302-403d-8cd3-41550992451e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12e2e2d-fabe-427f-89b6-aeccee521e27",
        "cursor": {
          "ref": "a94f2905-12e4-4eb2-a3a5-a79354172e7f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1524743e-0c96-48df-b1da-7dcb705aca2c"
        },
        "item": {
          "id": "d12e2e2d-fabe-427f-89b6-aeccee521e27",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "07ff2f5c-cf27-43f8-b4e3-408b5e583f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542b2fae-82b3-4b91-b85f-d55f3ed34d96",
        "cursor": {
          "ref": "b2a77625-c283-485d-aad1-c1e4ef6e176b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5913db42-2c51-43d8-adf7-f884990f0fe6"
        },
        "item": {
          "id": "542b2fae-82b3-4b91-b85f-d55f3ed34d96",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0611ca1f-ca3b-4c8f-97ad-0177809c73c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892df082-4346-4054-bd65-16574a3ba9db",
        "cursor": {
          "ref": "7da6bf50-a5dc-4335-a4cf-9376ab259bff",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "62a4bbf3-7d99-4f02-81be-80cd3c27db5f"
        },
        "item": {
          "id": "892df082-4346-4054-bd65-16574a3ba9db",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9779557f-ecbe-449a-932f-b1b8c530f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2b7a5f-676a-4c31-92ee-b9586a4dc0bb",
        "cursor": {
          "ref": "e20efe3d-1502-4958-aaeb-4125e6d9af74",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "403091e2-de9a-41a3-8561-ed00f00fcc66"
        },
        "item": {
          "id": "ad2b7a5f-676a-4c31-92ee-b9586a4dc0bb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "be3d9abb-44d6-44ba-9565-fbd5bb0a00e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b365ea-fc54-4fe8-becc-8b14bf50caba",
        "cursor": {
          "ref": "60ad8550-1292-4c3a-9352-5a7d0bd41e3d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f2bde72b-cad3-4cea-8825-c7402622b35d"
        },
        "item": {
          "id": "98b365ea-fc54-4fe8-becc-8b14bf50caba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ca8b7256-c7e6-46ba-a26b-51c56fc129e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b517de65-5cd0-4655-bb4f-2e1d8b437679",
        "cursor": {
          "ref": "173bf68d-5aba-4c4e-aae1-83dfa3cf03df",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "34a34a45-2f95-48f2-b197-5879b8cab6bf"
        },
        "item": {
          "id": "b517de65-5cd0-4655-bb4f-2e1d8b437679",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ea2a06c7-a94d-4528-8948-71dde6725ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db36101-7e41-4e4b-b35d-a7dc68bb58b7",
        "cursor": {
          "ref": "a51b1a9c-a384-4af7-9545-620f917640a4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1589d6c8-3089-4818-917f-ddfc1d90a199"
        },
        "item": {
          "id": "1db36101-7e41-4e4b-b35d-a7dc68bb58b7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d331d326-8071-49ba-ae16-93dd94ca6342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551b40b9-6f9e-4bbb-a34c-81975613de93",
        "cursor": {
          "ref": "b0648223-36b6-4942-84ba-945cf95223c9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b03862f0-7eff-437f-87d3-5ce65ad007ae"
        },
        "item": {
          "id": "551b40b9-6f9e-4bbb-a34c-81975613de93",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3dca5ae2-4059-4a67-9f0e-2b5ba7502455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b4f0ba-ffed-40b2-8b1d-431fef96afa2",
        "cursor": {
          "ref": "2c9ce255-dcd5-4313-8b86-d351045518e2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fe811131-46ba-4d8a-9aa0-d0e575e627d5"
        },
        "item": {
          "id": "b7b4f0ba-ffed-40b2-8b1d-431fef96afa2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d199c19e-31de-45a0-a59e-e9ed6391c8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0204c9-ab4b-43a5-9ee4-8c1e56b9a615",
        "cursor": {
          "ref": "8dba683e-e167-4d16-9a96-cbea73bb19d2",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "85180165-1b44-452a-a462-9f776bc93625"
        },
        "item": {
          "id": "3a0204c9-ab4b-43a5-9ee4-8c1e56b9a615",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2e0f8378-2c0f-4d5c-b839-113d3e0c7c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f954ff-601c-4993-bc0c-ce1eaac5eb9b",
        "cursor": {
          "ref": "11cd381d-312f-4b34-ab59-d21912e94ab4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "229735ab-d93d-4fe4-ad0c-888ca771f4c8"
        },
        "item": {
          "id": "b6f954ff-601c-4993-bc0c-ce1eaac5eb9b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4c02d7b1-30a4-4d80-9d07-f3777b0e40b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a9d352-0100-4a2a-864f-fc95a19d0b9e",
        "cursor": {
          "ref": "fa7501f4-d3a9-4a60-a111-ae447293a769",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8ecb8cdf-0fb0-4f84-8fca-dc238f1be57a"
        },
        "item": {
          "id": "27a9d352-0100-4a2a-864f-fc95a19d0b9e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d970caae-321b-4c17-893f-32c2f6a5250b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1d3490-2340-4d7c-956b-3c991f287b09",
        "cursor": {
          "ref": "4b51403f-47f9-4091-b686-8d05d7c0dd2c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5596f010-14f1-4a6c-80ff-32bdd29defd5"
        },
        "item": {
          "id": "1e1d3490-2340-4d7c-956b-3c991f287b09",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c3f4bbc5-ace9-4426-9d44-86c38d16bb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d73e7e-2832-4763-a659-e3e61f4bd78a",
        "cursor": {
          "ref": "9d29b04c-5e90-4552-af59-19ba5695a0b1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fb2d141c-9166-4e5f-aea2-2cda2ba930d8"
        },
        "item": {
          "id": "85d73e7e-2832-4763-a659-e3e61f4bd78a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cbe4ce91-595d-4f81-b658-0ce580c2f607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539550e0-1aa8-4c18-a275-c438f133f2db",
        "cursor": {
          "ref": "9e9f7c90-8636-4f83-9840-c02c25c00965",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7448752c-2204-4707-8178-a8df32c93ad1"
        },
        "item": {
          "id": "539550e0-1aa8-4c18-a275-c438f133f2db",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c3a6de2f-8c41-4caf-bf81-a4cb87ae170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1b0dd2-7d94-4e36-8165-9a133bb5187e",
        "cursor": {
          "ref": "568ccf6b-2144-4c11-8a32-fbd920091d55",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "faf34f57-9d06-4729-b167-eedaf6a985e3"
        },
        "item": {
          "id": "6b1b0dd2-7d94-4e36-8165-9a133bb5187e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b62eea0a-a31e-43e2-9eac-2eae1a1082a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ba650-c4f9-4df2-88bd-bbb3ab669710",
        "cursor": {
          "ref": "4e00ffbe-c5c6-4293-acbe-531a5f8ebc8a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8461341e-44b5-4e27-95df-37eaf877726d"
        },
        "item": {
          "id": "588ba650-c4f9-4df2-88bd-bbb3ab669710",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5bbff8c0-480a-40b8-8c98-b03a7e299d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee16d2a-2d10-40f5-b41d-c887664968d1",
        "cursor": {
          "ref": "7ed0fb8f-25fc-450f-9a7d-91ed5c4480c6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "712891fc-200e-499a-8bdc-00c9e068a1a7"
        },
        "item": {
          "id": "6ee16d2a-2d10-40f5-b41d-c887664968d1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "55764b85-0f16-462e-878f-407d208c2e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ad837c-cd91-4ccf-9231-fd19f294761a",
        "cursor": {
          "ref": "0a614637-373b-474a-b765-97c531c3b750",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b213a5a9-49c5-4f82-afe3-8b55b2ac9023"
        },
        "item": {
          "id": "12ad837c-cd91-4ccf-9231-fd19f294761a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "04310d3b-9715-44d3-8099-457ad572c0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e05b72-dd0b-4a41-80cc-8421da8b1409",
        "cursor": {
          "ref": "49c60635-f04c-4453-bfcd-b78200909390",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f6c9e8e2-64cc-4b6c-b1a8-955f94bf1ecd"
        },
        "item": {
          "id": "d5e05b72-dd0b-4a41-80cc-8421da8b1409",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4fc46046-cdaf-4c8e-baab-c6d38d11e32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449a80da-64f6-4853-83d9-a3a2210bcadc",
        "cursor": {
          "ref": "851f7b12-f036-496f-8f1a-9385988d4aa3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "84c42113-f911-45cb-bb50-05e820217564"
        },
        "item": {
          "id": "449a80da-64f6-4853-83d9-a3a2210bcadc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3324e51d-6050-44d3-ad9f-1f3bf54bd5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cedb13-a23e-4f8c-9b72-e6535dbab800",
        "cursor": {
          "ref": "b1b78f9a-4d1a-470d-997e-5527c2bb7900",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "abf81195-cd49-41d9-ab28-c06ecdf173ae"
        },
        "item": {
          "id": "02cedb13-a23e-4f8c-9b72-e6535dbab800",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7256c4c8-dfd5-4e0a-9a6f-a2761705601c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db5948c-7770-4fc7-8b5f-7d34e5bbdcbc",
        "cursor": {
          "ref": "53ddbd8b-d524-4ccb-99f1-d35dc26ab930",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "901eaebe-4230-4dd7-a50b-2216340946e8"
        },
        "item": {
          "id": "0db5948c-7770-4fc7-8b5f-7d34e5bbdcbc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bfc6ea07-7986-4c15-a9c4-9c9ceb71500c",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f75627-286f-434e-9e6c-41a3a6acc2e7",
        "cursor": {
          "ref": "d55a315e-53f8-4382-991b-6148874b34c2",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "755779ff-a98c-4992-b494-0681eaba0824"
        },
        "item": {
          "id": "72f75627-286f-434e-9e6c-41a3a6acc2e7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5d90f35c-cd2e-42b0-ba11-74ab69ea79e2",
          "status": "OK",
          "code": 200,
          "responseTime": 3379,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e99f141-af56-40a4-8ff0-23d3f67b4550",
        "cursor": {
          "ref": "0b50d376-388e-4a13-967a-af8bce3998ed",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ab0d37ac-cc0f-48eb-a5a6-33c29cc25441"
        },
        "item": {
          "id": "6e99f141-af56-40a4-8ff0-23d3f67b4550",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e0d8d535-2f34-4580-a266-7f3e796a03bf",
          "status": "OK",
          "code": 200,
          "responseTime": 2694,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a9aa43-89c2-4f62-9fea-c1ffddd38fad",
        "cursor": {
          "ref": "333c712f-deb7-4a13-a838-5c7568dd54fb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "034f7b07-a0be-4f12-b111-4d14cef16d62"
        },
        "item": {
          "id": "e4a9aa43-89c2-4f62-9fea-c1ffddd38fad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58047196-40ac-48c9-8751-1065e347c6a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a9aa43-89c2-4f62-9fea-c1ffddd38fad",
        "cursor": {
          "ref": "333c712f-deb7-4a13-a838-5c7568dd54fb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "034f7b07-a0be-4f12-b111-4d14cef16d62"
        },
        "item": {
          "id": "e4a9aa43-89c2-4f62-9fea-c1ffddd38fad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58047196-40ac-48c9-8751-1065e347c6a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e8d7c9-6cda-4c8b-911d-d4cb979b4947",
        "cursor": {
          "ref": "ffb2d0e1-6a7b-4c5c-befc-c4d5359cb054",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "821ecd79-0874-463a-9adb-6879d069a122"
        },
        "item": {
          "id": "01e8d7c9-6cda-4c8b-911d-d4cb979b4947",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "92180edb-83a8-4710-b8c5-6518e173e4cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb67e51e-9666-4cb1-a73c-39f8b68dc082",
        "cursor": {
          "ref": "771f4855-a193-4201-bbc0-b4837ae924b1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "df55f90d-7ca5-4084-90a0-e8b1ed7c8277"
        },
        "item": {
          "id": "eb67e51e-9666-4cb1-a73c-39f8b68dc082",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dbc7634e-e1bf-4bdb-8991-67b9b5509a47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}