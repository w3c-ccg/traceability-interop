{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d594a4ed-1a22-466c-90df-cc30bed034a1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1522dbce-f3dc-4757-9cac-d1a0e438fe43",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e21a1f8-b494-4675-b646-5b4f636536fc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "466b0cd1-e532-41a0-a576-e756e2f2087f"
                }
              }
            ]
          },
          {
            "id": "95e930e9-b855-400e-8c8f-12f74f3cae99",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7233a9d8-46cf-4c77-a181-afda308b6bb3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4e848f6a-4a1c-4300-9284-e1024535e8f9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cd203420-1b3a-4c98-9457-58eda6005bf2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9bcd7e95-a648-4b2f-bbdc-9eea726d5aaf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e81e67f-4cd2-48f1-b83b-cbb76301dab7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db8bfa2a-2a43-43cd-9812-b2dbb4c6e79d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca96959f-8816-4f69-ba0f-ad149dfcac83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69dad74d-36a1-4c71-919a-6c169c01ad28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e003eaf-d4de-4eee-bd69-0415a42e01c0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8008af7e-8292-4e9d-ada0-a6b1e57a2a17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e8d3957-4aa4-4b8e-bcce-991a99c606a1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "353065c3-27ab-4937-9f22-d72aa89d233c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "11faa319-2fc7-4718-8316-411a00a20aec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0ac101c-7301-45a5-9697-80f04a7dc53d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9674337e-f764-4134-975d-0a5ec364eaae"
            }
          }
        ]
      },
      {
        "id": "5b29616a-1187-4e35-bdd4-ab1a72e6f045",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "06df6744-e459-43d4-8351-9343e1e184ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9299db06-d50a-4090-9c0a-6c566f814531",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b3be82e1-2d21-4487-9794-c34f301ac002",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f6a72c-41b9-4884-8a2c-971aa8db89fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba08f6a2-f07d-4f04-a25e-ba68e137b484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eb27f6-b147-4296-96a7-707dabeaf3fe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ff1ac7-6427-48ca-98c4-32a87ecf0a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e0f03f4-8ad2-4b99-b110-6372ef8d8cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98f8612-b305-4d66-ade6-64a01830ba93",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b389a20b-a68a-4868-97e8-ea11ba823cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ed6e214-c432-4e23-93ab-766196e48ea3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59fa83e3-aed5-48f9-abea-66ba33b78b0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b305de7b-5da3-4518-b843-fcb4f87702e6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4860105c-15f0-4859-8c10-b342bb1dcc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08f44744-f62e-482c-b4f5-fea81610c0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52db141-f9d2-4a29-b1cf-1f79ce157e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceb8c42-2a38-4d51-9469-72b5d264f0e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d1a00ee5-0498-41b1-b3c0-21ffbcb251b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55f97955-2268-4623-ae47-bffe6f5c0c4d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c9ea24e-a688-47ca-99c3-bad57169442f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e30f18a2-39ca-4a05-8ab4-81ebc06ad553"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f04b9871-7c60-4c5d-9622-1a13c16f732e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2d019649-d2f7-4630-afa6-8abc9b5a1026"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c6a8b18-3e1a-4a26-a67f-a8baeece5351",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90649646-4fda-4a5c-a1f3-7e0f85f44743"
            }
          }
        ]
      },
      {
        "id": "83f876de-82e6-4ba2-ac28-3d736d133ad2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "79b47fdf-1807-441e-bca8-221d8a67117d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de1a4a85-8434-4e6f-8d3a-4e47d6d3cf46",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "db8be7d9-33fb-46f0-a9d1-cdf0091904a8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f1fa65-2c1b-43c5-92ae-ba96c699ad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee12f11-23db-49f3-978b-bd26f114e500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7af20c8-1eb4-413a-a71d-e1ee0fdc6fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "711184a1-7102-4ec3-adf6-0f32017dea41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c2fe39-c1e5-4e29-b513-762fccdc2f6b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e15c13-78d4-4bcb-bf5a-9c0f6dc94928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b240d811-9d1a-4f08-8ae2-223a50b4d513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3f20a4-d97e-4a03-8196-9bb8ee0bf497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee19168d-fb35-4511-a04d-c55a70aedb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31337d1-c29f-433a-a598-3adf71be0904",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3ab177-6a27-47bf-a5c1-2a1b8bf6dd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc635ce-8718-4d2e-95a0-186ca4a664f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde3aff3-5013-42bf-9cc0-bb9406439821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd43b90-51e4-4b48-8165-6d7f2c1b3e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fa96ee-152b-4ded-9aa7-475df5a49dd7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cad8cc-f9b4-464d-905c-97c48344c834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6f6c94-d4df-40cd-bae0-bc8a7564668d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b88fdc-d456-480c-8946-ce42578c0ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "841e1e53-72e9-4d46-ba48-3d16ec73c17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7945e13-31d1-42f8-831f-69aac6039c2b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb185f1-6119-44b3-a7a3-f83eaed1a388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7fc148-46df-41d6-8e5a-c941cb694655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa0d004-3888-4535-bb19-213f2f9bb207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d96d3849-2f7e-4b7e-9782-8718d6fe1307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b304cfe0-c123-4d64-9df5-399c5e7ddc15",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94784bd1-ddd2-4798-924b-7fa0c6e13666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26566a6-cacf-4494-ba59-9e41e218e7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fc24d2-ee03-4a53-b8ba-c68518d1d901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6046631c-9c19-4408-9a07-178e684efb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7171c157-9d2a-4dd0-aa99-6ca51dc7c9a2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c424d3a6-45e1-46bb-95ae-0f4d8d59d081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd81666b-1ab1-4654-aff3-15ae543b2930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6061eb86-4fe0-4ea1-bd42-706fbd2f432f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91e8b613-e5c2-4f1c-b6aa-fb99262672db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0894d410-2e4d-4989-82ff-f180562c8524",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569c448f-8f55-421c-92c6-6cf33934911c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7624f89-5dcb-4345-8da5-4dae8df9d3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a95b7f8-c5e8-4ebc-8a37-eb39fd217413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0484e715-93ae-4402-98e2-34b3d8888308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2442858-23fa-471f-bace-0351b09784a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2cab72-1121-4d99-8313-ba8f64b3caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6b95d5-3ec8-436e-aacc-37f314cedcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e46489d-900a-4157-9539-66859efbac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29421dcd-7184-4bb0-b769-f35c5f45d103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29be80b0-b45c-4543-84f0-e3f2f99aa696",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40c45e7-6537-49ee-9d9d-652d3dee3d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9dc3b86-9d3c-45e0-bef9-6a8eb25585fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ec072d-3a10-4121-8f3d-aedc13bf49c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bb493a0-f5b1-4773-9743-69f5450eedea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984bf8a9-29c9-416c-ae7b-afc4885532df",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210af417-1681-4c62-8f32-3dce095b8d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac54231-0e18-41e2-bd5a-da667aa29d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fffe0d3-1624-4b06-b4a7-9c888767970a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f30a66e-d87e-473d-b590-a7f2d9d9745a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67781b5c-e5d9-4d2d-bf64-1c6cb9ca332a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ef1630-a434-427a-8405-23316b15d54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8212844b-0c63-42fe-b653-fd15f5e9a851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f2204d-1468-4956-8299-fd7061b4f150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72c67134-4a2a-4100-b4ca-04dace5466b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d60abe-0b54-4acf-93c9-731050fae426",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f10971-8388-46ee-8d5e-98efe99e6b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cfdd82-75da-4267-9716-da1737e87cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c369e7ce-4817-4748-9f32-ff686713aee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f967775-b163-46a4-a0fc-8251436cf664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcba92e-1fe9-48bf-8bcf-a5e2d879d4cc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4c7040-069d-4a1d-a3eb-9b980250a373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af57d3a-c6f4-4bfc-bef5-8950706c621f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2fbb7a-e84f-421f-9e30-bf7b19426cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d74aa5-0523-406d-9f84-c6dd741f7253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de43f9a9-d2a0-4b14-9236-8ae117345994",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2ee882-d63c-4d5f-96a5-4ce3d5c2f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258d08b0-246e-463d-821e-37a61b0da2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6adb747-90e6-4f6a-8058-397c6305392a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d030242-87f7-4bc1-bd59-4f5c26aa37ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c5df1a-4c64-46e9-8a3a-fb123057efa9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c56caa3-7d93-4432-8419-e1df49e3c7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046ff109-4227-4167-a25c-5cb120dd0b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02138d82-7294-4e1c-98fe-b09ad98f48f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6c7b653-8c45-4ed8-9918-ec58a3819eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22acde5-4cc0-4bcc-a651-176017df4ce0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f34b329-13ef-4e19-ae8a-e55abd35fb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a401e37-7ec1-46a9-9e7d-ac0bc16617a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e456331c-2f47-4ee4-b2f0-136e847973da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "202a305d-ea9b-4370-a605-bb1279289484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed564806-aaf1-4b85-8fad-cc1963f146f7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01584992-365e-46a0-a540-6acf471928b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b76952-adc0-4b5f-889b-c0d9e768519d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d6f770-61a5-4a7f-b7db-4aa8ee767359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5899c7-04a2-4b6a-a666-5df130b3b81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296bbdaf-402d-4d94-83ae-7dd7b9e7b32a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f144ca-e3cf-4f32-9bfc-9dd7195f9d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1584478-3c90-4bcd-8b37-e089f6016a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df980e34-1c6b-4252-bb5e-e7d42f8df5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2d38a9-6cbe-48dc-af18-d545fbf3cc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e126821-6605-4ad6-9dd1-47467670a06a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25812601-ad14-442d-8402-23e54531f940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b48eb7c-0fc1-4fc7-8613-d9e93e3981ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f7ead8-9b67-4163-8360-d415dfd99102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79791617-5ef2-4bdb-a01b-5240953f4a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d25e30-c40f-480e-8200-77a5acc675d3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4908fa4-a8a4-4c73-a601-8c235146fe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b339c43-9e08-4e9f-aaed-1639385cfc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cd684c-1aca-477b-a165-aa9b5d8e2077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2558fe-5294-49b3-a45d-5191e73ab9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04832b53-7a42-4360-bc97-9edd7e378390",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6790fd-d3f2-4212-b15c-d53052086e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7187e5-f7b2-40cf-82ef-94ef7a53492c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdeb27f9-0ffb-4f4f-b098-194d1f12aa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a90317f-df07-4c51-9072-185ea184685c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ccc6f1-a7aa-41fa-b377-b0c330ba49cb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aec77f4-41e3-439d-a9f5-93b7bb25e5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed97cee0-b57f-4b19-9e57-1d5b8027d397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab5e3ba-43c6-451e-b9cf-f7404318d278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b04ccf0-bfa2-4c74-966d-1819b589a2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fc039d-8b1d-4b0d-84e4-913464ab8266",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25554089-dad2-4bd4-a027-f5fafab97606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a980b0-8fd6-4695-92e4-c49a2bd57227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4ab3d4-3e6f-4e66-a292-0df35d722353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a2f4aa-5141-473e-82c5-771a04fba8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be999cf7-0a20-4b04-bde7-57725d1191eb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c580e31-81f2-4fcb-9c4a-c71e4735b501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc85e6e7-9b25-4547-a245-8cf0ac30c5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfcae37-9215-4b41-a33c-12b426a71ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4684120-6eab-4f93-a84b-df17cc597141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bc87f8-b4dc-42f1-9549-22cdc3a7bd62",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cd3525-c261-4758-ae66-0403d665eaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a71d6a-b8b0-4bbf-8ac4-770043a5e6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a89df35-5668-457d-850d-80392136ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8a3e76-ebc5-49ef-ab77-5f91165f090c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbb55f5-79ce-44fb-9ff7-29870f76394b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940bf605-0470-439b-a54c-d80c6a8c3587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369e9269-0836-4477-8157-0f322814dcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26fbada-f403-4fd8-a2a8-fdc8f686fc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c757ef-b686-4703-a162-101192538e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a28a48-71a9-4355-a5e5-b53f9d27a116",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65be711-1cc0-47eb-bee2-1b3304880528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd45cce-2e87-49f7-a871-965aaa53ef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4662396-7893-439d-8649-158468c1c5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc59d8f-d4e3-47c3-984a-4c06743b9af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94340575-434f-4e17-8b17-028fe14356ea",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a4040-7d29-4af9-84c1-013fe7e8d6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6b7fdb-3eae-40f4-8b3b-3d18932b64ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e92a712-9d7f-4571-8453-f2684cd6a2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5059e9d9-de00-43e7-ad0f-128a64e37737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdabdc2c-4618-413f-803e-b86b8a92f7b0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8224cc-d469-4fd1-b3f8-ae0f139d5fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcd1322-f428-4b72-b4a3-2be4f7651793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d327dd1f-4107-4307-8bdf-774c1953a0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "221e4c42-2151-4377-823d-7117273e0647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d98b14-12ff-431d-bc27-221af8c5eaa5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3640689e-a07b-4661-a581-44c596d5997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36242246-c6fa-4814-8af3-e27f52626343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f67f2c8-ec28-4ed8-9dfe-c764aed911ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2da2a40-cd33-4175-b81b-670422d7053b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce45d598-a904-4bb7-aa10-255a40cb7d88",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626f7c94-2e99-41ab-a068-e60be6308d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a73ea4a-5335-4050-bc21-53f1767f0d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69267cfd-0c7f-4aba-a5b7-5ff10e1ebb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b669a7dd-4327-48ab-83f7-00cd4b1baaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf977d4-23a3-491c-8dd7-f60f8e2a5264",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e4a1a4-e5e4-466d-ab0d-086f8cafac04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043e65d0-6643-44df-8d30-8ee68c18a673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842aa6f9-5bf3-4265-adfb-4630d77c455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "397201db-ac7b-4177-81f7-881aaa3683a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc829c8-3ccd-4bf8-83f1-eea66dd9778c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5c5f4e-093f-4ce7-b19a-dab3cd064e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e93867-4852-490c-a900-3a03c359054f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fcc332-5580-43a2-a2f8-69a0a6249c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd657e1c-2ce5-4539-87c0-f72f282ca818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d278626-5138-4fb2-9101-16a0051aa894",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195d6fbd-e2a4-48e8-9027-4f952d492093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8860afdc-6977-4d6c-bf86-cd411615ddf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3560074f-b082-4ccf-9bfc-6f9d87431e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "274c2850-dbdc-45e2-8081-8f26b688e973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f2f17f-c632-47c9-bbb6-8c942b72d61c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e987b5-1123-4336-80a9-949a1b39dfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c016d18b-2125-4664-853a-c42682c8030f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90d63b4-cc88-4cf2-90f1-93cf7a10b33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49012caf-18d7-4da9-b169-b6a07dab4478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf89e41-5728-47f5-ad57-7e243d7b2430",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85325b9a-7d11-46d0-9b52-395c1d136e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11108be-aa43-42da-bdfb-4ab6be5af0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c971af78-d327-475d-8d4c-3ac88cfe7e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8bcc70-7a26-4afe-bc6f-c1dff7ed6308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35109c44-3b53-44b4-835b-fcf3bc205394",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b8d7eb-dfd0-4e78-aa46-f3a398afe955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75e2fe9-92d2-4487-b092-06b89231a541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b176df1f-26d0-4eca-b65d-527818a91cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "990e112c-07fa-4bd0-b0c3-270f4f1d92c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1a2124-173d-48c7-ab8d-73d330f007f0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd41fb11-e69a-42d2-a34c-519237977a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a3e4f5-459b-40a5-bbc5-41ef129f6156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597a79f1-5238-4782-bd75-1d5691e46080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c6fd075-94b2-4649-9995-d77f5409c044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8347ddf7-a035-4485-9e84-03f8f52e20d8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cdd7b0-0fbb-4c08-aece-729ca1628fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee8b230-8c14-475c-8da7-d40160c61778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5d9260-f532-4aa0-ad5a-a3faf367a682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8849e13d-3a58-4d32-9f5d-a33d1673c3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d923b55-8238-4eb4-813c-2688de85e43e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4f78cf-daa1-4477-aea8-b21d833cc381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4ecf8e-9b07-4390-a2ac-2dadf6ebf80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505e7598-baeb-435b-8818-2fc146c0ee72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "951b3591-936e-4505-8118-52ab65cd2592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be32ac4e-a284-42c8-9396-d4ed3617a646",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691c029a-3265-4e35-82eb-2707b638772e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1639d054-487b-476c-bf60-8d39d5d476c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4c782d-4a1a-48ae-8e42-b9ba85f9c59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "55791221-86e7-4e81-932e-bc66cc2b0ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c68ab36-d132-4e5b-9a25-5c0e30eeae39",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f785ef1-190f-4061-b2e0-61ab40954e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0082d3-d428-4bee-ac2d-cd4b3cce5e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd231bc-061c-4441-b62a-c329ae7f1291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d92c8f21-08f4-4676-acff-d0d372278b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5309ad8-08d7-4bce-965a-7b6cf74df0a2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bcf8cf-1a05-402b-b15a-cc34471af5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940d025a-3345-4a0a-8e45-0381d9bb4b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9962cf-b098-4d87-88fc-66b0358ad5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abc9d01-a2dc-49e8-bfcb-221fccbb7798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7555899-b1a1-4b23-82fb-382433ac948c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b846b6-d346-4096-a11e-1b36b00c5112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce5d7b2-4fa9-4a34-b7db-6f21731b58c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb752a1f-7740-4d72-af3a-c771f3d2cb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2b41bc-9a7f-4357-8ef0-8fbc2b94ebe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f509bd-0f05-4103-9f71-58aee4d2177b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e22bf2c-9d91-46af-bbc3-29695e9464e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbaa4ae-98fd-49d9-9a0f-7d08cb837944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2035c79-08cd-486c-a26b-ffbd0a6ba59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccff81f-1a0e-4f61-8d84-eb5aa9cabd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afb32e0-087a-4b8d-8c7c-bf359f5ff988",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4487e1-055c-4180-b637-13f417c11ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65448020-5f17-4142-baef-b84b40595a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8435573-9390-4162-9183-f14a077d521c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "152ef338-bba6-4b5a-8c54-86d8cec2aa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4879d22-cf7b-479b-818c-deb811744562",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e02adab-746c-48e4-9c81-e637776d377c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bfa3a5-fb66-428a-b48b-20342e6a5809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4560ceb6-3e3d-4a78-8b3d-93d5977db32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5cf060-5662-42bb-9536-4cc983904e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a7e6b6-5cb2-4fb6-986b-c6023f8c0989",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c2d14e-f537-4d40-acdb-580c49126c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65da4aa-3716-421e-89a3-2165fa2fe62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7721916-df77-4ee3-b120-6ade2c6e533f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f14d02-8722-4c9e-938d-c8975ef85844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db447b19-0cc6-45d0-8a54-28c2886e889b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15088dd-52d7-45a5-abd6-86c61be851ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184e94be-7895-4153-9221-8171f981c4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc29705c-8525-4a0e-8a6e-08441f77df28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f55b1b19-4889-46c9-9102-47cdbad317d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7184dc18-3921-48ea-804c-538539b6b1a4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eecf17-8465-45b0-a77c-24c30a2d4147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b86f30-0d5f-4665-a05e-5512dea3c42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72859dac-d17f-41c9-9dc3-f74d1cf559c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0aec52-7e7f-4ddf-b220-385d0bb85ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e1f744-ceb4-4f21-8036-13bec3fa5801",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df66f74-6105-49f7-b9d8-73003a8da7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8162bb-994e-4553-8a25-b857acfeee53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d5337c-9f60-491b-a2b3-3a8984ba0c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83314401-3407-42aa-9e2c-e4c1489b3ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a32b265-83b2-4b45-8a0d-0afbcfb6861c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8583d2b9-f64d-4237-830c-e8afa6b4bd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c11908-55d5-4537-bde0-1146a7c5540c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522f710a-0fa9-41d4-95b8-cfe8c771a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d363bdd-a370-4927-b2de-79db662f0722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1e9673-e471-4697-a7f8-a88d99108a85",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79195d5-9642-4a86-99f1-36c15d8d5030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233ac106-2733-4093-a31a-ef60eaf5da3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf8b748-59d9-4c32-9246-f48c1430fc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb74211-7e8b-4afb-ba35-cd9912e65e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929fc933-fba3-4c43-abe2-46b461b4cf85",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b537a491-ac65-42bc-82e2-e9c6396705ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1588dfb3-7c3d-40fa-ba7b-2c4d17b9a375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65cb1dd-b8e8-4e16-b2f3-7712295ecae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7033f9-fb24-4732-8f01-56e0c2d5e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc501fc6-6264-47a3-9a16-26d3561ebc1f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189645be-2f7c-4429-a638-e08a41c1719d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c379fb5f-6366-44aa-95ad-4d74358ebdbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e07cb-6e33-4173-aaf6-707841b63e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7e528b36-5371-424e-8b71-67b129c4d249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8444d1be-0bad-44bd-a2fc-99b89eab783b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f331143-9c30-450b-95a5-e5bdf480b725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e77331e-ddde-4071-bed7-d5aaf80d6a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e38d223-a119-44ce-84b3-d3415e6a75f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4042ed3-a6a0-463b-bad7-9301a033f3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaa117b-14bb-449c-999f-4e4d2676cb66",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa2ef49-a4f2-4341-b791-9a813c3b7ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7270d28-4981-4f9c-bfee-8ef2bedbad4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003f817a-37bf-4926-a109-b9fc0ec836a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "76f70b04-7902-449e-aaca-b9d097920b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f565cbb-89bf-4859-bb42-441c0daa60c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e9d890-0ad1-4ee0-b263-d1edc48a5847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5bc136-1c8c-4681-be6a-fff0a8ae2095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5888b2d5-3bc9-4386-beec-a0f74864fda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "60c7ec3e-bc07-4c3b-9b0a-65b321158a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8f0e6c-e28d-40fb-8ea0-bfa5974eafa9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2354d882-a2aa-4326-871f-1a1462b17c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf33ae1-cf02-4a82-a08c-a07bd78f362e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8122977a-cd99-4537-bdf5-630aca3b48b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd40c77b-7aa6-4ebc-8bde-4a3748a2ea67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1ee69c-6345-4a7a-b785-4f5fd48a1646",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad7b821-e48f-4b88-8602-19ae9d2990da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ece15bf-48df-4e2b-83e3-f59173f3c345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56a2bbc-9748-44cd-81de-abb49cff615c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3690d1fd-ae1b-4d71-bd7d-19b2e15f336a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9fc11d-0560-4573-8869-60d63e7b1e0b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda52b81-55c1-441f-b55d-625aea679945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03f372f-fb61-4147-8614-a0d3ed859560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deceece6-5925-43a4-9957-c2a4b58c1d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c406962-ba60-45ee-a7e3-f0c4a2fecec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04aba9c3-3f95-427c-8a10-4c2c83890ba9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86113e8b-8281-466f-832e-3dbadb0928f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bab212-8c8a-468b-8251-33b541112bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f10001a-4fa0-49c4-a209-73532942e614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "702aaff8-1e2b-43fd-b04b-4f5e543d495a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf881eef-73aa-4440-a264-f8c8c3c7a09a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7953b6-cc91-4b67-b223-f55bc83e4340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cc4f98-05e1-45f4-96d8-6143fcf61891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2c7093-f9da-417b-ba79-7a78b9e99fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86a7475-06d3-408f-b2f2-0a2235c7ef61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf60f4b-0b2a-4e10-b8e7-7c9c4d4b337c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f458e5-0c10-4bbc-8f8d-bcf0d4017915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfa052a-7e0f-44cc-8c7e-e42005e1ff72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a81bcb-1d63-4f22-b4de-e4232db237e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b876c7d-2c7b-43d5-aff0-95226394bcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73398dc-3425-4db6-aea8-caebf80009c7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756aa15c-1024-4bf5-8c4a-7e81b6801f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0816740-43fd-4ad0-80bb-cd6f7261bc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f549b304-7011-4162-983f-2e3e16e3f6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d53ba48-8e2d-4b75-9473-fc0bedfbfee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acebab45-6970-4916-916d-7e811682b41e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68336f27-9cc2-4bed-af6f-34b0d4bf81ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc25321-b3c0-4c6b-8611-9a897ac74633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f9a794-47d9-4fbd-a35e-e83abd4a25c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7005aee-bad5-4f59-9b8f-d7bedd250801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c8395c-a005-45e2-ae10-75201e9d23d6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a668c0c-2a0d-40f6-a44f-5b370ded1846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda539d3-f96c-43bc-8abf-d9a1e4bd9a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4cee67-f4a6-444f-acc6-c39a28ceef4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c5b39e-8ed8-43ae-9497-f7c9ee077b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d675ffb2-bbf7-4a87-ba74-fcb3a005e7ce",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6bb26d-8b28-4b44-bbc7-7e8dc27f3406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3486f8b4-ff0d-4199-ba53-9cff2b392623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f4a795-28c3-42a7-ac1f-56e179ac3261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b52bbfd-2d65-44ce-beba-1d11e89f789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c6f40a-38a0-4bff-89fc-b4df44f9b278",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a1f1f1-6d33-4f4c-942c-4ffcf260d8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04afbe9-3efa-4084-acd1-aff662042f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa25ecb-700d-4d0d-b0c5-a55fedab2745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d85bc3-9040-4281-a51a-beed8c079207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f2868d-62dd-40c4-857e-72a859dc601e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460e487e-798a-482b-ad4c-163165dbe4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00d6f84-4f73-4400-a772-f27b1b5115d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18eaa1d2-ea69-447c-8ad3-7ed6cee509e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "baac4626-f6d4-4ddd-8968-0d6d0a77779f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ba177c-f90e-4ff2-bdf7-0b8aa6b4ec3b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07940a3d-35a7-40f5-8449-c2b06f565ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45eb6757-d6ce-4690-a1d0-e60d7413c500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12cd8b3-2942-4860-9269-95e6b602fa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "877ab83b-b32a-459f-b9c6-200820235cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce8e6e9-1eee-40a2-912f-175bc12ee68d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eed228-32fe-41ce-a8b8-e2628ce472bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c154d8-ae5f-41eb-9749-c73312e1f80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f581c2-54f1-4180-abd0-e01fd0b4ace8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "834b7edf-f1a2-469c-887a-bb714f29a8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c181e0a5-ef52-42ec-a2c7-dac2c3c5c1ce",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8606b1d-8727-4a0a-85df-60db37fdc6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a942cea9-bbdc-43c9-89fb-c38200421557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2c9914-78d6-45fe-b501-363610896313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e134b672-0a0d-427c-a4bb-0d68192b237a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8219148b-7e35-4891-9d4c-35233dc448ff",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65d4afd-4306-493f-a838-54fab130777f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401d8a16-da93-4181-8b11-9a81c2b12cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9247014c-3a63-486d-bfbb-f9e5d6d62d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c76d934-aa50-4067-a96d-d7118115d1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fefeac-ed45-440f-a8ff-cafd326be9de",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b83827-5a75-42a0-b87b-4aeff143c114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d7155b-387c-4f45-87d3-d1bfa3870a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cc6da7-466c-40a0-98be-062c05571fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a72f13-e4b5-4a16-8adc-9d0b93946a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed2d891-8e74-4690-a186-360aaf33fb10",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fba9a0-ea39-4bb2-8e7e-8e78448aafcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ef6a7d-5c14-46a2-99d0-a57375e363f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b85347a-b18b-486e-b3ff-e7250e030ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadc337b-63fc-4fb8-b7f4-2895eef25bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75520b07-91b3-425d-be18-3c7c45a19a42",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f3c437-0e8e-4a2d-93c4-46ef006c423e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0807c5a9-df6e-41a2-87e1-047fd9ab70e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d203678-1123-4046-a169-98ffaf38987e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cab46adf-3387-41be-a556-77bc38df163f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f13b75b-1663-44f9-a451-4b437d41c518",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f4d501-d300-404f-89e4-8f00c50f8345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfb29c8-c14e-4ee6-9576-b93e139602be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30521e7-3b3e-4ed8-b288-29f9a6348240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8c5a03-86d9-42c5-b015-b46b03b78dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b689ec-92ed-4dda-883c-f696556cf96a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d66ac0-99fb-4152-8347-b2fa45d2fa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04b3ae7-5f49-43fc-90fc-469f622cdbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6396ed-4236-4589-91fc-1a8fbccfced4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f85a13d-8b5d-45aa-a22b-3b88111499fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4543f6b-8380-408c-b75c-c55a7c5a4140",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f12b04-c7c0-4897-9841-8d0f96716ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0a6cb7-d6fd-4f09-9aa3-697ac974220f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa80124-a528-4fdb-b1f2-33953b8c60fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63b02007-41de-4daf-95fc-69060c19f2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde31694-8d32-41bd-b175-18b0f55a07b7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56626308-a78a-496f-b96f-4cbab615846b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b84adf-0dbc-48d8-9714-4dcc536bcb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaedb20-7cd8-48ff-949b-26d3f9142274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83fc6f95-912d-4182-aa0c-5da0fc73fdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15e326e-57a5-42e7-b542-037a88aa5d1d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8518f12-6c15-4d04-bbc0-e9999f444264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d25231-fe9b-46a3-86d4-6ae577f96590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd91c6f-f20a-4666-bf1f-973a32bf892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dd6cda-738a-41fe-85bd-7b26d2240d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30a2b2d-fcf9-4853-b3cc-c980b26b4aaf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96affc23-8e6c-4c59-b715-b4e175b4ae94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19c64b0-4fde-4bc1-99d1-697edbcb0258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a78e80-0619-47b0-a18c-4f594571f8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "429323af-3f4b-4dac-82be-c7f36e59be23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f5f4a9-083f-44f4-a28c-8afd8673bb77",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8341acf3-dbcb-481f-bfb4-4e69636ef53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c908ad05-3b80-4c51-97f8-eeb427446cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3febe9-56f7-4777-b366-788ef794aeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8697d6-f91f-4baa-b7f3-6661fb50148e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b4a3ee-4a4d-43d0-af4e-9d792b217fce",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f8c9d9-adae-49f6-bcbb-93b0279171f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029bbd4b-3100-420e-995a-9f16de8795b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8fcf2b-dcb6-4b07-97f0-7894bd3573cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a0aaf1-44da-4432-ad79-c497a9c403d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4180a198-82fd-4f92-b853-e138f87353a5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2188ff4-e092-49dd-a13e-098c0ba0c25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e281bf-2fbe-4c1b-8e43-4d17ed06791f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d248aa6-b8e6-4a2c-a31c-195403e2f8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cce16e3-132c-4885-8569-0fd1470e8ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4345f1d-a4be-43a0-91ba-d60acc5756bd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb474a1-373f-4df0-8adb-ba7bbcd331af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b93a701-301a-476b-910a-e88f4bb719fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4964d5eb-fe7d-4c96-905f-c0ca07a46211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0650d12-12c6-4014-bd3d-9a7ec2a58bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027d994d-f13e-4599-892e-069b2d2f8ad2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87861277-c36c-4fe6-8dc6-95c1b497dfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e929e57-53b8-49c2-985d-7b766b37d212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b1b5dd-9473-406c-a923-07e5de7cf5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb21aac-7ae7-446f-9034-a0423378f6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0cf46c-a3a6-423a-96e5-08776cf0734c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d960437-5440-4e69-aee5-def367dcdc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85d4b28-49cc-4d6d-af27-2d3a12eef9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3f88d1-8085-423e-bbb3-93bfd7c23fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "184f2b8f-0eab-451a-94dd-49672ae1fa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e201c560-cd8c-423c-a798-d947fab72eda",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbfd641-53bf-400f-ab25-bab77f275f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6261e041-20c2-4643-88fe-cb7e69635a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a67ca8-f13a-4c8c-94a3-bab529c6765e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84a0961d-fcd6-40d7-97ad-1a7ce1857909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ef73ca-17a5-46c4-be8b-e43cf5fb8dea",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18e2734-64eb-4106-9717-38cf168cadb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "edf41d5d-0609-49b0-bb6c-9a77ad1c9a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7154992e-5c68-4d76-84db-eb2c57137023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7981a4-bd70-419a-8024-ef6766acb7b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cc6f0ea2-eefa-4d59-b7e7-b49e4c086f9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba375d6e-416b-475d-930b-b54064ebc89c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2d5089-0580-49df-a0ed-f22cbdeef462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "053c3667-a051-4293-9cce-c811923817e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cecf6e-c208-43e9-8271-8fa395e7eb22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a22342e-6b03-483c-8f7f-c74b455e70cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "325cc546-b53e-4591-a8c5-5f73ff5fcf3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5d1639e-b83b-4d82-901d-4927b5114e3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41b96800-1e86-454e-8ef7-fa5f6c2b980d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45a70c62-3121-4a1c-b3bb-525b83f35e3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8072cc5c-d27f-45b4-891e-2ebcb192318f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37e9c863-330f-4ba0-bcfc-50fc3c255100"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5c7fe6b-5378-463c-ad84-bd22ede9aadc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82cc69f5-5a8d-4ede-8613-ce96d0685a5b"
                }
              }
            ]
          },
          {
            "id": "16b43520-d882-4673-8a43-1b351f9628b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58721d3a-9a5e-4a60-9eac-ec4ddaab2858",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f7969720-2ae7-4fd1-afd2-2704b751bded",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c0ceba-ac1d-4951-8836-ff6a0bce1ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "df9db273-53b4-4f57-bf14-55087d9e1fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9966614f-dc4d-480e-aa17-1e069fbbe397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3eef87-4497-4c0a-9a40-badfb0a4148d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "985c0ff0-cdbf-40cb-9b53-832c4de5f6c6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a480ebbc-98bf-4171-90fe-b9aa96e29b84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a7621a2-a1db-4d1e-98de-b551f91003b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2763a04-48ab-4584-a7dc-0dabe3a059cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "769831d0-b404-4dcb-85fe-294052601d2e"
                    }
                  }
                ]
              },
              {
                "id": "3b0bc649-408e-4c21-901e-a319665c8898",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17622cf1-5707-499a-8f56-548d06f94220",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26cb1d8a-8c5a-45aa-9f6b-7e8cfa902636"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16a08736-31e9-42f5-bb7d-57831533a8c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f7c03e3-ee24-48d7-9d1d-f5d6b56dd5af"
                    }
                  }
                ]
              },
              {
                "id": "77774609-0576-4669-9c55-2389886efeba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12085518-3f63-401a-9807-ddc1adc14d79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6d5505f-27bc-4d75-9c14-2ee36c6c8fac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a5c55a5-f415-4fb5-a689-e74a8f19e49a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc70f82b-b745-4129-927e-3e91398dd02c"
                    }
                  }
                ]
              },
              {
                "id": "b6dfe3b4-801d-413f-8db3-109930243424",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc4977b7-e1c7-4620-bfa3-0ebc4a75de70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2da2a2f9-d3c6-4a59-ad16-bb6b72b1ccfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c84d0a66-09c4-4391-98fe-c6464d5b78e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8278f472-0cba-4cb2-aef3-86ef38979493"
                    }
                  }
                ]
              },
              {
                "id": "68556284-0d7a-42fd-a41e-0f83b3c81df3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "180f05dd-3a7a-43e9-bc3e-58870a17e36e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09ac39ed-036f-4132-81aa-470664763915"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1c1cfb9-ac93-42a2-a430-21ecdc123607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66213af2-2ffe-4858-848f-038b1f988303"
                    }
                  }
                ]
              },
              {
                "id": "dc24b23d-345a-4ac8-b55a-178a34609d95",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b12122d9-116c-41e9-9bf6-08906dcc6cc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6f124e4-fd58-48fd-b404-bd8ff02ba892"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "425002c5-74c9-40d4-9888-e80e127d604d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ad84171-7214-4909-b3cd-766d69dca5ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b40c432-51d1-4557-bd14-c448a8fa97cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73081865-d5cf-43e3-9193-84e1748a0562"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ba855c95-c9ae-44ca-9030-3c79e9fba3c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b34a5d9-c37b-4694-a298-6743788dec13"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "880ccb1b-b8c3-4d08-9296-c1d0de59ced9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "79b3f168-05fd-4e8f-8df0-8b4030f4324d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7425d384-8e84-4e00-b697-f65799a92885",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b21a9d31-1b6a-4a5c-902b-f4fbfe44f8bf"
            }
          }
        ]
      },
      {
        "id": "6031f12e-fd4d-4dce-a9c7-7b6822a6442a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "48656483-8c75-4876-86f5-db78226cc9d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c98bb514-2a79-41ae-af8b-545adfcafb4c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a2f0a6bb-678d-4f93-bdc7-201da42482b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f915a74a-3c19-484e-a5f1-e98081add8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7199819b-2c6b-4e18-a453-73619b2975a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019488b0-0667-4127-810b-3b9ecba1fa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a363d5bc-31ed-4486-8243-372d619a56a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19cb5f9-c174-47a1-8a2f-62b1abfa146e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5593fe4-690e-4801-858d-b3add9798f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cae232-8dee-41e1-979f-ceca925d76b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1993815d-3580-4163-8982-ff93412f4f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb2a92c-6d57-43d7-bcc2-044303608dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c132d85-6203-4b52-8a2d-a16f6d61460b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563a0179-eba6-42cb-9854-5246f6a4b1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2fed40-c8ca-4261-a43e-e55e8af0651c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b15ec2-bf4e-4a84-83b5-384cdf0cf126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c18317-fd93-4fe2-9747-d3d4b67d44f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97e233d-a62f-48c6-b809-9b0e0e8f9848",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24c57e9-8a3d-463d-9522-4ead8e8fe813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e8d2cc-169a-4469-b60a-c4fe170a71c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c17e346-086d-4c65-9a50-7a8491396af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5977e9ac-8f70-4068-9eb4-c48e672a81f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c6cb03-bb67-4a1f-bc1f-591787f6c2f7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656c1e68-f7b2-4835-84ef-c9311bcde076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5282d1-108d-455c-9d70-417333e2b036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6f9fcd-9415-4510-a70d-0330ecde6c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "631ef642-7fe6-4341-b07e-ffed8baf352f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf195f9-964b-4d00-8bfc-a955486aab54",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b766293e-3578-43d3-bd34-5bbbe2f4e3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff65e2e-36c3-4bdc-915d-aa70f58e292c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c6287-3c24-4e9b-bbc0-0ffab33c6b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7a0865-12a9-4290-b849-63cf8720b58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ca949f-5413-477a-9b20-dc5dbcdf9203",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70665b7f-0dbd-484d-8d74-4ada0c4eb97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc80593d-8fc3-4c02-81c8-139cf99c1867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82913d0-ef6d-4676-956b-d790b3613c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7019582-c527-40b0-b763-c106086d8d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d3e126-7691-41de-82ef-5c0c59523a79",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884e49f1-c1e7-4362-8399-1cac267dbd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db868a1b-394a-4587-9a18-57b816325ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40cfd4a-b56b-4154-9118-130d61d6a6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67134229-905b-4ccd-96a4-eba90be20737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f29d8a1-86f5-4cc2-bc34-46589b31a1af",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4498c4dd-4960-4efd-9a2b-9887e472cc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f16d425-6552-4845-83af-7b6843ea3615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54bf74c-7b12-4662-b00e-65fc3e6655b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea81cc37-bcc3-4ee8-9523-7c712150c764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22072925-6ce5-4445-88a1-b34a11f98448",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bcf69f-a8bc-4672-94e2-3f9675a4e099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dd322a-dca1-410e-ae05-e64b8bfdb455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5db1c5d-0031-49c8-9aaa-21de8586243c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0963d06e-37a1-4dde-ab0f-1037f7af99f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f88578b-3ed9-4742-bc6e-9e41d18560c0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b3b5c1-e251-42da-b96d-3ce9b4771606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae5e3d6-74ba-470a-a9ab-6d6b123160a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29822251-1e98-4a22-bb39-1a14244717fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4888c5a7-60f4-46bc-b4dd-6ec117f2c7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efa1366-686e-4095-80f0-1180191ab1e3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663dd247-5736-4561-b98d-9601300b3dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ec190f-cc63-4ab6-a54a-4bf3ac77a532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc0c886-a905-4019-b00a-b5141e5b041e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "844133cb-44c7-468d-a0ac-ab4089e706d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44bb082-78fe-4ffa-a1d6-e77905ca86ee",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134ad361-8445-4b25-bda1-906f6a2d51f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f4fa2d-633b-4c38-911a-641efba423c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bfef50-deee-4596-a812-9fa5a421bdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c052e9f-e0f0-40fa-b746-63abd8a5fc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a96c8b7-e2cf-4924-b7fe-f4858c90b178",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bc422d-bb5e-4c14-8639-61928e204314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1881aece-fcd0-4c6f-9009-ad1af62097f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a31d8b-b82e-4809-b669-483508cdf387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ef1a7b-9143-4d0b-9de2-287b59171240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4921eb36-5a0f-42c5-9509-9a9aeb60a3ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a0ee18-974b-4f09-9c9a-e421e9c84194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83dbb84-e4f4-4d82-81cf-3b2e2356a0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0620ec19-b6f9-4117-ac6b-97ab9b16e674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2683a29e-bb3a-4cdf-a574-eb43eb9dada3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25623566-6e6f-4a1e-ad63-1cc933ad4187",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e960700f-f150-44f0-9b8f-a6a1646374b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222f9f51-a171-4d61-bda2-cd4a31c82d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b560e59a-c20c-40ae-a79a-f703b9b08f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "45649d77-af81-458c-a81d-338417a39a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b6b84f-4672-4c0c-ac60-436e1869902f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d7e764-3cf1-4aab-bf66-4977711db40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcea5b0-344d-4082-8735-8d0381f2fde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10129666-00e9-4d96-b2c8-07c7cc21e427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "44cba02c-d06f-4030-8535-85943c177d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338fdad5-ef0f-4d2e-a7d9-9fdbcaf3a732",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a4025e-2ac5-45c0-a1b0-db987ac7144d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb5d45f-cca5-460f-b9e5-c09b3b46d28d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9f53b1-afcb-4fdb-b4f8-52ee60e9bba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a63cfb-e9b1-4001-977e-678ab01bc13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdab6cd6-5c3d-4bd9-a4b4-c162ecb752fe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b054b499-680d-4fa9-8e0e-26dc4834daba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abc9070-edd5-41f2-963f-f1c65aaf63f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989d782e-0009-42ce-a666-99563e0efed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d904f7-fe81-47e2-a79d-9cc9d90fbe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434b38fe-cfba-4710-835b-19818a76d5a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f56b94-441e-48fb-8d51-96a366418997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7590ed98-8c0f-48c0-b382-83ec66da70ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2355b57c-3834-48ca-a1fb-139a90bcaa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6756c5cb-ee30-425f-a843-df2f81449eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd731f2-e562-4720-bc28-26f78ac2b7f7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf7a13a-cfc9-41af-9671-43e2829d4cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d51186-b1ac-465d-b7d6-a72abbfe2005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0e4404-4f9b-49c4-a38a-65049ab19c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b152eda8-3dc9-4f5b-9e5c-78b71b2aee5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c349d43a-5bac-47c0-9b5a-11ed78475d94",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0deb42f2-478d-44df-b3f4-ff43eb4e2a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a830f9b-826b-4bd1-a645-871172a2c5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d57b69f-ae4e-4e19-89d0-8a120c76886c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64147448-4b0a-45e0-a5ce-36cb3c91bac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708d82d0-8b83-499d-a831-2e06829865b8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a64258-005a-4f39-983c-e4f775c95eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55900fd1-4097-48b4-b9fb-7cc798a90f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862d8b15-8e56-4ce6-991c-d146bb1de2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56eaacc6-01a5-41c2-92b7-f2ab90a962e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d36286-ce47-4d1b-a432-55e199a72ac5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef8b132-bce8-4074-9ea8-90943ed7cf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48731e0a-7869-4fde-86c2-d11d75904196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d15da9-053c-4385-bd59-8856734deca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a11b172-eb8a-4ed1-97c5-038b65ba4613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480b444b-aa5b-440c-bd67-df1673a7531d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9b80c5-5bec-4730-8593-20da90a68db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9ec7b2-5ba6-4559-a4a3-53365b506300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9142e7ba-a65a-44a6-8e68-155e74bff5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b09761c-3bc1-4819-ac28-33b1025dc9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a203c126-00c2-4085-aa82-fec434df968c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c64f14-b1f9-45d3-85c4-0aeba7553c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b841e5-fded-42d0-8e2a-72545ed678ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2229f5-4d7b-465a-b61b-19d66a9553b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db8bbdd-8808-4506-82f7-7e572d12f3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16f15b2-e4a6-491a-8570-d9dc6f8d7e60",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871db952-4e2b-4814-8c81-57827c88630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327f0539-caec-47ad-b345-1907c4ab1390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8804683-4f35-4a0c-b845-079fbd2cd779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "789d48c5-a7c2-4c80-931a-6ba6191b6a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a377c5-e7d9-4f9f-9862-2b903d15dbd8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a98142-4488-4885-af62-8393d48b0dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d12bda-f1cf-4cd0-a971-ea0ffe96df75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c803ddd4-4ad2-4f2b-bcf8-c18b4c412207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "021d4df6-3729-446d-97cc-eb96373368f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df703832-801a-4e61-b974-daa6aec00d8c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0705496f-1969-47f7-9ad4-e5bc167eea0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c049cb2d-b027-43ae-bcd3-3845f7bbadb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693c799d-9583-44ff-bba9-a60330a51dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb975226-9624-440f-b75e-6d8bfea48dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13bdb8b-1bd6-41c2-a2d8-7a927ab82820",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29515921-efc9-4efa-8ffa-8054fefb9bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61619a76-62ca-4f0a-853c-8cb8fa7031ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b44169c-8a76-40c3-8b66-d09f2fcabc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "222e8070-09b6-4989-9728-e942577186c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9944e2b1-9b58-4c41-aca3-43d8ffbf6543",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90105dd-4882-4b58-9aa7-f5f2f5e896ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394215bb-6867-4851-b2a0-b1c9dab9de6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16241858-345f-4fd6-99b7-3d22cc56e0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b9565b-c829-4e62-ace1-50cdbea26835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b7faca-2e65-4817-a2cf-0ac61752784d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dd1fe6-5a54-4854-8e4a-a5fa4d77a396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f05a01c-f2b9-4f62-a4ec-b00d06feb4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266b90ff-dd0a-40e6-a9be-191d8618ad91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1716e48-3972-4836-b6ed-07772d6e4630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748810ed-f04d-483d-80f1-faaba19a0d8d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdead394-85c9-4196-b143-ba475024e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b841d03-f001-4112-8eab-03789cd76fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8becd169-3858-469c-8a2f-66e51ada8566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb477360-b924-4c45-9e7d-2f3fe2de7ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618da37a-414d-4da8-8f31-521c298605e9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85bfa63-3b52-4645-96cb-4581bd9d46fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55047e11-79bf-465d-bec3-124e297435bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8917d573-fcd6-47b6-8292-b9e0ca9eac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc52070d-e35c-4974-9268-8b8f6735dc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f80dac0-77a5-488a-8834-49286dd91300",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500f77cb-96c1-49f2-b523-4f2a1b40ba4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871964e7-bd36-4943-9bf7-186a048e2214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176ca75f-e312-4173-9e37-15151612521f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6cdaa2-3a65-4afc-b6b9-46c48a2034cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38777f62-6bf6-48e9-b71d-1a127d165b42",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f247e7e-5c0b-479b-9e7e-dbe533597d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdd92d0-4472-4173-8696-2aa118b6b722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2aa8cf-d7d4-49d2-9c54-86199a6a9801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ea6956-db56-4c02-afaf-9fe728e317c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c27de5-1e5f-4837-a088-f58a8496bdee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccdb1fa-275a-4a6d-baa3-45685d3f052f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46f92d2-ae09-4b9a-96a5-1c931eb793aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41673401-d382-44c5-8ca7-07fff3d5679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b7f2c7-ab69-4969-8852-987b829c6247"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2542e741-e167-483f-b008-33f6ca7e3d71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d03102fa-e2ee-4cb1-9168-9c3f0bc10d6e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51f9ac6-5b9a-4df4-b3b1-7d53d56762b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fd26a3-682c-42a2-9de3-0824064a24f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eac138-f7be-4399-915c-8b44c3926f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de77647d-c40c-4b2c-978e-2bc0c26103cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db294f44-c25d-4c34-b441-cb1ce339ea5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "546946dd-5832-440f-a1d9-76ec12f15448"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cbec5e6-9813-4520-a65c-6b0e4202c4e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e89f3578-b327-4723-b773-d8c2d9f8e6ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af5d1fdf-4cca-4311-a8a0-38a23bb7842b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "62443968-cbe8-4a29-8e92-6fbee84e1815"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9140461-0fd0-43b9-b256-c7eaf27d3b91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9736f5b-abb6-4473-8017-ab3fa738d415"
            }
          }
        ]
      },
      {
        "id": "0effaa01-f00c-4b29-ae24-f6852284971e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c46c39c7-3ff5-4be5-bd0a-e0421ceb7f35",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd8f7ceb-0370-4a27-b71c-01486fdb694b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07dfb926-1dd7-482a-8abf-2f95bbf2aa15",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00cb894-ee79-4b92-8041-68978d493ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed0d3a9-73d2-4a70-a8ca-2289c8aa47a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d3bba9-42d9-4b49-9eb8-a6243c5d7457",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e95fc-689b-441e-ac68-042ae1a4acfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6165f0cd-b730-4e59-be7b-f4b60ca54e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65899fa-4674-4b32-9b35-8b86f84a328b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524484a8-e4a2-472b-be04-0dee1a61e6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcd0c9f-ceea-477a-9dd6-b5e177b642f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bc7448-738d-4d80-b3dc-63cb41b53e99",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174a0d7f-7332-4fb6-824b-a9b37a7dc5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066f8143-dc78-458f-84c8-7720a6d3b602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ab177f-66ae-443d-9526-ca71a70945bd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f46005-f59f-4522-b8e6-b6f17deadef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678fbf25-b497-4ca8-b35c-1e81dbaa5aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce6464d-093e-41b5-99da-bc1fa63ea1c4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c2a71e-40c0-4be0-b17f-f37e79b860a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960a79c7-73e0-47d4-a62e-b7ebfaccb06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d317b089-4f9f-43cb-bd8d-edaaa805ef3d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9f5878-3544-4088-a449-f22a0331f146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68e3547-86a0-4f66-ab45-1450be3878fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb148f4-a531-449d-b2db-aa75211a6e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5128d05-2d15-4950-aded-1f4d50e582c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7695c6e-39cd-4abf-8286-6534b7371902",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f80ff04-3724-4856-8adf-22ef442839fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b60adad-229e-4a4b-90c0-04849ef9f1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff962f1-3589-4965-a747-b83a345642f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70ec996-17b7-4c8a-823c-6e64a50a5847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12f8128-a12a-40a1-a80e-98fb3f1f0add",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfb45be-3956-4ef8-a3a3-146489de8bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09fa7d20-0387-4286-9da2-c99543d46606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7ed551-ec9c-444a-8312-de919fa812ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2451b94b-6685-40c2-ad36-7db5754cb21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861c3e61-4189-42c1-a66c-ac5cfbba0a16",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1705d03f-e665-43c0-9689-8d8941305f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3efe4084-b467-433a-b4df-5c6a9efcb22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163e2f6d-7a6d-4a6e-909f-b65ad9ee8891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c06539a-342a-4411-be04-56597617f89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521cd9a5-674a-4548-a711-bf59d2ae7640",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b5c8fa-3ffa-4a24-b14d-72a7552690f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d917537-d58f-4404-bcf9-59a918036512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a970b1-c808-46fc-8633-32a41d917e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9061fae-7088-4054-896b-894cb73f0aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9f27a4-80ad-4677-aec3-aca37c4d9c67",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda7b46a-92df-4c88-aa6f-e0eb44126bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f7bbab-61de-4695-baf3-03e9114884f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8c338b-da56-4de4-ad05-937dc63cd117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a4d377-59e6-4573-acbf-52f31220be34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6456ebfc-7787-4e71-a485-644b259ef24d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f7d763-127d-4015-b4c0-1f6b1dc6f1ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b71e2e50-c7ca-4ad1-be34-612cd044ab46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a5b2db-3437-4698-bf51-1344f0f5f5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a1e343-e8ab-4c92-98b6-85d14e7228b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f2b480-232c-4392-a2f6-7fa32bad9861",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaa2867-28ad-4f22-8d51-9a80af48ee25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6398e7e8-1995-432f-8e1a-195d84e8fd46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eeae019-d04b-4567-928d-c46052437fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9fad40-5e75-4e76-b323-70db39773d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7cbece-8e8a-4598-9b71-c6f8eb8f1183",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62c4268-133f-48df-8581-050e56e4f229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f2970f-bf50-40a9-8fec-ae4eb13e7dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3f6097-af3d-4903-bfeb-d0aa28b39fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce337e0f-3a4e-439a-8f69-9034a25f4c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71262cad-9a95-4af5-a1b3-3427d358ec88",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81755354-ae51-49d9-a3d7-e5d5edfbd4bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe3b72ba-b768-429f-8740-cb86892aa043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08faac7a-3cd9-4854-8e6d-e9a57aea81b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d4c771-88b0-4bcc-8bf2-788a2966a41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac94d19a-606b-4ce5-97f3-f73a77de98b1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15c0b75-b86f-4245-82c2-e76fd48112d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69372f8f-81ce-4f45-9609-57841e987eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5854c2f5-587a-4d8a-9ff3-10124d9a46cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc722726-78df-4049-bf79-3dff44370426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2465716f-d7b7-410f-a724-107401a8a58d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aa917f-bb64-4846-a924-c1feb4be5a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff0b5a9-3827-494c-a579-cdf58c3f4066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17976bd-a679-4a79-81a0-4fbc3b4192c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db040c5-f8e3-49d3-a503-a5a6b66cea35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481d3c28-6fab-415a-883e-2d4cc177afc6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c17a1b7-634b-4dd6-a8c6-bbdeed8ac04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da0bf6c-38c2-4f79-9d12-8a63331759ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e60bda-8d8c-4250-ae6d-97ace511a63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96356226-7dd1-413e-a115-ef3943e2b0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3386389a-5716-4ae1-88d0-a69238863e71",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad9279a-cf52-4ad6-b568-8608c3773198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0a7fe8-9c70-4c76-8598-d488051d0f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e627b6-eeea-49b6-84db-eda0b8ab95eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a453050a-abff-4c39-ba39-f72c9e64914d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439d7720-2247-46f6-a4db-25b1682f3b95",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8df224-c87d-4422-8391-2f5e5140f1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb445d2-1719-4f04-b394-2d1cb3edfd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1928ccf-4a6b-467e-8387-c310ac9867ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df30ce8d-312c-4a65-9f7f-bf39c1414f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c97810f-ff01-4c08-bc72-db3932ac8f82",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7564e6-04b0-47f6-925c-9403197bdd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf74046-4db5-4158-a995-6c80a018ab99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b107e6-f9ac-4c5f-a784-a50ec931d4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2ec2a2-f2f1-49f3-8c3b-36e121c32bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600ed5e8-91d0-4c78-accc-28df2f4980b3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0400eb4b-7960-42a5-8f84-c1ef60e6a7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668c4e03-33b5-4604-bd21-6cbdc542f225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0004a73-99f8-4975-8508-7c1accc2e02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bed131-676d-41f3-8c5f-6e257752d199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b137989-6780-4b7e-a203-04e4c11a681f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb37bed-7017-4e82-94bb-7d78adc60b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f18c9199-f7d0-4ab7-8295-a87101c481bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416e1fec-876f-46b0-825f-10eb38ba5478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70b0a7d-4822-47df-a84a-a61f1791eb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5a4dd5-66be-45a3-a9b7-b96ec813bf94",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be94897-4296-437e-b9e4-9f4495778110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e810f03d-0b8d-4bb6-bddc-612926c2b012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf97ae6e-b05f-4103-9ea8-56762365ad6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709f737c-887d-4dbb-b1b6-195a62a6e809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19307c4-8acc-481a-9fbe-dab7d8e19851",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8336cb65-2b78-4607-bccd-007ed7cc845c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cdfcc8f-3008-4d17-86d1-837bd14c2dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ca4f72-3b90-452b-af92-19cf754a47a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bfb36b-e361-4e2c-a3e4-77d035698026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c765b57-55f6-4ba0-b0b2-e1d7fadbfa2e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81256d15-76ff-4dab-b82f-c478b56c3d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c87953b-758b-4828-8372-c5ea5c8327f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038c1856-559d-41cb-b82a-1bea2b55cc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c032725c-64f7-4299-a9b0-85c88e211c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdec6fb-5051-45d1-a6f9-1e1fcefee0d2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32721126-dcb6-4072-8889-c3668ebc9ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bccb7bb-70e1-4466-896d-cea2ac26f802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0457f60d-ebce-4677-8e03-9964d6cc2e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e7638a-2c88-41dd-83fd-6def72f0bb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb1d94d-4de6-4ade-89b0-f1ffa3678b1d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c22f8a5-d78b-416c-9baa-bb72e3aeb286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4575a4f9-c27c-4a71-bcac-a6df08e1be2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea5782b-046d-4755-bbd8-168c7e775c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce17ea0c-d3d7-4518-ba67-d65590b0e523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732a490e-ec02-499d-bd7d-36e9669d2bda",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ababb4-7d45-4634-ba08-eca6e4373f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60218a69-3201-45f7-a820-06dd06de085c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa170aeb-35af-4838-86d4-db535f296d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d442573a-1374-4a80-9b25-c02c22bbfe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d2fcc0-061f-4ec3-8fb2-be2ab770a0b0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b08c784-8a20-4386-bec1-15ee75755fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d4c8ab-c9d3-443a-b29c-fc9c72907750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9659ae92-6d99-493c-a492-ed4d58ea1329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c973d1-5b45-43f0-8f61-90a88d45993d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9ad2f8-b612-4ea8-b28d-e28531e6a694",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f519648-b2a9-4740-b1d2-7c0a1c43742e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b7c20d-9cc8-4a04-a3d9-9e78c00376cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fea530-bfe6-4157-9f8b-c1f70f8744de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055dd492-fc81-4bc8-bc29-3844cb964b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dbc4a1-25d0-4890-bcb7-4e8750582be8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5741a2-754d-4f7e-a160-8b680fc0b69c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1370af-5130-42f4-90ff-a73b66d89bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e3e24d-1e8d-4c48-9141-6ff2f0058b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c869f431-c300-40d0-ae50-b6c6dc489aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71964be-e470-4e5d-a4b8-7ee3b4bff498",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aea0b9-6df5-4dfa-9c76-9e4119256e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59e2931-9b1b-4b61-8d98-68043698f09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94adc3c-df8a-4325-bdb6-6feceeae71b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc42eb0a-2068-4a55-925c-752072462989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ef6d73-0ac6-461d-9865-9f19ac2a6bed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9af181-17e0-4dc8-bd6c-64438597fbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44ea6da-70b5-4239-881b-a272f1a73928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ff05f1-67e3-4ebf-8a6d-24e09e1c6d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff16443-0a2d-43b8-abf7-17ffd2943617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5adffd-07d5-4677-a79e-553b995e36cd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb2f72d-e8b7-4cc0-acc1-ec3712a7f390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6edfae0-4761-458d-bc73-5806ab92452d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd2b32c-88e5-4255-b70f-1baa2e7f21d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9f9cc1-9f89-4591-82df-8ffdcd09cf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2813714-3776-46a6-a2fc-1cdb32d18c41",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b9763e-9c60-4f0b-8084-87e713945703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09db2bb-51da-4dc2-ae7a-0bef6e9107a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027a6ac7-e5ee-4086-a5e9-2a37c927675a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a966f1d8-344b-487f-a714-acd61b9059a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80260cda-6e81-45dc-afc2-b3037e24fa0f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ec9f76-f83e-4dc6-83ec-e2bc80a7aebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778930b7-9132-4764-9178-53897756f892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718dce4d-fcd5-4156-b71b-5f25b804df0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b33b6e1-c8f2-47a6-a5d9-2272c9ebe4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40895277-a7d2-49f3-a2d1-cd9b06f87f1d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b4ef68-dfa4-43ad-a8c7-1f59d89c7463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dc7ec6-1666-417e-8a83-d4db430400a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ec2708-9f9a-4912-96ca-6f88a130e0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929523ec-7700-4d78-a823-bf4bafc9d357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6523597-4a59-4425-875c-00754cc85baf",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27de5cc-2860-4b83-9b86-2cc72a39641b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b35f4e9-5119-43cf-b551-3c189f54f5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b02cd5-d044-40ab-b7e3-8a0144b41785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33850f60-7cb3-40e3-8bd3-e880de568692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aebbbe1-2ffb-4ee6-8c85-1cf102c33726",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed3d44f-8fbc-4db5-a83a-d9e3e3688844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d21312-9f25-4911-b697-76618db13573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5307aa-aa5e-4a27-9a61-66d1ce3acde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6091e138-022a-4f1c-81e6-a3ca91574afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e88fead-7646-4b8e-8c9f-ac7d0d8dded0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8208930b-c474-4add-86d7-726bde3f18d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a12e7cb-75f6-44c4-8880-2c5312f54c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf28d391-84d3-4789-9d19-c25623f28b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d32d0d-466b-4ac5-b21d-820d1d17c7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50a2022-9fe5-4eab-84ec-21cbcb0fd6ce",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4e8faf-85e7-42f8-9e62-6802c8f72808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a7b24f-4a00-4bc2-860e-600a2085d9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a9e04b-cacf-438d-bc90-39be7fdc2acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f07473-c86e-4b91-a43c-dbdc621344b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a47616-3ae3-4aca-8fda-d0e499464f10",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8022b508-2e80-4f05-905d-46c31e5a437b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3add3c06-ddaa-4287-947e-29aa54fff3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fd8e44-bf31-4310-bc67-1ff90469f647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba47aac2-c356-49ab-994c-d4b5095c6623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48a87ed-7f4f-4dd2-8e90-5050a6125bf2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b63ad-cbf6-4ee3-b821-2153d66b96fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03294145-1302-4666-9946-926a732bf8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef139ee4-1d86-40e1-8457-a11c6ba07dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2306f3-ec66-47e2-ae08-2d3a41d8169e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe6b865-f46c-49a6-9eaa-57cb04da8691",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdf961a-eb7d-4b79-81d0-66f5ccf15289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408b9b34-00a3-42e7-bb57-f34053c34cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad0495f-68b3-4096-b736-c86a6cab2c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f200e8-afc8-4dae-9b75-391db1eaf06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada820f6-3366-4cca-913d-a6556e079384",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1020873-d3fb-44dd-bc08-745b9c4e996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b00bb1-d223-467b-a16e-b7d173885451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00bbe76-b078-418b-99da-781f000fa4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8d00c7-0449-4d7a-a1a6-e2692f62a242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fe68b8-f649-4a0f-93ff-0b6379252e31",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0254517-2d7c-4667-8008-2dd9d9bc6fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad572618-12c4-40ae-a3fd-a431e946a6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac3aedc-5b1c-489e-b80e-78081771e06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39f54b5-4c2f-498f-81d4-7cad4919832c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d85c5e6-1924-4cfc-a6a4-d30d07006f12",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e99a4c-1be8-4926-996a-93719b981fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2865b4cd-7bf1-4f02-b762-e82d6c5e06fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25ef0da-1c1e-4b26-ac8c-c99e0df800ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914f225d-d4cd-491f-b375-5333785fc059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcef4e9a-2ef6-4957-b5b8-fba839e8211a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5af0d9-f2ec-4f47-9e0d-a9430fe55c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154eeb2a-df13-408f-ba0f-8fada94e7783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49325fb5-6393-4bee-8c35-122c0eb1a38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e4f6af-a0a3-4d61-b023-d26ffb274761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15645c83-19ee-498a-a66a-8b7caab641b2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01fa41a-ec28-4c84-948b-ce447a7a055b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b16e361-f6dd-47b3-8402-3cb20e277585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fb8765-37e2-404b-8f19-6497c785da11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9043ee24-5cfd-448a-a15d-32fd69226828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3aa98f-4400-4680-afdf-8e2a62315746",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a104eeb-7f97-41e3-808b-d14698a040f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9891fb-2459-4e22-93ec-0e74dbf71d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e8e60f-b8d3-434d-adf7-38cef46413db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf726d54-cb51-43f3-82a2-62ed97cbd795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77c2c55-e648-4493-ab35-ec980734132b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a470fa-39e1-4a66-a1d6-729b518f702f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a89c65-fcce-451d-b5ff-c1b7dee6acc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553989ce-09ee-4a84-a0c4-22123d11c556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d87cb07-5de2-45be-b23d-9eb4ded3e02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b005baae-4b34-468f-8ccc-856f424be984",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee705ab-0851-465b-ada9-817efcdf90a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3d427e-fd9d-467f-8633-a0419c39460f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a370eca-19e2-4813-baa8-a9091cc6e22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8c521d-7fcd-44e2-ac53-b11ce0dc51dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef134477-ebdb-4f22-93da-791d191c6511",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9221be8-73e4-47d0-b1ee-0be415d6e5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1674d2a8-b75b-4570-bff5-40e1d92ee515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1ed444-c726-40f0-b9ee-8dadb85e42e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7ad62c-363b-49d6-868c-ff98c6449d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634db249-b9b0-4f60-a1f1-e2f2c00da385",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de580c62-db94-450b-b230-e4ec391e9430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72552d1-8df8-40ca-9e43-8aa6bf9d7afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7049621-5961-498e-8ea1-2d88c196f8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134b8b92-29bc-4fd8-94dd-cdfa16f99793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb810a17-f8e4-4125-9abd-4304528b40b8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c76639-1fcc-42b7-aa1e-7fe07b517f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ab30f5-a3af-4d92-973c-225a3761916c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db4be4b-6e0a-4ca7-96ce-37c494057209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9c18e6-e736-4781-ab0b-543b7142ea4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d74ba85-b89b-4f00-b407-dda0c4720548",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87675264-5d3d-4849-95b1-73fbf9b7bf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b10634-8bf0-4757-92e8-2fd695678a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bf8aee-f920-44a0-97b2-0169c1beca89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868d8c86-f720-4fac-9b45-3b81b19d748b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922d0a50-7cec-41b1-ad43-4d27105d3543",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78d1c1a-0e54-42f8-b4da-50ba8efa7aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2795a9-f243-44ef-9691-f394cea42328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff21d8da-bf99-47e3-bf18-13dafff5ba47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ca8b92-c8b5-45a5-9c79-483b4f00d020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a3814e-c230-46af-9ce3-d9a705b0bdfe",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b817272d-7b97-474d-9f83-453c9b81e1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37826413-311f-4fba-b89e-3b34dd6c0933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371eea65-a991-4b95-80c8-3fd227dc6916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90de22aa-f3d5-4881-ba12-22f3336e4f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc290af-7500-4893-8073-183adecd2132",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1a80f4-320b-4c80-8546-f229444bf346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2089ad-ebc0-42d5-a5d7-11ff623858dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11990096-001f-498c-bbee-3bbd0a97f748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e95a0b-779f-4a4a-ac30-a5f8ff942994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac88a4-4739-41ab-a1c9-f1947458eee9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b6c3b4-ea90-4e36-aa37-3ca6fd35687a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242bdd3d-f8fb-4d1e-aef9-4301772f1ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e4ccde-12c0-41d3-8c0c-eec0f16a07aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c078fd-77f1-4e42-a61e-4790148d60d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e8a342-b14c-4554-9e96-d138887c1373",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed001d9-0bab-4414-b9d9-6438047e4595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41468d15-04fc-4ca6-ab66-81023966cf93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70115eee-af15-4c1d-9a14-be234a803c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2875e5ce-e7b0-4e96-b133-62ebbc4abb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86adbda-8d52-4ed9-a668-e00ac89ea25e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5de30a-4041-42bf-bd0a-c9500189ef0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db77b81c-cb7e-484c-90f8-2600f0145306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860aaa02-5cbf-482c-9c80-d61c3fbc3ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53d925c-70df-4f42-a712-13b5901794a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259307e2-d6f7-48f8-a133-9efdb437c777",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550133fd-e131-4f65-92f3-d39c438b19a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24893c18-dc57-4b11-a74d-a4513447f270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe224dd-5293-4cd8-9217-41d0d65b145b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27966f6b-3063-4b9f-98b8-a967a8ecc86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c45f247-9bf2-4550-8120-11608915cb35",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6d1630-5133-4984-9798-9e18280049c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb857b37-3da9-450d-9fa8-62a98188d5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71b3387-91fb-42c4-b32e-ea6861b60e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823b3b00-1673-4278-a4d2-1671c86ca404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c39ff43-ddca-4391-b3e5-04c4b1baaa5f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28efa109-2afc-43bf-8df4-cb2f48272472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265fd0f3-c388-4a21-8ed4-515d752c3ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1abea5-dda5-4ab6-8efd-023d587c0fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47060bb6-51a0-4243-8576-a94c663a9722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6eef50-65ba-42a1-ad93-1ebf05679ca7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c0bb42-7c27-4c29-a127-55708f9cedeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acef5dca-0320-487f-9ccd-9f5123a3bb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f64925-8005-4a0c-9f69-2b46aa71a893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5802b290-1b38-41d2-abb7-24b99eb6642a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895b5b3b-5a46-4d94-91c0-bf941ba9bfdb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0280d9-8bd3-4362-9d86-b3e560ea7983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73fbda0-a326-45d6-80e9-614e1fb80e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c718ae-7959-420c-8372-ba46d2db9aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdce2e2e-83ed-455c-853b-ac04dee70416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e9b3a6-f7c4-4f31-a888-b36007e9f2cb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c10f1a0-df43-4dbb-8b09-4b84eddfa2a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69fc64b-c01e-4b84-a1e2-1a8ffafdf912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbea5ddd-840c-400f-a76c-36347af3b83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e2c6fd-0cea-4aa1-871b-77e349129eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1c6cf0-9f93-4f50-9a2c-13c6535346d8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f510ba8f-71d3-4a0d-9a78-8a3eae2d35fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b697fab1-cac5-401a-8f7d-3eccdd810489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6199fb6-6bcb-4440-bc8e-ed622246f352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e834ea-5808-49db-b52b-4a761317be02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4184553f-fe0c-4713-8626-43837a68cbc7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7529ed6c-a7ee-4d29-9e97-4aa2272d7302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b8e48e-e980-4434-b8d4-5f8173452d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3ac36c-47c7-41a9-9da8-c07efe223442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9775ce-412a-465b-ae46-ca8259e9b552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6cb331-d68a-43d0-bb18-6ed08c454bf4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316f9b37-7e2b-4f74-a1d2-de738716232c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8551c9d4-4569-4166-aadc-0538cc556dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f1fa5d-6c24-43dc-bfef-f8332200372f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12345ee4-1191-404a-9816-3196c5d0e9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35110b41-9032-40a6-9ee5-c536862610ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71803a51-1eec-44ea-a21e-40a8874d66fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7671cb-0453-48ac-ba63-80745164a980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1e37e4-0aa8-4e89-b26d-1e4a94384962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6797c2fa-fbcb-4da7-9087-bd61ad609555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddf1985-3ea0-4759-bc7a-27737a783ad7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723c6c86-8337-42c7-ad83-4a947eb75b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990d7f96-e7f0-4f95-aff1-c020dae16192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a9c0d2-4b9f-4634-9729-daa1a179fb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecc92d2-f022-44af-befc-b61dd2da5e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979bfe64-6439-4230-8777-b244e27f5d12",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f61b8d-17fd-4e30-8f0b-65ebdeec67b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d435df4-b6f5-4add-856e-8372c8ff6481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdef33d4-c419-4ece-aea7-55af4e82272a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7239fd16-94e8-4f8a-8518-a5dc1281fb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b684cc-3ba6-46f0-b043-eba1b0e3a9da",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9609904-25e5-4d53-a84c-e204a05a09db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a9fafa-609d-435e-ad2d-09f3c8af0b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d59a45c-ea3e-494a-ac5d-45b0d9e3caed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d164a9df-2b65-44eb-ac3a-1cfe56d936b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72171ed-fef3-4f1f-9741-c1c2b815b0f4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c90bacf-3c74-4c4b-b05b-4c37b7d55c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2866c33-ec04-4d2d-bd46-015603379f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde6d182-44a6-4c4f-a924-70ae5d015def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd15510-ea17-4487-b26a-c3a3884e6342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1221c261-5b65-4e30-957d-c886e8fd347b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc50922-b866-478f-ba7e-dd57c3fe7dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24b7834-0c92-43f6-b85d-c42bb85e7c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed06a041-a4ad-4e10-b9ba-5abafc1c0809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5b7676-feac-4a31-9cb0-cd91c0804bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e096b7-51df-4224-9e32-5d0728d521ae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d492012-8cfd-44d6-8f69-d73134dd97b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced9fac7-112b-40b1-894d-5b4422e11b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1372bee-4984-4c86-ae68-56e9e7136e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316b6796-bc3c-482f-988e-819753f33949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b381a-d2d2-41f7-96f5-f373f2fed069",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b139803-6fae-471e-b7e8-e0752bca0ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47705ac9-a030-4ae6-ab8b-26fecdbe3c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2051c06e-c85e-43ab-ba8f-b6de418553dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0382a9e7-2931-4cf2-b868-7a33aba9545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea53b37f-e3d5-4d6a-87e1-3ac89eb7b13e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31f802b-4b36-4835-9a36-49345fabe082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f23056-959b-48a0-9e8b-62993c5a843b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a587e587-c38d-4a1f-bd07-cbb18b14b600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe6632b-9e64-4f12-8994-ae5c0fb2942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b07a67-5e0c-4e50-bbac-26fd977e7de8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892d1077-c6e9-41e7-871b-48942bf69319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ac1851-b9bb-4805-a62c-6c0b41222f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08274922-c0a8-4e92-b831-7d0a4bb3386a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6eea7f-94d2-44fa-925d-7463ecb54ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308dc6f2-5738-4b9f-99e4-f58e8d26355f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e7f0f0-b395-4987-8054-1e6b814cee88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d0f673e-6357-47e0-8562-276d1b7d26ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ee6569-e1ee-4433-a53a-28a81f56f70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2353c42-5c18-46b4-981f-28aa91ee8a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ab732-fe34-4efe-9540-ecf92fefccde",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ac2870-d038-4936-a625-62bf269b922f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c71a414-b736-4d0f-a9e3-b8719d44a2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a834ed9b-3d11-40bc-b6df-daabc5cfa490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0c4e9a-3fbd-403a-9ae8-c9c4efe4ab35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f689f261-6af3-4eb6-a8f4-2904bacf66b7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d2f575-aec3-4978-b14e-6759ad8a4abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df8b192e-4a30-447d-92b7-effd601856d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6be338-8848-4096-83cb-2fdd020877aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3fc7cb-b744-436f-ad6c-d9ab57592469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397e83ed-c1e7-4fb0-ab37-1d95dde971b5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530ed618-3fa3-4621-8a61-a8cbdd8c1b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc46429-0622-4fb1-b567-0229da2d507f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefca525-5977-4460-8db6-294962143bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6459d291-cf57-4068-bc29-29ec0c0750cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ace29e-eb86-4a21-9b2e-c5ba06ddfec8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66f04f3-1d60-4498-8a34-54ddb36a9427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f515db6-8954-4b2e-acd4-708eeb06b447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7405492-924b-4f67-837b-f601e7b5eb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b3ca68-d283-471f-845a-a96d52e1fe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a15919f-d471-466b-a6a0-b8e0611ccca7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99318f85-b807-47c4-8005-91cc2c62fb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8219f2c-64df-42af-a130-afc799756598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd2e600-f0bc-4947-a50a-840e7fcbd0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2d2453-d868-4505-9ce0-e4a4c31745ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21426cc-7cdc-408b-a1b2-83a38e09313f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a3ffc8-da92-48ec-b400-d250f468c6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f679c273-5e79-4e87-9b64-93d9021579e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3425630e-433f-4730-bcf4-26dd605ee511",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb31b75-eb1c-4117-b6f1-b1ce80f78bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f896ef-4f31-45e4-9f50-644443b06259",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a687da-51a9-4c5c-8aa2-6a74976420f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a152e62-ba37-4445-b2ea-2f306634131e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81f10b9-0f5b-4f4e-99a0-7ef9bb879c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440f40c4-1af8-4a4b-85e5-8852987c2c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4d7616-de09-4e68-8df5-5c3186a2df97",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124c3485-8082-4e78-91c6-762922281baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11fe0856-ce59-4212-a680-381603bda599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ee7b02-6c7e-4f28-9622-ecbe54757335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ead67e-8613-422e-9c18-2e216ce6c966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9475e8de-d9fd-407b-84cc-e1f68f1d37f0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c732c0-5be9-43a6-b8f3-9c6a8e01f010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20801f22-1e08-4045-9f10-e65afda03423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426dfb80-754d-4063-80d5-3b273d1538cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972ad822-3ef1-418d-8561-2587bc704669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785eb9bf-4bf2-45df-898d-e6322df00719",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8502ee30-8142-42b0-be64-7ae4d84c61b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08726ea4-a400-4955-a17b-70c3594203dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f6a6a9-c63f-43ea-82a6-d7a54f846750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8675b1c0-a815-479e-8217-f5bee9e29aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168715e6-6f39-47e2-a75b-006aa0aa2346",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436f2815-3baf-4bb1-9154-6bfa74625ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "befa1856-f647-42ab-8cc1-7c63a788d099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e7cfd9-a6c9-496d-ae5a-e08811d69565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ab8fdd-1e93-473d-a501-26064c7d9ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9809184-6126-4d3f-b936-43f9cef19659",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca72b89b-6516-4521-9611-dac478491342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31e93b0-fd7a-4071-be51-a369b285d472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b0f9c2-2a1e-4d37-90eb-8c12e8a4c586",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a41b4c-4c72-4a4c-b365-c917e89beefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cad191-3cbb-4dec-9f23-d33bbad4e322",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7645606-e6b8-4a35-ae00-39b905465cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54efed35-439a-4e29-8dd9-15b8a0821455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243de587-16ca-4771-8b95-b841c2095ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2598f5-2510-4c20-b6f1-843b62eedeaa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a30be34e-8cf8-4984-8138-f9eb94ca700d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77fdcfe1-4803-490e-8d45-54b4540345bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4da7c8f8-2d66-4119-b671-7ff5ecbe7d86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c66ab461-7778-4e10-8dd9-4e91dee4704f"
                    }
                  }
                ]
              },
              {
                "id": "ac790992-1ca9-46d2-98e4-dc4195134ce8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52d172b9-7697-4d28-a321-12d287a49f14",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f8a8b8-6971-4d03-81cb-0ec674c09463",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f07f7937-1dd2-4fcd-b160-d5a347298bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ff8d53-a976-4121-bce6-9ebaaa33da1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22074f67-8adb-424c-b3fb-c46a332fd32b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c028e592-c171-4aff-b063-33faf39881eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0c70e19-d353-46e1-9a74-64abfecbafdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62b5600e-09a0-4429-baf3-c00bb220d8b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2e11f6b-8f6a-4653-9552-555eb2b970e6"
                    }
                  }
                ]
              },
              {
                "id": "c64ec024-f30e-4ef0-a914-ac549c20c9a2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2b076583-e75a-4df1-94d1-d3fd50d2bed3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03de6a14-3eeb-4979-847a-3e869172ec28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1e5f7e46-86de-402c-91de-6304cf8102bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37ec4b4-d70d-412e-8e3b-d8a1ec1d7cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ca736f-d600-43e3-8b96-f542272f5bf1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "87234c04-7181-46ad-b94f-154708d105e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c401381-bc87-48a4-bd29-d79b08bc9027",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3a0c5e7-f9e1-46ab-a5fd-22bd5432bdf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "63545c37-2e2c-4f48-9d2f-0b30fbf9c972"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77e73b60-593c-452c-bcb5-ae53f9ae9171",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cde6246-0ad3-46f7-a886-c1084d91ee57"
                    }
                  }
                ]
              },
              {
                "id": "78c50559-50e7-44ff-aa80-7914f1233bd7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc37e5ab-bb77-4118-8553-5cfc410676f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b282f82-33e9-42b9-97a1-72be7887387d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67cdbf83-54aa-4ccc-a0ec-c271672f851a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45d7c4a1-8fb7-4b43-82ea-d2bfa89ef6ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4af0e770-1034-47d5-9fa7-b456ca76f44f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "86d5f828-58ed-4d0b-adf8-d00968bc9d4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75fc8a49-fc25-4702-bdb3-e9628a7f38f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c17b142-fa1c-4d68-a415-e0eef123033c"
            }
          }
        ]
      },
      {
        "id": "39294ca4-c5ee-477e-be34-b7a5c27e8eee",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "06c94d05-4ed5-4986-974d-e76a574017a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54d4a853-33ef-434b-a238-3d0970ca3177",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0276b6be-dcfc-4f2d-ad41-58bad7e5ca17",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57de2321-cf2b-4b79-a7ac-59a0aa004dc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b3b798d5-5c6a-42ab-95fc-a09b44399e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5678789-fdfa-4011-8695-e7a3ffe82031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93fd37f1-fd65-4787-8ae9-65308bdf650c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45897879-8e1e-4c43-8806-0ede6ffa549b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c565d00-5040-46e6-9269-edce46050344"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f9b7509-db41-4c0d-a60b-2a4089bff42b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "600c4007-df2f-4ad9-8981-8033cb3a68d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea26c5e2-1708-4757-8aeb-408d5857540b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f27ea054-cd96-4de2-8a5e-f6d798de8db8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57c7167a-2dd9-4640-9f73-2f4cb021676f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4dc9c8c-2f72-46be-aa5b-146befce95b9"
            }
          }
        ]
      },
      {
        "id": "3c488950-cfc7-47d1-b7c5-60af5344c588",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9db8e518-2287-478b-ae46-c5fdc30434b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "561c049f-7a2c-4402-93b4-dbf4f23e6f14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8679b2b7-6dbe-4a0d-bce0-72ad77dd40f1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beec3567-c3f5-46be-9e80-59f6548e71d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc369cb9-5758-4d03-afa1-8d0d913ab88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be4e9e7-2537-43ff-a001-e08ad971115d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74c6d3ab-2397-459f-afa6-5c3031302fb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa15a301-cd80-467d-bac6-bd236804bb4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9b9ea5f-9965-4da9-837f-142aefc193d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26cf3c0d-493c-461a-ba6f-4fca17e72e57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e382155f-e55a-493e-844b-19ac3151ce96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0044974a-d477-4787-9e2c-ab484816aaad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12c0ee68-55a5-4463-bb89-4fe919b4db33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e02d54dc-6c63-435f-878f-e2003fdc72fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ec65727-8dbf-40b9-91b3-14c6aeea888f"
            }
          }
        ]
      },
      {
        "id": "912969c3-013c-4fb6-9d86-d82e63c7505d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "df353388-74e7-4f45-9177-4164d8272083",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c82154f-6a90-4129-8d6f-b5d10ab6a1cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8bd86dd6-1d2b-4e6d-befc-0ed96b0f1355",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86414281-efda-481d-a06b-e98ccd55c498",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ebba3d5-c45d-4f9b-879c-2346b2b26090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029e353-4c69-4f7d-98e4-9aa0d56f2184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efc0d3fd-add9-41f5-b095-6e9c42c6e5d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61b8f2ff-b845-46ba-9145-13b0cd679c0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5cc6a20-cfd4-4b8f-8f23-46f68f4cf5c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "934d1cfa-e954-49bc-b330-dbdbf1d37b5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5987ee8f-58d9-4489-97ed-8e25fa62ee93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad4d71c7-7b90-463d-9c64-8e550fd2d648",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e0a657d-54c2-4e17-8524-3bd2cfd2557d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "806bd6d7-5d4a-41dd-8d59-9347a957c022",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48dd32ad-cf86-412e-a00e-1408ab541e63"
            }
          }
        ]
      },
      {
        "id": "cfff821c-30c3-4c0e-90f1-2aad3332fb2d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ec31d72-57c8-4e80-bce5-2aa68d6c2774",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eee155c6-0061-45af-9c7e-fe2e8503fd75",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7c7ea735-970b-4cc6-bb58-f72251e0467c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "258f5703-b57d-4977-aff9-de54488c7ec1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aefabd3d-849d-46e6-b3bf-3e202a0b9e56",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.650793650793652,
      "responseMin": 7,
      "responseMax": 242,
      "responseSd": 19.86414871400288,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720831179365,
      "completed": 1720831190221
    },
    "executions": [
      {
        "id": "1522dbce-f3dc-4757-9cac-d1a0e438fe43",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d6ee2218-5ff6-469c-9930-cac4ee7b807a",
          "httpRequestId": "8dad6e69-ad8e-427f-8875-4a6b21b71508"
        },
        "item": {
          "id": "1522dbce-f3dc-4757-9cac-d1a0e438fe43",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dc1a3e91-8513-4102-b59b-495078c7a21d",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "95e930e9-b855-400e-8c8f-12f74f3cae99",
        "cursor": {
          "ref": "8d36b8da-1068-4ef2-8f5a-c3f4b36e7f9f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6e1f2f0f-a933-42af-a917-d1837c4a88ad"
        },
        "item": {
          "id": "95e930e9-b855-400e-8c8f-12f74f3cae99",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cb6084d5-5124-4541-9ac4-23cd09807267",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "9e81e67f-4cd2-48f1-b83b-cbb76301dab7",
        "cursor": {
          "ref": "f8122a9b-4112-456c-8170-01e977418f41",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "65a1ca01-64d3-4d11-9565-6b0c9941cf58"
        },
        "item": {
          "id": "9e81e67f-4cd2-48f1-b83b-cbb76301dab7",
          "name": "did_json"
        },
        "response": {
          "id": "d3830b5e-1d75-4268-91a4-7cee105b2a76",
          "status": "OK",
          "code": 200,
          "responseTime": 170,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3be82e1-2d21-4487-9794-c34f301ac002",
        "cursor": {
          "ref": "9bc806fc-61e7-45a5-9852-ec703e532d93",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6af4bc9e-0d99-4692-833f-16c354b65c5d"
        },
        "item": {
          "id": "b3be82e1-2d21-4487-9794-c34f301ac002",
          "name": "did:invalid"
        },
        "response": {
          "id": "dde165d3-fab2-4dad-a853-8957af8b9113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3be82e1-2d21-4487-9794-c34f301ac002",
        "cursor": {
          "ref": "9bc806fc-61e7-45a5-9852-ec703e532d93",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6af4bc9e-0d99-4692-833f-16c354b65c5d"
        },
        "item": {
          "id": "b3be82e1-2d21-4487-9794-c34f301ac002",
          "name": "did:invalid"
        },
        "response": {
          "id": "dde165d3-fab2-4dad-a853-8957af8b9113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eb27f6-b147-4296-96a7-707dabeaf3fe",
        "cursor": {
          "ref": "3520a14a-1c34-4fef-9dd0-13b741145030",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e5931b51-e22b-486f-a810-1f1a08753247"
        },
        "item": {
          "id": "42eb27f6-b147-4296-96a7-707dabeaf3fe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b27befcd-b3f2-43a2-b137-ce10be4eda67",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 123,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98f8612-b305-4d66-ade6-64a01830ba93",
        "cursor": {
          "ref": "801615aa-4e9e-46ae-9589-8e7afd679715",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "17e575f4-6156-44a3-85f6-eff5402f8ec5"
        },
        "item": {
          "id": "b98f8612-b305-4d66-ade6-64a01830ba93",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c58e4c26-4840-45c1-8491-245eeb3779b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b305de7b-5da3-4518-b843-fcb4f87702e6",
        "cursor": {
          "ref": "024e2e9a-5d64-4665-9883-b9006a212a35",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "75fe51e0-a389-4eca-b6b9-ecce5d859141"
        },
        "item": {
          "id": "b305de7b-5da3-4518-b843-fcb4f87702e6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0dd42d7a-a7a0-4c48-836d-3e9915da2e52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f97955-2268-4623-ae47-bffe6f5c0c4d",
        "cursor": {
          "ref": "4fdda608-4886-4c6e-b6fd-8024ffc03756",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "67804def-73cb-4977-b3bd-68e6f5441240"
        },
        "item": {
          "id": "55f97955-2268-4623-ae47-bffe6f5c0c4d",
          "name": "identifiers"
        },
        "response": {
          "id": "d906ad07-df02-4b54-8c4f-eb231be6e197",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8be7d9-33fb-46f0-a9d1-cdf0091904a8",
        "cursor": {
          "ref": "09aa76c4-21e7-44f2-9d3c-117a07fc833f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6a41a5cc-db6c-4f5b-87df-e15b3172fa36"
        },
        "item": {
          "id": "db8be7d9-33fb-46f0-a9d1-cdf0091904a8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bd01b73f-564c-43e6-a928-b7b9e20f2cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c2fe39-c1e5-4e29-b513-762fccdc2f6b",
        "cursor": {
          "ref": "5ce7e30d-a52e-46b8-8590-8a4ae0237565",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8ec28ba6-790c-45ef-b40a-4421a5814382"
        },
        "item": {
          "id": "67c2fe39-c1e5-4e29-b513-762fccdc2f6b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "555ff894-c268-4790-83fa-1a19d854fe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31337d1-c29f-433a-a598-3adf71be0904",
        "cursor": {
          "ref": "e6fcc1d2-03e8-4af9-a9ec-617835adb75d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7ecefc3e-cbad-47a2-a2e1-7991691165eb"
        },
        "item": {
          "id": "e31337d1-c29f-433a-a598-3adf71be0904",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cff7c0e6-124c-4f19-8499-57f85bef5093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fa96ee-152b-4ded-9aa7-475df5a49dd7",
        "cursor": {
          "ref": "141d1ada-a070-4f21-924d-87d3b763aa96",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "aa489b80-8b4b-422d-aa33-f43adde017a7"
        },
        "item": {
          "id": "00fa96ee-152b-4ded-9aa7-475df5a49dd7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "be9db4e0-5941-4426-a3c8-26c5709f021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7945e13-31d1-42f8-831f-69aac6039c2b",
        "cursor": {
          "ref": "c42a9478-9540-4aa6-aaef-6cb6a9728614",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3f240985-6a9d-4357-a6ad-45b7c272de67"
        },
        "item": {
          "id": "e7945e13-31d1-42f8-831f-69aac6039c2b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "09cb4d3a-1238-4011-a61f-676ccd92b6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b304cfe0-c123-4d64-9df5-399c5e7ddc15",
        "cursor": {
          "ref": "0e08516b-c98d-4d82-9816-0a3f24fa5885",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "62d07bc9-2e37-4089-8fa9-7e396542dbc6"
        },
        "item": {
          "id": "b304cfe0-c123-4d64-9df5-399c5e7ddc15",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "32d3067f-0729-4656-8531-9009073ff79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7171c157-9d2a-4dd0-aa99-6ca51dc7c9a2",
        "cursor": {
          "ref": "644969ff-ea10-4be0-9fff-f72fd29cd8bd",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ee4a9c50-9b43-4393-9c7c-742c72797b30"
        },
        "item": {
          "id": "7171c157-9d2a-4dd0-aa99-6ca51dc7c9a2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "784c9865-994f-4cf9-bdf1-2e50fcfe372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0894d410-2e4d-4989-82ff-f180562c8524",
        "cursor": {
          "ref": "d2687952-c36a-4a6b-beb6-99acee04dd8b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "46ac41f3-49ea-45e8-97ff-bd95b1bc8636"
        },
        "item": {
          "id": "0894d410-2e4d-4989-82ff-f180562c8524",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f9f466d6-b5a1-4898-87ce-1d0289745028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2442858-23fa-471f-bace-0351b09784a9",
        "cursor": {
          "ref": "e61f1b21-26b0-4531-a4b3-be3c7117d9c5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f149e970-97b8-4dc6-8d0a-7b649c979a0c"
        },
        "item": {
          "id": "d2442858-23fa-471f-bace-0351b09784a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9c87785a-a510-43df-abac-652269706dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29be80b0-b45c-4543-84f0-e3f2f99aa696",
        "cursor": {
          "ref": "9dd1b018-64ca-427c-a79e-d1774c1fe51b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "df5e7504-d38e-434d-aba6-d1cc5bf775b7"
        },
        "item": {
          "id": "29be80b0-b45c-4543-84f0-e3f2f99aa696",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2c25b8c5-e6e4-422a-a0c5-978df54e1b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984bf8a9-29c9-416c-ae7b-afc4885532df",
        "cursor": {
          "ref": "dc07a032-385e-4376-bbe1-9de162c8735a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b120af51-dd4c-4676-b573-ccd2144aad15"
        },
        "item": {
          "id": "984bf8a9-29c9-416c-ae7b-afc4885532df",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b19a96ac-ee86-43b4-ab4d-79a45baedae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67781b5c-e5d9-4d2d-bf64-1c6cb9ca332a",
        "cursor": {
          "ref": "32120260-8784-4936-a159-8ce414f7a295",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7deb4292-fe57-4b5c-92b9-457eadf56404"
        },
        "item": {
          "id": "67781b5c-e5d9-4d2d-bf64-1c6cb9ca332a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "91e7541a-8070-438f-8fe8-d95da9d6f19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d60abe-0b54-4acf-93c9-731050fae426",
        "cursor": {
          "ref": "7f7ce985-272e-4337-9955-6289c8bc768d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5ff22493-a6b0-4626-8977-bfb941d1ae78"
        },
        "item": {
          "id": "75d60abe-0b54-4acf-93c9-731050fae426",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "53c6b14e-1647-4d65-936e-76cef1757532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcba92e-1fe9-48bf-8bcf-a5e2d879d4cc",
        "cursor": {
          "ref": "1ed2776b-6580-4bfa-8fc9-3c85e78aedd5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "982a45fe-5080-49d4-a58d-5e0973c1a11e"
        },
        "item": {
          "id": "5fcba92e-1fe9-48bf-8bcf-a5e2d879d4cc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "01b25999-18ec-436d-9345-a8f757075925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de43f9a9-d2a0-4b14-9236-8ae117345994",
        "cursor": {
          "ref": "73de8ea5-47cf-40b6-b6de-bd385eaac02f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "73e99ad6-45f6-4f7b-9baa-b752380f43eb"
        },
        "item": {
          "id": "de43f9a9-d2a0-4b14-9236-8ae117345994",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a08b9bd8-cb20-4089-ac38-6ad83cea313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c5df1a-4c64-46e9-8a3a-fb123057efa9",
        "cursor": {
          "ref": "b1fbacc0-9edf-4d86-9525-7d42587512f2",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c9c01895-308a-4565-8cfc-cb6b958ba0d9"
        },
        "item": {
          "id": "01c5df1a-4c64-46e9-8a3a-fb123057efa9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cf7d3408-13cd-41df-a2b5-f8ffcfb28356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22acde5-4cc0-4bcc-a651-176017df4ce0",
        "cursor": {
          "ref": "a971e438-b8da-4527-b954-b3d153725f07",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e5831431-32fa-48a0-9405-a3390f493f90"
        },
        "item": {
          "id": "d22acde5-4cc0-4bcc-a651-176017df4ce0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5a897205-2328-4d24-b1e0-c526b573388f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed564806-aaf1-4b85-8fad-cc1963f146f7",
        "cursor": {
          "ref": "b19fddf4-8a58-4322-bbf6-dd7057af6bd2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4b23df54-cb43-48f7-9464-2449ccce8a37"
        },
        "item": {
          "id": "ed564806-aaf1-4b85-8fad-cc1963f146f7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cb992e4e-e0a3-409d-8e15-f0cf4a46ba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296bbdaf-402d-4d94-83ae-7dd7b9e7b32a",
        "cursor": {
          "ref": "8c611033-6c37-4622-8c48-2e3a9320acfc",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "adc06c6b-d0ee-49a7-ba31-7c42cd3c7533"
        },
        "item": {
          "id": "296bbdaf-402d-4d94-83ae-7dd7b9e7b32a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c50cc6ba-3341-4ec3-9430-ea81b20d4438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e126821-6605-4ad6-9dd1-47467670a06a",
        "cursor": {
          "ref": "5603e6a5-82d6-4f3f-bd37-dcacc054cb64",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2906e8ce-bf5a-4fa8-889a-1f15e1c2f097"
        },
        "item": {
          "id": "4e126821-6605-4ad6-9dd1-47467670a06a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4bc515c1-9a36-4458-a1d2-75fd2eca7074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d25e30-c40f-480e-8200-77a5acc675d3",
        "cursor": {
          "ref": "afcca19c-0ec0-45b0-81c9-247b9a6ca799",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d98cef80-5bcf-4414-a47e-301551391699"
        },
        "item": {
          "id": "32d25e30-c40f-480e-8200-77a5acc675d3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bcc0a5cc-e74c-41a3-9915-f91facf71787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04832b53-7a42-4360-bc97-9edd7e378390",
        "cursor": {
          "ref": "a968c6c1-44ae-4491-bdc8-c70f31b2a22e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "809e6997-6788-48f4-806d-c3625e41275a"
        },
        "item": {
          "id": "04832b53-7a42-4360-bc97-9edd7e378390",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6a2481b6-764f-43cb-b1c6-82640388fa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ccc6f1-a7aa-41fa-b377-b0c330ba49cb",
        "cursor": {
          "ref": "f9e743fe-3134-4c9b-af1c-56fac2bb2489",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8bd8e4b7-4558-4717-8b47-eeb3ab2f365b"
        },
        "item": {
          "id": "03ccc6f1-a7aa-41fa-b377-b0c330ba49cb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ad263f05-0eab-4d06-9837-5a0c8003ec06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fc039d-8b1d-4b0d-84e4-913464ab8266",
        "cursor": {
          "ref": "337e2e73-38a7-4517-bb11-6776dd271b5c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8094e739-0967-421c-a1ea-dedcf232a1a8"
        },
        "item": {
          "id": "98fc039d-8b1d-4b0d-84e4-913464ab8266",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2ad55547-80b7-4d66-9448-8a6d222f9708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be999cf7-0a20-4b04-bde7-57725d1191eb",
        "cursor": {
          "ref": "98d09d9a-f97e-4e75-8fd4-d32ba4525765",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d780dc40-b978-4672-9820-7960db601a09"
        },
        "item": {
          "id": "be999cf7-0a20-4b04-bde7-57725d1191eb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "89baecff-71ce-4ce2-9b25-a26f7a66950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bc87f8-b4dc-42f1-9549-22cdc3a7bd62",
        "cursor": {
          "ref": "2380e5ba-227b-4c6b-ac8f-d52a4859e96a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "55bab766-fae0-4476-bb51-833c0aab8ba3"
        },
        "item": {
          "id": "18bc87f8-b4dc-42f1-9549-22cdc3a7bd62",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0cdbf23b-af11-4a79-833d-94ef3a43b5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbb55f5-79ce-44fb-9ff7-29870f76394b",
        "cursor": {
          "ref": "e3c3fe58-7ae5-4daf-9595-c02986bf5637",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "319cc96e-ad30-4fdb-b7d7-46dbb216e311"
        },
        "item": {
          "id": "5bbb55f5-79ce-44fb-9ff7-29870f76394b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3f36ced1-93fe-4efa-b001-c0587fd5dd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a28a48-71a9-4355-a5e5-b53f9d27a116",
        "cursor": {
          "ref": "18110f83-71d5-4d59-8b60-813dc59ee299",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "251747d1-4db8-4af2-b97c-89843426bf1f"
        },
        "item": {
          "id": "52a28a48-71a9-4355-a5e5-b53f9d27a116",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6d35cde6-f819-4506-9efe-3f8de8b2ae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94340575-434f-4e17-8b17-028fe14356ea",
        "cursor": {
          "ref": "5dd01569-6782-49b2-8acf-a28dacb3391c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "258baeb7-3101-4ec6-b03e-ce31de143258"
        },
        "item": {
          "id": "94340575-434f-4e17-8b17-028fe14356ea",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f88f5716-918d-4d92-bfa4-677f40aa0f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdabdc2c-4618-413f-803e-b86b8a92f7b0",
        "cursor": {
          "ref": "050f4ad8-55f1-4af4-bfc2-b30fb03c33a6",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bed08320-858d-4d73-84ba-ec7ecee0b071"
        },
        "item": {
          "id": "bdabdc2c-4618-413f-803e-b86b8a92f7b0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a7c70796-facb-4280-ae25-df3866e4f40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d98b14-12ff-431d-bc27-221af8c5eaa5",
        "cursor": {
          "ref": "e27b6cdd-bccf-4e15-8206-05a1d09b1959",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bc50a312-6607-4a14-8477-43f5bcdc1abd"
        },
        "item": {
          "id": "35d98b14-12ff-431d-bc27-221af8c5eaa5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "071e1fc7-2cca-4e5b-96a0-82df8248ccfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce45d598-a904-4bb7-aa10-255a40cb7d88",
        "cursor": {
          "ref": "2846a883-9b97-4538-b195-ec964e1a2108",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "381cfae2-1215-4ea8-9ffa-50a930a85a5d"
        },
        "item": {
          "id": "ce45d598-a904-4bb7-aa10-255a40cb7d88",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "742848af-dd04-4af7-80bb-8e2dba0af60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf977d4-23a3-491c-8dd7-f60f8e2a5264",
        "cursor": {
          "ref": "e6ee3921-8555-4399-ab53-79257cd2dd45",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6ce7b7d9-0810-4da9-b31d-fc0f042785da"
        },
        "item": {
          "id": "9cf977d4-23a3-491c-8dd7-f60f8e2a5264",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "311f7922-70c2-4217-8a79-7aadddfda690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc829c8-3ccd-4bf8-83f1-eea66dd9778c",
        "cursor": {
          "ref": "03abbe25-d9b0-4e82-be73-151d7ffeda02",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fc6556e6-f22e-4f9f-9e95-f7c68fcd44aa"
        },
        "item": {
          "id": "efc829c8-3ccd-4bf8-83f1-eea66dd9778c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "39d90001-3bd9-47be-9fdd-2a05fecb2089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d278626-5138-4fb2-9101-16a0051aa894",
        "cursor": {
          "ref": "e8e91c39-e1b6-4209-b35b-2bbdc21c0dc6",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dac7eee9-029b-44da-ac2f-fe1d5be806bc"
        },
        "item": {
          "id": "8d278626-5138-4fb2-9101-16a0051aa894",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "058f0b82-ac67-4cac-a626-9530a369235d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f2f17f-c632-47c9-bbb6-8c942b72d61c",
        "cursor": {
          "ref": "5326708b-ca44-4660-a27a-69c8371d7a38",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5f76193f-fc52-408b-8cc6-1bc0e7f87088"
        },
        "item": {
          "id": "98f2f17f-c632-47c9-bbb6-8c942b72d61c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1a279061-b90e-4688-ac49-9dbf00af6a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf89e41-5728-47f5-ad57-7e243d7b2430",
        "cursor": {
          "ref": "528cef87-2689-44d5-ad95-b0964315dea7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "883c6cd0-ee21-4df5-b172-b17c944d84d8"
        },
        "item": {
          "id": "daf89e41-5728-47f5-ad57-7e243d7b2430",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0fedbaba-4db2-4ae0-a562-68a0b8e4d655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35109c44-3b53-44b4-835b-fcf3bc205394",
        "cursor": {
          "ref": "4f5fe0ad-80d8-4513-85d9-6dbfebaf80ab",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c08c0438-3804-4ad2-a5ef-53940076d472"
        },
        "item": {
          "id": "35109c44-3b53-44b4-835b-fcf3bc205394",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9d29103b-0b5b-42e5-b336-fe73045fa765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1a2124-173d-48c7-ab8d-73d330f007f0",
        "cursor": {
          "ref": "6a747abd-15a9-4c15-bb1b-7fa9bee61d27",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "75f43e33-012c-4974-a463-5207d2ded25d"
        },
        "item": {
          "id": "9a1a2124-173d-48c7-ab8d-73d330f007f0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b9b9807c-5615-4e6c-a857-3b4fa18e49fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8347ddf7-a035-4485-9e84-03f8f52e20d8",
        "cursor": {
          "ref": "68994e8d-4796-4249-b906-d544a535a2b7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b8cf5b4a-18ce-491b-be92-b1619f5dfd67"
        },
        "item": {
          "id": "8347ddf7-a035-4485-9e84-03f8f52e20d8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c82ef693-8b9d-4233-a16f-3a5bf01afe40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d923b55-8238-4eb4-813c-2688de85e43e",
        "cursor": {
          "ref": "3c6574cb-f7ea-47b9-a3f8-f04679a1edeb",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8bf8642a-f653-4b3e-936b-b0615c6e4469"
        },
        "item": {
          "id": "2d923b55-8238-4eb4-813c-2688de85e43e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d2d62843-1d28-46a9-85c9-6defad2a552a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be32ac4e-a284-42c8-9396-d4ed3617a646",
        "cursor": {
          "ref": "73ab09fc-d134-4ff4-a441-83bcf3d9a039",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "beadcdb4-33ad-4f04-831b-41940f7c2e53"
        },
        "item": {
          "id": "be32ac4e-a284-42c8-9396-d4ed3617a646",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7d6f5ee1-d712-4252-a849-f5da850b2c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c68ab36-d132-4e5b-9a25-5c0e30eeae39",
        "cursor": {
          "ref": "49f0595e-41b7-45c2-a40e-707ed5665d2b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2a06b7b3-4fc6-45eb-b2cf-2c64309cf675"
        },
        "item": {
          "id": "9c68ab36-d132-4e5b-9a25-5c0e30eeae39",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9b506194-45d5-4599-960a-dc762273527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5309ad8-08d7-4bce-965a-7b6cf74df0a2",
        "cursor": {
          "ref": "51c67605-b666-4759-be7f-a6bc6cca6dbd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bd1e403d-3baf-415d-adbc-15d827e357cf"
        },
        "item": {
          "id": "d5309ad8-08d7-4bce-965a-7b6cf74df0a2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fd4a3f0a-a246-4967-b832-39f2cf0624e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7555899-b1a1-4b23-82fb-382433ac948c",
        "cursor": {
          "ref": "8f96c39f-86cd-45be-8a52-a056f72735f8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "849ee1b4-5e08-4b65-bc8d-f02563ba1c36"
        },
        "item": {
          "id": "c7555899-b1a1-4b23-82fb-382433ac948c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ebfe3289-3876-4619-b7a1-1e3d7d48cc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f509bd-0f05-4103-9f71-58aee4d2177b",
        "cursor": {
          "ref": "29f8e0cb-2770-4846-be16-8d92fe9a3b99",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0a5661ca-2175-44ac-a1f4-c1cac4d48385"
        },
        "item": {
          "id": "40f509bd-0f05-4103-9f71-58aee4d2177b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "adbed4d4-a454-4df9-bbc9-02964827b688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afb32e0-087a-4b8d-8c7c-bf359f5ff988",
        "cursor": {
          "ref": "3a63abbd-710b-46fe-a394-1d3244f84db7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9e9c6da5-2cc1-46bf-b30e-1956a26382f8"
        },
        "item": {
          "id": "3afb32e0-087a-4b8d-8c7c-bf359f5ff988",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6d2f990f-56a3-405e-8136-18d87fa02e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4879d22-cf7b-479b-818c-deb811744562",
        "cursor": {
          "ref": "7b09b768-6bcd-48c2-9219-7ca48702d604",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "be1be439-ef6f-4615-b116-fb4798c0740e"
        },
        "item": {
          "id": "f4879d22-cf7b-479b-818c-deb811744562",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "16b43c63-0e4c-400b-b4e2-b67cf313a35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a7e6b6-5cb2-4fb6-986b-c6023f8c0989",
        "cursor": {
          "ref": "d0d01da4-3e2c-4b12-8e43-ba6e17cdc824",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "346f0a5e-b1c4-4840-aab6-b98168cd330c"
        },
        "item": {
          "id": "63a7e6b6-5cb2-4fb6-986b-c6023f8c0989",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8fbbdd3e-40be-4053-b29b-ccc4d37c0912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db447b19-0cc6-45d0-8a54-28c2886e889b",
        "cursor": {
          "ref": "3e8a3e9a-259a-4e43-847b-33b6caecb83f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c0f0a1f6-ce7d-4b2c-8e18-c30e0d0bd4e7"
        },
        "item": {
          "id": "db447b19-0cc6-45d0-8a54-28c2886e889b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8ce5e3ed-f27f-4647-ab48-696042c513f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7184dc18-3921-48ea-804c-538539b6b1a4",
        "cursor": {
          "ref": "5141f31f-8381-43a5-84ff-20bde66d1b80",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f112bfcc-26b9-4004-b353-cc167bcb8180"
        },
        "item": {
          "id": "7184dc18-3921-48ea-804c-538539b6b1a4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "555e8bbd-0cad-404c-8e90-fd7fdcd633ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e1f744-ceb4-4f21-8036-13bec3fa5801",
        "cursor": {
          "ref": "cbc0f695-7ea8-45c4-b069-848b7ade1a48",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c8cccc64-5070-431e-b5d4-e42a825e8e01"
        },
        "item": {
          "id": "27e1f744-ceb4-4f21-8036-13bec3fa5801",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f3958543-42ef-41cf-867f-bd404b4a9d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a32b265-83b2-4b45-8a0d-0afbcfb6861c",
        "cursor": {
          "ref": "6500fe52-82a5-425b-a8b8-370b8ebf95e6",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8a22d7e6-4b93-474c-9e9d-f790c8c488b1"
        },
        "item": {
          "id": "5a32b265-83b2-4b45-8a0d-0afbcfb6861c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "812cabe7-f544-47ca-b3f7-5a09ad9e6341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1e9673-e471-4697-a7f8-a88d99108a85",
        "cursor": {
          "ref": "6d2ab51e-0cae-449f-8404-e4704884ab70",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8be21b7c-ad2e-4902-a391-20f4e5fea172"
        },
        "item": {
          "id": "9d1e9673-e471-4697-a7f8-a88d99108a85",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7f7470d5-279c-4fae-92a2-cf1f7e53fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929fc933-fba3-4c43-abe2-46b461b4cf85",
        "cursor": {
          "ref": "4baf0e25-b3c7-446e-9172-48495bb74590",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8fcb497c-3498-4a5c-b4bd-9935531036f8"
        },
        "item": {
          "id": "929fc933-fba3-4c43-abe2-46b461b4cf85",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c7e926eb-e8c6-4809-bba2-8fb30892668f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc501fc6-6264-47a3-9a16-26d3561ebc1f",
        "cursor": {
          "ref": "b2e63921-f8fe-400b-a3ed-114d80395db8",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "307dcd6c-92a5-4ba3-a5ac-e1414bbac2db"
        },
        "item": {
          "id": "cc501fc6-6264-47a3-9a16-26d3561ebc1f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1f557716-c59e-4f1c-94c2-6061e0173d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8444d1be-0bad-44bd-a2fc-99b89eab783b",
        "cursor": {
          "ref": "7bfea2fe-0968-44aa-b0c5-b2dbef731e09",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "aaa66ce5-45db-49cf-a899-a423ae19a5b1"
        },
        "item": {
          "id": "8444d1be-0bad-44bd-a2fc-99b89eab783b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e3cdf2a0-8966-4775-a0cf-12882c401731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaa117b-14bb-449c-999f-4e4d2676cb66",
        "cursor": {
          "ref": "2b4790a3-8f35-4a1d-adbc-2fb93c577686",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d0b3c50e-2082-44f4-b4cb-ff62412d7e4a"
        },
        "item": {
          "id": "caaa117b-14bb-449c-999f-4e4d2676cb66",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9f9e017f-74ae-4f3d-895b-60bf28cb8a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f565cbb-89bf-4859-bb42-441c0daa60c6",
        "cursor": {
          "ref": "0a44b6a5-282e-4420-abf8-f017703bda00",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f2c61282-9632-4846-8fd4-cd26615144af"
        },
        "item": {
          "id": "2f565cbb-89bf-4859-bb42-441c0daa60c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a76fe478-d3f5-490f-82f2-cc775a795c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8f0e6c-e28d-40fb-8ea0-bfa5974eafa9",
        "cursor": {
          "ref": "58e9d2cb-5389-4224-b673-c35cbd6dcb41",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e59be20c-4775-40ce-bfcf-97c04dda5f49"
        },
        "item": {
          "id": "ec8f0e6c-e28d-40fb-8ea0-bfa5974eafa9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6839b267-5209-4b04-9506-41aef410c059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1ee69c-6345-4a7a-b785-4f5fd48a1646",
        "cursor": {
          "ref": "c9069e25-50eb-4a75-a52f-ae7ed249e080",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7e9fdcc2-9170-422f-ad67-ccb6ba1e808d"
        },
        "item": {
          "id": "fb1ee69c-6345-4a7a-b785-4f5fd48a1646",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "58ffc702-73fa-4528-b8df-349d5ae907ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9fc11d-0560-4573-8869-60d63e7b1e0b",
        "cursor": {
          "ref": "1cfffb63-b1f6-4874-bd37-21298204f134",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "78c71a06-93b8-40da-bdf0-2bc61635323c"
        },
        "item": {
          "id": "bc9fc11d-0560-4573-8869-60d63e7b1e0b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3fb03dab-de61-4537-8e7e-696aceb0efd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04aba9c3-3f95-427c-8a10-4c2c83890ba9",
        "cursor": {
          "ref": "c2740698-90d3-4aff-a94d-c09d690f6ef8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ae014811-6a59-4264-9604-bf1e245e16df"
        },
        "item": {
          "id": "04aba9c3-3f95-427c-8a10-4c2c83890ba9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8e0d3f9e-e32c-45ec-a1ad-a22cf5aaeddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf881eef-73aa-4440-a264-f8c8c3c7a09a",
        "cursor": {
          "ref": "603b8cc1-7a65-413e-9231-3a618cc36457",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e14ee15a-0326-4ecb-abf2-9591b8ef6eec"
        },
        "item": {
          "id": "bf881eef-73aa-4440-a264-f8c8c3c7a09a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "58590e7e-bc76-4d98-afdd-18edd26c3378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf60f4b-0b2a-4e10-b8e7-7c9c4d4b337c",
        "cursor": {
          "ref": "bf6fd5bd-14ed-4c68-a5fc-2af049826232",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "83c22994-7408-428d-bcc6-395e768e634c"
        },
        "item": {
          "id": "bbf60f4b-0b2a-4e10-b8e7-7c9c4d4b337c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a88b7caa-344c-4cac-98de-0889d7c560df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73398dc-3425-4db6-aea8-caebf80009c7",
        "cursor": {
          "ref": "d38c69bd-68d8-42b2-b41d-bf9f2b0d68cc",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b7773035-74ec-491f-bac5-d31256580e96"
        },
        "item": {
          "id": "e73398dc-3425-4db6-aea8-caebf80009c7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b4bbaf2f-d5b1-4435-821a-c2cb08ee0aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acebab45-6970-4916-916d-7e811682b41e",
        "cursor": {
          "ref": "6f0dd6d7-0bbc-49a3-96b0-3b62b1ee5d1c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bf868a4c-0bc0-40fd-b23e-45e8a826dda0"
        },
        "item": {
          "id": "acebab45-6970-4916-916d-7e811682b41e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4fbb373e-6a6f-4f10-b780-ef594789c9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c8395c-a005-45e2-ae10-75201e9d23d6",
        "cursor": {
          "ref": "eb1bbe12-dad8-4cfc-944e-58ec582adcfe",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "29569ec8-68b5-4cec-8fe1-b348ecb1164a"
        },
        "item": {
          "id": "85c8395c-a005-45e2-ae10-75201e9d23d6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6d8b9e87-5e3e-4297-8c6b-b48eb902a5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d675ffb2-bbf7-4a87-ba74-fcb3a005e7ce",
        "cursor": {
          "ref": "6c4e1594-26ea-471a-9616-1df4478c5d82",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c4a388b6-e8cd-4bce-a3b3-212b7137a3a0"
        },
        "item": {
          "id": "d675ffb2-bbf7-4a87-ba74-fcb3a005e7ce",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f5f56ec1-cb69-43b6-bf03-09de1e38d32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c6f40a-38a0-4bff-89fc-b4df44f9b278",
        "cursor": {
          "ref": "0aad85b9-fa02-4901-aa33-b453d9b3ecd2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a6a615f4-bf63-45ea-ace1-9e0b5aa4746f"
        },
        "item": {
          "id": "06c6f40a-38a0-4bff-89fc-b4df44f9b278",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "71ba9525-8dbc-42fb-bea1-1779fac9b7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f2868d-62dd-40c4-857e-72a859dc601e",
        "cursor": {
          "ref": "5e8342ee-7601-4fcb-81b3-7defa1d07105",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "424318c4-18af-487f-ac53-4408fe0ad65d"
        },
        "item": {
          "id": "69f2868d-62dd-40c4-857e-72a859dc601e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ff136d9c-3798-4a08-973e-27d1f3183b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ba177c-f90e-4ff2-bdf7-0b8aa6b4ec3b",
        "cursor": {
          "ref": "4eb34bc1-368b-4515-819c-e82fed084ceb",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fd909e6b-9f46-4983-9221-10dea3ff4f03"
        },
        "item": {
          "id": "d2ba177c-f90e-4ff2-bdf7-0b8aa6b4ec3b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3fe7b3f4-7d55-4780-8807-85a2cb06b1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce8e6e9-1eee-40a2-912f-175bc12ee68d",
        "cursor": {
          "ref": "86c14f41-a5d0-40c9-958b-c09d406737d6",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "02a9d791-7f08-4eec-911c-3f3613d6ff5e"
        },
        "item": {
          "id": "4ce8e6e9-1eee-40a2-912f-175bc12ee68d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0d813864-0f06-4aa1-a82c-898b2434dee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c181e0a5-ef52-42ec-a2c7-dac2c3c5c1ce",
        "cursor": {
          "ref": "74d284ba-46f7-495a-af7b-c4bfee362010",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "483937fe-8d30-427a-9290-c6b6ab19d22f"
        },
        "item": {
          "id": "c181e0a5-ef52-42ec-a2c7-dac2c3c5c1ce",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "05e0c656-b377-4499-b8dc-c440863ed3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8219148b-7e35-4891-9d4c-35233dc448ff",
        "cursor": {
          "ref": "814077ed-220a-41dc-b547-ace7ef6c46f6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9a4aee35-a95e-415c-b7c5-bfda4e013559"
        },
        "item": {
          "id": "8219148b-7e35-4891-9d4c-35233dc448ff",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d8cfe764-b050-4388-8cae-ab948a39405a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fefeac-ed45-440f-a8ff-cafd326be9de",
        "cursor": {
          "ref": "82251c32-ae66-4de6-b59c-6ca79e003460",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8c6c7411-265c-4162-9340-f9ba21dc8dc6"
        },
        "item": {
          "id": "46fefeac-ed45-440f-a8ff-cafd326be9de",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d252c3bc-955c-423a-a638-073449b55f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed2d891-8e74-4690-a186-360aaf33fb10",
        "cursor": {
          "ref": "5d686381-240e-40bd-9685-112a8e582dfd",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9abac49a-4a18-4368-8428-3c203f43ba73"
        },
        "item": {
          "id": "4ed2d891-8e74-4690-a186-360aaf33fb10",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e79c4f7c-062a-47de-aca4-417e4962154d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75520b07-91b3-425d-be18-3c7c45a19a42",
        "cursor": {
          "ref": "db7c3882-4521-4416-9ce7-ab741d7eda71",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8854a4df-ee4f-4740-b4c0-20209f553bc0"
        },
        "item": {
          "id": "75520b07-91b3-425d-be18-3c7c45a19a42",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5d941f8c-638f-4c45-b516-0f11430b26a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f13b75b-1663-44f9-a451-4b437d41c518",
        "cursor": {
          "ref": "fecfce86-5a5f-4447-b34e-de2967006521",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "df81013c-d098-4996-9867-46eef767ecde"
        },
        "item": {
          "id": "9f13b75b-1663-44f9-a451-4b437d41c518",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "15ec608e-14f9-4b67-a69a-413f10d58374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b689ec-92ed-4dda-883c-f696556cf96a",
        "cursor": {
          "ref": "0dec50d2-4d95-4989-9bfa-9bbdac3bad7b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "49bf6d8c-78e7-409c-b033-b13ecc29be72"
        },
        "item": {
          "id": "d6b689ec-92ed-4dda-883c-f696556cf96a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3de7b856-782c-46bb-9329-68f58aeed6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4543f6b-8380-408c-b75c-c55a7c5a4140",
        "cursor": {
          "ref": "d4a6cb04-bcd5-44e1-8d75-6e79f46a3176",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5f683fd6-eda2-4f2e-bc76-df9d708bea8a"
        },
        "item": {
          "id": "c4543f6b-8380-408c-b75c-c55a7c5a4140",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8ce15173-74f6-4f67-ba21-5cb7a0621cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde31694-8d32-41bd-b175-18b0f55a07b7",
        "cursor": {
          "ref": "dcdde999-1fe8-4430-9176-5d8e61ffe721",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2302d314-6112-4ffa-afdd-37cf32f3fa57"
        },
        "item": {
          "id": "dde31694-8d32-41bd-b175-18b0f55a07b7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "996ba12d-f674-4942-ad5b-c585bb307ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15e326e-57a5-42e7-b542-037a88aa5d1d",
        "cursor": {
          "ref": "f4eaf988-ae10-4ed3-af8d-07b7f3ea4880",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c06503a1-e3ac-41c9-8a76-9f3dadf61f65"
        },
        "item": {
          "id": "a15e326e-57a5-42e7-b542-037a88aa5d1d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f5cb7a4f-b90e-4fb8-bc2b-d6d873e4f39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30a2b2d-fcf9-4853-b3cc-c980b26b4aaf",
        "cursor": {
          "ref": "c6511636-c294-42d2-a80a-19d3007fbd8f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c638e5d5-e864-40c0-8b46-ac581507b133"
        },
        "item": {
          "id": "b30a2b2d-fcf9-4853-b3cc-c980b26b4aaf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0a1292a8-ab24-4046-9e57-3a2920f51c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f5f4a9-083f-44f4-a28c-8afd8673bb77",
        "cursor": {
          "ref": "1f2da65e-3fc4-4e85-a86c-4c619393278d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b2206a7a-5908-4ae5-a59b-f1d94e703383"
        },
        "item": {
          "id": "a1f5f4a9-083f-44f4-a28c-8afd8673bb77",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d14ec0e7-abd4-4040-b4a0-8f795056421a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b4a3ee-4a4d-43d0-af4e-9d792b217fce",
        "cursor": {
          "ref": "d2e232b9-8f0f-4b1b-b4c7-e6b6cff0f88c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e8a86aa1-d323-4876-b6f1-2e21286206fc"
        },
        "item": {
          "id": "f9b4a3ee-4a4d-43d0-af4e-9d792b217fce",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "50e269bd-572e-486f-be88-b5ca7876d890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4180a198-82fd-4f92-b853-e138f87353a5",
        "cursor": {
          "ref": "f9021365-53dc-4c79-b895-169685cc7f29",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "957b3a77-d935-433e-bb8b-0eaf649cd145"
        },
        "item": {
          "id": "4180a198-82fd-4f92-b853-e138f87353a5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3376aae5-76ff-4106-9a62-f9ecd0ea4104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4345f1d-a4be-43a0-91ba-d60acc5756bd",
        "cursor": {
          "ref": "b0b2077e-a271-49d7-8d3a-49c90b5da5e5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7b84076d-7e2f-405e-b5b2-a89f59bbcb7f"
        },
        "item": {
          "id": "d4345f1d-a4be-43a0-91ba-d60acc5756bd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f11112d8-92ce-402d-af95-d7ab19cde73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027d994d-f13e-4599-892e-069b2d2f8ad2",
        "cursor": {
          "ref": "bbf43b45-6b94-4a1f-9dc7-74961b224448",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a761a946-f53a-4288-bfc2-4f54468c29a0"
        },
        "item": {
          "id": "027d994d-f13e-4599-892e-069b2d2f8ad2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "86a2b38f-bd08-4ef0-b7a5-63c9d3cfa9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0cf46c-a3a6-423a-96e5-08776cf0734c",
        "cursor": {
          "ref": "5633ee5b-ba0d-485e-8622-19cfa4b280f3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "17a1802b-cec8-4ce2-ba97-6f33cb6f0a76"
        },
        "item": {
          "id": "3f0cf46c-a3a6-423a-96e5-08776cf0734c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b3397341-0401-439f-bc2e-1b0106b7568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e201c560-cd8c-423c-a798-d947fab72eda",
        "cursor": {
          "ref": "ed2e26b0-6466-4194-904d-ef9fc5572931",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e390761a-1fdc-401d-ab58-8335a0f4fdda"
        },
        "item": {
          "id": "e201c560-cd8c-423c-a798-d947fab72eda",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1ecd3ed5-7b34-428d-8954-215ca0806306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ef73ca-17a5-46c4-be8b-e43cf5fb8dea",
        "cursor": {
          "ref": "da6d8944-8209-481a-b511-040d8d4f398a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c78fa22e-0c11-4f54-b2d8-4f8d0bd02e67"
        },
        "item": {
          "id": "a5ef73ca-17a5-46c4-be8b-e43cf5fb8dea",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2d66d61b-e6c5-40c2-aa0a-5c5641a8846b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba375d6e-416b-475d-930b-b54064ebc89c",
        "cursor": {
          "ref": "8079df4e-a5a9-42b3-b185-1e8f95598d95",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ae103cea-a6a2-4ad1-aba9-325296475b75"
        },
        "item": {
          "id": "ba375d6e-416b-475d-930b-b54064ebc89c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "71c8372e-3b8b-47d3-8f8a-a43b5b534612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7969720-2ae7-4fd1-afd2-2704b751bded",
        "cursor": {
          "ref": "cccbfd8f-dec6-41c1-b049-ff76b84116ac",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d1ff3add-9026-41da-9d50-631b6a2a1ac3"
        },
        "item": {
          "id": "f7969720-2ae7-4fd1-afd2-2704b751bded",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0254228c-3b4c-4380-a95f-e19f4169ed03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "985c0ff0-cdbf-40cb-9b53-832c4de5f6c6",
        "cursor": {
          "ref": "7a3efec2-ab30-4d6f-b189-035bd7b475b4",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "65b7cccf-a84f-4b41-8663-0facf8abe378"
        },
        "item": {
          "id": "985c0ff0-cdbf-40cb-9b53-832c4de5f6c6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "76166609-f737-43b8-8b6b-72c2b6b0f002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3b0bc649-408e-4c21-901e-a319665c8898",
        "cursor": {
          "ref": "62797d77-adcc-428c-bfd1-1a0939effbc9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "db5a40d9-f355-4696-8761-f546abf4928e"
        },
        "item": {
          "id": "3b0bc649-408e-4c21-901e-a319665c8898",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "910d824d-6913-494d-96ff-cea09d090b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "77774609-0576-4669-9c55-2389886efeba",
        "cursor": {
          "ref": "17e1ce42-789b-4d2c-9665-ddc6460a87f8",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b34e716b-1425-4173-afb0-30010d1f0447"
        },
        "item": {
          "id": "77774609-0576-4669-9c55-2389886efeba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d1d0dccb-cea9-4b0f-8da2-8a5d2788be83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b6dfe3b4-801d-413f-8db3-109930243424",
        "cursor": {
          "ref": "0128bc95-359a-4092-bbc0-27932b7696f8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2add0c84-915e-4024-9e87-07ec145e435e"
        },
        "item": {
          "id": "b6dfe3b4-801d-413f-8db3-109930243424",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5e85d546-8995-4a84-b7ec-5f4c23f77f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "68556284-0d7a-42fd-a41e-0f83b3c81df3",
        "cursor": {
          "ref": "1b21d4fd-5945-4607-a24a-27ac2bb49ce0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "50ca2809-d1fc-42f8-adc8-888e4020d0af"
        },
        "item": {
          "id": "68556284-0d7a-42fd-a41e-0f83b3c81df3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bd0afc07-c103-407f-bb8b-c1bc9bf8afd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "dc24b23d-345a-4ac8-b55a-178a34609d95",
        "cursor": {
          "ref": "de4dfa3e-51a2-4ed6-b6b5-638031300677",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "53a3707c-8ee0-4c9f-957d-509244f212d0"
        },
        "item": {
          "id": "dc24b23d-345a-4ac8-b55a-178a34609d95",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "077d64cc-bce3-4703-8801-ee981b060c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a2f0a6bb-678d-4f93-bdc7-201da42482b3",
        "cursor": {
          "ref": "b00d4002-3dff-4607-b94c-bdb78852e8b6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "408159c0-cf40-40d8-a7dc-5263a3acbe56"
        },
        "item": {
          "id": "a2f0a6bb-678d-4f93-bdc7-201da42482b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "234a29fb-b274-4f89-873b-972e8b294607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19cb5f9-c174-47a1-8a2f-62b1abfa146e",
        "cursor": {
          "ref": "0e10c0f7-6f6b-4002-9f46-db2ed403c7a7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa316ae1-0c67-4d84-b0a3-1f4bce45607b"
        },
        "item": {
          "id": "d19cb5f9-c174-47a1-8a2f-62b1abfa146e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b9ac4bf-57eb-4c41-9be3-fba8df129d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c132d85-6203-4b52-8a2d-a16f6d61460b",
        "cursor": {
          "ref": "875f9742-5cfb-4354-991a-2293eba3d70f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0c0cdaa5-95a3-4d9a-8995-9340e7072a65"
        },
        "item": {
          "id": "4c132d85-6203-4b52-8a2d-a16f6d61460b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "daddecd4-6c49-4e26-b5da-d674c9471b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97e233d-a62f-48c6-b809-9b0e0e8f9848",
        "cursor": {
          "ref": "6947d345-70f6-4156-9def-599411ede5c2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c2bb915a-134f-45ef-8889-84109fa8cfca"
        },
        "item": {
          "id": "d97e233d-a62f-48c6-b809-9b0e0e8f9848",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6aed7733-5f7f-43d3-a5ec-1509d8c95094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c6cb03-bb67-4a1f-bc1f-591787f6c2f7",
        "cursor": {
          "ref": "500f8ade-c1ed-4257-90c8-c81f0c752264",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "eb5d767c-e9b7-43f7-99e9-519a20ab2299"
        },
        "item": {
          "id": "d9c6cb03-bb67-4a1f-bc1f-591787f6c2f7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "49adae48-664d-40f5-95d9-fc75b9270df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf195f9-964b-4d00-8bfc-a955486aab54",
        "cursor": {
          "ref": "638304fb-fd14-4544-9153-90456ade509c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "11f9ef91-f576-4197-aa0f-d87e56711e55"
        },
        "item": {
          "id": "cbf195f9-964b-4d00-8bfc-a955486aab54",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fdbe6ab8-44a8-4003-b10e-b349ce511bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ca949f-5413-477a-9b20-dc5dbcdf9203",
        "cursor": {
          "ref": "39b3ac23-1794-402a-8bc4-5ecfef99c550",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "28fdb3ea-c62d-46aa-9ceb-395fc4c7dcb3"
        },
        "item": {
          "id": "70ca949f-5413-477a-9b20-dc5dbcdf9203",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "90a377eb-8d28-4df0-a05d-c52e11c3acfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d3e126-7691-41de-82ef-5c0c59523a79",
        "cursor": {
          "ref": "9f588037-a8c3-45d6-856a-d2ea82c5c125",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2b3b9fd9-d388-4d62-9967-b2f78b86da1c"
        },
        "item": {
          "id": "e9d3e126-7691-41de-82ef-5c0c59523a79",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c1a6b5a4-b416-4da7-869a-97ff1e2fd0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f29d8a1-86f5-4cc2-bc34-46589b31a1af",
        "cursor": {
          "ref": "41806929-59f1-4f7d-ae82-ff6ffa770647",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "92035f5d-4d69-4c07-9fa8-c8e4faa6694c"
        },
        "item": {
          "id": "6f29d8a1-86f5-4cc2-bc34-46589b31a1af",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2c4a9cc2-a8be-44b7-80cb-967afe4cf411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22072925-6ce5-4445-88a1-b34a11f98448",
        "cursor": {
          "ref": "9c3ac5bb-630a-4641-9156-1126632b0da8",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cc03cc2f-8fbd-4c3d-a764-673b9068651c"
        },
        "item": {
          "id": "22072925-6ce5-4445-88a1-b34a11f98448",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8f74cca7-690d-4531-a9c8-9c7283be0a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f88578b-3ed9-4742-bc6e-9e41d18560c0",
        "cursor": {
          "ref": "ce20b7f1-acb0-4a9a-8653-fed58ecb76e4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "406dedbe-a410-47a5-a53c-ef16532ef56d"
        },
        "item": {
          "id": "8f88578b-3ed9-4742-bc6e-9e41d18560c0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4596af40-cff7-4254-b6b5-dc908de5ca18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efa1366-686e-4095-80f0-1180191ab1e3",
        "cursor": {
          "ref": "3ac9dfe6-bed8-46c3-bdc9-1f2981771e9e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "db480743-b6fd-4e4b-94f4-b32a48478c3e"
        },
        "item": {
          "id": "1efa1366-686e-4095-80f0-1180191ab1e3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "79529759-c058-4cc4-aefd-3c807cdc446f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44bb082-78fe-4ffa-a1d6-e77905ca86ee",
        "cursor": {
          "ref": "e2610923-25e4-4492-b0a1-a46acc81105f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f42bd87a-f728-4604-98db-0d7f896edebe"
        },
        "item": {
          "id": "c44bb082-78fe-4ffa-a1d6-e77905ca86ee",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "21120b4a-89a6-486e-90d1-8491c55f2616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a96c8b7-e2cf-4924-b7fe-f4858c90b178",
        "cursor": {
          "ref": "35b48021-69c1-4107-9846-13638d48baa4",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0bf3bc6a-411a-4c56-9d3f-8eddce08cbaf"
        },
        "item": {
          "id": "3a96c8b7-e2cf-4924-b7fe-f4858c90b178",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "840b3e49-2ccd-4ef5-adea-08a7be5feb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4921eb36-5a0f-42c5-9509-9a9aeb60a3ad",
        "cursor": {
          "ref": "303edf15-8c3e-4bd8-bef0-47b2b8b16e3b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "13726607-4437-4de8-8d4b-6f41f14ec925"
        },
        "item": {
          "id": "4921eb36-5a0f-42c5-9509-9a9aeb60a3ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4b587225-05cb-455e-86a2-09d18b4deaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25623566-6e6f-4a1e-ad63-1cc933ad4187",
        "cursor": {
          "ref": "664079ea-fd99-41a3-8b18-f0ee15c44831",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a5b81545-de16-493a-826b-cc0d7a261c92"
        },
        "item": {
          "id": "25623566-6e6f-4a1e-ad63-1cc933ad4187",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "00903c31-a140-4b09-abde-be7093171237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b6b84f-4672-4c0c-ac60-436e1869902f",
        "cursor": {
          "ref": "eaa8dceb-9b13-4a65-9c67-2a7155ee66bd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e8fdb671-f30b-4ceb-b219-0ce0e454b4e0"
        },
        "item": {
          "id": "42b6b84f-4672-4c0c-ac60-436e1869902f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "de17ea67-40bd-43f7-b51e-ed5fd3f4d274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338fdad5-ef0f-4d2e-a7d9-9fdbcaf3a732",
        "cursor": {
          "ref": "0daf2478-70f7-43cb-a0e3-8194c329710f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "edee3476-5142-4062-bfad-6e6fde8537e8"
        },
        "item": {
          "id": "338fdad5-ef0f-4d2e-a7d9-9fdbcaf3a732",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "94c9e26a-bb51-4824-a918-0e2f11b950cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdab6cd6-5c3d-4bd9-a4b4-c162ecb752fe",
        "cursor": {
          "ref": "12b297b3-ce78-42d9-a3c7-f209048e1c53",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b9c26575-0fcb-42ba-995f-4a5ca433311c"
        },
        "item": {
          "id": "fdab6cd6-5c3d-4bd9-a4b4-c162ecb752fe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "884bbe32-ddb1-4617-9435-57908f81fe3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434b38fe-cfba-4710-835b-19818a76d5a1",
        "cursor": {
          "ref": "352235be-a30b-4bed-851a-3a8be7baf275",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c16929aa-9145-4012-9bcf-a384c2a29ab5"
        },
        "item": {
          "id": "434b38fe-cfba-4710-835b-19818a76d5a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a4f61af0-5e37-4548-816b-ae81780058e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd731f2-e562-4720-bc28-26f78ac2b7f7",
        "cursor": {
          "ref": "665e0035-0496-41d8-a5aa-ea11f3fdfbff",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2ef175b8-1af3-415e-95aa-3adc046c7a0b"
        },
        "item": {
          "id": "bbd731f2-e562-4720-bc28-26f78ac2b7f7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c9e95e41-94b8-4479-bc59-78baba21cc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c349d43a-5bac-47c0-9b5a-11ed78475d94",
        "cursor": {
          "ref": "108c9a48-c8e2-4c96-94c1-ceae7059a755",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dfc10e1c-e555-4970-a201-49c27666d9c1"
        },
        "item": {
          "id": "c349d43a-5bac-47c0-9b5a-11ed78475d94",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2e742f6a-a990-41dd-8f7b-4989ec841621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708d82d0-8b83-499d-a831-2e06829865b8",
        "cursor": {
          "ref": "ffd95ccc-8d8a-4688-9717-18775db547e5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "711a6ec3-b82b-4979-ba88-ed144630e647"
        },
        "item": {
          "id": "708d82d0-8b83-499d-a831-2e06829865b8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e3fea188-f653-4d64-b0ae-b5997516cd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d36286-ce47-4d1b-a432-55e199a72ac5",
        "cursor": {
          "ref": "b0c0673e-ec73-41bd-a8c2-4c2aab5fe97d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3d1f59a8-0db5-4197-b519-b9160c49d2b3"
        },
        "item": {
          "id": "55d36286-ce47-4d1b-a432-55e199a72ac5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "274a62e6-1056-444d-bab6-322b92e6cd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480b444b-aa5b-440c-bd67-df1673a7531d",
        "cursor": {
          "ref": "a04eb0f0-b7d2-47a6-87cc-8fd5450e5cca",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b23dd2f0-e2d8-4467-9362-1c03bc826fb9"
        },
        "item": {
          "id": "480b444b-aa5b-440c-bd67-df1673a7531d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6182e5bf-bc87-4335-b7db-a379a59da41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a203c126-00c2-4085-aa82-fec434df968c",
        "cursor": {
          "ref": "3b69a49e-456f-4e77-8a1b-c4f393e3fae5",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9c30f51e-3f8b-4870-b62d-80080e9d1e5d"
        },
        "item": {
          "id": "a203c126-00c2-4085-aa82-fec434df968c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f817fd94-a945-44d5-a65c-a078ce2585e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16f15b2-e4a6-491a-8570-d9dc6f8d7e60",
        "cursor": {
          "ref": "c6b168a2-2944-4740-a60c-a48477c808b1",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "acb3e196-abf0-41eb-a8bc-3c8ca54e1033"
        },
        "item": {
          "id": "c16f15b2-e4a6-491a-8570-d9dc6f8d7e60",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "644f13bd-0782-46af-92b2-db6f8bd44a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a377c5-e7d9-4f9f-9862-2b903d15dbd8",
        "cursor": {
          "ref": "cd6a1601-c494-494d-8855-756095fb2589",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7894d6fe-c8f6-44b4-b01f-a3869beddd23"
        },
        "item": {
          "id": "86a377c5-e7d9-4f9f-9862-2b903d15dbd8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ee737bd6-701b-4b47-a134-53b73a510c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df703832-801a-4e61-b974-daa6aec00d8c",
        "cursor": {
          "ref": "7c0954b1-40be-4f08-bf90-107358e2fb7e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d03533d6-c2e9-4f70-b401-a0acba636fe4"
        },
        "item": {
          "id": "df703832-801a-4e61-b974-daa6aec00d8c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "25f76385-7b0c-4204-9564-fee04b322f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13bdb8b-1bd6-41c2-a2d8-7a927ab82820",
        "cursor": {
          "ref": "d6ba0972-b3a7-413c-9f34-bde23c3bb9dc",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8bc0408c-12d5-4d3f-96a5-91955fcfaf78"
        },
        "item": {
          "id": "b13bdb8b-1bd6-41c2-a2d8-7a927ab82820",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "61587c6c-37cc-4587-a067-fa1de8e85eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9944e2b1-9b58-4c41-aca3-43d8ffbf6543",
        "cursor": {
          "ref": "33b49217-c277-4924-82db-547b99be2a80",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b50d6ee4-789c-440b-843a-dc26c7b67328"
        },
        "item": {
          "id": "9944e2b1-9b58-4c41-aca3-43d8ffbf6543",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f9986dec-31d1-4b28-a892-820bfa6adc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b7faca-2e65-4817-a2cf-0ac61752784d",
        "cursor": {
          "ref": "4ee1fc54-3dae-429d-b930-5a75a55e3801",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "54cd59a0-805f-451c-8daa-482de22b831a"
        },
        "item": {
          "id": "27b7faca-2e65-4817-a2cf-0ac61752784d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e3b34eb3-03a4-47c6-97c2-97f525f5bd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748810ed-f04d-483d-80f1-faaba19a0d8d",
        "cursor": {
          "ref": "024c495a-5250-429c-b1b2-a6c8ff6595ae",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "12fb0b0f-22d5-40b0-b924-050e73caeb47"
        },
        "item": {
          "id": "748810ed-f04d-483d-80f1-faaba19a0d8d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c262ae55-edec-46b1-9ef8-7631ea9595d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618da37a-414d-4da8-8f31-521c298605e9",
        "cursor": {
          "ref": "46de5f2b-50dd-420f-af1a-c34267489dd3",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4c87dea8-18b5-4d40-9cd6-e370f6411402"
        },
        "item": {
          "id": "618da37a-414d-4da8-8f31-521c298605e9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f89cf727-3272-455d-bf27-ea417c759b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f80dac0-77a5-488a-8834-49286dd91300",
        "cursor": {
          "ref": "c94a25f0-de9e-4622-96f5-41a0c9e8323b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6f079978-bd4e-4e58-bb29-7298d276f34d"
        },
        "item": {
          "id": "1f80dac0-77a5-488a-8834-49286dd91300",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cbbb3333-5a78-4d9b-a589-495891652d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38777f62-6bf6-48e9-b71d-1a127d165b42",
        "cursor": {
          "ref": "efbb5e65-90e4-440c-911b-96f45b6a604c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e38544cd-68c0-4f82-b072-43831038b831"
        },
        "item": {
          "id": "38777f62-6bf6-48e9-b71d-1a127d165b42",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ebc648eb-fc42-402b-95ce-aa214f1fe490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c27de5-1e5f-4837-a088-f58a8496bdee",
        "cursor": {
          "ref": "2cf38c0c-68da-410e-a8fb-42dcb469bfbd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2bba4ba8-2361-46fe-afe0-b9d2dc5d2396"
        },
        "item": {
          "id": "80c27de5-1e5f-4837-a088-f58a8496bdee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ce8f4785-a3bf-4f72-8f96-88abcf05188b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03102fa-e2ee-4cb1-9168-9c3f0bc10d6e",
        "cursor": {
          "ref": "b7296c61-d586-45fe-9e8c-c9e7175d90c2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "573faa0e-805d-4a81-8276-08211ac0c3ad"
        },
        "item": {
          "id": "d03102fa-e2ee-4cb1-9168-9c3f0bc10d6e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0570f076-1721-402f-bf48-258fff9ee8be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dfb926-1dd7-482a-8abf-2f95bbf2aa15",
        "cursor": {
          "ref": "c1358cb2-e746-4898-a1d6-7cff8ea93b5f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f2228b15-b0a2-443e-a44c-dd4fb151c2ff"
        },
        "item": {
          "id": "07dfb926-1dd7-482a-8abf-2f95bbf2aa15",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82ebc45a-7825-4a8d-b463-a75cb93f3b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d3bba9-42d9-4b49-9eb8-a6243c5d7457",
        "cursor": {
          "ref": "86e82989-48c7-4d3f-ab17-b39453749c2a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "095893a4-d234-4f96-ac7b-383d76da31c2"
        },
        "item": {
          "id": "04d3bba9-42d9-4b49-9eb8-a6243c5d7457",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6092a53a-d9e9-4d5c-8e44-7536b4560482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65899fa-4674-4b32-9b35-8b86f84a328b",
        "cursor": {
          "ref": "4e939536-ecfe-4e25-bd5d-e88172595732",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f643283e-80dc-46a2-bc19-9a768210f904"
        },
        "item": {
          "id": "f65899fa-4674-4b32-9b35-8b86f84a328b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cdee4b11-0c30-4bce-aabb-037d6effcbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bc7448-738d-4d80-b3dc-63cb41b53e99",
        "cursor": {
          "ref": "4fce3d7d-8880-4491-ab56-1baafc7b2930",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "af4b5184-cba6-44ca-b9a0-585627eb5257"
        },
        "item": {
          "id": "14bc7448-738d-4d80-b3dc-63cb41b53e99",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "df400020-6afa-43e1-bbd5-b5525f4e8f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ab177f-66ae-443d-9526-ca71a70945bd",
        "cursor": {
          "ref": "6966a54f-3c32-45c8-a0b8-aceaac114646",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c10bf634-8fb7-4bb8-a41e-e8a376e8d278"
        },
        "item": {
          "id": "77ab177f-66ae-443d-9526-ca71a70945bd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "34e66e79-fd72-4878-b6ae-fd7ba22b82ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce6464d-093e-41b5-99da-bc1fa63ea1c4",
        "cursor": {
          "ref": "e29af4db-3d78-4e9f-b02d-5ea88706367f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ee3e512c-94be-4d6d-81e7-0a6c592e2a76"
        },
        "item": {
          "id": "5ce6464d-093e-41b5-99da-bc1fa63ea1c4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "934aedf3-ecbd-4cca-b040-b8bbf4ca4b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d317b089-4f9f-43cb-bd8d-edaaa805ef3d",
        "cursor": {
          "ref": "2c335efe-7dca-4ad1-a076-879171bdd882",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ba2b661b-b3fd-4fbb-bd76-489b9ae86acd"
        },
        "item": {
          "id": "d317b089-4f9f-43cb-bd8d-edaaa805ef3d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "96302b0b-02cc-4d07-b04e-68a77b0cff9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7695c6e-39cd-4abf-8286-6534b7371902",
        "cursor": {
          "ref": "318fa8ea-983e-40ee-99c2-3a0a99050451",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5378be0e-8208-4a0e-be32-443e6b2c9a16"
        },
        "item": {
          "id": "d7695c6e-39cd-4abf-8286-6534b7371902",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a84d38af-e576-495e-ba68-fd23af2b566d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12f8128-a12a-40a1-a80e-98fb3f1f0add",
        "cursor": {
          "ref": "9cd5f0c0-e2d2-4d28-95ca-7edee6fb6b95",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "996f4e88-d6b6-45e1-9e9c-6562ecaaf493"
        },
        "item": {
          "id": "c12f8128-a12a-40a1-a80e-98fb3f1f0add",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3f3d0be1-e348-4183-8603-5e7bdfbb4a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861c3e61-4189-42c1-a66c-ac5cfbba0a16",
        "cursor": {
          "ref": "2f7b1e38-cafb-441e-9934-b165c17c9f02",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a87a4faf-056a-464c-8e5e-f9a2090a7adc"
        },
        "item": {
          "id": "861c3e61-4189-42c1-a66c-ac5cfbba0a16",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "021924ee-6f1e-4821-ad48-e19235f175d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521cd9a5-674a-4548-a711-bf59d2ae7640",
        "cursor": {
          "ref": "0fdd13c7-5555-457e-b1cf-cd1b5fcb0ba9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2f965f15-bae8-4662-9bfc-e29d21569b39"
        },
        "item": {
          "id": "521cd9a5-674a-4548-a711-bf59d2ae7640",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b2298d29-b579-4d52-bfa2-c7b134e98290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9f27a4-80ad-4677-aec3-aca37c4d9c67",
        "cursor": {
          "ref": "f1c6b1a7-0f80-4da6-a049-91c683d707e1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3af17e88-8269-43e1-a7e9-312293f2f252"
        },
        "item": {
          "id": "5d9f27a4-80ad-4677-aec3-aca37c4d9c67",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "506630b8-2b82-491e-abad-ea9b688ae54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6456ebfc-7787-4e71-a485-644b259ef24d",
        "cursor": {
          "ref": "4e417365-db90-4d04-90fb-69204b900a26",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0c34cd3a-4828-4215-9387-8c0007c8ce78"
        },
        "item": {
          "id": "6456ebfc-7787-4e71-a485-644b259ef24d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "170ccd0e-2eb8-451f-8b3f-cc3129b5e068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f2b480-232c-4392-a2f6-7fa32bad9861",
        "cursor": {
          "ref": "132ee0e3-5dc7-4d3c-8528-49a012f1f362",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9c53b411-f5e2-494d-b23c-9b63e8d4019d"
        },
        "item": {
          "id": "60f2b480-232c-4392-a2f6-7fa32bad9861",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "287db1c9-ee03-48eb-a253-a74be32ddaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7cbece-8e8a-4598-9b71-c6f8eb8f1183",
        "cursor": {
          "ref": "2d197eca-d57d-4926-96cb-7027868c1a5f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "503b0e90-56ed-4226-8fd1-f0707903308e"
        },
        "item": {
          "id": "4b7cbece-8e8a-4598-9b71-c6f8eb8f1183",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e1618884-959b-47c7-87ef-da8442a9d23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71262cad-9a95-4af5-a1b3-3427d358ec88",
        "cursor": {
          "ref": "13dbca4f-e11d-428e-b9fa-98c8663c4a31",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dd76b296-ab81-44d3-ae53-d7ebe129f39e"
        },
        "item": {
          "id": "71262cad-9a95-4af5-a1b3-3427d358ec88",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "767dd513-cc23-44f4-af6e-d6364f4f20c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac94d19a-606b-4ce5-97f3-f73a77de98b1",
        "cursor": {
          "ref": "903941c0-d8fe-4878-9ecb-d15912865568",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d3803d3f-7e1e-451c-aac3-ed8190166f9b"
        },
        "item": {
          "id": "ac94d19a-606b-4ce5-97f3-f73a77de98b1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6a5baa7d-b161-454e-9023-bda85eaaa04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2465716f-d7b7-410f-a724-107401a8a58d",
        "cursor": {
          "ref": "f459871e-690c-46d3-b115-bac35e61181b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2bfc9d71-97cd-4508-a464-26558b084917"
        },
        "item": {
          "id": "2465716f-d7b7-410f-a724-107401a8a58d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b76daca0-9718-4e9c-a5b5-971225cce198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481d3c28-6fab-415a-883e-2d4cc177afc6",
        "cursor": {
          "ref": "f28dd250-bc00-4a2f-9000-fdf6a3aaefab",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dff63bcd-9a75-4255-92f2-a93305a526d1"
        },
        "item": {
          "id": "481d3c28-6fab-415a-883e-2d4cc177afc6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "73418e8d-0d1e-40ab-8f6b-f32349e9cfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3386389a-5716-4ae1-88d0-a69238863e71",
        "cursor": {
          "ref": "825baee9-b258-484f-9612-632a5c33b838",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "134643aa-057d-48b9-95c6-32044c6847e7"
        },
        "item": {
          "id": "3386389a-5716-4ae1-88d0-a69238863e71",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "67c9480d-6bd2-46d2-b4be-6af7d87ca403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439d7720-2247-46f6-a4db-25b1682f3b95",
        "cursor": {
          "ref": "ac31f794-7322-4ab7-bd81-9427b6258ee1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d164bc57-9aad-4f88-923d-bd46e66a753d"
        },
        "item": {
          "id": "439d7720-2247-46f6-a4db-25b1682f3b95",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d1079df0-9290-40a6-b9fe-ccd7b94334af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c97810f-ff01-4c08-bc72-db3932ac8f82",
        "cursor": {
          "ref": "81aebd1a-4a2a-4ea8-8b66-44645c1c8469",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "92a1e0e5-74ac-4a20-a9fd-d0e0359c9b84"
        },
        "item": {
          "id": "3c97810f-ff01-4c08-bc72-db3932ac8f82",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "41107a36-aef0-4860-9ff5-5b6afd532a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600ed5e8-91d0-4c78-accc-28df2f4980b3",
        "cursor": {
          "ref": "6944c4f8-94a3-4b73-ba91-0c987a8fdb28",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b63f6fa2-78bc-4a9e-ab5e-f40413692779"
        },
        "item": {
          "id": "600ed5e8-91d0-4c78-accc-28df2f4980b3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1954f00b-a3a1-4b0a-8512-f380a4473d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b137989-6780-4b7e-a203-04e4c11a681f",
        "cursor": {
          "ref": "ba6aa998-daae-4793-8f51-62f7af93cbdc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0f6bd953-b970-494d-a22a-f466c1572e82"
        },
        "item": {
          "id": "9b137989-6780-4b7e-a203-04e4c11a681f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c83eb1d3-1399-49d8-8eef-ac6681c45bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5a4dd5-66be-45a3-a9b7-b96ec813bf94",
        "cursor": {
          "ref": "5537f63f-61b8-4442-b987-f9dd5dfac20e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c4cc7737-ae6a-4306-89bb-2f58d7fce586"
        },
        "item": {
          "id": "1b5a4dd5-66be-45a3-a9b7-b96ec813bf94",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "643a1763-c18f-4bab-a78b-ac484ef62285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19307c4-8acc-481a-9fbe-dab7d8e19851",
        "cursor": {
          "ref": "3d410b85-7cf0-4032-895a-c465d8003853",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d7d250dc-1d61-4ca4-b38e-7dcf0e53d8d5"
        },
        "item": {
          "id": "b19307c4-8acc-481a-9fbe-dab7d8e19851",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1afd7828-d277-4a43-b717-c9902bfc5e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c765b57-55f6-4ba0-b0b2-e1d7fadbfa2e",
        "cursor": {
          "ref": "1db551da-375f-4adf-9983-ba2e5652d486",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e5910321-0912-46ea-bbbd-9e1f47169f51"
        },
        "item": {
          "id": "4c765b57-55f6-4ba0-b0b2-e1d7fadbfa2e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c945f641-83eb-45a6-9cf1-d213104b2d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdec6fb-5051-45d1-a6f9-1e1fcefee0d2",
        "cursor": {
          "ref": "d1be69ec-11e3-4df1-9d33-c6875bb63a78",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3ecc6ff3-4a33-4a59-ad8a-105c1383e035"
        },
        "item": {
          "id": "3cdec6fb-5051-45d1-a6f9-1e1fcefee0d2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7d7147c6-12b5-45a2-87c1-228be467d517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb1d94d-4de6-4ade-89b0-f1ffa3678b1d",
        "cursor": {
          "ref": "c64f2aea-f42e-42b9-812d-6778271831f0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "71defcbd-6f73-42d6-b23d-d070ee10b890"
        },
        "item": {
          "id": "5cb1d94d-4de6-4ade-89b0-f1ffa3678b1d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1ea79a0a-e13c-4f5f-a994-ec6f34cc21bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732a490e-ec02-499d-bd7d-36e9669d2bda",
        "cursor": {
          "ref": "b25475ee-8a96-4f6a-9324-77d8a0b68cf2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5a47d4cc-9d47-4bf4-98dd-7fe7beadb25a"
        },
        "item": {
          "id": "732a490e-ec02-499d-bd7d-36e9669d2bda",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d0665fbb-3f6e-4548-8118-a5488115ee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d2fcc0-061f-4ec3-8fb2-be2ab770a0b0",
        "cursor": {
          "ref": "6d41533b-df06-4e87-b6c0-fdcf90acb2a6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8b44042f-cba4-427d-b81f-08a480bb97cc"
        },
        "item": {
          "id": "a5d2fcc0-061f-4ec3-8fb2-be2ab770a0b0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ee035033-841d-4463-a366-b49cb9efd7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9ad2f8-b612-4ea8-b28d-e28531e6a694",
        "cursor": {
          "ref": "8859aa51-0da2-456b-be75-994065dc5682",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "90ad0f89-027e-45c7-8125-55544552ef9c"
        },
        "item": {
          "id": "8c9ad2f8-b612-4ea8-b28d-e28531e6a694",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "539c372e-9c0c-4585-abde-e6c97042d074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dbc4a1-25d0-4890-bcb7-4e8750582be8",
        "cursor": {
          "ref": "35989983-ca2c-45b4-ab68-738792a2c259",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b5afc174-cb32-46ad-aaa6-2dc957ac3dc2"
        },
        "item": {
          "id": "48dbc4a1-25d0-4890-bcb7-4e8750582be8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a7177f5f-fce3-48fb-91b8-490a180d3470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71964be-e470-4e5d-a4b8-7ee3b4bff498",
        "cursor": {
          "ref": "7c64137e-fe30-46df-acd4-89c871e32b80",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ba5c5638-bad5-4527-96e6-55b82e3a5a09"
        },
        "item": {
          "id": "f71964be-e470-4e5d-a4b8-7ee3b4bff498",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "31d64b69-0e20-4cc7-b8ac-e4d1cfc243a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ef6d73-0ac6-461d-9865-9f19ac2a6bed",
        "cursor": {
          "ref": "f5e93d06-e5c1-4d9b-a458-056296a36090",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "28236c6a-2f5c-4e8f-987d-8789efc51687"
        },
        "item": {
          "id": "d5ef6d73-0ac6-461d-9865-9f19ac2a6bed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1b98318b-fe54-482c-930c-6f275846ebed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5adffd-07d5-4677-a79e-553b995e36cd",
        "cursor": {
          "ref": "aa892ef9-c338-42a7-b77a-c200f5d930f4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "98321c9c-5340-4a26-9ba0-9913a3f45291"
        },
        "item": {
          "id": "6c5adffd-07d5-4677-a79e-553b995e36cd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1db384a0-3c74-4282-b2b1-203f0b1acbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2813714-3776-46a6-a2fc-1cdb32d18c41",
        "cursor": {
          "ref": "928d1f3e-6921-42ad-8f53-197dd638b911",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6f64a663-29e4-47ab-a33a-722e3c58ab54"
        },
        "item": {
          "id": "f2813714-3776-46a6-a2fc-1cdb32d18c41",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e4f36ef9-ab89-4c47-b276-032c1f1b4979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80260cda-6e81-45dc-afc2-b3037e24fa0f",
        "cursor": {
          "ref": "acdff600-2691-4ce4-9213-6c7244658351",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cd1a633d-a3ae-4615-9091-233a446ded3c"
        },
        "item": {
          "id": "80260cda-6e81-45dc-afc2-b3037e24fa0f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "09c60baa-f663-4fb9-a977-3979b5882565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40895277-a7d2-49f3-a2d1-cd9b06f87f1d",
        "cursor": {
          "ref": "7fe644c4-b827-47cb-94d0-ce9716f3d7ca",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "671f0a78-58cb-43b7-93e2-6a4a53a27488"
        },
        "item": {
          "id": "40895277-a7d2-49f3-a2d1-cd9b06f87f1d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a6ad8df1-e149-492e-9688-3507a7a3afad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6523597-4a59-4425-875c-00754cc85baf",
        "cursor": {
          "ref": "c81cfb84-db31-415a-b0c0-78ec3bc9b112",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b28176c7-ffdd-4f48-9b19-58227aa2fd7b"
        },
        "item": {
          "id": "f6523597-4a59-4425-875c-00754cc85baf",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8f3587c7-0bf6-4477-be02-f741679299e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aebbbe1-2ffb-4ee6-8c85-1cf102c33726",
        "cursor": {
          "ref": "efc819d4-af90-4e7d-a9de-276bdb031e78",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4bddf03f-f128-4f56-b434-922503904ba0"
        },
        "item": {
          "id": "8aebbbe1-2ffb-4ee6-8c85-1cf102c33726",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d204525d-54bb-42f3-872f-3585db54620f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e88fead-7646-4b8e-8c9f-ac7d0d8dded0",
        "cursor": {
          "ref": "8b02b1b1-7619-4b0f-b5c7-3d885bdb67ae",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "95d85c55-7fc5-4a05-8c67-45bb641e441f"
        },
        "item": {
          "id": "5e88fead-7646-4b8e-8c9f-ac7d0d8dded0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f59325b-62b6-44e5-a770-877f7800f347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50a2022-9fe5-4eab-84ec-21cbcb0fd6ce",
        "cursor": {
          "ref": "0a7c7d15-1df6-4e13-a3a1-fed7cc6870a4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b392d8b1-eaa6-4cd9-8b35-6ec50b0ee073"
        },
        "item": {
          "id": "b50a2022-9fe5-4eab-84ec-21cbcb0fd6ce",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9c7c1396-6883-4a11-b98d-30d331419609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a47616-3ae3-4aca-8fda-d0e499464f10",
        "cursor": {
          "ref": "0b9fd502-49f6-4ca3-a2bc-f9b8923aca5e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "91cba64c-082d-44a0-99d4-29f8f0f982fd"
        },
        "item": {
          "id": "b4a47616-3ae3-4aca-8fda-d0e499464f10",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "98b0dd13-921c-4a54-8f9a-cd8ab433a944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48a87ed-7f4f-4dd2-8e90-5050a6125bf2",
        "cursor": {
          "ref": "5d331e88-e610-4b6c-8117-a62ca82dca9f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6a641b3f-a0aa-45ce-93b1-2f2fb91b06a2"
        },
        "item": {
          "id": "c48a87ed-7f4f-4dd2-8e90-5050a6125bf2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cc015977-cd2f-4a29-aea6-45c196a93afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe6b865-f46c-49a6-9eaa-57cb04da8691",
        "cursor": {
          "ref": "4639a7aa-12a1-4faa-b66c-9334a56a38eb",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9e875be2-098e-4cf5-90ca-edc1c4076259"
        },
        "item": {
          "id": "4fe6b865-f46c-49a6-9eaa-57cb04da8691",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cf3cb7a2-9bae-47b0-947b-fed555fb36bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada820f6-3366-4cca-913d-a6556e079384",
        "cursor": {
          "ref": "4c37e4f7-13d0-42b3-ab9c-b134bfb543c7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "942a5941-cb43-4817-9c9b-45c138e9343e"
        },
        "item": {
          "id": "ada820f6-3366-4cca-913d-a6556e079384",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b2b842cf-2a31-4f2d-a162-9bafe78d62c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fe68b8-f649-4a0f-93ff-0b6379252e31",
        "cursor": {
          "ref": "25bb3532-188a-4a1f-9b29-65427ba3b5fe",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "457573f9-811e-4477-8364-7f7c9a4b3c64"
        },
        "item": {
          "id": "b9fe68b8-f649-4a0f-93ff-0b6379252e31",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c48f28eb-5451-4fe6-93c0-a8fcfe3239db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d85c5e6-1924-4cfc-a6a4-d30d07006f12",
        "cursor": {
          "ref": "6dac73fb-9476-47b7-99b9-b203e26994c4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "79f36821-cf4e-4ca1-a660-5a8a9aea6797"
        },
        "item": {
          "id": "1d85c5e6-1924-4cfc-a6a4-d30d07006f12",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "62de909c-b950-4307-aa25-8103c4d56822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcef4e9a-2ef6-4957-b5b8-fba839e8211a",
        "cursor": {
          "ref": "dc6aca04-ff53-4253-8fe8-174792149bf0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bee894bd-68bd-4373-aa16-7ac69569656b"
        },
        "item": {
          "id": "dcef4e9a-2ef6-4957-b5b8-fba839e8211a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3e545a13-d6fd-4634-bd1b-f1f7b0e17c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15645c83-19ee-498a-a66a-8b7caab641b2",
        "cursor": {
          "ref": "72fa3fe2-af70-490c-b441-c238eca78703",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2874d351-4675-456e-981c-1d6b8b1870c6"
        },
        "item": {
          "id": "15645c83-19ee-498a-a66a-8b7caab641b2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0a63eb24-f13a-4291-8be9-d07543c41543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3aa98f-4400-4680-afdf-8e2a62315746",
        "cursor": {
          "ref": "ba59dc45-769c-48df-9533-0b5490bf1445",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fb33a954-f3dd-47b1-809f-269e425ae6ba"
        },
        "item": {
          "id": "da3aa98f-4400-4680-afdf-8e2a62315746",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "68d7d4d1-44f0-4b37-8317-155a15976b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77c2c55-e648-4493-ab35-ec980734132b",
        "cursor": {
          "ref": "ef2ee917-5db6-4745-8367-3f9ea3d4d7c0",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "51b9578b-cfe9-4084-8426-6b42db950a67"
        },
        "item": {
          "id": "c77c2c55-e648-4493-ab35-ec980734132b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c4577191-a360-49ce-9247-d86193a1f654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b005baae-4b34-468f-8ccc-856f424be984",
        "cursor": {
          "ref": "c18949b6-c76d-49a3-b1e2-e50fe36046af",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1dd42fbf-f8c0-44ff-a30c-c4c6977ccdcc"
        },
        "item": {
          "id": "b005baae-4b34-468f-8ccc-856f424be984",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6152d3ae-f139-469b-8de8-54045a9a8d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef134477-ebdb-4f22-93da-791d191c6511",
        "cursor": {
          "ref": "fef2286f-2245-4b38-bc6e-0bbc2d757ff9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2bae543a-4191-4eba-9845-71726fe21aee"
        },
        "item": {
          "id": "ef134477-ebdb-4f22-93da-791d191c6511",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1c807982-f192-47cf-878e-28fa697df450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634db249-b9b0-4f60-a1f1-e2f2c00da385",
        "cursor": {
          "ref": "e10e9ebb-1923-4013-b948-9bd019623ca2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b12b26f5-7924-468d-9e8c-396b3dc7cb6f"
        },
        "item": {
          "id": "634db249-b9b0-4f60-a1f1-e2f2c00da385",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9281de64-da9a-4c64-8bb9-1ba747951e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb810a17-f8e4-4125-9abd-4304528b40b8",
        "cursor": {
          "ref": "7b0fc0a6-9cc6-4906-95a9-cfea80cf0b22",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7306578a-28d8-45c3-b737-4f53a6f6b1d3"
        },
        "item": {
          "id": "fb810a17-f8e4-4125-9abd-4304528b40b8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5cd0711e-0173-4237-8d22-fbbc4bc98cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d74ba85-b89b-4f00-b407-dda0c4720548",
        "cursor": {
          "ref": "02df4c91-626d-4d7c-94c4-1405c696a4f4",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "96b73a46-a87e-4aa7-b1af-5547b3b45c49"
        },
        "item": {
          "id": "7d74ba85-b89b-4f00-b407-dda0c4720548",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7380cb85-6833-4d3a-83e0-309fdf3d094f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922d0a50-7cec-41b1-ad43-4d27105d3543",
        "cursor": {
          "ref": "d7aa00e8-2666-499e-8af8-418ec0108f55",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "50295279-7cd2-4943-a9ed-598fb9895e0f"
        },
        "item": {
          "id": "922d0a50-7cec-41b1-ad43-4d27105d3543",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "62c54134-4192-440b-a4f6-f37e1d947bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a3814e-c230-46af-9ce3-d9a705b0bdfe",
        "cursor": {
          "ref": "db9d98b0-97e7-49d4-ae98-70dc0a87093e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9c470cba-15a8-408d-a277-4f1ba90ddd69"
        },
        "item": {
          "id": "10a3814e-c230-46af-9ce3-d9a705b0bdfe",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f6016cc0-d03f-425c-812f-0248b522b93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc290af-7500-4893-8073-183adecd2132",
        "cursor": {
          "ref": "71ffdeab-bb40-4451-9861-1c219be5efc8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "84202609-6af6-4368-b65c-1a7999bad379"
        },
        "item": {
          "id": "fcc290af-7500-4893-8073-183adecd2132",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0fbab70f-e5c7-4c34-902d-338530b5161c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac88a4-4739-41ab-a1c9-f1947458eee9",
        "cursor": {
          "ref": "433e4b83-5782-466b-b6ea-a01e9e117984",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b9c95bf8-6113-47b8-8f28-65c56f1fd8ee"
        },
        "item": {
          "id": "2bac88a4-4739-41ab-a1c9-f1947458eee9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9a43266e-85f1-4102-a52a-c941f65cf3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e8a342-b14c-4554-9e96-d138887c1373",
        "cursor": {
          "ref": "a847e316-f727-4ce9-bb09-c7b91dc56f7a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0e5aad13-ec90-4d3a-88be-bd00d8c73030"
        },
        "item": {
          "id": "e3e8a342-b14c-4554-9e96-d138887c1373",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2f2a6316-ce85-448c-8d84-82604394de93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86adbda-8d52-4ed9-a668-e00ac89ea25e",
        "cursor": {
          "ref": "5dcfc7c7-80d3-4c47-b79e-a2aa2faa0c72",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c92af01c-ba1c-4ce2-8075-1c3f9b0ed2c4"
        },
        "item": {
          "id": "a86adbda-8d52-4ed9-a668-e00ac89ea25e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a928c6a0-ba3e-4cf6-83f7-d72e7da9679e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259307e2-d6f7-48f8-a133-9efdb437c777",
        "cursor": {
          "ref": "85106a31-e742-4290-9a99-b6188c9272f2",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2f979733-13d1-4acc-aeb4-35b8050279f7"
        },
        "item": {
          "id": "259307e2-d6f7-48f8-a133-9efdb437c777",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "59ac3047-0848-45f1-9613-dd7bd5fc63c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c45f247-9bf2-4550-8120-11608915cb35",
        "cursor": {
          "ref": "37e0ec81-31be-45b5-b4b4-3dc427a00844",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c26473db-3330-409a-b874-20d706faf9f8"
        },
        "item": {
          "id": "2c45f247-9bf2-4550-8120-11608915cb35",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e8f13683-7cef-4c81-bba9-85d5a2408901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c39ff43-ddca-4391-b3e5-04c4b1baaa5f",
        "cursor": {
          "ref": "c69df524-5c27-4b39-aec7-a3c145c5dbd1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b056cf86-93d0-4d12-97e0-588c9c88b013"
        },
        "item": {
          "id": "8c39ff43-ddca-4391-b3e5-04c4b1baaa5f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6ef5d478-02e6-45d1-8849-fd0733b3820e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6eef50-65ba-42a1-ad93-1ebf05679ca7",
        "cursor": {
          "ref": "21f97542-eb6d-4aac-b899-7a55f65439ef",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a3da2825-8cd8-46a3-b209-42142ada84c5"
        },
        "item": {
          "id": "4d6eef50-65ba-42a1-ad93-1ebf05679ca7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "64615fdc-c330-4a2e-a394-0cc7762712cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895b5b3b-5a46-4d94-91c0-bf941ba9bfdb",
        "cursor": {
          "ref": "5fbf2d50-d7a3-474e-a6e2-a7532d37db22",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8f9bd3fd-84d9-4ed4-90c2-5eb3c514e851"
        },
        "item": {
          "id": "895b5b3b-5a46-4d94-91c0-bf941ba9bfdb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8b2fc926-1226-4de2-8106-88241fd9aefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e9b3a6-f7c4-4f31-a888-b36007e9f2cb",
        "cursor": {
          "ref": "b5fe0996-33d8-4b80-a939-f4764d35dcc0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b8d1d05d-b470-414a-b02e-125e4baa32a3"
        },
        "item": {
          "id": "76e9b3a6-f7c4-4f31-a888-b36007e9f2cb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5138faae-a71a-4f14-a013-6915fa9f2668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1c6cf0-9f93-4f50-9a2c-13c6535346d8",
        "cursor": {
          "ref": "15bfb03e-9e94-4a35-90ed-4d259309d041",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8c6df23-7247-4acd-8231-a2d6a280d9f0"
        },
        "item": {
          "id": "bc1c6cf0-9f93-4f50-9a2c-13c6535346d8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0944034a-b633-486e-b56b-34f2073f68f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4184553f-fe0c-4713-8626-43837a68cbc7",
        "cursor": {
          "ref": "e78316c6-a111-42c5-9184-8e59fc9bdcf1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d5fc56c1-78ad-4c7f-8eeb-46c1ee6e1c69"
        },
        "item": {
          "id": "4184553f-fe0c-4713-8626-43837a68cbc7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "38311dfe-e259-41c0-9669-01eb92251c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6cb331-d68a-43d0-bb18-6ed08c454bf4",
        "cursor": {
          "ref": "16968303-2fa5-47ac-a2e3-291f0cd961e2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "82847faa-72f5-4154-a349-710dfbdefa92"
        },
        "item": {
          "id": "8d6cb331-d68a-43d0-bb18-6ed08c454bf4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "93daf12b-e932-4baa-9cea-df50fce6c229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35110b41-9032-40a6-9ee5-c536862610ea",
        "cursor": {
          "ref": "edd247da-553c-470c-9b1e-00f9f8673afe",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "53ce9446-14fe-459b-81cd-423721c375bc"
        },
        "item": {
          "id": "35110b41-9032-40a6-9ee5-c536862610ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bc6a004a-9029-41c0-81fc-dc70fdc0fa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddf1985-3ea0-4759-bc7a-27737a783ad7",
        "cursor": {
          "ref": "72601fa9-b17a-489a-b4e4-49922bb9ba07",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b6ba4a27-2f54-4eff-9efa-d965f8960673"
        },
        "item": {
          "id": "5ddf1985-3ea0-4759-bc7a-27737a783ad7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a06a7abf-edea-484a-af94-62256f639e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979bfe64-6439-4230-8777-b244e27f5d12",
        "cursor": {
          "ref": "d90f9d04-0e2c-4dec-ba63-28ffdfd3a999",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "606b341d-f3fd-4f6d-8907-56a822695f2f"
        },
        "item": {
          "id": "979bfe64-6439-4230-8777-b244e27f5d12",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "717b4756-94ce-4df1-880d-97bb1028721e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b684cc-3ba6-46f0-b043-eba1b0e3a9da",
        "cursor": {
          "ref": "390b47ad-3829-4c1e-b495-5d1931e84cb2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5a601bb8-eb89-40ad-99b8-8cda4aa91d3f"
        },
        "item": {
          "id": "03b684cc-3ba6-46f0-b043-eba1b0e3a9da",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e943d14f-e27b-496c-801c-097be915c9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72171ed-fef3-4f1f-9741-c1c2b815b0f4",
        "cursor": {
          "ref": "d99b4442-6653-405b-8fa4-024851db89ca",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1422afc0-2109-4f87-9600-78348ce7a76c"
        },
        "item": {
          "id": "d72171ed-fef3-4f1f-9741-c1c2b815b0f4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7a1e0b57-cc70-436b-8637-a1b79f1d36f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1221c261-5b65-4e30-957d-c886e8fd347b",
        "cursor": {
          "ref": "5e244e7d-a114-443f-a8d5-c515e4385739",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fc4186f4-ac1d-4992-ab78-11866de040b7"
        },
        "item": {
          "id": "1221c261-5b65-4e30-957d-c886e8fd347b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a7894e59-55b9-400e-99f6-2f5a6d021184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e096b7-51df-4224-9e32-5d0728d521ae",
        "cursor": {
          "ref": "18395e4e-cb44-4be7-baf0-351c8f5153ee",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "45cc3362-963d-4fb3-a99c-952fc0b0e9c4"
        },
        "item": {
          "id": "e8e096b7-51df-4224-9e32-5d0728d521ae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b447c3ad-e5d3-43fd-9e7c-d60fecb69efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b381a-d2d2-41f7-96f5-f373f2fed069",
        "cursor": {
          "ref": "f62404ce-4c4b-48e5-a75d-fa6376a95ba2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d87df64-4ef4-436f-b351-f9c36cbaba73"
        },
        "item": {
          "id": "607b381a-d2d2-41f7-96f5-f373f2fed069",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cbe503c4-4c56-4c58-ba1e-acd91ea1660d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea53b37f-e3d5-4d6a-87e1-3ac89eb7b13e",
        "cursor": {
          "ref": "de8cd78e-8e9c-4638-b3de-1e7b17f59fde",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "795ea4b9-374c-45e5-8144-091673f017d1"
        },
        "item": {
          "id": "ea53b37f-e3d5-4d6a-87e1-3ac89eb7b13e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1a484769-1065-4c03-a823-2308fb778896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b07a67-5e0c-4e50-bbac-26fd977e7de8",
        "cursor": {
          "ref": "014bd881-be35-4dbc-87f6-df02bdc6b947",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cdb57b1a-a757-47b3-94c9-d82a01794378"
        },
        "item": {
          "id": "00b07a67-5e0c-4e50-bbac-26fd977e7de8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d1be0aab-5fb4-4878-bf74-861470bd7583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308dc6f2-5738-4b9f-99e4-f58e8d26355f",
        "cursor": {
          "ref": "71d54e87-7a9c-4f29-a29b-6a49d7707d46",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "963b67ad-1bb5-4930-857f-99333e1da2ce"
        },
        "item": {
          "id": "308dc6f2-5738-4b9f-99e4-f58e8d26355f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2871ccc3-2c12-4971-b838-712d3439ab28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ab732-fe34-4efe-9540-ecf92fefccde",
        "cursor": {
          "ref": "0a256de7-2ad7-491a-8c49-35483cdc858e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "539490cd-77bf-4dc9-9f8b-8d5630aff2f1"
        },
        "item": {
          "id": "6e0ab732-fe34-4efe-9540-ecf92fefccde",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "be1db1c7-435f-46f8-927a-5e4cad24df13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f689f261-6af3-4eb6-a8f4-2904bacf66b7",
        "cursor": {
          "ref": "40d8e92d-d285-4e2c-864e-ac10f40d29e4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f6b2033f-a392-4ad6-8ef0-9d1b4a1dfe6d"
        },
        "item": {
          "id": "f689f261-6af3-4eb6-a8f4-2904bacf66b7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "52776ffb-a6ec-4d9d-8cb1-f84b8b7ef04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397e83ed-c1e7-4fb0-ab37-1d95dde971b5",
        "cursor": {
          "ref": "958c80fb-d07b-4a62-b890-5fc9d90d3d58",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "94780bc2-2cda-45ce-9f10-46daf83b3fd5"
        },
        "item": {
          "id": "397e83ed-c1e7-4fb0-ab37-1d95dde971b5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fefd21eb-78e8-4d84-bc68-cd56e06aee7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ace29e-eb86-4a21-9b2e-c5ba06ddfec8",
        "cursor": {
          "ref": "d01267cb-764f-4ef1-9f00-16869a8bfac4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3ab74f14-8fd1-4192-8bf2-ea29d48cdc56"
        },
        "item": {
          "id": "60ace29e-eb86-4a21-9b2e-c5ba06ddfec8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4e2cf026-8bb0-46aa-9621-87b2144090ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a15919f-d471-466b-a6a0-b8e0611ccca7",
        "cursor": {
          "ref": "306ed12c-55d6-4eef-b2e0-70d9dc8c4293",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f3f55e6b-8b1f-42e7-b0d2-7f7653f6df64"
        },
        "item": {
          "id": "2a15919f-d471-466b-a6a0-b8e0611ccca7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e473fa2d-bd61-42fb-965c-f8a9603c6881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21426cc-7cdc-408b-a1b2-83a38e09313f",
        "cursor": {
          "ref": "9b7e1297-b049-4917-9ee2-3b7bb39395ef",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f1b8ce36-d72e-4d55-8d7f-fdf47169835b"
        },
        "item": {
          "id": "c21426cc-7cdc-408b-a1b2-83a38e09313f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "976ef1bd-7ef6-4082-9ce5-a21929a70749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f896ef-4f31-45e4-9f50-644443b06259",
        "cursor": {
          "ref": "dd810dfc-94e8-40ec-b95d-851e95d73965",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77983620-ca74-4bbb-b65a-b152cfa1e656"
        },
        "item": {
          "id": "26f896ef-4f31-45e4-9f50-644443b06259",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d2f34960-9d12-42db-82e2-478f703dad46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4d7616-de09-4e68-8df5-5c3186a2df97",
        "cursor": {
          "ref": "cdc8a7db-b4ea-4cf5-9947-92b1c383291e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cb5d918c-c3c1-4870-9af6-1503a4ee7265"
        },
        "item": {
          "id": "fd4d7616-de09-4e68-8df5-5c3186a2df97",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9078a3f0-8e6c-445b-a363-6253b7f1f3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9475e8de-d9fd-407b-84cc-e1f68f1d37f0",
        "cursor": {
          "ref": "9c3813b1-d343-4b57-9b4c-82bdbab8df72",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f19bd28e-302c-4ebf-81ca-c59a37300123"
        },
        "item": {
          "id": "9475e8de-d9fd-407b-84cc-e1f68f1d37f0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "563e05a2-89a0-4548-a1b7-51a1fed57ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785eb9bf-4bf2-45df-898d-e6322df00719",
        "cursor": {
          "ref": "abe13837-efe5-42ce-a6fc-222b9eed8afb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "be508195-d4d6-441d-857c-84b8e083705f"
        },
        "item": {
          "id": "785eb9bf-4bf2-45df-898d-e6322df00719",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "48cb367d-1e1f-4d8b-b0cc-664e402a8652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168715e6-6f39-47e2-a75b-006aa0aa2346",
        "cursor": {
          "ref": "e36a911e-3744-4339-bd5a-86ffc6e6a77a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6fb53507-05bc-4e93-ba53-6ef3d6a75f71"
        },
        "item": {
          "id": "168715e6-6f39-47e2-a75b-006aa0aa2346",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6f3474b9-6adb-47c8-9d39-5b068b4deaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9809184-6126-4d3f-b936-43f9cef19659",
        "cursor": {
          "ref": "d6565725-8377-4ed0-8461-8757eb61a53c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bee54e07-0d1c-4e78-a058-10f5a6f09824"
        },
        "item": {
          "id": "e9809184-6126-4d3f-b936-43f9cef19659",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "97491e98-5bb7-45e5-9bf7-d78bf1957e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cad191-3cbb-4dec-9f23-d33bbad4e322",
        "cursor": {
          "ref": "a38461f6-c06c-498e-a3f8-b198b7480ab4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dbc8e88f-6d68-4cb9-acff-be1d99c104c1"
        },
        "item": {
          "id": "22cad191-3cbb-4dec-9f23-d33bbad4e322",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "52007f8c-b570-4029-a6b8-bf8474bfa04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d172b9-7697-4d28-a321-12d287a49f14",
        "cursor": {
          "ref": "d80a22a3-8ed1-45fa-9795-8b8ef5c0bcd9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ddb38644-f50f-4d12-8ca2-346e22246fd0"
        },
        "item": {
          "id": "52d172b9-7697-4d28-a321-12d287a49f14",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "89591940-1e05-4ddc-97a0-4abf355a542f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b076583-e75a-4df1-94d1-d3fd50d2bed3",
        "cursor": {
          "ref": "f39a8c52-140b-4894-8b92-bf7ed2effc44",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4baf60b5-812e-4e0e-8de7-c501bb238a19"
        },
        "item": {
          "id": "2b076583-e75a-4df1-94d1-d3fd50d2bed3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ea5d386c-fc03-4d22-81c8-07d2e657fa91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "6c401381-bc87-48a4-bd29-d79b08bc9027",
        "cursor": {
          "ref": "45ddab3d-4db2-4cca-94a3-98c854fc89e4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0b8d1bb8-78d0-4db4-b795-7c90796997c9"
        },
        "item": {
          "id": "6c401381-bc87-48a4-bd29-d79b08bc9027",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c1ae7507-3949-41be-9947-4625233fe9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "78c50559-50e7-44ff-aa80-7914f1233bd7",
        "cursor": {
          "ref": "84aaa15a-8786-4bdd-bb05-ec2cf59ca95c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "37cdaa58-57e6-48bc-93ad-e19842fc7ddf"
        },
        "item": {
          "id": "78c50559-50e7-44ff-aa80-7914f1233bd7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cb3271cd-8f20-428c-8dd8-2b8c263cb202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "0276b6be-dcfc-4f2d-ad41-58bad7e5ca17",
        "cursor": {
          "ref": "57c0d988-3580-4cb2-b29e-d35bd611bd3a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6e49ee60-9c29-4f23-aa26-aea45390d051"
        },
        "item": {
          "id": "0276b6be-dcfc-4f2d-ad41-58bad7e5ca17",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cdfd2e59-32a1-4829-98a8-f941b171de65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0276b6be-dcfc-4f2d-ad41-58bad7e5ca17",
        "cursor": {
          "ref": "57c0d988-3580-4cb2-b29e-d35bd611bd3a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6e49ee60-9c29-4f23-aa26-aea45390d051"
        },
        "item": {
          "id": "0276b6be-dcfc-4f2d-ad41-58bad7e5ca17",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cdfd2e59-32a1-4829-98a8-f941b171de65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8679b2b7-6dbe-4a0d-bce0-72ad77dd40f1",
        "cursor": {
          "ref": "4f8d21cf-46b2-4f11-9a9f-e5253c1f2595",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bf928928-40ba-4b2a-90d1-5948734ccfb0"
        },
        "item": {
          "id": "8679b2b7-6dbe-4a0d-bce0-72ad77dd40f1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "33004cf2-f8bb-4890-82f7-04de15fa2239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd86dd6-1d2b-4e6d-befc-0ed96b0f1355",
        "cursor": {
          "ref": "6474f4f0-61b0-40df-b861-eaf75823a31a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a97a41d9-e641-4a47-9aca-b59d7fc0dab5"
        },
        "item": {
          "id": "8bd86dd6-1d2b-4e6d-befc-0ed96b0f1355",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "579c12aa-aca4-4758-8d36-88998f117924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}