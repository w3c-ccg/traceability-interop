{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5db356ed-e28e-4e0f-a4c4-659ffcb3b480",
        "name": "Clear Cache",
        "item": [
          {
            "id": "319f9ca0-0e8e-468d-8ecc-b5b792c013ac",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "190f75f2-91c2-4f17-98fc-b4ea07877556",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0b9a359c-c7b4-4d0c-8523-359e7c13e1b0"
                }
              }
            ]
          },
          {
            "id": "95015421-548f-4dc2-8f70-2d8ad0a7f759",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f77a88ee-9535-49db-b120-eb2d5afcf4fc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5a82c190-c472-4711-8d46-b495080ad3b2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8911f449-9996-4096-b9f8-95d64ed28b9e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a015bde0-3314-42bb-bfd1-28ada6d1fc03",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db08fc06-54a0-4357-8fff-93f6089efd81",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d0d1a77-8e88-40f4-90cf-971260e9bef4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e642ab6c-43d7-4ddf-9f36-ae6f540c637c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dad1a0ab-a968-4ecb-afa1-7cac1f7bc47b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8da78b48-7f3f-402d-a444-f3b0ed256540"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd31b4ce-570b-4017-9f66-655a16aef832",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b85c4018-2f83-4ce0-b9d8-730ce7babc44"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65ae8af8-499d-4796-b01d-59466d428fe6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "143c27e4-243b-484c-9901-be95d65c5107"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31850a4f-da6d-46e3-a00b-c08646155497",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd1474f9-854a-44f3-a83c-ccb7cea793cb"
            }
          }
        ]
      },
      {
        "id": "982bb7be-7b40-4030-a1f9-271f9ee61d45",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "efb47c36-4fb7-4a5b-a35e-80b13084a2c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63328fb1-2b5b-4313-a762-079031a2505e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4cda8c67-0768-43f5-9926-f3b0a9233488",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ca6df7-dbdf-4735-81c2-234d503fd1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abb49cbe-491d-4191-9d81-54a2c84ad6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca7783f-506c-4761-87d2-c8b33e6b1099",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23384271-945b-4df7-9580-912ea9c00605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e00ae10-fb01-4cb7-91bc-a244094a4347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfe3d03-38e2-4d96-be26-c364b5df209c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8955a96a-a49a-4ac8-87de-05c53916e725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a841f32a-eff5-4852-86c9-61e8ddcf18a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c832f68a-aea8-4a1f-acf7-4299a8a2b112",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "572bb9fb-6ff8-4bc1-95d1-c8ea7505af39",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b007f9d-4e04-4a22-bb43-93f43549e0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99192be9-76bb-4873-b81d-4e85da767099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b6eafd-79f7-4a68-8197-4b7656f9cdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e3d370-7612-45d0-a21d-9f60f35df0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3c2fad-0a4f-40f6-82f6-70e31b25f130",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f654202d-a208-4acb-b4fb-ff33aed382b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48a69b27-30e1-4c69-8593-807d849dab30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bb5b50-0362-4c30-b940-5ac2c20af354",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "7c00fe22-2c1b-4ace-ab59-62f76cdf94c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af880703-b2b4-4558-9ae5-c7f06bd91180",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72525cc1-33d0-48de-8dce-df98948c0548",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd3b1827-501f-4afc-bba0-0d33baabdadd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9a88e474-4d0f-4237-8600-2c3a00f2d5ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ce66bcf-59d5-4a6b-8b02-b0293dd26809",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0ce50d8d-9ec8-4f3d-a693-58622ab695e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e599cfc-cc31-49dc-9e3a-cd61b1c8cbd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ab601ec-18a2-440b-a788-663fb9427bfd"
            }
          }
        ]
      },
      {
        "id": "7904e777-eb1b-493a-85d7-21aa9bc90033",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "77566f03-c566-433e-9827-8c3853939c30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f546ae8-311c-44d5-89b5-840e913b6ff5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e1bd1e26-fbe3-4927-96d4-7d4f842b02f2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fabd7a0-abe2-4ed7-8936-81f0a89eb78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274bd3bb-a281-4dcd-b97e-fa163c49728a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e15329-c0ae-4d75-854d-467e51d31f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cefcc377-5f22-46bb-a8d3-b1797ee2dddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a33883a-9907-4112-8226-f7884f5abbc0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe1a335-dd7f-4a0c-9152-b4249ca2390a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25f6089-3f86-43a1-b436-28717cc47329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f5d9af-552d-44e0-a1f3-311a51b29bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76eb39a1-7384-4dc2-9172-dcf3608abda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c57a6d8-f1f0-48f8-8372-6d25961766ea",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aa3844-43d1-4392-b2dc-ae17796e3398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baab2b00-4e53-435d-9cca-3ecf0b335bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9d19dc-4ce5-4fe6-bbfb-4f4669621a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "025aee78-1f3d-4b4c-a0c8-a8f98c818d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57caf42-f291-4323-8fdb-78d086c55084",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d51755-d260-4428-8618-3b2236107192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb906954-0d3f-464a-bf1a-0e84e8538448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654068d9-7d90-4637-950b-d39b9db28892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "642e81b5-fae4-4c1c-81f6-b1da11fc5a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150183df-e51c-4170-8af4-2c92d00623ea",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1efc777-be93-4867-9221-e267cfec856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f1e02f-ad7b-47d2-9b46-ceb336eb90f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7119ef6a-341f-4385-8a5d-a8f751987cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57b112ac-030d-4900-a386-a91859e905b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3ff888-fda4-49f4-9777-61daf8b9c902",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4aa528-715b-4d90-a994-9bb07169d86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cc7398-b39a-4521-ad50-50a183cbfb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216986e1-01d5-4cd9-85c9-dea2b765f95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79cd293b-5f80-4104-b14f-c375f037fd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b64727-e629-491b-b1e2-bf45a5b3727c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145b0c3d-ce9d-4ae6-ac88-34d0064aea2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb582c0f-72ce-4ca3-90b4-799ceda4dc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e61874f-dc6b-4ebe-8351-8d95c87871dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "824ab15c-a233-4e99-b850-1073ccb1b1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9d5f0c-c372-4234-a139-58ad53f9fe44",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50611a35-646b-405b-ba0f-65b5c19384cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9feedaa0-1ac2-4042-8824-98fac580d455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039fa11f-4dde-41f0-b21d-957bd8ef4c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f30bdb69-ccf6-48a9-bf15-2f7c92325041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc6a39a-0127-4822-82ac-a52acc798d9e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc91f24-f988-4200-b539-ffdc035d1f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81449f58-1011-4292-b4b3-7e27aa8fa0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ad7c04-ede4-4d35-9054-dfec57d46c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9c7ff4d-21fb-4775-a249-f082425ce51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e10aa9-77fe-4af1-9ef6-f724e38aaa6d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1577ecf-0ce1-4f12-877d-fa3ac948f617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88d29f7-f0e9-4174-a7a1-8c3e99c4ae98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462327dd-afbf-4913-9224-09bf5de516cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62cda2db-f2f1-4d6b-bc39-c66398054300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4320b50d-8d1b-4c60-b4a6-281da2f4f79f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eb8666-7a87-41cd-86f1-dce8e3216b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafdb12d-dac7-4fdc-bed2-e1b32d5c3103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d6e601-312e-4589-a639-f5d73f2694cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a064c85-b211-4efc-8c28-b03a19cf75b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f34ae2-5f1b-4830-b44a-65eb9f346eec",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31600be9-b732-4f2d-8f7b-15e3e274d40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa40d4e-c110-4560-a676-fcd66de1b055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea947144-c226-4cd9-966e-66cd91f62782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61f805a3-ed3e-439b-b91d-b6de7a221bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28876bd1-63e2-46a2-93bd-8c2dcd1317d1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c66ef67-eb4f-44ff-a009-508b714b0a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349aa129-c2a1-4445-98d2-b5308bc63b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d42ed5-9ae3-4550-84a8-03cf6b79c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "507608a8-ccfb-4e62-82c9-0e7a64a10e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4208165f-4650-42d0-8be1-da1d4182c7a5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503b0b1b-94f1-464d-91fe-ab9c15799f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2358a386-96c7-45ac-b477-324f458ad399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0d64bc-44a9-4a73-a8fa-050f1aa522bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6598992-3fd9-4d5d-af2c-4a5e85ee35b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7566c027-d901-4fc0-97c8-dd5a34a9cd73",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7b8ca0-b6ad-4d7a-9127-513de8e75088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee65b630-b552-42e2-a52c-2c9dd0a26a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c5c156-44d3-4472-b0cc-67e649010187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcc0e1df-6cfb-4655-b349-947ba797ee95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f383ead-d194-4a45-a3a5-520e11517fda",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce3664e-1b15-456d-99f0-8ec2d397d75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66dd8ea4-3e4a-44e9-bc28-f4c4c501f5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dda6074-f4ad-4d53-a833-dc2a06e80856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c81cdfdf-5e13-4bb7-903d-fb1cf7dba58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15432e2-ef4d-41b0-a0c8-06b63adc573e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb74c6d-ec38-4062-a8c8-6cc297941924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a038a359-8a30-4546-a0ff-dfd54cf408ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee692ead-be95-412a-84a8-868b8815104f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e6cd61c-68f2-4676-924e-f00eadac57b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6bd248-ba2e-425a-b988-1bf40def9e58",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9111d987-4146-4980-8442-d950f2937963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d99d35-1b62-4acd-81c1-f26c714e01de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec7adeb-2272-4a42-9131-596bdbceaeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "00853ae3-65b1-4b28-9ea5-9e5acc66a4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd1337a-f4f2-461b-9529-2b0dd0fb31a9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e3a7c6-2b97-44b7-bf9f-2a421d35c69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15614e7-54c6-4bec-9734-a10f7e9487e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a97a0a2-2a70-4533-b358-54ad4662fbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5569f60-33d6-47b0-9fed-99188bc6e6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac17f92-ba57-4700-9ccf-221a3c36553e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf347a8b-1d4b-4926-92af-0ce55d070b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19a7bbb-a374-46a3-be1b-3c08eeb83c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32feff7e-ad29-45e5-8043-eb7fcdcda1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33e54e3-05db-4ecc-81bf-8b4464c86ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc20e57-82c8-4e01-8db1-e57c39e2bde4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce8842e-0864-4bab-8f8c-21bd8c83bc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6418d8bf-475c-455b-94a2-d7dcac059104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd90d31-05ee-4110-914d-c7171c415ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1e4c50-7f4b-4999-994f-7a4623a44530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa18d33-c347-4d93-bcd8-2b35afe0dfdd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7253572-ba77-477b-a587-05b79d397620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a604ee86-e053-4e2a-b63a-016e8a225853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751ac912-384f-4a9c-9619-a1f3cc00ab21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39c9b0f2-b3d4-4da3-bcf6-7bf3e50258c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ade1aa6-8fa4-4a0d-b05d-38ffa4b79e87",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc287621-0c94-422f-a9a7-b819809d06c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd90f61-71db-4b18-a15d-34e9cab2936e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a9d2a3-12e6-490d-9e25-e1666fb0e630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b7cb8a-c4fc-4faa-abac-5e4963291c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db29a5a-d67b-4fb1-9d84-7503278e8a9b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cc8a87-6202-4fcb-b27b-5c914ea4d846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bdd5d9-5049-442c-af4a-a84591683214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd1aa1a-82d9-4c26-bc6f-7968e04a6434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce77832-1c1f-4456-93a7-26e1b3827fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a339a15-ce7d-4d5f-a314-9079b12cda66",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63f9f8a-706f-4a9e-88f0-3fd93d9354a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae48817a-62e9-4e2f-a044-525233ca14e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445b5dfb-00e2-4bf9-8662-b37c5901f28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e954d6e8-6a89-4be3-b91f-81acbbc4526e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5895e21d-2d4a-49d3-b1b8-122ea15ad7e7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bb06d0-f7c6-4ca5-a8e9-25c993111230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6248c3-3f23-4dad-b590-95122e3fa1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c21907-8204-4735-95fc-dded849562d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3514a14-aa53-4fde-a490-edda2074a5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213d7c7e-4cfb-411d-9298-b2d6ba183ee3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5aecc4-b3c3-491c-8acd-fc196287f1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6babdb26-0cb1-4fde-8235-27876107fa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65416ded-d217-4327-bdad-b09114bdc8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f7ca95-8459-4e95-b5c1-6f4a48e65453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4efc0c6-d888-44ba-84fe-1bf8d7352f2f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063baaaf-a600-4147-98ef-cb552294b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c880051-0196-4638-9217-ccebd9e0e8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28fb82b-5036-4060-96aa-f1ed751ae66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2987ef7-8b8c-465c-a293-6c61a9e317d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248fbc88-84a3-4840-b12e-b8285e0eaaa7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf3dbe8-dccd-4fce-a3f8-9a1f402a6652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f41324b-3e13-447b-add0-d48352891ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7034d10c-8c69-4887-b24f-40ba153abc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab301bb0-de94-4edb-a5f5-29c5073027d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f5581a-b16d-491d-a22d-e7acab56838a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfb99ef-2eb7-4eef-8331-5fdbbbb8f961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25977886-b839-4d2f-a4c8-84d3f63e740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae293de4-893d-4004-b1db-4bcf1b4f1145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e361749d-ce2b-423a-8f26-72bf7b641cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20413cca-05c4-4872-85d4-d2dd3c92a85a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8f2c24-86cd-4442-ac1f-8e8891d13b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1115736e-68e5-46aa-bc5d-723e7e548794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c7570c-279c-495d-9ede-72fd334f0edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f6ec8e-f484-498e-aae5-310e1442b255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b578f6a7-3a0d-4b1d-88ca-b00d592e1ac2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c5f873-04eb-4386-a27c-f0cbbc78b649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad9f377-3d0f-4365-9b7e-cd0316296daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cfe9d1-86e7-4bab-8d50-6227ae6741b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "470c66dc-fa45-4f19-8204-a4dfc6a585a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598d22ea-974c-4f41-b616-feaac32f25b1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0dab55-e3ad-4a1a-8cd8-4daefc37f7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8edbaf-3f8c-4dc9-883d-6b7454b149b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a69025-5a3d-4a34-911c-f2014415ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d3384f-ab91-444e-9d91-8dea0dc10971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e205a14-23f3-4319-b668-8152744907b5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ddd338-a447-401f-ac22-7c693ca2f899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b12844f-e99e-477b-adf5-6b6ef82520ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a526e2-7896-4d4e-935b-eaedaf07fce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a6403d-b431-425b-aa20-0095ed83b29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e87d7e8-8cd3-4aa1-bc7b-0fea811a526e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e726d0db-9a1b-451a-b24f-5fa6d35afc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7148f047-5cb0-48a2-a240-0195a0f43016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83084870-ee45-4bbc-b79d-64960d58d25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b63f292a-4a8d-4b48-8578-f236f669be19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70ee673-7f26-4033-bd14-42ab43f46c4a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059f5181-5e4b-4124-82b6-8ca62736aeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f154e62-9545-4e1e-b79f-25781ce740cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a9f16b-613b-45db-b1e7-85f49ac9f3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "631480b4-700c-4fc0-a5aa-94712148c6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85272c22-1509-4f3c-b8e1-67ea34a7178d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4060f53d-d580-4f36-8aad-ce8191f06874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad384f2-4dcd-488b-a356-dcbb26f00547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e5bf96-4fea-4e32-a880-45b6e6869d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65f20bc3-478b-4ec6-bb38-2d63c6537258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0e22db-4515-47ab-b70a-b8d420bbc084",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdbd1de-92cc-4427-a102-0cf81df3baf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b9a59e-97f1-4a1b-a7c9-9f48bd39f077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f529f955-b4f8-492d-99ea-ca613fbc4bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "829aa64b-4e58-4a58-8dd8-8a6c8624acce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c85690c-fa41-4cb4-9f94-2407046e3cd4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48ecd1d-b17f-46cf-9da3-07314591fe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0475a168-4efa-492c-b6bf-8af884566796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a614f890-46cd-4920-9366-9dc5685a421a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "403efbcb-1f17-45a6-bd7a-0b59840fc37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee041c4-34e4-46e0-a67d-6c8f5b0c6633",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eaccf8-31e0-477c-897c-d68e313cb6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2b35ac-69d1-452d-9ab4-91d41ee4c571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65befe51-66f1-454b-b0a2-89b59f707061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69c516aa-385a-4f8b-93ee-109ef2fd7ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0016e7-eef0-4feb-a3a2-e472bccdb678",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838bc14c-8ceb-4e2e-b55a-383a2265a003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2aa16a-b29d-4a64-8e69-a254175d3d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6c1a86-bffa-4897-9480-14de68f64f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1d21e4-bcd5-43e6-9f08-9d2a65bb71c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d719d1-32f9-4b74-b575-f0fe15bbed7c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed96ca4-3a84-46cc-af36-bed59f60ded7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3a94f8-3ce4-474a-a65f-f1696d5d1b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e1699b-2d23-47ec-83d9-aae6cd597b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e6ea1b-8d3b-4808-8035-664c00278efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a464b3-a896-4825-b15d-f8007e64e134",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7cf017-a73d-4d3d-894a-ee288d4f3526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274b861b-5cfb-4215-879f-6bf38930993e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d202dd-c75b-417a-a45a-c5a921e1945a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c926fe25-0ee3-4fa9-95bb-13f20b006ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a387f7-1f96-495b-b0c8-8d50ecb5a470",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d4d8c3-c398-4660-8972-2c11059e2f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3f9fe5-83be-4f32-8990-27ed8a0ed1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6709075c-72af-47eb-a319-c09fc67e7a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4627934f-8cd6-41b9-bc71-fbc6e8ae31a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e82f44-a4f9-4ca3-b69b-bb1f9eb3ce4b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694d6295-7b61-4d1a-9e4c-87cc892d818c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44128996-3ad5-4ba6-9242-8367514b6ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2a519a-4647-434a-bd88-90dc67d682bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed7ccfc-d654-41fa-8b64-c236e6ba6816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4acb616-ff75-415c-8062-fa83ac691a07",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc085bb-4769-4393-b72f-11c0268fe8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31754a22-4cb7-43f6-98af-7b5f522ca0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4239138-560c-4939-a571-861f6809c378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d6669e-323f-4f6b-9290-2adba116ed69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d655440-c547-4faa-813f-ad2ab0009399",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2037d198-4be1-4b4b-ab38-7f659b06a304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a102946e-d8a0-465b-8376-bf24960cfd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c119ce78-7277-4007-b2e3-42ea6919af4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27ac534-ba20-40b0-ba41-0a10fa739c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73160b2a-1c2d-46fc-8a06-eee21e2927d6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f9e844-7385-4403-8608-9dcb4e41cec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846cc864-36a3-475a-b841-83cdc09228cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e3f1b1-6951-48f0-af7f-5305945fe3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "613a8714-9596-45d8-97a1-d7550f925b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812d4e43-8d83-410a-bf18-0e1cb5be6aff",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efb95f0-164b-4e49-8cc0-ce1025e4eaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ab9bd5-26f6-4d6a-bf71-8ad0bc291bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c46de8-970a-4e20-83f6-574452caae91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d08b6e62-2387-457a-848d-315cd8a8f1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51394777-ae93-4c25-a822-ac960ea52dd5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97618950-6c83-4af1-99aa-a844ac7bb47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24eb199-a4b9-4350-861f-1d4a226b58a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d13268-02a6-45e2-a790-643ade1e0788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "439bba03-ce3f-4fbb-975e-118fdb21dbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44bf1b0-3f9c-40f6-a4d5-a1947336ed04",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3162d2-98a2-4c8c-bc22-a53f6ffa29a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f30040-6b4b-4a05-b3e3-ffe03b8b5ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab470e2-96f1-4ada-a4ba-96c00bc70509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d48ba617-945f-4390-8604-9f8bb47efcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6779c25-d1cd-44ee-a2a0-93aef204a677",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7607c15-347b-4d9f-95d8-2e89d691e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a985b2a7-53f4-4344-8c9f-27dd7a707d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d07ef4e-083b-4ecd-9acc-802af45cb030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec9b0bf-580b-4cd9-b975-5e79d918a494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c094294-ddcc-4025-a004-65be292f3081",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8030d673-b8de-432d-b5cb-3e56bad18c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e900b02-66cc-49b0-aba8-4349472bb5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1fabd4-4440-42c8-b669-8629d749ec81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abcb9ce-0c3f-4763-962a-ccf98ec807a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d14c97-63b4-43ba-bf99-c1bbca882330",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d8daa5-caed-4b5c-aa65-44ede189f3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350931d0-1b73-453d-9628-f28fe6dea45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076bea9d-aca7-449c-b922-c6e84a30296b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7f3870-b855-421b-8fe5-aeea924870f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a8c290-70ab-4bc6-8f0c-538925d92bdf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e724823a-585a-46ac-bf8e-456622ed39a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ca3964-2b82-42ad-8d04-ac9979668a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73130cb4-8d0a-4219-bfe4-4911b130ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eb6953-4d4f-422d-8415-891decd2920f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623fd753-9e2c-48de-ba54-bd7de4283c30",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f62f04-5c01-4c9a-841c-129b7747aff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cde8b7e-205e-4b93-9f80-e1682c3996a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf09a6c-5057-49d4-bb12-0d4adc4812dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9308a0d9-b695-4ae2-ad90-71997eebf3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6495ad83-e7e3-488b-907e-3fd3a136b7cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50251ac-8416-4bbc-bb7b-3028b9b8a077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db142f30-862e-40fc-a6c3-fdbaabdf016b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8458c36-1753-4631-9b65-12ed64124036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0035e3d6-501b-4f51-9af9-a78dd2a54cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baa3bde-d5cb-4a5d-903c-91c17ad05d02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff06b23-f3ac-4618-b285-9239a9f1874e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a2dd65-5090-4ea9-8fed-6979b503076c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb7704e-6e01-47a3-b4f9-26792a9ff670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a354ebe-96cd-4eab-86a0-97c99f876a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1422dc09-902c-4d58-b052-5ff6810962e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5dfc62-7cdc-4fcb-a022-7e4b323f8c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c8d901-7bc2-41f5-8815-bed2e79f7015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2496ab28-3b38-4862-bb17-1e895d44e602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b115f36-c7a9-4fa5-97c5-8d8df7afc3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9894639-6bee-4264-a791-406a65debd14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa5882b-93a0-4ddf-ae88-9411444d2acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b33443d-46cc-4687-a0e8-489e75b9d345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a957d4-0c35-4837-8041-ff948880a4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f36ec7f2-2ad1-468c-bac4-79ef63df2cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceeca60-5a56-418c-af11-cc9bea9c819e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbe15de-3324-4ce4-b041-927eeb8efbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a20281f-06db-4dd7-aeea-5d154d745aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40401d1b-f26b-42af-8371-a5ac4c1daeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd0aa4a-037e-4af9-bb63-7f7a2a6d2cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2c3e97-a734-402c-ad23-e8a1da3cd374",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc632e8-c7df-49f6-b7c6-6d4147f3b7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5caa0af-62e8-4ef8-834b-b775c2901d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ff5924-17b9-4b1a-8ddb-a6949b84410c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea842835-4268-4644-bba9-8acad94c9cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa3ceba-d090-486e-acd4-a291fa93a43e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86434775-ead2-4bdd-b7c5-d3ed4d1f8ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e606fb93-753b-47ef-9468-7abcd5c0baeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9d2479-43f7-49d3-bb75-56e5c3c8bb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f43ebc2b-cdc1-4a52-8aa1-d0709e4c8a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e680c3cb-2bcf-4ec4-b9a1-53fde2b938ff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc224e1d-3904-4566-a6ce-aaaf315a2333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4688044f-5a26-4551-b0f7-2a49eca67c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484d4fcc-bd13-4635-9a96-8b55a3cb3533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b297bf-db10-47ae-9d0f-4128cb4c54d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1be34b-4f90-4df4-958c-c916a59340c7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b43dac-6145-42ea-8a19-0e84d14ffc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177e4d0c-b99b-4c2d-824e-db87d3778f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a5bdbe-8e4a-41b4-bd4a-636c0f70c8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80cad3ad-e906-4b34-922f-f20986314cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eeb3ab-b96b-472b-b75b-f281a7514a2e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fba6569-a423-4c10-859f-76b993d3995d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dda3ff-df9c-4865-b488-22c17445e4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74526c8-f74a-4cab-808d-b374a6762655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a2b9e3-b8c8-4604-a53a-be5a4491dfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824ba20a-a65c-456d-884e-0ae2c76bcf90",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838c5303-5a2e-47c9-baff-ff57c8489b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e23b3fa-047d-49b5-93c5-89fa0d73e23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba57712c-d3d3-43e6-9a3a-5c1c6f07b453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f87ff2a-8e8d-4f32-8e68-60de0ccab641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4c5f7f-6266-4ba5-a081-c7533429fa16",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58ca1e4-9151-4b92-9f79-45dcdea81eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd497e9-0bdc-420f-86c4-7be5a533ba82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d166c46d-5e46-452f-9e6d-d3f85660cf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac8c46b-da01-4597-8c06-17075fb3c326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687f5f26-1719-4b40-8c81-41bfb8272a2f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb39db5-118b-4c8c-b08b-80fc9044239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0b0cb3-eac6-4977-82f3-2bfa7c2d9aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ba057a-0cb7-4ffe-8608-0f91ef1f08dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3a8368-8ee3-425a-9de8-d1e611f9d9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018b759a-304d-4954-875b-101dcf1d99a7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f28ccf7-4a16-4357-976e-dbe9e7dcfb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22ddd8f-46ae-4365-aa12-308fc68941ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d22c9d-c0b8-45be-8866-a633bbca15f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5111eae7-d043-4d53-b766-8e9d24ca3328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26a9e1b-0ef8-46a7-8559-cffea8a53b76",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97274ce-d740-44bd-8f26-842a8582ffee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5183bf-c0aa-434b-a2b0-c2a0ac823999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deca555c-cc08-41d3-a9b3-59501fad61fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba45fe9e-00ef-4663-a504-6b7a5fd11ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d945eb18-e902-4b6d-b274-951309e25835",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51748e75-0f67-4fc6-a15a-72d225cc9122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a8a6a9-8ff8-4756-b970-52084d35b842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d24232-4e52-456b-8533-2be4363cf0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85f0940d-bbf0-40b7-b863-069f43ca24bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bbb87c-55e7-43b7-9ab6-e562f7648fdd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d469a8df-52e2-4977-ae14-48bca4eeb67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763dd2c8-7112-49dd-a32a-d1ead4cfa98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ef5ca9-a956-4118-b49d-552dda75d60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66b2097c-f8f1-48ec-bbba-ae0adf69a74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa948c2-b3aa-4af5-8309-12dc654e9525",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45487c22-1389-4098-97a2-b5b369cb9020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e552a8-28d0-483d-9337-12ec278c4e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551f9d55-0cf1-4fab-8bc3-8bcdab806441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b5ce09c-9fe6-48ff-b2d9-4aca34e512b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fe3204-85b7-4e97-b541-b857cb5bdfc3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b94995-320d-43cf-bca2-25d83f5c6a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065dfcf5-49ee-4ccf-9763-546955f36fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b54c755-5e9f-4e1c-80c2-30446f408343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8088c79-f443-4c94-883a-7b423a3f013b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b90b8bf-a135-458d-ab12-d549627b0f86",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ad8026-34a5-44b2-9eca-31c420412856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eea716c-3109-4416-a537-3b1e1742e093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a75511-9db8-413b-8802-683d674093f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "524130bc-0b52-4162-b184-6c83d8bc03f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2011c13b-e50c-4136-98b6-cd56065fa7ac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca773f2-1dc0-4fd9-9fa5-e188160439b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8617fc15-a89d-45fa-a001-9cd346bc93a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664056ad-0ac5-43df-8683-ab43fc60e02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df224b28-3adc-425c-9aa2-e20fbc544e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830cc0a4-5db4-4e03-b46e-ff68092ea3dd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6652eb0e-b3b2-47c6-9dc6-0806a39d5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c698398-1b72-4d13-8dea-17c6e6c7e5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3558531-81f3-4434-ace9-94d85ceb8f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce930f61-7cd8-4d60-8bd6-18b74999b025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db7d961-f9a5-48ee-af48-fca605bae0d8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79669ae4-bc9a-4fc3-bbeb-3f2b21651369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341d4820-d18c-4541-b2ff-e1cf0b6a090f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddb76ea-7ed6-46c1-83f1-9afdf480283c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5ac059-46c7-4e9b-ae59-9a001e96284b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13be982-7af6-4b2a-a049-44911c298b52",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223d54f6-a332-4ed4-a0a9-6c708d89dda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be81079-711f-4687-b0c5-506385484c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922ec555-405c-4016-bdcb-faacfbd84ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7236cc42-470c-46a7-9a5e-e9a3f16e0287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c8626f-50d5-4730-a696-1ff743548b70",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8665c19f-ceb9-4fdb-ad95-ae30b983429c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d8a2eb-d9e0-4b1b-b1b9-b08ead7eaf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fc869d-9fdb-41db-a33a-2a254977d66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ed978b-1e0a-4d6c-bbcc-d4f7d221d3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac29c66-03c6-4475-b81c-03a08f98ffda",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91acaa55-b846-4c44-91fa-07141ee36900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d5e370-5b58-49d7-8fbd-486ef3a9019d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c826d11a-7660-414a-a131-cae8a2d78cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8177a44d-992e-4268-aec6-6c67b5d06344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa860a2-68ee-4294-80bf-8c81992f04ab",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01086bfc-3195-4e06-b662-9381ff2d477f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14dcd22-747f-4aa9-97d0-48247ee1cf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa4abce-8502-4809-ba33-be93fc4111db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ed2684-ec68-4818-a205-722162396368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dc7f8a-b2aa-44b9-8873-c65d43e0d899",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631560b0-ee4c-4df9-9e3b-2a1b8cd20f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08f011f-5300-42d5-b9ee-be49d31b6f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08f5120-2d7e-4e07-b2dd-9852164058d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1679511-02ae-47b7-98af-28d4200a86da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa16dcf-6412-4685-9e6f-2cafbf085a32",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd390d6-d27d-4687-a45c-21e7098217b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980c6282-ab82-4bbd-a6ef-c7816853b97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ccf7d6-8c12-46df-88d5-dc19bf327b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87688b30-78db-47b3-9703-7eb6ab3f0074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a013d802-da18-4d88-abfd-50c4de28c203",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae61393-cd82-441b-9586-abda33bb609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f45afba-4a8e-4e70-885f-50d6df6336d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8f50f9-f52c-4af8-9bce-c4b4cf24c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7656143b-238e-4463-afe3-4eec9e8943f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee66814-ee34-40ac-947e-b9c9be7973a6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6a3c7f-24aa-42f6-b485-911af36e8429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd97312-32f2-4288-9dff-73c68f055e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24b1bc3-fc3a-451b-bd61-59ddd5de0ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56bd6fac-c2cf-458b-add5-ecb31ff2743c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0205b1ed-0fad-480e-9165-728657710c54",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f41097-2344-4ec9-ab9d-ad8a2a1b2c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ddbf6f-adcf-49ed-9120-6dab552ac46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2863023-3082-4914-b5e6-bcf83d7a091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "475df229-a4ce-4442-81b3-d354b8d1c64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bda945b-016c-4c23-8cee-3e0b9459d17e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c767425a-d57e-467e-aeef-40875977acd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800eeb8b-0b1a-4631-a587-e214b4a71781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf258f85-cf36-4726-b262-b29acdab12cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e864a8c5-63b9-4b82-8fd7-53e547ffd152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfac9b6c-fd9e-4b44-88b8-c0ff075afc2d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4285f5-5f14-48bc-b41b-4e992deeccf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27b204b-61e7-4145-927b-ea469baa0c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91299661-214e-4e32-bd76-c2c267349c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "72cc7c01-4e33-4ded-87be-ee36ef1dc6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14398e87-a568-427c-b210-60f011bba6bb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8286c7f7-78c4-4d10-b13d-a0a44c793308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8935900a-bd74-4add-8a34-eac0a237ba0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5267a5e-4de8-4851-af05-e1fc0f18d760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c460328-118b-4df5-992b-02214b8d11ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f7a96d-f46e-47e5-976c-9bc940c106c0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee7a451-cc8b-41e5-b11b-4b6114861c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ee8d542f-270c-4468-9dd0-a097514ddbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed36b985-ca1b-4b55-8792-eb71dfdf2e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "99848d52-e0dd-412f-b7fa-8eb46b7329b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3798000b-bdd8-415c-abb8-3120f68d8c13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca08c8e7-cf8e-40b8-b8fa-89ec937a7b9c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ce8f83-d5da-44c8-ae68-e568fb2dc25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49348d87-698b-44d1-bb9b-4eb97da06646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e911d8-5797-4698-8d66-556d195d630c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fd48e529-9017-4089-a248-8149a6d4b82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86472aee-cdea-4f10-8df4-dfc48d5b34fd",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b4b829-8bd0-432e-a162-3bf486622346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb1b2e20-0a68-4927-9160-f70283075bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbd154d-11d6-479f-823c-6d3e9becea7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "224d923a-89f6-4b25-a594-9dc321708887"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79d230ec-e7a0-47e3-aad7-8d537a4f0720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dd595d7-e663-4a71-9cb1-e4169c216e8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a43a6865-a104-45ae-87f7-41fa38bef996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f973780c-1001-4873-978c-71cc6d3079fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40620f41-1bc0-4c23-b287-ca63c70ae1b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d774bdbf-ceea-455b-bbb6-1889f232b9c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19f9bd18-5b02-4320-a23c-7af9a2ac5a75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95ae3e6e-9875-4a20-a3a5-07e815d9b2e1"
                }
              }
            ]
          },
          {
            "id": "44c39e0c-85bb-4c1c-a0d2-9915a40ed2d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4df2c97f-9e54-4ef6-8183-2a0ec958d3d1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13cfeba0-7cd8-429b-849d-233d186f1c4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eff53a0d-51e6-4c78-a51c-00e6f44d76a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9cded07-8724-4745-9c86-4791663a4daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec0a47ce-bd90-4d1a-84cb-b450e70b9c76"
                    }
                  }
                ]
              },
              {
                "id": "4a58e1f7-e034-4994-aadf-06786177b96e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45ce4f2e-24f5-4056-b5e6-a39aaa19acc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3154506e-c15b-4dde-aeab-fb39289316cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdc25bfb-d60d-474a-92e0-66f44420d781",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2291157-a7c5-4012-8543-545f67426288"
                    }
                  }
                ]
              },
              {
                "id": "b5f1afc5-a0ad-4d3c-b23a-7bc16f843c74",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6751da7-f4ad-4c73-9c3b-8b7dcf9d4d71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "039a2f15-055d-400f-a2c8-f272bdd6b516"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72f93fe8-1a4f-4e68-b93b-ce1fc3cf754a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "af319a3d-a28a-4c62-9ce9-753b1117f7a6"
                    }
                  }
                ]
              },
              {
                "id": "3ebc0a7f-720c-4a94-85bc-384c555d8605",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4509fdb1-935d-4edb-b456-67f6e189156d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4513fc4a-3e3a-4e6d-adf5-109cbdec5c0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5578faa1-f11d-4942-a994-5f4d60b2a3d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dc6dfc33-92fb-42e1-9b4a-1af80ca2e71a"
                    }
                  }
                ]
              },
              {
                "id": "76436cbf-fa8d-4433-a1db-76860baa631d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f0ee4fa-1a17-4470-adf3-1d2a60c36f5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2ad1fa8-1be7-4189-bd9e-12504f62fc26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6eacd6b-2e77-4858-8578-a1a20e2517c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d0b3fbc-e08f-40f7-a800-680ff4cd4c24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b0661bd-ae93-4972-b437-c6d19b345e33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3bf5f2a-19ad-463f-898d-ef32e349b343"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a980b050-712c-44a3-b8d7-8b12cdce0e2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88c66b29-cb29-42b3-9ad7-b90c23b9ffbe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4599fbec-a5fc-44b2-b2b2-373cf01b0666",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7177339e-ed95-4180-b693-4d9d3e039736"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "441d1656-0c54-4771-8905-c87c7a862f2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe417968-3e7c-4df5-a9a9-6c990581db2e"
            }
          }
        ]
      },
      {
        "id": "dd793109-f657-4e7c-8969-62d00bf57938",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "14888a91-bf84-4e9b-84cf-998a8336b60b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "661f36ee-d9d7-47a3-b3a7-77eb96074118",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e3ef2119-6e90-4baa-9159-4407f707ba32",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24240d6-87f8-4e73-85a1-3db7c8544caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71a8886-bf76-4845-a7c0-6f9a74c41985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e401f841-c3ec-448b-8e03-49a761daf7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a97b5c35-b7c7-4ec8-893a-3092d1d3c0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7090bb53-a562-4406-8f8d-1bbbfb6b2a36",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb341e20-caab-475a-bdf5-7740c597aef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d4a89a-4154-4a8b-aa60-740aabe5038d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e818510-1c45-4244-a19e-997f46563aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a025d1-4a3f-4cd6-937d-54f44490381b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459f8489-70b4-4f09-bada-202a9719c8a8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e779986f-108c-4ced-bb7f-0de5ff06b0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec52c2d3-0fc6-4d82-ab89-b54801e5d994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f54b303-28ac-42c8-b1bb-05fecb577957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe15e1d-ac74-4d98-8b35-1d104ec81b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d4b433-6cfb-4deb-a76f-11a4781485f8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220fcbcb-1dfd-4b1a-b1e4-b44ec5d53a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e9273f-7d7f-4e38-841a-e9e5f24a016a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613a99e2-a217-4d33-9470-cfd43daf8d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d3033d-8111-4fa7-b181-ce6f73fcb8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe7a732-e09f-44fd-b2d8-a24b2ce53238",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6ec06c-a2be-4ba2-ba47-4c9176133298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a303f1-91d8-4e05-a3b0-c693e4876e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fcf569-2117-4677-8c41-cefedc35d5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad2be25-ed2d-45da-9ac7-f374ee0b01aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4254db-9916-49a4-ba80-ba8d80408743",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efab631-68c6-48dd-a45f-d19dcce3d593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ab92f2-06f5-4d4a-944e-4b98ca565787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7e178e-2ecf-47fa-b40c-52c62883d22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d63f7fcf-e29a-4df5-b33e-373c575c8ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d575baa-767c-4ffe-959e-7a4715414db6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db7d493-63da-49d3-bbb3-3ed8a27fb655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942438ee-188f-4956-8559-2fc72ace8fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a177b3c9-d8c6-40f3-a359-a409127d91f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bd4feb-f754-4b00-927f-06d0e86f6023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4039b79b-a2db-4dd6-84e6-27cbbad65f00",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4e551c-d745-42b0-b32b-903c657eb130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424145f0-13b7-4544-ae56-57adcf8d8dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b346e289-cdaa-4977-84ff-0a0fc86a9004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6bcaef-369e-45da-8e7c-2fec8170201f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e1a6bc-3e0d-4fd4-8de0-11cef643594e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a825d324-6bdd-4b5e-831a-26811f2761ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a05f913-dce4-47e9-ad4c-3f9501f11aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb3aab4-f12e-47d6-8f6a-9b21c739d864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8e316a-469a-4c0e-b119-0764cc99d18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7677f7b-51cb-481e-a7e7-b5d316b36f68",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7faf483-d374-4d91-9f05-5b3214f618d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ced8c93-f201-41f1-98bc-366d1c357233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7feb78e-3fcb-487c-893b-12840a6f2d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bae37f9-ebac-4a4d-8760-3c35e261fb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b7cd9a-e81c-4100-9939-2af658a6d59a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ecce04-4394-482f-9d73-844bad5565e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19a6480-682e-4647-a76a-5b8efa1e3904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b3e709-46bc-458c-923c-de66aeb211c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2a74a9bd-db99-4c41-929a-a338368241b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0000dd-3a20-4f67-9838-d7912e1ed530",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2768542e-325c-4b77-a13b-e9912916d6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0ec2a9-21ab-4ddf-9f4d-e8fa8b8ea917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa8a6e7-7eca-4fde-a6c5-842c64941b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cae77d00-9e8b-425b-92a0-e570d245ab3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3fdd1f-fab0-49be-a3f3-b02b145c2441",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1340097-b73f-45e9-9fbf-883e09dbff11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46d62b4-7f4d-42f3-8081-50accdab22a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be56a3d-4245-45dc-91cf-8257a1adee85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd51f3c-75a1-416c-813c-7db5f2e44ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4f949e-b19f-42dc-b1b2-c4061a2a6feb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527d2a66-e759-4446-995e-70ffadaffd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e403dc-ce69-47da-bcff-f4290ca0a9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e43a23-0c27-4b2c-84f5-ba4caad508b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5adf2d9-ee4c-4750-bc21-1d288caaa779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04261f95-e8d1-4917-8cf6-4fb4a1f6ff01",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d18398d-f797-4c70-8977-4e992a5545aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e71abb7-cbe4-4fc3-97d5-5ad0346ab1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc280459-46c8-411f-a2d6-a1884be9518e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4183adcb-da5e-47a5-8a7b-f5b2e8b16bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b77b8c-23d9-4b9f-a810-ff5f6740a5ef",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7988a56d-8497-4518-8d1e-b1797b77fec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247c5988-ea3b-4510-91e5-c0bafdbde0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eb22fc-a208-4061-887a-ba2fdae39eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc01437c-7fe4-449c-9bcb-9a6f7e475894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a1f522-213e-44e8-8239-8d2f3009c67f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d3fe9a-affb-4d7e-adcf-213297e1b6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40cd1f6f-1b84-4b9a-a16c-672437bbfada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9f17ed-946d-4954-913c-96521fbc96b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f36d1068-e322-4b1f-bbd9-d5ddd3932348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1837012c-5b5a-4e1e-8ad1-b3b0931ed0ad",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90993b54-ce4a-4e54-84fd-ecae90d930ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965d1240-a3e7-448d-965e-f293124198ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ea591b-3c7c-4102-b4b3-ffb31b2b4fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c47f97-507c-4b92-b9bb-634730e6c23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4784aa57-5afd-411d-9ee9-4c0fe5c35c1d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ef023e-1916-4378-a480-ac7b8bf9ffb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7444a4-1c03-4f7e-9ba2-1ea192b847fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1011ea41-c604-4226-8c5d-de11251a799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "019b5eda-16f4-4ba2-bdd5-aef17ff69bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020911fd-a330-4aed-9fe6-9297e6085607",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609f198f-7dba-4ebe-bac7-cdc9d552e142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f32ab1-4051-44ef-83fc-6ccd5a770db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01672d4-6372-4898-a165-ed9fe0a47c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba7b18b-7e29-4e67-922f-285d382e11b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1c4d2f-4c3a-4d1b-8dc9-3fa0bac6bed0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebd8212-7694-458f-9397-a1cdd0fe7586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a10f0fd-b0eb-4ac8-86d4-069a83e7e036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c8820f-470f-4fea-bb1f-737e27c09205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6be21ef-e37b-41f3-902d-5edf8de73993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f1d2d4-438f-401e-8381-0d9f489b5bf2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5fb593-9a66-463a-b4b8-60e0d5e9e62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd2f902-d9ec-4440-abc0-5e0bbcfb5498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee477689-de43-4eb8-ae60-da62f0f021b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f99d34-39a0-4666-8a25-2de7b03a5fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba87c8cd-e0b3-46ee-bfed-bc42d8d83e81",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8878a8fd-525d-4162-96f8-90d90c16a075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83d8890-0302-4e76-86d5-67b082b3ba0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3c7d61-e520-4295-a584-0a174ee5d134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69c7956b-dc84-4dda-8af7-d1d3447800c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80364903-bed4-48a3-a5f3-3cf222a72697",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf3e16b-e725-4272-aadc-34a2a248c1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44bec31-4274-4e08-8dd6-1b03998b3481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3c3766-c2fe-4e0a-85c4-d3a5f001c833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5a326f-d781-4c70-9dc9-e3401f9911dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff34244c-e79e-4db6-81ed-60606fb69d79",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbe2641-a3e2-4edf-8eb6-78dec8d40bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901c93ae-56c4-4358-9acd-e4f72c2559bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a972f9a-e826-429a-aa6c-1c391aedd1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cde7aae-3c45-4add-bf12-f4c6839aab63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b002c5-ccb7-4c3e-8ea3-fbff6209186b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164d3a43-190c-4893-8019-30f8f4add346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58b7b39-c622-48bf-afe6-ed45cb0ced95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d1304e-b10f-4256-a273-2307407bfdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57af28f3-9bbb-4e34-8eda-edb44cb69db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0151f084-53fd-44bd-a386-4af662b270ab",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1374c3cc-ebc5-4463-a0ba-feb02e3596d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba788e41-a218-45bb-8b1d-df5a2cfd0ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1154e606-08c0-47d2-bc2b-05e8c01dee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cc748a-e623-49de-b370-8f20d87abf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43eed1b-2e99-4d67-8479-97c42adc2ba8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e38e91-2f2d-4746-b17b-f4f6633150dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088a2384-77e4-4d1d-9d13-8c1d37e92f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082f9675-7558-4a98-af4b-e58ca337c26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7792fef-7857-424f-9767-8b38fb1bed3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956110aa-87ef-4495-8dc2-91514dfb4ea5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ee1b71-d176-4421-89f8-2dafa0114c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcc49d0-ebe2-471c-9323-6335493169fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22ac3d6-0d6c-401e-9266-61f6a4c58a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51fc2e6c-a5ed-4f7f-a8cc-832f2d2217b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c8189d-6a1a-43b6-986a-d5dc4d8e6372",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e760b625-747c-4d8e-93ab-85c3357e9b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32083f3e-f1a6-4e07-b78d-b17e3c6efc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b28be1e-ba16-4419-b86d-4f3dafae79f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "346e8942-6fc8-4d10-9992-cb815e4007b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b554efa-1064-4761-9ceb-b4673d3b732d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03dbb9d-87f0-40c3-8374-1070a5e4e49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b05248-54a3-4424-88bc-2f4c1791ba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3a15d8-8300-4526-b2cc-b27ef484ac2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de5a2ad-41a0-49a2-a2f8-92aaefaa7d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d9609f-d79b-45ef-87c8-cb99228d77c9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10429455-6601-43e7-821b-04959861faf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2066e941-0a86-4ec0-a353-c287f7ae7959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09c802d-3a32-4cea-ab57-484fe6c9985f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59629ccc-016a-4d53-ad82-3900bb22ee0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b491c66d-f027-45ab-93ef-1fc6701c3362",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fe5ee97-8fea-4ecf-92ad-7fd4789e19f2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340a6b4d-5b28-4d56-932c-d0d6d643b48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d9af71-991d-4a94-9caa-9337c44274de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066844d5-6bef-478b-b6c9-ab7e3de85966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c906371e-1506-49e8-8a33-22ef2d861906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d3045b-bc8c-4c38-a5a8-3eb6b2a47018",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7218ab31-4132-426f-bb21-f7405e407608",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "201c9c55-52e2-44fc-a1b8-4deaf68434b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5170d818-2335-4811-b0de-2337cd890fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0361215-1c62-41d7-a872-fbb37f0a4a35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c58da1c-10cb-43f2-bf9a-ae1372fd4d1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "312e3a78-5b7e-492d-80bf-0d6b92f13cf3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a700f5d-8568-4b6a-bd2c-01bd47d87ec2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1390e361-48e5-4ee2-88e5-888af5d44ce0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad5f6634-8ad0-42b7-9f7b-f96c2b5556cb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98e34c91-63ae-4334-8f2f-35ff6831a3e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7330942-d2aa-4ae5-bab1-f397f443118a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8e10d8b-c6b8-4f96-909c-fbee135f134f"
            }
          }
        ]
      },
      {
        "id": "b488ecf3-5f45-4ef5-84a0-d66aa5c3da7b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e0609d37-b16a-4644-a0ea-7bd2980ac2f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c729eda6-5fe4-4b7e-be5f-7c84c662a4d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6eeb715e-85c7-4d58-9d4f-6eac4a57220b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aefd65-2bc2-408e-b807-58ef98afb109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6465ea4d-3928-480b-b1c7-f50fa21810f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978bad17-2338-4c52-a871-c9176e6b394b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00aad32-d7be-4cbf-b4b8-4917d8184be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ea19b9-87b3-4de1-a452-ec37ac3ebd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e28bd0-2a9a-4e81-b56f-1f834dc94858",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01649c58-f9f3-40e8-b72a-9e30469c54dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c80516-4e99-4c4c-8279-d40fe85cf826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5769174b-13bd-4101-8ca4-80ed82b33801",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9421bd03-8713-40ae-988d-a80958b8f8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf5c2de-f57b-4540-b6ee-6e3cad4a3fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a784ae4f-1312-4aec-ad87-70c20f44cc38",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc619995-3973-4e8e-9c67-c45e2d797ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1596112-0432-4d04-8d2f-423d2896e113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0ef374-dfe8-4da7-a64f-21c56a702c4b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e75d0a-7e20-4371-9116-b117cedfdc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae6ba68-e8ce-45e3-8198-2efc73f0367b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78458e3-d2a4-49d1-be13-2ca08af36b60",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623e56fb-2d84-4c6b-b526-ff2c51ecd68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b17259-4ff1-4b38-8395-1e57244ad60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238e2ef4-6d50-43f9-96dd-bdd09a64f1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2c2c6f-1f2d-4878-b6e1-edcdb20ab6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f2d749-81c0-404e-add7-424c9e763234",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00626334-371f-4704-8f31-773016d91c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c25e45-3697-4476-b0a9-a6f00902c8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cb3185-529b-417f-b8b0-2f09d2b44de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96204d8e-ce3f-406d-beb2-2068dd9f7392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeb0698-6f73-4331-bd2d-7c332c6fb5cf",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637428aa-9ec8-4245-b1b8-49ac9d7bb7f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e558a7be-49b3-4218-a4eb-5b4495a32f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2631e624-3481-4da8-abb6-2428b9d6baeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f922ef5-ef90-4ea0-a0aa-1ddf2383a15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ad7929-91a8-46ac-815f-9b4e0402ad04",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e79290-8cc9-4835-bc23-1daffd445a40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51156168-7647-4f96-9ab4-2ae0a870c2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7b26da-a676-457d-9110-6ee86045e67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf71f0a-3cf9-4034-bb2f-dce96bbce545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9c6e40-d371-47e7-b467-ea93783b699e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e6dfbc-9aad-4235-b4e8-235d2ce54035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f36f981-3734-468e-a2dc-12ccff5b7408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3eb4f4-175d-4506-9275-ac180ff319ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4529eb2f-60fd-4d66-8186-4072b5432173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898a9812-b5f4-4937-871b-f348f64e25d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4dc95c-972a-4520-8d0f-5d0946a0bae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb0d5c1-777a-44e2-bcb1-d9321a53b8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d449fc-a7b8-48a6-9409-6f70e4f75a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7227b5b-d86c-41e1-8e29-ce44bb1b489a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a59ba4-09a4-4d51-9b55-1d0cf90be5c4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fe384b-948d-465c-a513-0fdeef6ecad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efec1d56-7e8c-476f-b1be-38da955a78ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805b642a-a198-4545-b985-b95cab5d82f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7477872d-e06a-44b1-bac5-659c4f335da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d807e02-7a06-4494-aac7-d885cc29c587",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c244746d-3efb-432f-b0d6-55993bc49dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "040a5d6a-b39b-4770-b2fb-ef5316b9af08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fec12b-c9b7-47b5-a527-30dbb98f87e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3333256c-21eb-4748-8423-22fddd096959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bbdcab-7f32-4170-a653-35997a81cf96",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b35d4ca-b670-4c6a-aa4c-d2c347700740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a905a7-5905-42c6-bf12-1bf0585ff7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3788399-c537-4851-8a6f-733e9be45187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3853a515-573d-4fb1-8869-50d74f5f4f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40ae4cd-8de6-4b62-854e-dcfc7ebc71b8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34fd12f-63ad-4fc0-98b1-183b3e9e248c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3c6007-9b3c-4f37-a7cc-4b02a91cf665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ea6fe4-514f-4315-9b67-2573aa0e330b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5ca8bc-a1cc-4135-97b8-44587f29aab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035f8954-79da-473a-8ed4-dbb1bc85109c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9a495a-e8dc-473d-b92c-376dcc051133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d8a2fb-dbcc-4136-97cc-96f7f27c2f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ecaa5e-38c0-4499-bcd2-a27f8d40120d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3974d4e-b86a-4a8a-9dc5-86ab6d03a142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7805cee8-f042-4457-ab75-5f44a6ff9330",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5c877a-cb53-4055-b2c0-32712ca71726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ad933c-bfb1-4389-a8bb-ad3f38a7f62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913e783b-923c-46ad-b396-6e5b3fc73240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95625fbd-67d0-4e71-868d-90814a11dc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d13725f-08aa-4a6a-ad32-96d4bf90e9f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b4f93-f8c1-45c3-ad95-e19090767f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade92c55-61fc-42c5-a995-ca91b4bc5da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95def15-6d08-4507-9957-b547ca9632a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e425c64-0e3f-4f26-a48b-69c64664feeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb631ce-a279-46e3-b95f-b07e822708d5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26db55c-0f65-449d-9a3c-fb558efa368c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e848c87a-5862-49bc-beae-ad9ec0a8a79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc19e88-b991-4907-9045-1d3cf51db821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e390ef-ced0-4c06-899e-d8eabcd54616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd315f10-ca34-41e3-8fff-cd0e79a48bd9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a18b3d3-0dee-485d-af7a-84aef326c920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076f03af-a199-465e-a617-c96ae8756980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6907eb6-3431-4ad6-b499-f0a07f316d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37976bfb-9824-4ab4-93a6-8d66a6f0785a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98db2fdd-2990-4639-9443-2ea4f8dd7d3a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb55fbaf-331b-415a-ab26-88a9b444159c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034250b7-2444-4110-8188-cd22d90812b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3be8348-d95a-4baa-96b9-1be47de5b20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3051af-c70b-49db-b5f1-b24e1ec619c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616eb5d1-0bec-418b-a5c4-7b554aa942c4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ece21ed-198e-4238-aab5-efd26aa680e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbafbe2-4369-46e0-ad2e-a13546e3c212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c554df63-a527-475d-8857-7610415aef70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e7808c-9abf-4b17-a429-eba3d964690f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de98335a-46d4-4ab5-83ce-6ab5bafac976",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50f1a63-fff9-4c81-b4a7-1f572914bb3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6137887-4891-4da6-996c-67c03daa71a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f546c05-cc31-4db0-9761-01c07c32adcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8733f1eb-eafc-41f7-924b-ac4bb1e5bca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fd703f-d115-4c17-8860-f3ebf6ed670c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a89e3d5-aa2d-45aa-8b75-5d98d660975a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a81a63-1c5a-4695-8562-02ceb3db4e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e7ebaa-708f-4458-a821-0aa630f9f31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43d4c7e-ae0d-400b-9175-747c68ced0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe48c41-1b38-45b4-999f-da30398d7e44",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86f0c03-e9e9-4bd0-a70b-d3929d298a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dda898b-a2eb-43b4-aa1d-1d4af242a34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108b5ce8-2fe7-4c69-88ea-6d3c23f7cdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ba2327-db6f-4c57-a232-f9e0e800c89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7141a4-bcc7-41de-85dc-f6ca0a522b5e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d500c9-5426-45ea-ac36-aa373b03b42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf753512-fb17-4017-acb9-56e300f3e3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7811a34d-262e-4284-9a65-ed7d6acb094e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ebbacc-09c7-4acc-a2c9-29e693489288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7103b7-73f5-4f86-af17-39afa43d047d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677be7b8-e891-4948-b6e6-68843f34daea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fad389-5b04-4aa1-8ac8-870ddea636b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f49a5a4-f0ca-4cbb-99da-400458163e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d949b9-6ccc-4390-ba9b-35e0c99b0dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db1192a-ac2a-40a5-ac11-74631992dc40",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6244b8-d064-47d5-aa93-4a0920fb1ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31884d4d-04a3-42b5-bcaf-f432d0f2d907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f7880a-56d3-47d5-822a-63106fd7e60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5899797a-90ea-492b-a39b-cae6c1fe48dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c456e1-003d-4644-a46a-bcc96fc786dd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a449a76-896f-4717-86cb-10b3c4e0ca47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1630b387-119f-48c8-88d0-ad17db68ba75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd7c5be-4a83-44be-8410-1a445b14a81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bf954d-78d1-4dbd-976b-dceb153d4df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20611d10-69c2-4b6b-8b72-c1b3aa4a9355",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082066ca-16b2-4214-a279-6cb1c8422a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd4c874-e22e-4724-8334-a675c29ccf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd9f78c-c5ba-4975-ae19-93151d72016e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f955502e-92c4-44c9-b23a-aaebecbcc2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c55d7b-8f5b-40a9-b8b0-40ba7068934a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840ee8fb-cae5-43e9-9efd-0eb1a0949fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65cbbb86-1072-4622-9fad-b08483fbbde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55404756-a3b9-48e9-b4fc-ae198de59ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ee0ab8-9611-413c-bfc6-2a3a39b03596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3140ff28-7ba8-419c-827b-738c29592b2e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f4f11d-8a69-4eaa-9f04-e90fcc0c84ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56066571-a5bc-4518-b3ef-56aaf91f361d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755c3607-caed-46d6-b1c2-a4f4c224f1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33d5ab9-98e8-4390-9bf3-b209b77ec71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef484dff-8c36-4087-a538-a9599facc2d0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c17f35-6177-444f-9e93-4e4b54ec4290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b2e887-7006-4e47-9dca-20700346f9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b24fd50-bd19-44d6-bd23-e367c67be48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264d1eeb-387a-44bb-8c3a-8f8657dd811a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f6a1c2-7dc5-4e52-91ba-0012105add8c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4aa3667-0f58-4b40-8af8-b9f4740e60cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419bb35e-67b8-459e-9341-33493248518c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7beb17-690e-4344-8f12-370f80e41f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492a9a82-e0a9-4eed-ae16-581699dd6215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ecb5ff-74af-420a-8235-158987c46dee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b90b6d-a401-43c7-a701-8480434175db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e67620-5279-4910-b702-823e06ca4666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df972a9d-d723-4875-a9e4-56bebc96af7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3348f00f-3add-47f8-8538-c1e14723bc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d973b4fa-efdc-437d-a1a7-90aeb1dfe67b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8323ec55-0435-449f-9b7d-5f50ebc668bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284651bc-802a-435f-a346-94266acf1b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d595eb4-0a02-498d-a886-732ba460f8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dec341-6358-4bf6-8792-ca01d6b75667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef95582f-f8b7-4d6e-8043-33d1e0be033c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265f6bd5-bfc0-4725-ae18-d868a29f0f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383a28f4-6aaa-4e55-9149-4139ecfc6514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b516a2-c46d-4fa1-bce7-eef5aeda9961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efce910-4030-428f-a2aa-365b484ec325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5acc87-6726-48d0-aaa8-15e1319a360a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b37ea04-3112-438a-b183-88651594e73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e160a212-6959-4b60-aad3-b53dd8edb988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdc232d-f37c-4ba5-b884-761f87ffe996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a6e58c-2e7e-49fc-8736-1721bc9fee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a3f3d5-eda7-4df4-9f8f-6fa5e5228d39",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c51a470-3481-45fc-8397-6a248ab56572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a07f9c-85f0-44d8-b312-0d462089fdf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e55c987-8307-45e8-93e9-0e268ecc9036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bc5157-2cf3-4805-a352-8775bb49b61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0101a7b2-2617-4d46-b364-b08539b02ed6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad7201f-ec4a-4f89-8264-fbdcfe114f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44ce8da-7ca4-4316-80a3-1cd15e269e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145f3898-c0e1-42a4-b66a-aa12d0f6aa8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a490717a-f7ab-4383-a9ed-e7ab7f86d67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa5c8c9-b668-4981-ab66-326246700972",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440af5e5-679e-4474-8ebd-82d70bb6c207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b3aa2c-b1b8-4499-a950-48477f2c155a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d519f0-8a0c-4abd-a3a6-49603ec26ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6378ae1f-4190-4e88-9b2b-5ce820d83bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f60fb47-ff74-4dab-8d0e-706b2d441469",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594f2de9-bf43-47d4-ab8a-c91613f747a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0984447-eee8-4760-bea4-6f646060e3ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0842ac-f687-43f9-9a83-7e4c7f3197f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5336a27-9f46-4c04-a9b4-9824c98cb3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c495ba-d638-4d99-8733-b47adfa10a78",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8481cef5-bce4-4b12-8255-d8eb3610c1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ad10ae-be70-4176-9732-fcd84231bc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3535a769-ba04-42da-a53b-111be30704a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d7ba15-2770-4b1f-a94e-40a937c86127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f9581b-d73b-45a5-8ed4-d2fc3b0bef31",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66144295-5415-43ba-99be-03b19dd1865d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fbc3d0-705b-4af6-8e73-082aff00487a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effd4d26-2ce8-41c8-a76a-d8ee41343920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18191b87-0c12-4e8c-97d3-361bdf04b9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820b7455-dee5-45ec-803e-df10d30b8b24",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e67e1ab-696d-466a-b790-d90ee16339d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3121e060-cfbc-4b7b-be20-3220b8a76d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67f420c-082c-4f88-a656-ab6c0e29bd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbda1fb0-67b7-4def-a2f7-4fd6d2f17373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49233d7-f0e5-4174-9654-bee8b8f96a58",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447bfc41-1561-4bd2-bd22-882b5f87e3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52e2e1e-f022-473e-a92f-61761c2ed6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f613938-e10d-4b57-9df7-d17b19bc72df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b94025c-df41-462c-a971-1de236dd8eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c5b67f-18e0-40b2-aced-5246211b53ac",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1934452f-68db-44cc-bc6f-8444506adc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f48d025-2639-4233-97fb-08ad765f60eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6552c91e-5e4f-41a4-90e1-ad7f257b253c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3840929-c081-4cd7-80e2-de316ec841c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aa6040-d0bf-473d-ba50-ceac9326b392",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c09e8cd-a31c-48d2-b38c-b8684cf18fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ebe5a6-f987-4b95-9251-a7b57758ac4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7186d550-6ed2-46c0-aeaf-17d48bfe5c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f199140-47e6-42c4-8a13-89c1b26b1d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2e8c44-903d-49c0-9f11-69c3501e9cdd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58e0ed4-5621-49cb-a5e6-f2cb36893741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da5fb07-3c5c-4521-b64f-3095c5149141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9257d8e-1be1-4a99-b8f3-a5a167e90827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f088dc4-9852-492e-9e1c-3c36ff03e734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c55a67-731b-45e4-bddc-30c76d42ec4e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c735b9-93cd-44e0-ae9c-9fdfbb69a192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145ad24c-0639-4567-bbaa-875858bf8d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1f6b70-7a8b-4bf0-83d5-1a21dd4a92f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4033fc-64a9-4458-81b3-38a13d4ca60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1422a5bc-d00d-4640-a50c-25e054dec277",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce17e97e-0cbb-4381-8c10-9863fd551080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4562880-ca2d-4993-9629-72936edb235b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e618be-4153-47f7-8016-e76bb6e4c38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c7b306-ab6a-4431-836e-e0e403c4c220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e8aa19-0bc9-49ab-aa64-17560182a404",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300a322d-04b6-40d4-9ce6-2928ed75f319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952dfaf9-35b5-4598-9211-89cff78826fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2848c414-6a98-4137-aaa4-1d6c7537ceb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2869ad01-7725-490f-8d74-248bf4c89211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314d8106-327c-49a1-860d-54277fab8acd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29ce067-e617-47cd-98ba-d3a640d9091a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a699d4-d2cb-471c-b5c6-de56e616a3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af782c6f-1804-4120-b487-6c39434f05bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72f9992-51e9-4c0b-b541-62c03b90a5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cc1d06-e234-4e16-a123-82f33cfb065f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376e398e-239d-417e-94c2-ec7d79c517bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23dff188-0191-43b9-98c8-a4ecc160e057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8101d21-a231-4d61-b37b-f2e565946a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf3297d-900b-42c2-9389-25a9a74bf0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0a8b4b-88c6-4591-88c2-4771db027566",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda532f9-01bd-4edb-a0b7-7641f82eb6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20006ff-6086-4e74-a562-0435579d0068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba3d69e-e1da-4235-bddb-cddc87757e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc47c0b-2d85-4afb-aa13-e8fde40f62d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e686e3-1b95-4489-9ee8-d0b8f6b24028",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f5342c-523e-45c8-9ddb-96c7e75fa39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e92f9b6-e877-4527-b05a-a0342a7b4d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0f6661-9d4c-4ff5-a923-2f6e24e841f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e65c9e-7229-4f99-a3f0-56d870677f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a419a8d3-8c2c-4112-896c-f2c3867b6904",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a973c4fa-a267-4e5b-841d-76bc8d0796cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653c8447-6f62-4fe6-b57e-685df05d9fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86239b-0504-465e-9b76-1bd5077bf15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a69d476-e753-46b8-b361-30b2ed27e547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cb0bfe-e301-4d54-ba8c-262f13b9f8e6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd899434-5ea5-4ce9-9f1e-6359a69606f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0afe614-0323-4f6b-bd4e-4efb810ebcdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d4fb05-3a03-4412-a9fa-6b8e5ca61622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4b5e56-3c68-478b-a9b7-cd03f2dea046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85707990-3b57-4bb6-9892-26bd482542c9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c5ef34-f5f2-4bd7-8504-32b5d137d608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1404a6c5-121c-475d-8300-ebdae8135df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3103e4-8bcf-47a9-b00b-fbe6befb20fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a419ee-2502-4045-b1a1-d75c6502243d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c33ef2-c948-4771-83d5-40cdbf4e8f6e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7071d625-67f6-4dc3-bbeb-de20a5ced2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca348bd-f391-4c4b-849f-f86a7b1bfe6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d811934e-54b0-40f3-96e1-bab4ed4a51ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7037dc5b-671f-465f-a7df-b2a4d600756b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9df089-92a5-42da-96fe-2ff1650f4e39",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0e9d15-da19-4deb-a062-f5e2a1da2c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ff3d61-a0b9-4459-b1f9-ea27fc64c2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5881ddf-8c89-499e-9e1d-74ae2610fd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6654727b-41da-4ada-8b21-d28c313994b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0958ece-eeaa-4d95-94ac-5c4bb8cb9e70",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f605b9e-64b2-4fb3-8727-9c3078b8db69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcd4c16-292c-47bd-ab9c-1b93377155b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbd3e78-7e18-42c1-aa20-20daa045af62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18242f6-8b19-40f8-99c1-d6a542cb7446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ebcc2f-4d1d-4f62-a9d6-45eb894e6b78",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c01f94-4e2a-4379-96f5-5c4bec0a17aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a06e257-9187-40b4-8f8e-e0d2faaf268d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40a7014-40a1-4ee3-b681-61cc923c593a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e81917b-6be0-4478-8ffa-7d2e8bd413e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057a4619-86fe-4474-83f3-7e5a2875313c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6201e2-9545-4dd6-8b07-442300dbe854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436379b5-fa68-42ff-9028-a1a394676c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fd16c1-3935-4760-89a2-9ccb21e99ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639786d8-8114-435a-84a9-e15fd02b3eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda24405-e1a6-4284-8b2d-0f0bb728f050",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482fe9e1-f7dd-4181-a134-34ebd8b7db67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a7ec8f-ac12-4ffe-9584-8de1b70cb8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe9e595-90fe-4933-8791-6632a35fe9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fb0dd3-23f6-4c41-bc38-87db271efe96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5370831b-981d-46a9-a3bc-dc8480892664",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9189771-9818-4c41-9345-aa8bdfadf05f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8499782-2296-48d7-bf77-1948fafbfe9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166715d5-8384-4e7b-a4f0-23dcee68af45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0987836-55e9-45cb-bac9-d8309b23e180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e65501-7552-40c4-b8b9-97431a43249f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cd13f3-9f75-453f-925c-b1a2eb8bec55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca19fc6c-1f36-4a4e-b547-8bac3c9d2ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba90bfb-0998-4cd1-b302-70499627c494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5784ac3-d324-4a7f-b6db-cec4c96b5e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa8ed59-1989-486c-91a3-85fabf5b3e25",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0181755d-1881-4bac-ad70-92f1c95dbed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051fd25b-e984-40ff-8985-47de5f9a90e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61144137-520a-45fe-bbd1-9764c1704a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd09027d-a0b2-42a4-a121-004673236204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6448e518-ca83-468d-be1f-733e238d004b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4be722-8628-4244-a1db-fc53273a4160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29e7d681-2178-4954-854e-9e0bdc4fa842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fdaf51-21d0-4251-8284-3736cad97e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51e57c7-c929-4aa0-8281-f21a0175e860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ef1794-ef95-4f51-ac6d-067191a4dff4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa887a8-e41e-4e56-9174-3fee4fe22163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0155e01-be0c-47cb-be44-1d996d1da750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7cdb23-80da-42c4-8761-df81a8a49256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798aa1c1-dedd-4095-8f29-c7713b82934b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf84be2-6261-41ec-9c0a-63e46620d307",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa5fae1-98ef-405b-ab2b-012d7d398df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efd619a-2357-4105-a897-30694dc46dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edc82e3-7208-4edc-869a-54f1b31da130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799921f8-14e1-411e-a532-b677bb6a1563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ddec01-c715-42f1-8feb-7c79e61da90b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83ee39d-13f6-4eaf-9d3f-1466aa729afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0629242c-8bc1-47d3-ace0-a122afb4cfba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a078362-0960-4664-a648-00f38755ad0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272ee49a-e4df-415b-be05-2dfe8e900ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9732952-5fd6-47da-8bff-151a80c1358b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f819d158-d102-4b02-9f8c-d7ada8356cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e8c9687-2934-4c4d-9030-9fc8b3d80b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c6270a-a7e2-4728-8237-47911b877f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd501c07-72f1-4619-ac16-6ee3229a6423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ad110d-f2c9-4172-a398-c232b7c86aa4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a044bcc-27d9-48fa-a0dc-1b1c40582e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9259a57-77b9-47c0-94d1-8af43db0cdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933cd127-6a41-476f-803d-a592227a701f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57587cfa-0ddc-49a4-a010-12bd82b499cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af53d0a-80c5-421c-bfb9-6198637949c4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536370c3-4ebc-4303-99ed-a12553b250f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "665199a3-973a-4f05-81ab-2a0915a25702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a5bf0e-594e-4ac5-98ba-af15e25bba76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b651b190-af23-431e-ae02-b904eedea10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff39ed4-ffa9-41ae-8264-7c548ef6fdab",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428aa55c-b75a-4e8e-b7be-1a9e5a5049e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e014ec66-3931-4420-a470-46e0ae66a0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dd7a5a-6143-4e1b-aed8-429e88fbcff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98870c8f-1ccf-4717-83b6-7a96d83f168c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef913dd3-807b-439e-abbc-4b23d4021d23",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081cd885-e5ec-4492-b9d5-a23305de524c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52d0bb4f-62cc-48fe-a1d3-887710e27c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e45834-6187-463c-86c2-6e9ad25ae009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42febf8c-8c12-429a-8372-528540dad5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6660707c-75d9-4a8f-8914-74b8572a087a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3395c30-610a-4d17-a31c-03c1dedd3e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2c0b68-1de0-4e60-a019-0dde4b4d0b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa290475-c2e9-47d8-b8f4-0bc15d8650e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be976ab-422b-413a-b864-de2e015de466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6c76f1-8c08-429d-8ef4-e60a95aa6696",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22384bb2-b147-4b1e-9ea8-f9064c2cda4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92d31ad-e633-4a00-9beb-13e5c8e3502c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc89cd28-87d9-4a3d-988d-462f240b5a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38781948-19ec-48ef-bd1c-a720c19ef637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0473f13c-a775-4a10-87c1-f5eefd1c4b8a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11a6173-6ef4-47f9-b7f6-49b65593855f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8ea719-ea4d-4a53-8478-0018be8b9665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e1c93c-8869-4d91-908b-c0b4b4035f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7ad7b0-2514-421a-8c53-c388618dc0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56101e3-9c30-4508-9ee9-d017fea32d1b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf3acb9-b47c-4210-a6a6-8893329e580c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ce765e-ce57-4ca4-8229-1ba7d6442df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7d5603-1bb4-4d40-bf2f-9803d301c54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c7a9b9-8e28-49fb-b85e-60026448a7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229945ed-d63d-48bf-bef1-81f0695cc758",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28fb2e6-2f52-4a84-b6c9-c887ac825914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "029a48ad-470c-43c7-8615-f19fd9c9ebc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e149d2-7567-47e5-b3d1-5fc5e52ab53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed39ce57-72ae-4f7f-8c69-1783420120a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fba899-2f26-4c35-807e-93130ca0f34c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559c8194-84b9-4351-9461-2b04b39ce600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "172b3f1e-e9ab-4d82-9b62-5609694df054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84122532-d295-4cf5-ad90-6d369d34f2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586a5cee-a606-41c0-92c2-606fa8bd8079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65897cf6-8027-411f-a7fb-ca08ea22c345",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c14514-a732-421e-8b36-3aac30e6dc24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f505845-5610-4900-ac53-65a18af701ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e854d74-282e-4b54-8f56-a1e02629b4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e717fb74-5cb7-4ce2-a796-e78a75101f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c8a501-d656-4b67-b380-7214a50b9647",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710e8cd2-8715-42e7-b4fb-929eb563dac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64844237-76fd-473b-ad58-691b753e26f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eaac11-1470-48e8-be61-5448549eae47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176ad03a-11b0-4e8d-8031-6686b180ae66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5508216-e9b3-419e-b385-2b0d2e5f57f5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f3af09-f7b6-4659-b299-bc45d4707b90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88fd71a7-a327-4816-88c7-afbce744ccbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1dc169-8bd6-4985-ba3e-873bcbfdfb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f282856-5b96-4bb1-8f13-e85326a3ba3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192e601b-0b1b-40cd-9560-6bfb6850757a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9ca023-d906-4b75-80b9-32ce755583d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82e2caa-36ae-4381-8681-0d2352b852dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005daa24-23e8-48b3-997c-d03f4940199e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b59d187-b6d8-4844-83f9-d70bfa069f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6447556-46ca-4bdb-8917-71ef38ec10d6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f8d370-947c-47c7-9cfc-7a6714b7225e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf8433d-1f9e-4824-8037-f3975eed3010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669c8736-5427-4f9c-9665-48b04757b30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75743360-863f-496c-876a-6e157c61421b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eedf50-16c7-41b8-a6b7-013b50cf3f08",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4806771-7345-4fb5-8ffc-ea342bf98f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d61fe54e-7438-4262-aac9-f36f33212c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e97ef07-d552-4176-9d8e-4a73d5833d55",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b767e317-b41f-48e3-8f9a-dc6a2bfaf2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92aa8e03-383d-4a86-a506-6a30ae0cfbdf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c48aab-4b3c-479a-ad89-cfc44bc08998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98991c86-f7ed-4e47-9b0d-d298f4d3f001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bb632a-1c1a-49c2-887d-a23b954a71e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6132b435-536c-4725-b487-144fde8d21f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2279f5e-c880-4c53-a8a6-d7e419227849",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b5404d-f812-46d4-9a58-144dafd8d706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c471489f-1412-4fd0-bb9a-fdcb23762619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e1deb4-82ce-4a51-a0ef-1e1c1b46b634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea91e695-a809-4203-b31c-a7331b3849df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9245b2f2-0ebc-4c91-88de-f7f502b08316",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5beb9de6-1b00-4da6-a5e6-47da678256e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cfe2cd6-502a-47db-a514-f82e1e4ce629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c777016-eda8-4bd6-80a8-f1e18cf586ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cf0880-e6d7-49cf-8655-e2038431d8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f3bf10-1e5a-492c-bb44-fa755e8eaff1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f4d751-4aa5-49bf-a31c-276c9db7f3ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14b52b4-e00a-460b-97c1-4f0aae9b52ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296dbfe8-7733-466f-a7ac-7589e164002d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfebccf6-1e46-4952-92b6-4c98d363b99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a30c95-070f-4ef9-8fbc-c10576026e7c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94ad1de-a3da-48e7-85f1-6c9b5409ad46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f7a441-5aaf-4c12-add4-bc832a4abfaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd1513e-153c-4ac4-94bf-9dd7fdb5ef92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43761b3b-f62e-497d-b89e-e78d1272d0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adceecef-e39c-45e1-a5a7-74ae630f0265",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f23b149-4586-451f-8145-ccdc5c57e002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf00ac2-0d3f-4590-bf3f-5b42c823de98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867cb704-8a63-4023-a136-aa5441a82393",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8622224-55e1-4c51-9732-9faf0c254ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b2024-13be-44bc-8152-6239a925278f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d1a585-fdbb-4e3f-aa62-8ea38a5dea1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99dc0d9e-ecd4-4d44-b7c8-78614dc9d69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cd60e3-8713-4f90-ba2b-c63fdae7ea48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc41c6c7-2955-475f-89d1-fcc1c9b73c9a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed67c214-9467-458b-8353-13566c22d7d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e854394-1ec2-4244-bd96-455286b1d4fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "239fe3bf-4c8c-420c-a4aa-faaf6ea7da4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "276f1dc6-4b3a-445f-9898-d298ff21184d"
                    }
                  }
                ]
              },
              {
                "id": "07b04f6b-963e-4dca-8ba5-1803a1ff372f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5199f3e5-bc1a-49f0-b286-2b672ec4229e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc57b320-3831-4997-91ee-506576e29a13",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f72bc48b-b7a6-4315-9649-e171ba6e5e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e57c1f4-f5fc-4a5f-960c-fb4d7ed04ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea5899a6-8f87-43ed-85e9-6003aed3a1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f9b2c1-5cd9-4dfe-9702-1a49235d78d5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4651cf-6dfc-4891-b625-3a07ee6e1716",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4c364e8a-5d0f-441f-8b13-e0a034380837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289d22c3-c73f-4a12-8ac4-a84e78c7cb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee0e9316-b4e3-412e-869b-68ee10b12c65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5806cc2-454d-4d3a-a0b4-b80255138f15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00bfc624-ec3d-4da1-8e65-e0ffbadc278a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94a6872e-f412-44ae-83c3-a681885821e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5de73def-ed37-4fd0-94ef-42ba530cf564"
                    }
                  }
                ]
              },
              {
                "id": "d62e37db-a295-4ba5-af64-7ee222518051",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7566ff73-62d2-4af8-92c4-46756552b1fe",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a7f4b8-eab1-4bd1-9703-d68239f5aed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "35a66b8b-5ba1-43b5-a649-f6f7a86f5e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e03ac5c-a457-416d-97f3-412d2da9101a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d306e30-d318-420f-9f37-2a2eeb7ef2d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9df3b7dc-6b5f-4477-a7fb-f976cc61189e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5530c0bc-fa86-4c5b-8c59-931f24dd5bf8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d089017f-59b3-4228-90e1-69b197c3d718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10c57fb7-1ae1-4a49-ace8-e717e63a6092"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d7ae383-672d-46d0-9f0c-abc092a37b30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28ef7b7d-6f1e-4a47-8bde-e6324f288ef0"
                    }
                  }
                ]
              },
              {
                "id": "8a16d90c-d5f3-415b-aa82-a1aec0512bb7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bf3ed86-7e04-4ff6-be0b-de78d7203bb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "af7cd436-87ba-4f99-885b-a76da9046b94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "406fa522-4858-49cd-939c-292391948dd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e8a9ae8-1190-46f6-a65c-eebb8c48316d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72052ab2-ec05-47e6-acbb-756f476f06ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8ea203ef-f620-4b8f-a9a9-d66c6287a218"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ddf751b-51b3-402b-bc7f-789e86557f1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0dd68c40-2cf0-4408-80a1-891a67a13b67"
            }
          }
        ]
      },
      {
        "id": "6c3f989a-3828-4170-8a40-1f97d8f9ba15",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6e4e0ca1-f653-45fd-9be2-f0cad342aaef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a92e6f0d-9aed-4bfd-9332-e4b4fb631c26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d155287e-3369-4be3-9b96-8e22075ae1b3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ecd996-97fe-4bbd-8664-82e0271a7b55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7815ac16-7bf0-4ee6-86d3-4b0f98f204a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa418e8f-3266-45c7-b206-b33e8933aee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a277b859-dc60-481a-b3e4-c0baa8c5b88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad4fee4-633c-431e-9cc1-f728be5ac053",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d196b9a0-268f-47a1-8f41-dff9b17aea76",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1eefe52c-b884-4668-9fc3-b4b3092497dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe1fc8d-e25d-41d9-9788-18feec31945d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6af3837-75ec-4726-84a5-5a56305ec093"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc08e043-d42f-457c-956a-a621e40a0033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "502f1e71-25ff-4a58-8895-62c7c85d1101"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77ab9a00-380a-4d38-8cbb-ecc6cfa14fa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70f7b09f-a21c-469f-af54-51b81872158b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "179057fc-d758-43b5-8baf-a43470d4a801",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "150e5427-be90-414a-99ec-95f12953d28c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "654269f4-9d43-497a-b835-b5dd274c1451",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cb5db02-9e29-478a-b462-88886852004f"
            }
          }
        ]
      },
      {
        "id": "9c5389b2-91b0-42d2-a71e-4d2f1823d0ef",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3d157a45-56d1-4613-8e31-d2f193438d25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88c74912-2709-409a-986e-c679d5c7a6cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89ec56fa-e1d7-467a-8da9-4390b33df8a9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e686ed4-0944-4f74-b6b0-b0e21016bf6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "56d6e82d-2c55-4036-91bf-6c557d801a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa2e009-29c1-4c21-8bd5-c606ae441cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eabbc73b-1ea9-4f00-ac34-9bc12ca8cbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebefee1-d364-4745-a192-dcd67c31dcf7",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cca675-c4d8-4701-8597-eff7c56b96ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cdd0094d-8572-4570-b3c8-43f903bbc737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d790a585-813a-4a86-b584-14fa6950b19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfcf7372-9dd8-4832-8bfa-f65fc778d656"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6eb3705-fb1c-4d97-86f9-146606f4f854",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7420764-0627-477c-8483-07386957878f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d154ab36-48bb-44e1-b50d-a55b7b6c66a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52532d1e-936c-4725-a56a-d469cc216d4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6575c42c-9df7-410c-9fb3-8d0ce527cc37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0cbde679-b15e-48eb-a7c2-c12b192de6f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53ce3fac-2c19-4f6c-8271-0b7214ec8590",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef473ced-0aa4-4b54-8852-a7718021b667"
            }
          }
        ]
      },
      {
        "id": "8a8d5375-4416-47ac-a593-c6c7b862a364",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd6aa1d0-1a62-420a-bd28-9507a92a268b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bbe2a04-afc0-4d8f-8651-0c5bf70762fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "937a973b-a8e3-4e96-9078-be93986a704d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bae0ec0-89e4-4bee-8b2b-ff1f9abaad00",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "29d89f71-d278-463e-a25f-a84746660fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900ac559-64b7-4b47-b114-df0dbe9e7c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecfa5148-5fb9-446b-b05f-21624ff04a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06f3b66-a3f6-4334-a821-137aa4215dec",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659e50fe-9e56-4c3d-b152-bd824986b171",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f8763e2f-b663-431f-8528-0e013e4079ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b11889f-2459-4d4e-a603-5cfc1ee1db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e2ec64a-9092-41bd-ac42-2c40fb79e5c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e100a20d-cae4-49aa-bf84-f93cfa90e40b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5517600-93cd-4318-bd88-083948e69b9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42e6f448-f4d7-4d13-bdf7-15fc96cb1704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3622bf28-aad4-49bd-a716-e85eb6572f5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d3b84ef-478f-446d-bd9e-4b374ac573e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b3526032-28f6-4041-aa52-33899b0d0d7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acdf519d-ca76-45d1-b7b7-18bca0ccf5cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "708f6781-6c05-4851-b662-50b05a212bea"
            }
          }
        ]
      },
      {
        "id": "0aee905c-fec2-4fdc-ab94-73201665c477",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b341a397-12c4-478c-a378-fcd98819e1aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fb0b255-0a78-4562-9ca2-c4adaa85fefe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "07d0505d-5ed7-4f54-bd19-3bd7b848fcbe",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0e090c7-be9d-4995-bbde-39af374d1686",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c6bc08a-c392-4fd3-96fd-f6fc9389c21b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 590.749034749035,
      "responseMin": 5,
      "responseMax": 6259,
      "responseSd": 666.2893057425916,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677372389732,
      "completed": 1677372553469
    },
    "executions": [
      {
        "id": "319f9ca0-0e8e-468d-8ecc-b5b792c013ac",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "26efed4f-b848-47be-aac9-fd3c6a497b6b",
          "httpRequestId": "1b6ae93f-995b-4b52-ad38-811a6f63e1f5"
        },
        "item": {
          "id": "319f9ca0-0e8e-468d-8ecc-b5b792c013ac",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b57498b9-28f0-47e1-98af-337e51ab0a2d",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "95015421-548f-4dc2-8f70-2d8ad0a7f759",
        "cursor": {
          "ref": "98710c79-6ff0-4b4a-a256-9fd0dfe88346",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fd7e6923-fff3-42e3-ae9d-0489ea505fa3"
        },
        "item": {
          "id": "95015421-548f-4dc2-8f70-2d8ad0a7f759",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2d07807e-0f8b-4b8e-a53d-d8729f1d3b20",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "db08fc06-54a0-4357-8fff-93f6089efd81",
        "cursor": {
          "ref": "f51a04e0-733c-4223-b5b6-ab25f022ef2b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7c155491-49c4-4d7f-b4ea-8b8ae1aee47a"
        },
        "item": {
          "id": "db08fc06-54a0-4357-8fff-93f6089efd81",
          "name": "did_json"
        },
        "response": {
          "id": "d8ab746f-0800-4b77-b848-d13734a4309f",
          "status": "OK",
          "code": 200,
          "responseTime": 867,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cda8c67-0768-43f5-9926-f3b0a9233488",
        "cursor": {
          "ref": "da754de2-943e-4685-b38b-5f534b4a0dc8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1adbeaf7-6cc6-4a65-a84b-702d440cf135"
        },
        "item": {
          "id": "4cda8c67-0768-43f5-9926-f3b0a9233488",
          "name": "did:invalid"
        },
        "response": {
          "id": "db109c05-8a7a-4a6e-8d98-0ee5d18fe8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1101,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cda8c67-0768-43f5-9926-f3b0a9233488",
        "cursor": {
          "ref": "da754de2-943e-4685-b38b-5f534b4a0dc8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1adbeaf7-6cc6-4a65-a84b-702d440cf135"
        },
        "item": {
          "id": "4cda8c67-0768-43f5-9926-f3b0a9233488",
          "name": "did:invalid"
        },
        "response": {
          "id": "db109c05-8a7a-4a6e-8d98-0ee5d18fe8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1101,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca7783f-506c-4761-87d2-c8b33e6b1099",
        "cursor": {
          "ref": "adeeb751-17a7-4b74-8bff-7d6390481d25",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "52a07cad-5853-49a9-9052-7705d365d970"
        },
        "item": {
          "id": "7ca7783f-506c-4761-87d2-c8b33e6b1099",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6d9500e0-fd72-44b3-b9d6-976a396d5e79",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1269,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfe3d03-38e2-4d96-be26-c364b5df209c",
        "cursor": {
          "ref": "b1430e08-7161-44ed-a058-8065d2f1aa93",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "185ee007-4752-4805-a494-b7ce214f3b44"
        },
        "item": {
          "id": "6bfe3d03-38e2-4d96-be26-c364b5df209c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3089a55a-e4a9-4d12-bab8-bd83a6fa4440",
          "status": "Not Found",
          "code": 404,
          "responseTime": 520,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572bb9fb-6ff8-4bc1-95d1-c8ea7505af39",
        "cursor": {
          "ref": "0d44642c-cecd-4c14-9026-3bcd0903b9a4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3f7fcf7a-7b58-4dd4-ace5-22e851b42372"
        },
        "item": {
          "id": "572bb9fb-6ff8-4bc1-95d1-c8ea7505af39",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "550912f9-1114-4cfa-97bf-0d6959ef275a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3c2fad-0a4f-40f6-82f6-70e31b25f130",
        "cursor": {
          "ref": "fdf4119f-01e0-4f08-8795-c5d2d9c192aa",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f6a3097e-18f7-4baa-b6e0-eb9662f174cc"
        },
        "item": {
          "id": "5b3c2fad-0a4f-40f6-82f6-70e31b25f130",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2b2d75a5-16d3-4f4d-a703-4332ea85e3aa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3c2fad-0a4f-40f6-82f6-70e31b25f130",
        "cursor": {
          "ref": "fdf4119f-01e0-4f08-8795-c5d2d9c192aa",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f6a3097e-18f7-4baa-b6e0-eb9662f174cc"
        },
        "item": {
          "id": "5b3c2fad-0a4f-40f6-82f6-70e31b25f130",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2b2d75a5-16d3-4f4d-a703-4332ea85e3aa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72525cc1-33d0-48de-8dce-df98948c0548",
        "cursor": {
          "ref": "f29dd4ce-5ca4-4464-a5c9-e140ab1025f0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "32cbe797-4264-44dd-9296-6c18297240de"
        },
        "item": {
          "id": "72525cc1-33d0-48de-8dce-df98948c0548",
          "name": "identifiers"
        },
        "response": {
          "id": "9e9f9ed6-14f8-4981-98de-abefa4ad7498",
          "status": "OK",
          "code": 200,
          "responseTime": 875,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bd1e26-fbe3-4927-96d4-7d4f842b02f2",
        "cursor": {
          "ref": "db0fba45-becd-4928-844b-0b8c730b6291",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "95c71ba0-29a0-45ea-82a7-3a1e7017f763"
        },
        "item": {
          "id": "e1bd1e26-fbe3-4927-96d4-7d4f842b02f2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fde3af19-3082-4151-8acb-e7bbd4ae2016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bd1e26-fbe3-4927-96d4-7d4f842b02f2",
        "cursor": {
          "ref": "db0fba45-becd-4928-844b-0b8c730b6291",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "95c71ba0-29a0-45ea-82a7-3a1e7017f763"
        },
        "item": {
          "id": "e1bd1e26-fbe3-4927-96d4-7d4f842b02f2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fde3af19-3082-4151-8acb-e7bbd4ae2016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a33883a-9907-4112-8226-f7884f5abbc0",
        "cursor": {
          "ref": "63fa538f-543d-4794-845d-686425091bd7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9f7b9ca9-81bd-4ed0-b418-90011f39d5d3"
        },
        "item": {
          "id": "8a33883a-9907-4112-8226-f7884f5abbc0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8f026ed4-5d2b-41d1-a35f-cc376f4861ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c57a6d8-f1f0-48f8-8372-6d25961766ea",
        "cursor": {
          "ref": "464df31a-6a5e-43ac-880b-093f8e01b142",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "84fa5419-73df-458d-a712-01f648dc2880"
        },
        "item": {
          "id": "7c57a6d8-f1f0-48f8-8372-6d25961766ea",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8f329880-4e59-400e-8953-79639a1f4099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57caf42-f291-4323-8fdb-78d086c55084",
        "cursor": {
          "ref": "0955b786-1055-4e03-8adf-5b00d96fb8af",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8893a6da-eafc-42e7-b54f-cde116eef15e"
        },
        "item": {
          "id": "f57caf42-f291-4323-8fdb-78d086c55084",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "604e81db-ee03-4235-a84a-c96f3a8da09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150183df-e51c-4170-8af4-2c92d00623ea",
        "cursor": {
          "ref": "7827c8b7-bcc7-4eb6-a26f-aca0f7c14b88",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c1c85253-9103-4bd8-8f69-4ba98897d8ee"
        },
        "item": {
          "id": "150183df-e51c-4170-8af4-2c92d00623ea",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "436efdf9-b6c0-4039-afd6-a01b7a02230f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3ff888-fda4-49f4-9777-61daf8b9c902",
        "cursor": {
          "ref": "0fa06205-4ff5-42c5-9119-b47e7d3ff6d3",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e16dbdce-e624-4fc2-8f53-670fa9b53e71"
        },
        "item": {
          "id": "fc3ff888-fda4-49f4-9777-61daf8b9c902",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e529d9b7-97d4-41be-a5b7-74b8abfcf7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b64727-e629-491b-b1e2-bf45a5b3727c",
        "cursor": {
          "ref": "101adf47-2545-4e42-99ed-81819526c9df",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "862a2dec-320d-46ef-9416-fe2b1e285fbd"
        },
        "item": {
          "id": "a3b64727-e629-491b-b1e2-bf45a5b3727c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f75005b1-5beb-42b5-98b9-6b089c02d73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9d5f0c-c372-4234-a139-58ad53f9fe44",
        "cursor": {
          "ref": "a0ad5180-a083-4e7a-905f-df5c68a30f5d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "801d1578-0782-4e99-87d2-c16e2a19e5b7"
        },
        "item": {
          "id": "9c9d5f0c-c372-4234-a139-58ad53f9fe44",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "303e27b8-7d6f-4bc2-97f5-9be5639a15dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc6a39a-0127-4822-82ac-a52acc798d9e",
        "cursor": {
          "ref": "0c69e8a1-a13e-4d9d-ab40-f9c93d4801bd",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4dff4582-033b-4bf2-a622-9f822cf8de6a"
        },
        "item": {
          "id": "ccc6a39a-0127-4822-82ac-a52acc798d9e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "40bdf877-1064-452c-849c-db7c3cd7cf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e10aa9-77fe-4af1-9ef6-f724e38aaa6d",
        "cursor": {
          "ref": "066fa2ff-9863-40ae-9744-a387c5910ef8",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "981a3041-4b52-4723-a265-f1871d1cfefb"
        },
        "item": {
          "id": "50e10aa9-77fe-4af1-9ef6-f724e38aaa6d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1fa1361f-e375-416e-86eb-f3a47df51493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4320b50d-8d1b-4c60-b4a6-281da2f4f79f",
        "cursor": {
          "ref": "9a484b22-7b66-4c8b-9a0f-8f6e60a0f44e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0801944d-cc81-413b-9abb-c4c986043661"
        },
        "item": {
          "id": "4320b50d-8d1b-4c60-b4a6-281da2f4f79f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "146e2df8-293b-4e74-ad51-155c59ecc060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f34ae2-5f1b-4830-b44a-65eb9f346eec",
        "cursor": {
          "ref": "3a44cbd2-b6a8-4310-874a-f6af2b9d9238",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ac43efaf-f914-4b32-8755-6d642283385e"
        },
        "item": {
          "id": "d9f34ae2-5f1b-4830-b44a-65eb9f346eec",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e1ab345a-ea3f-4c37-8de6-d850578ea46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28876bd1-63e2-46a2-93bd-8c2dcd1317d1",
        "cursor": {
          "ref": "f5d60f37-4803-4b62-b573-9cb3ce36524d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bb328912-8a78-4157-86a4-ffa25d606fb9"
        },
        "item": {
          "id": "28876bd1-63e2-46a2-93bd-8c2dcd1317d1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b5a4a9a6-b69e-4586-9906-2b4bc7185fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4208165f-4650-42d0-8be1-da1d4182c7a5",
        "cursor": {
          "ref": "5b04480c-9ffd-4cc8-bf7c-08853e8ac949",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2928961c-1850-416a-8f30-3f32c96294f0"
        },
        "item": {
          "id": "4208165f-4650-42d0-8be1-da1d4182c7a5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "24ef4a84-2b91-475f-971b-252f245ce585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7566c027-d901-4fc0-97c8-dd5a34a9cd73",
        "cursor": {
          "ref": "39c733e6-7552-424c-adc3-a46b0135f0c3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "652ba283-cbc7-466e-ab23-2e242b14d72c"
        },
        "item": {
          "id": "7566c027-d901-4fc0-97c8-dd5a34a9cd73",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ef4608db-8f46-4ad8-aad5-bc1eacfee1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f383ead-d194-4a45-a3a5-520e11517fda",
        "cursor": {
          "ref": "4c4c9984-6a48-4248-864a-5537369e8ce6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d2b12196-1fe6-46ad-888d-74a51f0abfcb"
        },
        "item": {
          "id": "5f383ead-d194-4a45-a3a5-520e11517fda",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cb32411e-b1c1-48f9-af63-e9633533eaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15432e2-ef4d-41b0-a0c8-06b63adc573e",
        "cursor": {
          "ref": "558530aa-87b6-40fb-b7ce-8c624dce9c85",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "35828c49-f6fa-4783-8405-6c0d92a78d26"
        },
        "item": {
          "id": "b15432e2-ef4d-41b0-a0c8-06b63adc573e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e351481f-2933-4622-ab5f-b5a00c0bb445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6bd248-ba2e-425a-b988-1bf40def9e58",
        "cursor": {
          "ref": "a0e53f77-57d0-4222-8444-78c3bb5c1227",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dbb1ffea-46c4-4775-9a18-e860e1bf9328"
        },
        "item": {
          "id": "eb6bd248-ba2e-425a-b988-1bf40def9e58",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4ed94a78-52a5-4d81-bac1-ea0e0f9d4a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd1337a-f4f2-461b-9529-2b0dd0fb31a9",
        "cursor": {
          "ref": "6bc46267-c8e6-400b-a1f4-583fec30525d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1dd1b5c3-d92c-4bbb-a754-53e1f8ac1fbc"
        },
        "item": {
          "id": "ecd1337a-f4f2-461b-9529-2b0dd0fb31a9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0bea7ffb-81f4-4dfe-a88c-748c17482f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac17f92-ba57-4700-9ccf-221a3c36553e",
        "cursor": {
          "ref": "41532094-f7ae-4031-bc54-e00460086eb1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b7c6c611-18e3-46fb-9be0-6b6260bb91a5"
        },
        "item": {
          "id": "1ac17f92-ba57-4700-9ccf-221a3c36553e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c0f56e3c-01f3-4b40-893d-42c8aea7805b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc20e57-82c8-4e01-8db1-e57c39e2bde4",
        "cursor": {
          "ref": "18a28d08-e33d-4070-9a71-c45f797c29f8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e657965a-e220-4ddc-97d0-852ea3a84587"
        },
        "item": {
          "id": "bbc20e57-82c8-4e01-8db1-e57c39e2bde4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ebcc5fa6-d8ce-47ed-b7ff-0f6963b29743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa18d33-c347-4d93-bcd8-2b35afe0dfdd",
        "cursor": {
          "ref": "0b449651-383e-4a04-9e15-5303441458bb",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "193f1d70-642c-4f42-be29-a3913092459b"
        },
        "item": {
          "id": "2aa18d33-c347-4d93-bcd8-2b35afe0dfdd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fb0962d2-2cae-41d1-aa4c-66f988b162f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ade1aa6-8fa4-4a0d-b05d-38ffa4b79e87",
        "cursor": {
          "ref": "9383d60b-8dad-4091-a063-6f733ae34a7b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "085c1a19-480b-4587-8847-d19dd0281b0d"
        },
        "item": {
          "id": "6ade1aa6-8fa4-4a0d-b05d-38ffa4b79e87",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9fb47c8e-87bf-4014-a792-7702df9a7cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db29a5a-d67b-4fb1-9d84-7503278e8a9b",
        "cursor": {
          "ref": "9db2b8bd-50c5-4a02-b698-34a50a600dd4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "31ed21b3-e886-48c1-9323-041bc507ffbc"
        },
        "item": {
          "id": "4db29a5a-d67b-4fb1-9d84-7503278e8a9b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5584eace-c9d1-47c5-beba-2f92e8abff9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a339a15-ce7d-4d5f-a314-9079b12cda66",
        "cursor": {
          "ref": "01bd6052-d0d1-4eee-b1d1-c48cec3321ec",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "41b8a5a6-a845-4430-9828-7fbe3247c3f4"
        },
        "item": {
          "id": "5a339a15-ce7d-4d5f-a314-9079b12cda66",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8c500d10-5397-46a5-a5bf-212394edc1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5895e21d-2d4a-49d3-b1b8-122ea15ad7e7",
        "cursor": {
          "ref": "841a3817-3f0f-4668-8c54-eaeb30447511",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3fe02da0-5531-4bd5-b9f2-3fd9e4a3f391"
        },
        "item": {
          "id": "5895e21d-2d4a-49d3-b1b8-122ea15ad7e7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7367082c-7779-40d1-bd57-a9ef2171823f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213d7c7e-4cfb-411d-9298-b2d6ba183ee3",
        "cursor": {
          "ref": "f7321e14-544a-49a0-9039-2f399c3282b2",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "80fdef2c-c787-4786-8e1c-ee23737682fe"
        },
        "item": {
          "id": "213d7c7e-4cfb-411d-9298-b2d6ba183ee3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4eeb40f7-1311-4121-b4cc-138efa253aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4efc0c6-d888-44ba-84fe-1bf8d7352f2f",
        "cursor": {
          "ref": "8fdc6317-0c05-4ce5-9139-8a7cfa9a3503",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8c11d16f-416e-4754-aca7-1e0148f581e8"
        },
        "item": {
          "id": "a4efc0c6-d888-44ba-84fe-1bf8d7352f2f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b674dbd6-2c84-433a-a771-9cf01de5e686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248fbc88-84a3-4840-b12e-b8285e0eaaa7",
        "cursor": {
          "ref": "55ebca4e-1f91-405a-b115-1babb62d9376",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b5bd76bc-7445-4f40-8fef-301d192c17d4"
        },
        "item": {
          "id": "248fbc88-84a3-4840-b12e-b8285e0eaaa7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1ca8a7c1-2bee-4100-b0fe-9ce6c624dcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f5581a-b16d-491d-a22d-e7acab56838a",
        "cursor": {
          "ref": "6f1321b2-9eef-441e-9364-674515e6bd20",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ea79840a-19c0-4274-9e34-903eae6b4306"
        },
        "item": {
          "id": "a9f5581a-b16d-491d-a22d-e7acab56838a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "70541238-e89e-4496-8531-5cdc5e6dfeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20413cca-05c4-4872-85d4-d2dd3c92a85a",
        "cursor": {
          "ref": "5945399d-0ebe-41e1-b6d8-a3c1ba239112",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d6708f9f-552b-4237-b498-1980c54db094"
        },
        "item": {
          "id": "20413cca-05c4-4872-85d4-d2dd3c92a85a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "25bd9994-400d-414a-a9bd-99986aebd449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b578f6a7-3a0d-4b1d-88ca-b00d592e1ac2",
        "cursor": {
          "ref": "80d4a324-b942-4872-b890-caf335aa7226",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c65bc47e-6e60-4912-82ce-c114ea74c7a7"
        },
        "item": {
          "id": "b578f6a7-3a0d-4b1d-88ca-b00d592e1ac2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ece6675d-7856-4ec3-bb0c-9cf248aefa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598d22ea-974c-4f41-b616-feaac32f25b1",
        "cursor": {
          "ref": "164d5e4c-5c84-4ca0-86fc-d29e52365557",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "941727b8-7e09-4c81-a57b-86e8ca64962c"
        },
        "item": {
          "id": "598d22ea-974c-4f41-b616-feaac32f25b1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "12d4b8bc-96d5-493c-930c-1142c5fd1add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e205a14-23f3-4319-b668-8152744907b5",
        "cursor": {
          "ref": "bca7cfad-6102-4dd1-b2ef-3c9668bec4aa",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2bdd8722-6362-412a-b27d-00949f59ca95"
        },
        "item": {
          "id": "2e205a14-23f3-4319-b668-8152744907b5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "14aef3c5-c37f-4ab6-9ce1-89ab477d1c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e87d7e8-8cd3-4aa1-bc7b-0fea811a526e",
        "cursor": {
          "ref": "8f1f55a7-1a5d-4461-80a2-5ac3ab8279de",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "acf8503f-79dd-410b-97e5-0f4b902e90fc"
        },
        "item": {
          "id": "5e87d7e8-8cd3-4aa1-bc7b-0fea811a526e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3332629c-0459-4ffb-a464-eb463d06a369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70ee673-7f26-4033-bd14-42ab43f46c4a",
        "cursor": {
          "ref": "6284ae2b-cb4c-4f87-bc22-38cae1f71ada",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "af94c394-0a8f-4bef-8fb9-c262677e0c8b"
        },
        "item": {
          "id": "e70ee673-7f26-4033-bd14-42ab43f46c4a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "23675103-1b8a-4170-87c9-2dcaf48f9c9d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 611,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85272c22-1509-4f3c-b8e1-67ea34a7178d",
        "cursor": {
          "ref": "a6d56b5e-a549-4c47-b155-c28c14592009",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "76d3918f-7309-4a8f-b43d-f8d488d61bd3"
        },
        "item": {
          "id": "85272c22-1509-4f3c-b8e1-67ea34a7178d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5dc237d8-262e-4240-bc31-03f082dcc04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0e22db-4515-47ab-b70a-b8d420bbc084",
        "cursor": {
          "ref": "89375821-6e16-4e30-bce4-25f457decc86",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "69805a90-b832-4550-82b6-00daaeb85ad9"
        },
        "item": {
          "id": "3f0e22db-4515-47ab-b70a-b8d420bbc084",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "20bbcd7b-ca97-40d2-acc9-c538a64cedd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c85690c-fa41-4cb4-9f94-2407046e3cd4",
        "cursor": {
          "ref": "ef9892e9-cc9c-48b5-960d-01821cc3845d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "af44a8a4-f990-47a9-a40c-59a3f2401694"
        },
        "item": {
          "id": "9c85690c-fa41-4cb4-9f94-2407046e3cd4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "06781f4f-1299-4910-b1ff-52ff56645da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee041c4-34e4-46e0-a67d-6c8f5b0c6633",
        "cursor": {
          "ref": "aa6f8184-1b25-43aa-8aa0-3727aedd8971",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b262a8d5-3eef-4a4f-87f8-e8d4daa92a0e"
        },
        "item": {
          "id": "7ee041c4-34e4-46e0-a67d-6c8f5b0c6633",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "894c4ce9-f5ec-490e-af72-45cff6f9c793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0016e7-eef0-4feb-a3a2-e472bccdb678",
        "cursor": {
          "ref": "60b6c153-a141-461a-9a74-f4d4c8eb68ae",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "85d577d5-5f6e-42e6-8f4a-9d121a18241f"
        },
        "item": {
          "id": "2c0016e7-eef0-4feb-a3a2-e472bccdb678",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "73ec1d6a-efd4-4846-b272-30dd9ef6cc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d719d1-32f9-4b74-b575-f0fe15bbed7c",
        "cursor": {
          "ref": "256e23fe-3954-408b-b54d-af8e3046d946",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a01771b5-cef0-4ab8-b31c-4429db6f0381"
        },
        "item": {
          "id": "20d719d1-32f9-4b74-b575-f0fe15bbed7c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "12141161-be87-4669-89ac-889dbd3980d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a464b3-a896-4825-b15d-f8007e64e134",
        "cursor": {
          "ref": "7e7f8f61-1759-49e9-8963-c07895c7bc90",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a7e209c6-8004-41fa-b4f4-5047f5609f26"
        },
        "item": {
          "id": "d9a464b3-a896-4825-b15d-f8007e64e134",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b72a3c0e-607d-4be8-ba99-72384dbd827d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 577,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a387f7-1f96-495b-b0c8-8d50ecb5a470",
        "cursor": {
          "ref": "cedce42b-9c7f-4665-997f-a978dc96b369",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "56b92b7e-e861-4a96-bb1a-2dbf190b5843"
        },
        "item": {
          "id": "a0a387f7-1f96-495b-b0c8-8d50ecb5a470",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "75d6fc0c-45b0-493a-b7d5-6cf08d4b0e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e82f44-a4f9-4ca3-b69b-bb1f9eb3ce4b",
        "cursor": {
          "ref": "3adb8590-c4c4-4c3d-9f9f-6b516b1f013e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "65ca747e-716f-4986-bf31-a2173c225160"
        },
        "item": {
          "id": "09e82f44-a4f9-4ca3-b69b-bb1f9eb3ce4b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bd2fae92-e994-4326-bc77-eedb5be36ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4acb616-ff75-415c-8062-fa83ac691a07",
        "cursor": {
          "ref": "8c474b0c-fa62-481a-9ffa-dcf0a5b6f23f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8d3dee60-7eb3-4a14-a07b-185ec33e4503"
        },
        "item": {
          "id": "a4acb616-ff75-415c-8062-fa83ac691a07",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "79cb40e0-4d4b-43a8-8af5-3f1f8dbc17b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d655440-c547-4faa-813f-ad2ab0009399",
        "cursor": {
          "ref": "f29709cf-86d6-413d-a8b3-69d834d42b54",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "371c7fca-83ad-48f1-9213-dce93e5e4362"
        },
        "item": {
          "id": "0d655440-c547-4faa-813f-ad2ab0009399",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "01d11697-8298-450c-8422-72a88c3aea34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73160b2a-1c2d-46fc-8a06-eee21e2927d6",
        "cursor": {
          "ref": "9c54b2f5-9196-4f25-9090-c9ef6e6ec8c9",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a1d6a7ba-689c-4cf7-b102-cdb887571e56"
        },
        "item": {
          "id": "73160b2a-1c2d-46fc-8a06-eee21e2927d6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6bededda-802d-4f71-882c-bbe29cc41b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812d4e43-8d83-410a-bf18-0e1cb5be6aff",
        "cursor": {
          "ref": "10f4e237-554a-419b-ac52-f3109489f528",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1b708902-f715-4533-8b95-74c874d21d7f"
        },
        "item": {
          "id": "812d4e43-8d83-410a-bf18-0e1cb5be6aff",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "69af03b3-5d58-4fe2-ac0c-3e37d3a969b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1133,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51394777-ae93-4c25-a822-ac960ea52dd5",
        "cursor": {
          "ref": "931a2e08-b2c2-4871-accc-9050a9a9faa8",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5db23432-15fd-4540-a2cd-3346e3138028"
        },
        "item": {
          "id": "51394777-ae93-4c25-a822-ac960ea52dd5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d89b2b41-e56f-4111-ab30-9b705cd9ce2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1350,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44bf1b0-3f9c-40f6-a4d5-a1947336ed04",
        "cursor": {
          "ref": "64c23d7b-dabf-492c-95c5-df04b961de91",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1d4f8e4d-9392-4a2d-bc22-574f0cff2c11"
        },
        "item": {
          "id": "f44bf1b0-3f9c-40f6-a4d5-a1947336ed04",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f8018da9-bea9-495f-9ab3-9b256f2a5bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1261,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6779c25-d1cd-44ee-a2a0-93aef204a677",
        "cursor": {
          "ref": "a0dc0019-6079-4139-9c1c-8b3b53aa71c3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d5b15dd3-3acc-4fe0-b5e5-cd608569a0f1"
        },
        "item": {
          "id": "a6779c25-d1cd-44ee-a2a0-93aef204a677",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "db54e554-cfc1-41c1-b04d-4f227e134b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1208,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c094294-ddcc-4025-a004-65be292f3081",
        "cursor": {
          "ref": "cf548aa2-7931-4918-80c0-51f997ecb90a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a33045b6-5e5f-46fa-a7fb-4aad6d0579c0"
        },
        "item": {
          "id": "4c094294-ddcc-4025-a004-65be292f3081",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "301e6e90-6ff4-4c44-8496-da74c3946e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d14c97-63b4-43ba-bf99-c1bbca882330",
        "cursor": {
          "ref": "95e86d64-159f-41bb-ae2e-74e1b5071202",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "065a8014-09bb-4a5f-bf0f-39128156e02f"
        },
        "item": {
          "id": "79d14c97-63b4-43ba-bf99-c1bbca882330",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4ee5307c-5cd8-4e40-9d7c-11d8cad5f419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1241,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a8c290-70ab-4bc6-8f0c-538925d92bdf",
        "cursor": {
          "ref": "5653b627-98dc-4326-9726-0f88fa117986",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "08fd52a4-bff7-4fba-a910-1b1b5a3c217e"
        },
        "item": {
          "id": "34a8c290-70ab-4bc6-8f0c-538925d92bdf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "12ca0df2-628a-4c68-9cd9-61061557f7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1237,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623fd753-9e2c-48de-ba54-bd7de4283c30",
        "cursor": {
          "ref": "a4074e93-4430-4469-a705-03597a6a6556",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a0435156-429b-4455-b02b-4d15a6f09788"
        },
        "item": {
          "id": "623fd753-9e2c-48de-ba54-bd7de4283c30",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "deb7dfda-f0eb-41f6-b1a5-17bea281ba17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6495ad83-e7e3-488b-907e-3fd3a136b7cc",
        "cursor": {
          "ref": "a47ff143-f2fd-4c85-bd4f-a8f3f5224cec",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "05706412-fa56-40db-b8ab-9c629846522e"
        },
        "item": {
          "id": "6495ad83-e7e3-488b-907e-3fd3a136b7cc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "68a0b970-d08d-4825-bc44-81f87ff8e194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baa3bde-d5cb-4a5d-903c-91c17ad05d02",
        "cursor": {
          "ref": "328794cf-ff76-4398-8d78-d3623614263e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4fcfc429-5c18-431e-982a-06652e4c6500"
        },
        "item": {
          "id": "7baa3bde-d5cb-4a5d-903c-91c17ad05d02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bdada5f7-c711-4caa-80d9-d070155311b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1422dc09-902c-4d58-b052-5ff6810962e6",
        "cursor": {
          "ref": "593c388e-1340-4dca-8168-abe586c0a057",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3de04c02-359b-47b8-b68d-2aea40471fce"
        },
        "item": {
          "id": "1422dc09-902c-4d58-b052-5ff6810962e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "01aa5506-c2e1-4436-902e-890224777313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9894639-6bee-4264-a791-406a65debd14",
        "cursor": {
          "ref": "3c44c46f-2d42-4eac-9c32-f50030fcee9b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4d067439-3c12-4677-a474-45dfedc88344"
        },
        "item": {
          "id": "e9894639-6bee-4264-a791-406a65debd14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4fee27e2-072d-4545-85a3-00096f890f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceeca60-5a56-418c-af11-cc9bea9c819e",
        "cursor": {
          "ref": "0d354440-6fdf-4f86-bcd0-03c16ac9993d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9b044886-2560-4011-8018-2b1d136059dc"
        },
        "item": {
          "id": "cceeca60-5a56-418c-af11-cc9bea9c819e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c18e6a41-e8a3-47b2-a108-db94012ae05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2c3e97-a734-402c-ad23-e8a1da3cd374",
        "cursor": {
          "ref": "c9cec9e2-0d0c-4203-8f95-bb0a70714346",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "988310d0-87a6-4877-b81f-b200592e6026"
        },
        "item": {
          "id": "0e2c3e97-a734-402c-ad23-e8a1da3cd374",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "33fc75c6-2cd1-407d-971a-87b7f3f9c5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa3ceba-d090-486e-acd4-a291fa93a43e",
        "cursor": {
          "ref": "f40710a2-14f3-416e-9210-29b1c272d9a8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "30c9e5da-ffc5-43aa-a4ea-f3d16cbd19e7"
        },
        "item": {
          "id": "6aa3ceba-d090-486e-acd4-a291fa93a43e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d5a6bb50-c20f-4815-9a6f-3cea01753146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e680c3cb-2bcf-4ec4-b9a1-53fde2b938ff",
        "cursor": {
          "ref": "848fe587-39cf-46b3-888a-1a233ba36cf4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a1750930-273c-443d-86c1-6234dd5d20f8"
        },
        "item": {
          "id": "e680c3cb-2bcf-4ec4-b9a1-53fde2b938ff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "415b1161-e3c2-459a-bc5e-fc374bf44c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1be34b-4f90-4df4-958c-c916a59340c7",
        "cursor": {
          "ref": "d1e805b2-9b02-4a94-be7e-9dfb3d72969d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "13e59a0a-6db9-4fe8-b5aa-665f18611594"
        },
        "item": {
          "id": "6e1be34b-4f90-4df4-958c-c916a59340c7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e75d4ade-48c8-4e44-9817-59045f995198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eeb3ab-b96b-472b-b75b-f281a7514a2e",
        "cursor": {
          "ref": "c92b20ce-1e48-4dcd-b2f9-71bddce492c2",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "021d7468-8b00-4c15-9583-23e3b98fe660"
        },
        "item": {
          "id": "84eeb3ab-b96b-472b-b75b-f281a7514a2e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "141c317c-292b-44d8-96d3-f1d0009b5ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824ba20a-a65c-456d-884e-0ae2c76bcf90",
        "cursor": {
          "ref": "97d03395-cde9-4b2c-a98d-e39c735ba6c9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "92785831-51dd-4b22-b2f7-4666a5dac8e9"
        },
        "item": {
          "id": "824ba20a-a65c-456d-884e-0ae2c76bcf90",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2767c36f-4ad3-4a01-8b19-1171ee2fdfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4c5f7f-6266-4ba5-a081-c7533429fa16",
        "cursor": {
          "ref": "0af08d87-f61c-48b7-b0ec-25a0a46a499f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ada93657-e078-4106-8055-0d5478e30fdd"
        },
        "item": {
          "id": "cd4c5f7f-6266-4ba5-a081-c7533429fa16",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a2a4d8a4-de98-4280-b759-338f9fada55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687f5f26-1719-4b40-8c81-41bfb8272a2f",
        "cursor": {
          "ref": "1aa6673f-49b0-4196-b701-2832f286100a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0eba9023-50f6-406b-9a03-add23f3f4d5b"
        },
        "item": {
          "id": "687f5f26-1719-4b40-8c81-41bfb8272a2f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cec9972e-9aad-4937-8382-a6d94df5fdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018b759a-304d-4954-875b-101dcf1d99a7",
        "cursor": {
          "ref": "dfcf16a7-e168-45cc-8598-bcb36b9ade3c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "20e8461a-facc-435b-82ba-5ddd99391e7b"
        },
        "item": {
          "id": "018b759a-304d-4954-875b-101dcf1d99a7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f61abda7-1ee7-481a-96e6-50c4490f97c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26a9e1b-0ef8-46a7-8559-cffea8a53b76",
        "cursor": {
          "ref": "42e6ceb7-103e-4b53-abe4-0aa5de57042c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "16351b81-8057-41cd-a5ce-26a296664c63"
        },
        "item": {
          "id": "f26a9e1b-0ef8-46a7-8559-cffea8a53b76",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "765a5322-24bd-4a77-8151-bc2a9df47d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d945eb18-e902-4b6d-b274-951309e25835",
        "cursor": {
          "ref": "c27fa8cc-bb95-4ebd-b605-01ff519b02cf",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "15d6d07f-e7e1-4b42-80b1-41bf0d32603e"
        },
        "item": {
          "id": "d945eb18-e902-4b6d-b274-951309e25835",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "492d97fe-5c59-4665-b0f0-c4cb55b00b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bbb87c-55e7-43b7-9ab6-e562f7648fdd",
        "cursor": {
          "ref": "7be6bd38-f682-404b-8e82-4b639613bad6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f86d206c-f348-4b17-ba15-687e71c62ce1"
        },
        "item": {
          "id": "66bbb87c-55e7-43b7-9ab6-e562f7648fdd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fcfbc24e-4e2f-4dbb-b1aa-e62c3eab7dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa948c2-b3aa-4af5-8309-12dc654e9525",
        "cursor": {
          "ref": "1497e273-eef7-4845-a67f-5f32648c43b3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "48e542a9-bb1a-4c25-ba14-ff98437d4147"
        },
        "item": {
          "id": "daa948c2-b3aa-4af5-8309-12dc654e9525",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6a4d3324-9306-43cd-93c0-6b9e2597b0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fe3204-85b7-4e97-b541-b857cb5bdfc3",
        "cursor": {
          "ref": "6ab59139-5e13-4fde-a9cd-4c732c0c2f1b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a9b5b0a4-41b4-44d5-8582-c82fdcb5064e"
        },
        "item": {
          "id": "d2fe3204-85b7-4e97-b541-b857cb5bdfc3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "476bd4ed-c061-4fca-8193-baaf0edd87c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b90b8bf-a135-458d-ab12-d549627b0f86",
        "cursor": {
          "ref": "a526c89c-cb4e-4a46-8bd5-81a58042cbd3",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3b6b5d31-5dda-4a71-8c32-ae8e85a7c195"
        },
        "item": {
          "id": "7b90b8bf-a135-458d-ab12-d549627b0f86",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0b96f9bb-ab2c-4c14-87eb-1189a0367fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2011c13b-e50c-4136-98b6-cd56065fa7ac",
        "cursor": {
          "ref": "43101443-b34a-4a1e-aba7-54bf094f51ca",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "99174065-e80d-4c65-a707-9978ddcaefb3"
        },
        "item": {
          "id": "2011c13b-e50c-4136-98b6-cd56065fa7ac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5978068d-4873-46a8-b441-0135a22a53f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830cc0a4-5db4-4e03-b46e-ff68092ea3dd",
        "cursor": {
          "ref": "219cbba3-8b30-498d-9c3e-78825977bd7a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6d64aa29-a5fb-4a45-9212-57bbc516c3ee"
        },
        "item": {
          "id": "830cc0a4-5db4-4e03-b46e-ff68092ea3dd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0b401b36-bd3f-48f6-b3ac-dd4f3a282068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db7d961-f9a5-48ee-af48-fca605bae0d8",
        "cursor": {
          "ref": "cb50d269-299a-43bd-94a5-1d6d1f1d071e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "da26fbcc-e6ea-4228-85ea-90e942bd6919"
        },
        "item": {
          "id": "7db7d961-f9a5-48ee-af48-fca605bae0d8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "38036cb7-66e1-42ee-b628-97858f05f193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13be982-7af6-4b2a-a049-44911c298b52",
        "cursor": {
          "ref": "56a86bcf-083d-4a5a-a98f-ceb3a1a3bbc0",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0cda96c5-9907-4289-95d3-b041758907f6"
        },
        "item": {
          "id": "a13be982-7af6-4b2a-a049-44911c298b52",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0c2d6a21-d271-4bb9-882f-90ec9544ee35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c8626f-50d5-4730-a696-1ff743548b70",
        "cursor": {
          "ref": "3ef05580-56a3-4d72-994c-6170ada43c3a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1df44d01-c259-4638-aacd-85cc6e7d6d0c"
        },
        "item": {
          "id": "71c8626f-50d5-4730-a696-1ff743548b70",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "57a7789c-38d5-4638-b3a5-238d995a696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac29c66-03c6-4475-b81c-03a08f98ffda",
        "cursor": {
          "ref": "7dcb99e5-10dc-4103-b90a-d1611356167e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "57345b32-856a-4d7b-a3bc-049909ae027b"
        },
        "item": {
          "id": "6ac29c66-03c6-4475-b81c-03a08f98ffda",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c5261737-8ecc-4ecc-924e-7a84fab3372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa860a2-68ee-4294-80bf-8c81992f04ab",
        "cursor": {
          "ref": "71eaf9ee-e939-416a-9e80-553b63a318be",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "065fc942-e963-4888-800c-074ddb555f7c"
        },
        "item": {
          "id": "6fa860a2-68ee-4294-80bf-8c81992f04ab",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a5c5ce2c-2b15-42b2-8681-b7b82bdf5f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dc7f8a-b2aa-44b9-8873-c65d43e0d899",
        "cursor": {
          "ref": "365eeaed-7482-439e-9969-9e3317cce444",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cd0fe3a9-a1ba-4d27-8330-5c5263b4d360"
        },
        "item": {
          "id": "17dc7f8a-b2aa-44b9-8873-c65d43e0d899",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "65a73fa5-eeab-4c11-872c-04033152f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa16dcf-6412-4685-9e6f-2cafbf085a32",
        "cursor": {
          "ref": "07100f0b-58a7-45a0-a554-110c3355ec6e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "773ef05d-62b4-4dd3-b7d3-9fd3f0ef872f"
        },
        "item": {
          "id": "1aa16dcf-6412-4685-9e6f-2cafbf085a32",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "90265a53-844d-4e09-94ec-fc8b1f513b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a013d802-da18-4d88-abfd-50c4de28c203",
        "cursor": {
          "ref": "99e1c4e1-220c-4ea5-ac04-9588cce0e002",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "22e6b536-c46f-400f-9327-9420fac9ea1d"
        },
        "item": {
          "id": "a013d802-da18-4d88-abfd-50c4de28c203",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "802b4ebd-b88a-4717-9efd-404b1c314808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee66814-ee34-40ac-947e-b9c9be7973a6",
        "cursor": {
          "ref": "a7467882-eb0f-4ab2-9c3e-ba5ace367f2d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ecd09108-584e-4dca-bd7d-25937b93b6ca"
        },
        "item": {
          "id": "eee66814-ee34-40ac-947e-b9c9be7973a6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1bffab96-6552-4100-acfd-b1ac3c67435c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0205b1ed-0fad-480e-9165-728657710c54",
        "cursor": {
          "ref": "ab082135-d737-466d-8a40-a588c03d10ac",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4843afb0-2c08-4867-b4a6-287ecb6ecec5"
        },
        "item": {
          "id": "0205b1ed-0fad-480e-9165-728657710c54",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c1d469f1-fd3b-4d43-8e02-4a22de4353cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bda945b-016c-4c23-8cee-3e0b9459d17e",
        "cursor": {
          "ref": "0485c3fa-4215-4f72-ab8d-66ead4674973",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "17707488-1a5b-4892-b3cf-9d28e6eb8c68"
        },
        "item": {
          "id": "2bda945b-016c-4c23-8cee-3e0b9459d17e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5423d44e-a2b7-4ad3-859f-169e780f000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfac9b6c-fd9e-4b44-88b8-c0ff075afc2d",
        "cursor": {
          "ref": "11a74d45-9392-4a15-bba6-39e66efaa040",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f05dbbe3-166a-44ae-b1dd-713732ad2ebc"
        },
        "item": {
          "id": "dfac9b6c-fd9e-4b44-88b8-c0ff075afc2d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "77e0d936-0ea6-43ef-8d1d-f823314fc016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14398e87-a568-427c-b210-60f011bba6bb",
        "cursor": {
          "ref": "6e1fb3df-d074-40b4-8423-f42395d1c334",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6b353f9f-9108-41c3-8cd3-fc2a26118185"
        },
        "item": {
          "id": "14398e87-a568-427c-b210-60f011bba6bb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "52c58a22-016d-4ee6-9f82-99af5d31403a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f7a96d-f46e-47e5-976c-9bc940c106c0",
        "cursor": {
          "ref": "9206cf67-819e-409c-975c-66ab7ffb8e95",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8c2b4c3f-519e-4490-af8e-cf6e8c5b68a2"
        },
        "item": {
          "id": "25f7a96d-f46e-47e5-976c-9bc940c106c0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "797a9a65-9570-4aec-811a-9a4e0a6c594d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca08c8e7-cf8e-40b8-b8fa-89ec937a7b9c",
        "cursor": {
          "ref": "45cdb924-ce10-4851-ba08-7578340e00c0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "43962af0-6442-4145-8f04-8ea6b1481524"
        },
        "item": {
          "id": "ca08c8e7-cf8e-40b8-b8fa-89ec937a7b9c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c6bf1c7b-2d2f-400e-8370-0f9d830e1fbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86472aee-cdea-4f10-8df4-dfc48d5b34fd",
        "cursor": {
          "ref": "181e30ea-f1d7-45c3-affd-a091c3bcb08d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3aa01b30-67f9-45df-a383-c8fafce0b9ea"
        },
        "item": {
          "id": "86472aee-cdea-4f10-8df4-dfc48d5b34fd",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4509a153-e47d-434d-8b1f-02bb5aeba972",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 508,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df2c97f-9e54-4ef6-8183-2a0ec958d3d1",
        "cursor": {
          "ref": "c914d129-c0c4-460e-85bd-c7af09b2df88",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1e692c59-90ca-4103-921d-c859032d3925"
        },
        "item": {
          "id": "4df2c97f-9e54-4ef6-8183-2a0ec958d3d1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b9476a7f-2930-4984-b8dc-55d668d616ae",
          "status": "Created",
          "code": 201,
          "responseTime": 4763,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a58e1f7-e034-4994-aadf-06786177b96e",
        "cursor": {
          "ref": "2c292dad-4bde-4f1f-b3c2-0e4d9c77dc66",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "81f2b689-60b9-433b-a187-90c3d6df1f5b"
        },
        "item": {
          "id": "4a58e1f7-e034-4994-aadf-06786177b96e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "43ebe952-29ef-4e80-a544-b5030c8ccf67",
          "status": "Created",
          "code": 201,
          "responseTime": 3938,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f1afc5-a0ad-4d3c-b23a-7bc16f843c74",
        "cursor": {
          "ref": "83abf64a-dbc9-4025-9f88-0316bde12d9a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aa04f67a-544f-4b0e-899e-34d9b0d11ff3"
        },
        "item": {
          "id": "b5f1afc5-a0ad-4d3c-b23a-7bc16f843c74",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b92c799b-c5d2-4d77-ade4-7a5475bff760",
          "status": "Created",
          "code": 201,
          "responseTime": 6259,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebc0a7f-720c-4a94-85bc-384c555d8605",
        "cursor": {
          "ref": "8133b069-4f8d-40f8-988c-a9dfe4dd29c5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f63646f2-acea-4c9a-af93-c30308f516a3"
        },
        "item": {
          "id": "3ebc0a7f-720c-4a94-85bc-384c555d8605",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "54164e4f-d9e7-4e95-959e-5c039aadfee0",
          "status": "Created",
          "code": 201,
          "responseTime": 4107,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "76436cbf-fa8d-4433-a1db-76860baa631d",
        "cursor": {
          "ref": "2d302720-1219-4a47-b832-4b4e3ed57ca4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "888b453a-80d2-4285-a11c-175608cfec45"
        },
        "item": {
          "id": "76436cbf-fa8d-4433-a1db-76860baa631d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ff32bd4e-aee2-4f85-ab57-db6ab1580bfd",
          "status": "Created",
          "code": 201,
          "responseTime": 4993,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef2119-6e90-4baa-9159-4407f707ba32",
        "cursor": {
          "ref": "85da75c5-167f-446c-ade9-8bc3536bcdb9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "24bd4ee1-463c-414d-9609-54150a65b0eb"
        },
        "item": {
          "id": "e3ef2119-6e90-4baa-9159-4407f707ba32",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "760b262a-cf7c-4299-b883-191b350641dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef2119-6e90-4baa-9159-4407f707ba32",
        "cursor": {
          "ref": "85da75c5-167f-446c-ade9-8bc3536bcdb9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "24bd4ee1-463c-414d-9609-54150a65b0eb"
        },
        "item": {
          "id": "e3ef2119-6e90-4baa-9159-4407f707ba32",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "760b262a-cf7c-4299-b883-191b350641dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7090bb53-a562-4406-8f8d-1bbbfb6b2a36",
        "cursor": {
          "ref": "f7336580-372f-4b72-9741-dbdacd2b5596",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "51a35fdf-87c4-431b-bb20-c3569abdecbd"
        },
        "item": {
          "id": "7090bb53-a562-4406-8f8d-1bbbfb6b2a36",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d4d1d61c-296b-4518-a7e5-9781775ccfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459f8489-70b4-4f09-bada-202a9719c8a8",
        "cursor": {
          "ref": "888486f0-29df-45d9-9a03-850ca464d7c8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0e8da9cd-afe1-4d9c-ab37-f7738bcd4111"
        },
        "item": {
          "id": "459f8489-70b4-4f09-bada-202a9719c8a8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d4b18124-3b32-4db6-b66a-c74381695643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d4b433-6cfb-4deb-a76f-11a4781485f8",
        "cursor": {
          "ref": "c109a9b6-2342-4e19-8dcc-3f33ca93f4d4",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "907a550f-8c8f-42a1-b127-df7c44255bf4"
        },
        "item": {
          "id": "21d4b433-6cfb-4deb-a76f-11a4781485f8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e265bd92-e36c-4de6-9ad6-8f42ff57a249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe7a732-e09f-44fd-b2d8-a24b2ce53238",
        "cursor": {
          "ref": "6571b5f0-0b51-40e8-b1d4-5f9ce39c12c2",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ef30b584-f646-4c52-959d-c7eb904837b2"
        },
        "item": {
          "id": "afe7a732-e09f-44fd-b2d8-a24b2ce53238",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4236d2af-69d3-4fab-a9f9-f79f1a5490e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4254db-9916-49a4-ba80-ba8d80408743",
        "cursor": {
          "ref": "d7be2b90-6f8f-4cda-934d-d4e29b5d63f7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b9ccc3d6-28ca-4d23-ac36-b599a06c8b16"
        },
        "item": {
          "id": "ff4254db-9916-49a4-ba80-ba8d80408743",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4066508f-78af-4bc1-9f47-7f98793ca04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d575baa-767c-4ffe-959e-7a4715414db6",
        "cursor": {
          "ref": "4213ac0a-917c-47c5-bf46-a5dcfa596f05",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c4e278f0-0814-452f-bf79-92b67df2b814"
        },
        "item": {
          "id": "7d575baa-767c-4ffe-959e-7a4715414db6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b7d93193-fd7c-4129-a6be-4e619ade0a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4039b79b-a2db-4dd6-84e6-27cbbad65f00",
        "cursor": {
          "ref": "fb61d889-8c43-46b2-809d-ca3b483436fe",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8594e2fe-9a07-4df9-8239-21f16ec3f2ea"
        },
        "item": {
          "id": "4039b79b-a2db-4dd6-84e6-27cbbad65f00",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ca59bb8-cb42-48ad-bba9-588d8ff5a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e1a6bc-3e0d-4fd4-8de0-11cef643594e",
        "cursor": {
          "ref": "0b056e7d-9fe6-44a3-aca7-8d54bfa7414f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e134cd45-a82a-4a93-b226-a92b25aaefd0"
        },
        "item": {
          "id": "86e1a6bc-3e0d-4fd4-8de0-11cef643594e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ee0b5459-1971-4fe8-820d-b7bfc4f4da75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7677f7b-51cb-481e-a7e7-b5d316b36f68",
        "cursor": {
          "ref": "2b31bfc7-3a6e-4644-ae66-a89921de7993",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "84480a7a-de2b-4757-a135-65c3ef4220e6"
        },
        "item": {
          "id": "a7677f7b-51cb-481e-a7e7-b5d316b36f68",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4096c2ec-5328-44f0-8b94-91205aee39d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b7cd9a-e81c-4100-9939-2af658a6d59a",
        "cursor": {
          "ref": "57ac55ab-8941-49f9-a5a8-04ee55268ffe",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6fd0d993-3952-4252-8dfc-42bc3127d7d1"
        },
        "item": {
          "id": "87b7cd9a-e81c-4100-9939-2af658a6d59a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "03aa519a-4b7d-439f-b7b2-15be2a241006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0000dd-3a20-4f67-9838-d7912e1ed530",
        "cursor": {
          "ref": "110180bf-fa64-4b3b-b8be-c2e4ef7e8f15",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "da830f03-25d2-4ec5-a030-89a173c90300"
        },
        "item": {
          "id": "3e0000dd-3a20-4f67-9838-d7912e1ed530",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ee41d1ba-d293-4d27-adad-9719f07233ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3fdd1f-fab0-49be-a3f3-b02b145c2441",
        "cursor": {
          "ref": "c58b4c07-18f0-4c1b-a8e2-d8e89b52346b",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "888507ed-089a-4528-8ebb-56511c34b701"
        },
        "item": {
          "id": "7f3fdd1f-fab0-49be-a3f3-b02b145c2441",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "288e393c-f6f6-440e-9af1-1a00345cf324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4f949e-b19f-42dc-b1b2-c4061a2a6feb",
        "cursor": {
          "ref": "e3200581-f9a4-4c01-b61e-0805d4530be0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "65ea1558-b90c-48b5-9ee1-0d3e8680ef2b"
        },
        "item": {
          "id": "0a4f949e-b19f-42dc-b1b2-c4061a2a6feb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ce674504-cf53-448f-b9d7-31e065628fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04261f95-e8d1-4917-8cf6-4fb4a1f6ff01",
        "cursor": {
          "ref": "1cadc0c0-9275-4716-92c0-297c3142e135",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "68bc51e0-1cb0-4ee1-b55f-505366f92f35"
        },
        "item": {
          "id": "04261f95-e8d1-4917-8cf6-4fb4a1f6ff01",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "435d2913-3cb6-4502-ac37-91314698f2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b77b8c-23d9-4b9f-a810-ff5f6740a5ef",
        "cursor": {
          "ref": "c62048da-1010-458b-bc0d-cbfe1eac3ed1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2e628a1b-7465-4d83-b5ef-58f0d739a6a5"
        },
        "item": {
          "id": "21b77b8c-23d9-4b9f-a810-ff5f6740a5ef",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "656f7b9d-c1d3-4d78-b3de-6bd98796276a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a1f522-213e-44e8-8239-8d2f3009c67f",
        "cursor": {
          "ref": "ba3a574e-e304-437c-bf52-e065958c48f1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6a723a40-505e-493e-a2b7-c73b09d72f14"
        },
        "item": {
          "id": "b9a1f522-213e-44e8-8239-8d2f3009c67f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c6ea7d2c-7607-42c0-a04e-75ec712617f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1837012c-5b5a-4e1e-8ad1-b3b0931ed0ad",
        "cursor": {
          "ref": "381e6142-cd10-4520-a36e-fa7af1ca7105",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "93a36c58-41e5-4b7a-ba5d-fca6986010fe"
        },
        "item": {
          "id": "1837012c-5b5a-4e1e-8ad1-b3b0931ed0ad",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5c8b7bbc-f85b-4f3e-9d63-d9dc3a56a6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4784aa57-5afd-411d-9ee9-4c0fe5c35c1d",
        "cursor": {
          "ref": "c0f8fdc6-e795-462a-83c6-32b00d93c559",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e22c0f93-bf0e-4cff-934c-e3654152aa3e"
        },
        "item": {
          "id": "4784aa57-5afd-411d-9ee9-4c0fe5c35c1d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "616b90fd-3ce6-468b-ac7d-80909da5ecd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020911fd-a330-4aed-9fe6-9297e6085607",
        "cursor": {
          "ref": "f38452d0-77c3-471e-a3a4-f66bbc39f459",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "080564a9-fdd0-4485-bba5-52c6a7b931b3"
        },
        "item": {
          "id": "020911fd-a330-4aed-9fe6-9297e6085607",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "29bcdfbf-9a40-4efa-b86d-18085d712298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1c4d2f-4c3a-4d1b-8dc9-3fa0bac6bed0",
        "cursor": {
          "ref": "25e59eee-a3b6-4084-8c7d-27dbc4aa78d7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7952ee75-c2d8-4ffb-ab16-a2ccfe3831b9"
        },
        "item": {
          "id": "4f1c4d2f-4c3a-4d1b-8dc9-3fa0bac6bed0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c1ff2a5b-c9f4-494f-8377-8080feb0eae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f1d2d4-438f-401e-8381-0d9f489b5bf2",
        "cursor": {
          "ref": "982e4ce4-8f00-4b3d-805c-8504690b25b9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7eac720b-e683-41d3-9270-0fd67e570751"
        },
        "item": {
          "id": "77f1d2d4-438f-401e-8381-0d9f489b5bf2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "465abab7-9308-48e3-aed2-0148e8efdbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba87c8cd-e0b3-46ee-bfed-bc42d8d83e81",
        "cursor": {
          "ref": "2e6dd818-4e55-4cc2-ac8e-827f3fb7074b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5dfeacec-b6b3-44d0-b299-6aaefb495e45"
        },
        "item": {
          "id": "ba87c8cd-e0b3-46ee-bfed-bc42d8d83e81",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4233f848-b051-42ec-879a-9e64f2ad5a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80364903-bed4-48a3-a5f3-3cf222a72697",
        "cursor": {
          "ref": "345f0bc2-1a89-4052-a8c8-9d6760d65094",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7631580b-c796-4a22-ae80-45998dbd62f1"
        },
        "item": {
          "id": "80364903-bed4-48a3-a5f3-3cf222a72697",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "61312711-29b0-4520-a60b-1ab976e6d3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff34244c-e79e-4db6-81ed-60606fb69d79",
        "cursor": {
          "ref": "ac522941-0938-4037-aaf5-432f1c1e560d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e71b57eb-2da0-4217-9fc8-3a720838356a"
        },
        "item": {
          "id": "ff34244c-e79e-4db6-81ed-60606fb69d79",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f133b6d2-f7a7-41da-b0bd-031a9b17132b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b002c5-ccb7-4c3e-8ea3-fbff6209186b",
        "cursor": {
          "ref": "2b36442c-6679-4f2e-acbb-e9bb5056551f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "796f4a9c-1c41-4421-9dca-14cedf30f32a"
        },
        "item": {
          "id": "a5b002c5-ccb7-4c3e-8ea3-fbff6209186b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "292d6696-0ac4-4f19-8e57-c9d7ae9b3a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0151f084-53fd-44bd-a386-4af662b270ab",
        "cursor": {
          "ref": "e96ccad6-6275-446d-a233-94de6f85001b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5fbe6c83-33d0-4a15-b888-0c55844f3300"
        },
        "item": {
          "id": "0151f084-53fd-44bd-a386-4af662b270ab",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "26eef48d-fa0e-43ae-8795-95fd5aa3246b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1082,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43eed1b-2e99-4d67-8479-97c42adc2ba8",
        "cursor": {
          "ref": "a77873b7-ce37-4514-9a62-f58ad6ab7fe5",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "35603c02-a816-4c89-9036-44f7c82e8160"
        },
        "item": {
          "id": "b43eed1b-2e99-4d67-8479-97c42adc2ba8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32567062-71b1-408e-ab1e-11e34fc55f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1520,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956110aa-87ef-4495-8dc2-91514dfb4ea5",
        "cursor": {
          "ref": "930bea02-d06a-4ba8-b4cc-1fc6ea4268aa",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e6638f83-35ab-4cf7-a25c-d4f676be92c2"
        },
        "item": {
          "id": "956110aa-87ef-4495-8dc2-91514dfb4ea5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "97f930d1-d7cf-429b-8b26-d3982a37c5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1332,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c8189d-6a1a-43b6-986a-d5dc4d8e6372",
        "cursor": {
          "ref": "158e4601-b842-4f6b-a2a7-745425d4dd50",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a0014719-1101-4205-a108-c4a8a6f8f871"
        },
        "item": {
          "id": "03c8189d-6a1a-43b6-986a-d5dc4d8e6372",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7e0198da-549c-4658-9f57-bab140f2c8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1616,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b554efa-1064-4761-9ceb-b4673d3b732d",
        "cursor": {
          "ref": "04ce0e85-3695-4a85-9405-868a2ae38983",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6ad0d4fb-7882-4ec4-8e43-a7df0c417ab1"
        },
        "item": {
          "id": "3b554efa-1064-4761-9ceb-b4673d3b732d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c8be3939-710c-4a8d-91f6-0a00f3f2a8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1508,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d9609f-d79b-45ef-87c8-cb99228d77c9",
        "cursor": {
          "ref": "d4856885-4f18-4e41-a925-af58b0cc20a1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f0f24a6a-d101-4216-873a-93e328e4d3a5"
        },
        "item": {
          "id": "57d9609f-d79b-45ef-87c8-cb99228d77c9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8c4e898d-3a62-42cd-b055-ce656045609c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe5ee97-8fea-4ecf-92ad-7fd4789e19f2",
        "cursor": {
          "ref": "6e231141-0293-4c00-957b-4f4dc559f78c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "55b20803-869a-4178-8dff-f4ec85f500e3"
        },
        "item": {
          "id": "9fe5ee97-8fea-4ecf-92ad-7fd4789e19f2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d9b3d660-1447-4a00-93fe-9195958fe142",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d3045b-bc8c-4c38-a5a8-3eb6b2a47018",
        "cursor": {
          "ref": "03833ef0-78b0-44f0-b2b7-3c55c6c0124b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74bb8408-1780-4006-a033-131152a3be1e"
        },
        "item": {
          "id": "65d3045b-bc8c-4c38-a5a8-3eb6b2a47018",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "1ac6bfb4-0298-41f0-935c-58ef74e3aee2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1029,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb715e-85c7-4d58-9d4f-6eac4a57220b",
        "cursor": {
          "ref": "40307f42-cab2-4366-ace7-4fc367e7cd35",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "81c5954b-5fb1-4f39-a95f-f550ff750506"
        },
        "item": {
          "id": "6eeb715e-85c7-4d58-9d4f-6eac4a57220b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dab51c08-f04d-477c-b971-31f827fef923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb715e-85c7-4d58-9d4f-6eac4a57220b",
        "cursor": {
          "ref": "40307f42-cab2-4366-ace7-4fc367e7cd35",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "81c5954b-5fb1-4f39-a95f-f550ff750506"
        },
        "item": {
          "id": "6eeb715e-85c7-4d58-9d4f-6eac4a57220b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dab51c08-f04d-477c-b971-31f827fef923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978bad17-2338-4c52-a871-c9176e6b394b",
        "cursor": {
          "ref": "30fb8dea-230f-44e2-9ccc-50c6506c9578",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "abc2d031-c9c9-437a-a2a3-75b0f518c259"
        },
        "item": {
          "id": "978bad17-2338-4c52-a871-c9176e6b394b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1ec5f138-54b3-4b51-92ec-e889ee9a1738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e28bd0-2a9a-4e81-b56f-1f834dc94858",
        "cursor": {
          "ref": "b08509aa-9f65-4253-a42a-a4b8392504f6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "444e1e9b-7fb5-4b25-bdff-485c19b11683"
        },
        "item": {
          "id": "f5e28bd0-2a9a-4e81-b56f-1f834dc94858",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d60bcac3-a34f-4753-b277-fcb12b7ead8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5769174b-13bd-4101-8ca4-80ed82b33801",
        "cursor": {
          "ref": "1bac46ef-1bae-4257-8820-dfeb5394895a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4e7b07e1-f549-4e46-8584-bc87e7d742d3"
        },
        "item": {
          "id": "5769174b-13bd-4101-8ca4-80ed82b33801",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f75cc923-c3ca-4ff1-a7ce-5455b8ca37ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a784ae4f-1312-4aec-ad87-70c20f44cc38",
        "cursor": {
          "ref": "49f92a52-0f4f-449f-ad55-9e132b61abd5",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "74c44ad5-d0d6-4975-85fb-c84b0538b0cc"
        },
        "item": {
          "id": "a784ae4f-1312-4aec-ad87-70c20f44cc38",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b8e13c00-b567-4172-b20e-fcf3281b30eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0ef374-dfe8-4da7-a64f-21c56a702c4b",
        "cursor": {
          "ref": "862b96d7-702d-4ceb-87f2-40239d19ea13",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a39feec3-b3df-45ed-942c-498aeac72fea"
        },
        "item": {
          "id": "bd0ef374-dfe8-4da7-a64f-21c56a702c4b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "61bc8c6d-baf4-4d82-9b32-3caaf09b5bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78458e3-d2a4-49d1-be13-2ca08af36b60",
        "cursor": {
          "ref": "b35c9c4a-0cf9-4539-ab81-7ac65d533b56",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c2524832-5660-4c71-8854-21969fc06b9a"
        },
        "item": {
          "id": "d78458e3-d2a4-49d1-be13-2ca08af36b60",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7625f4df-55aa-493f-8fb1-413802ce3d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f2d749-81c0-404e-add7-424c9e763234",
        "cursor": {
          "ref": "aab8faad-13fc-494e-bed8-7e2d0d21d2de",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f0adce89-7b5d-4d0a-9bb8-1061a60dba0a"
        },
        "item": {
          "id": "b1f2d749-81c0-404e-add7-424c9e763234",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9d64b755-e727-446c-a7fc-9bcf5d9eb1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeb0698-6f73-4331-bd2d-7c332c6fb5cf",
        "cursor": {
          "ref": "0cad2780-0505-4332-a26e-3a0be5f1439b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cf65c572-c8ad-4bd8-9efa-776fa586afef"
        },
        "item": {
          "id": "dfeb0698-6f73-4331-bd2d-7c332c6fb5cf",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "45a8eda9-f6d1-43fb-ba97-76468d56424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ad7929-91a8-46ac-815f-9b4e0402ad04",
        "cursor": {
          "ref": "9c3a3e69-b6b8-4d03-a13c-2a706d5850f1",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a404843c-346e-4db7-b32c-013e8f148fc0"
        },
        "item": {
          "id": "61ad7929-91a8-46ac-815f-9b4e0402ad04",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "100d2161-8313-47a2-87d1-13ad76add0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c6e40-d371-47e7-b467-ea93783b699e",
        "cursor": {
          "ref": "ae037362-5cc1-40f2-94c3-1ccedc9dcb71",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d615d822-af32-46fc-bed9-d48d83bb73b1"
        },
        "item": {
          "id": "ba9c6e40-d371-47e7-b467-ea93783b699e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "667eb5ea-80ff-4b0d-861b-51dbf6980052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898a9812-b5f4-4937-871b-f348f64e25d5",
        "cursor": {
          "ref": "cae42327-7eb2-481c-be49-ff99df46129e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "51ab2472-218f-4049-afbc-205ab7806dfe"
        },
        "item": {
          "id": "898a9812-b5f4-4937-871b-f348f64e25d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0de98d5d-e9c4-4be6-a495-31d1b2c2acd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a59ba4-09a4-4d51-9b55-1d0cf90be5c4",
        "cursor": {
          "ref": "29e48165-14e2-440a-ac38-8fb49e715e4a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b1380f77-ddd5-4559-9fcd-e87c450f8078"
        },
        "item": {
          "id": "57a59ba4-09a4-4d51-9b55-1d0cf90be5c4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "29b21ff3-e954-4ef3-b524-295964e744fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d807e02-7a06-4494-aac7-d885cc29c587",
        "cursor": {
          "ref": "d42a6913-8466-401f-9736-aeb1014151ff",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e74c423d-606a-40e2-aa6e-1c36df5f05b3"
        },
        "item": {
          "id": "7d807e02-7a06-4494-aac7-d885cc29c587",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fd89b4a7-677c-4ea2-b7a7-f67f9a5ee203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bbdcab-7f32-4170-a653-35997a81cf96",
        "cursor": {
          "ref": "12019ec4-16ef-427d-8446-a35b32703366",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2be856a6-b9c0-4db5-ab1b-e4b5f95d9825"
        },
        "item": {
          "id": "e4bbdcab-7f32-4170-a653-35997a81cf96",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6835191a-6870-451f-a741-3e103a6eeefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40ae4cd-8de6-4b62-854e-dcfc7ebc71b8",
        "cursor": {
          "ref": "de8b4966-6992-46d6-94e7-26af0788f85a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b989b7a5-cb22-4cac-b1f3-eac31983713b"
        },
        "item": {
          "id": "c40ae4cd-8de6-4b62-854e-dcfc7ebc71b8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eb39697e-9354-445a-b943-39f1c7ca4535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035f8954-79da-473a-8ed4-dbb1bc85109c",
        "cursor": {
          "ref": "af450bb3-37ab-41b2-954a-13326a38f230",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5c542c62-11a9-4ab3-a173-b138d48eb343"
        },
        "item": {
          "id": "035f8954-79da-473a-8ed4-dbb1bc85109c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5fe9770c-adc4-4d8c-ad2b-a3745d2f9c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7805cee8-f042-4457-ab75-5f44a6ff9330",
        "cursor": {
          "ref": "19d84680-baee-4b11-a364-10309600a976",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1108aea2-7873-47df-ac31-39b8558e0347"
        },
        "item": {
          "id": "7805cee8-f042-4457-ab75-5f44a6ff9330",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "11ce7732-f31c-4fe7-b647-9bb1b683179f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d13725f-08aa-4a6a-ad32-96d4bf90e9f7",
        "cursor": {
          "ref": "b268560b-6b10-49b7-a4ee-6480f6f8e2b5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "36da320f-be05-4c68-8aaf-d527a17b4466"
        },
        "item": {
          "id": "7d13725f-08aa-4a6a-ad32-96d4bf90e9f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "831d1f3f-e15f-4e34-aa7c-b2db7e2c9b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb631ce-a279-46e3-b95f-b07e822708d5",
        "cursor": {
          "ref": "81e78367-0716-45bb-99b6-29bd23eed3f1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb74d04a-3f6e-4e2d-bc58-7f7f65d2c0ac"
        },
        "item": {
          "id": "3fb631ce-a279-46e3-b95f-b07e822708d5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "88c198ad-cddc-4422-b9e0-edfc7f815bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd315f10-ca34-41e3-8fff-cd0e79a48bd9",
        "cursor": {
          "ref": "bb692d26-b953-4641-9e71-94aca2bf20c1",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "404e9968-3017-4c84-9e00-e81b92c8006e"
        },
        "item": {
          "id": "dd315f10-ca34-41e3-8fff-cd0e79a48bd9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7479dcf0-eeb8-47ae-936b-117b5b1f5484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98db2fdd-2990-4639-9443-2ea4f8dd7d3a",
        "cursor": {
          "ref": "b971170d-f9d6-4422-9dab-9d6a4612c4a8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "745b9a1e-d82e-4d82-8794-3924279ff537"
        },
        "item": {
          "id": "98db2fdd-2990-4639-9443-2ea4f8dd7d3a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d5436a18-891f-4611-9888-fef0e9ef18b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616eb5d1-0bec-418b-a5c4-7b554aa942c4",
        "cursor": {
          "ref": "48a27798-044e-43d5-83c8-2d91dc72c16a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b37580ea-f708-4501-bd5f-9b2bf4763237"
        },
        "item": {
          "id": "616eb5d1-0bec-418b-a5c4-7b554aa942c4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5d2603ac-9b5c-475a-a4bd-1121b663a582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de98335a-46d4-4ab5-83ce-6ab5bafac976",
        "cursor": {
          "ref": "e64b7363-6012-4af9-8e7a-41b094a3f56a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "05a3fae6-7066-449c-9e27-44a5b9e1d1e6"
        },
        "item": {
          "id": "de98335a-46d4-4ab5-83ce-6ab5bafac976",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b662b72e-4865-4261-a190-d83206b7bb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fd703f-d115-4c17-8860-f3ebf6ed670c",
        "cursor": {
          "ref": "fc080583-52d3-42e4-9381-a75ba6d8b169",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "39ed557a-d50c-4080-9407-8e6e6eeade2c"
        },
        "item": {
          "id": "07fd703f-d115-4c17-8860-f3ebf6ed670c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "099a3b50-001a-416f-9185-dd1ec913dfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe48c41-1b38-45b4-999f-da30398d7e44",
        "cursor": {
          "ref": "378fa41b-4008-486c-8638-6d2258426b78",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7f4353b3-84a5-4bae-a7a1-8834da9c20de"
        },
        "item": {
          "id": "bfe48c41-1b38-45b4-999f-da30398d7e44",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4b539c58-594f-49be-85f1-751eb7a13ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7141a4-bcc7-41de-85dc-f6ca0a522b5e",
        "cursor": {
          "ref": "19447891-85dd-4ea9-a14a-ad1c2b7f16ff",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "beb854a0-6170-4d93-9119-e3f0a49c0efd"
        },
        "item": {
          "id": "ee7141a4-bcc7-41de-85dc-f6ca0a522b5e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d23cf43-98a4-4dc7-b07f-c13b5db22bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7103b7-73f5-4f86-af17-39afa43d047d",
        "cursor": {
          "ref": "d6cbba83-ffa1-4cef-9ef0-41c076c1376c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "493d966e-b2f7-4e57-a431-3f71e0b30caa"
        },
        "item": {
          "id": "5b7103b7-73f5-4f86-af17-39afa43d047d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1463c2e3-dd4f-4af1-8eef-bea128678e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db1192a-ac2a-40a5-ac11-74631992dc40",
        "cursor": {
          "ref": "6f3d4aa5-e1c2-4691-8e7d-d2c431c1f1ea",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9b465856-41e9-4456-9c6c-1f29f9c920d6"
        },
        "item": {
          "id": "5db1192a-ac2a-40a5-ac11-74631992dc40",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0e089f23-d795-4323-b228-dac9df1391dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c456e1-003d-4644-a46a-bcc96fc786dd",
        "cursor": {
          "ref": "264fb73b-df56-4094-aef7-d0fd10029921",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "136546bb-db7e-467a-8f59-2cecbb0ea0ee"
        },
        "item": {
          "id": "92c456e1-003d-4644-a46a-bcc96fc786dd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "58faeca5-453b-4b6b-a070-bec2fce076bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20611d10-69c2-4b6b-8b72-c1b3aa4a9355",
        "cursor": {
          "ref": "d4b8c5fd-46a3-4b62-8c00-b9bba6cd516d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "78614c86-edd4-417e-95c7-a002eb97db48"
        },
        "item": {
          "id": "20611d10-69c2-4b6b-8b72-c1b3aa4a9355",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e0563fd3-8118-4082-816f-d9fde3617dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c55d7b-8f5b-40a9-b8b0-40ba7068934a",
        "cursor": {
          "ref": "cc77a2ea-e53d-430c-b5bc-1a31e4affc7a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ff3c6188-0f4d-4a85-8298-d33a28e1313a"
        },
        "item": {
          "id": "32c55d7b-8f5b-40a9-b8b0-40ba7068934a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2649ca9a-1dec-4541-8043-82f13c290126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3140ff28-7ba8-419c-827b-738c29592b2e",
        "cursor": {
          "ref": "be117e82-0a45-4ced-8a99-c3df3bdbba5a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4f6e2351-a04e-4107-b8ab-92baa3dbeeff"
        },
        "item": {
          "id": "3140ff28-7ba8-419c-827b-738c29592b2e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "314dcc11-bcf4-4700-88aa-4600f27e4261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef484dff-8c36-4087-a538-a9599facc2d0",
        "cursor": {
          "ref": "6dfdf7ba-09e9-4a3d-919a-c2d170050389",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f703b685-d040-4e36-a493-dd5874ab7a16"
        },
        "item": {
          "id": "ef484dff-8c36-4087-a538-a9599facc2d0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dc86950f-9484-435b-9802-ad07aaf8af1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f6a1c2-7dc5-4e52-91ba-0012105add8c",
        "cursor": {
          "ref": "df5c05e7-ac4c-4055-9f24-7b6c2f439cc1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "005fdf97-5be3-4662-988b-69c7ec46f1ee"
        },
        "item": {
          "id": "01f6a1c2-7dc5-4e52-91ba-0012105add8c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "96ac64e6-0621-4e60-bb66-dbf820a5758e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ecb5ff-74af-420a-8235-158987c46dee",
        "cursor": {
          "ref": "96f0ec18-31e4-430d-8540-da44c919eae9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f81dff3b-2bb8-45e1-b14c-08377941c640"
        },
        "item": {
          "id": "42ecb5ff-74af-420a-8235-158987c46dee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e61d4d6e-84be-4f95-a2a8-8ea7edd92fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d973b4fa-efdc-437d-a1a7-90aeb1dfe67b",
        "cursor": {
          "ref": "c6fef8cd-a5a5-4b52-a472-b5ee412cb785",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a0f5aaed-0783-4f64-8f76-4e8458db3225"
        },
        "item": {
          "id": "d973b4fa-efdc-437d-a1a7-90aeb1dfe67b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fa4709e1-2e27-406c-ba00-4b68ff34f64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef95582f-f8b7-4d6e-8043-33d1e0be033c",
        "cursor": {
          "ref": "a6a9df61-cc71-480b-a6f7-ceb5e5c373ca",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "026627c1-9f25-40b4-a9bc-f71e64635608"
        },
        "item": {
          "id": "ef95582f-f8b7-4d6e-8043-33d1e0be033c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2ba2920c-846f-4e32-9b7c-2cae543131b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5acc87-6726-48d0-aaa8-15e1319a360a",
        "cursor": {
          "ref": "5e25a1b8-e51d-48ed-81ef-3891e9bef7a5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1d89826f-75d7-461e-bd47-9453cfe33df5"
        },
        "item": {
          "id": "ec5acc87-6726-48d0-aaa8-15e1319a360a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "702cc44a-1b77-40e6-81d3-657d913e1ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a3f3d5-eda7-4df4-9f8f-6fa5e5228d39",
        "cursor": {
          "ref": "15e15ff0-8f83-4195-b095-e8462818392a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "219dddb3-1b22-4de5-b325-483ff163539e"
        },
        "item": {
          "id": "26a3f3d5-eda7-4df4-9f8f-6fa5e5228d39",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a4b9ed51-2541-400c-a73b-2cc5d0dadd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0101a7b2-2617-4d46-b364-b08539b02ed6",
        "cursor": {
          "ref": "1b35e2c3-6738-4841-b4a6-5678c8953b76",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f1941305-7ec9-4209-bff0-dc598c660c08"
        },
        "item": {
          "id": "0101a7b2-2617-4d46-b364-b08539b02ed6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "174a0348-c43e-47d5-8ca4-6b607f07e86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa5c8c9-b668-4981-ab66-326246700972",
        "cursor": {
          "ref": "a812d224-6ba2-4ecb-aa86-7b92283ab35b",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f466239f-6789-490c-80d1-9b194cb19155"
        },
        "item": {
          "id": "7aa5c8c9-b668-4981-ab66-326246700972",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "692091bc-b4fd-420b-94a2-53824a04c897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f60fb47-ff74-4dab-8d0e-706b2d441469",
        "cursor": {
          "ref": "53ff2ad7-6610-4230-9a31-23d87ea35b11",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a0fbe162-1d18-4b93-9070-02b829045931"
        },
        "item": {
          "id": "6f60fb47-ff74-4dab-8d0e-706b2d441469",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5d3bfd3e-2208-4d30-9e59-84c3f57d0981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c495ba-d638-4d99-8733-b47adfa10a78",
        "cursor": {
          "ref": "ea14adbb-5ef9-4733-9c38-0aec7dbe58ea",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7b24ba64-72fb-4b06-84b1-ed2513de80e9"
        },
        "item": {
          "id": "62c495ba-d638-4d99-8733-b47adfa10a78",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6bff93be-69ff-44b9-9441-3abe32e20ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f9581b-d73b-45a5-8ed4-d2fc3b0bef31",
        "cursor": {
          "ref": "ad8d0675-3116-4ae8-a6e4-cabf33a75640",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5d8920da-637c-4323-8f6d-f764ebb6a2de"
        },
        "item": {
          "id": "31f9581b-d73b-45a5-8ed4-d2fc3b0bef31",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e5463943-f2d2-4061-873a-a0abb42098c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820b7455-dee5-45ec-803e-df10d30b8b24",
        "cursor": {
          "ref": "8a37e25f-32df-4627-a48a-64517936c997",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "67547c24-9513-4303-b773-d4df8ffdd131"
        },
        "item": {
          "id": "820b7455-dee5-45ec-803e-df10d30b8b24",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "98c59d83-55f0-46db-93e7-8d8f2306aa96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49233d7-f0e5-4174-9654-bee8b8f96a58",
        "cursor": {
          "ref": "77d5e570-97c5-424d-b7e1-d2b37f124a88",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "06176a61-2959-4f0f-8c60-d06335c265a7"
        },
        "item": {
          "id": "e49233d7-f0e5-4174-9654-bee8b8f96a58",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "29719a8a-7b15-40e7-a4bd-5abb16d5be59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c5b67f-18e0-40b2-aced-5246211b53ac",
        "cursor": {
          "ref": "49be5436-6557-41ac-a9c5-4aa43fe84568",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7b979874-9c89-443c-a45a-a548a6c0438a"
        },
        "item": {
          "id": "66c5b67f-18e0-40b2-aced-5246211b53ac",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e1b56daf-5343-4117-b068-8e1cff418106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aa6040-d0bf-473d-ba50-ceac9326b392",
        "cursor": {
          "ref": "1b2a90b9-24b7-4e75-9a0c-55cfae6868b6",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "af739d4e-47c7-4b4e-9af1-03446e5eb38f"
        },
        "item": {
          "id": "43aa6040-d0bf-473d-ba50-ceac9326b392",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "77cc484a-ef5c-4dbf-bedb-7dbf3b78b5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2e8c44-903d-49c0-9f11-69c3501e9cdd",
        "cursor": {
          "ref": "9a9b6722-ca60-4432-8cf6-ad45ce03a249",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c97aadf1-3835-4365-ab6b-0da7d3185c7b"
        },
        "item": {
          "id": "7a2e8c44-903d-49c0-9f11-69c3501e9cdd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "144b6d6a-322e-4e78-884b-3cba96806cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c55a67-731b-45e4-bddc-30c76d42ec4e",
        "cursor": {
          "ref": "e02b29b2-125b-482a-bca9-ba892cd08d34",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "16b25d6f-f161-4f2d-a61b-52ad70b5be55"
        },
        "item": {
          "id": "27c55a67-731b-45e4-bddc-30c76d42ec4e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "94d964bd-7cc4-425c-80ea-20059bcc75e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1422a5bc-d00d-4640-a50c-25e054dec277",
        "cursor": {
          "ref": "f176f811-59f4-4001-b94e-3276074196bc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c9da5190-a908-4b8c-a5b6-6f63d923bc0e"
        },
        "item": {
          "id": "1422a5bc-d00d-4640-a50c-25e054dec277",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "284c1720-c58e-44f8-beb9-2fbe59b5c597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e8aa19-0bc9-49ab-aa64-17560182a404",
        "cursor": {
          "ref": "9b76dfee-c815-4799-aa7a-35a1d75e4222",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4a63b5b7-c9dd-4832-9257-6c16efedf900"
        },
        "item": {
          "id": "95e8aa19-0bc9-49ab-aa64-17560182a404",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2251da1e-e459-41fc-bd0c-9abf2f0fc94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314d8106-327c-49a1-860d-54277fab8acd",
        "cursor": {
          "ref": "25652dd9-fc64-40bb-a2ad-75f9bc92cd7f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c15f22d-d3d2-493e-9b5f-8ec3741a9ac4"
        },
        "item": {
          "id": "314d8106-327c-49a1-860d-54277fab8acd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dc8efd04-7194-440d-ad61-7de6f2bf2562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cc1d06-e234-4e16-a123-82f33cfb065f",
        "cursor": {
          "ref": "6107ba2d-da74-497d-a1a9-e5ef778e4d75",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5c97c9dc-1e8c-4c22-bccf-1e9486fd5477"
        },
        "item": {
          "id": "f2cc1d06-e234-4e16-a123-82f33cfb065f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2c97ef61-6053-42b6-80a8-991ab31446d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0a8b4b-88c6-4591-88c2-4771db027566",
        "cursor": {
          "ref": "da84e7c3-3122-4d42-9ac5-185719b2cabf",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0ce9501b-47ac-4301-94b8-887b4e69373c"
        },
        "item": {
          "id": "6b0a8b4b-88c6-4591-88c2-4771db027566",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9a51ccc6-f2a1-45a1-87ea-cce9cbebb5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e686e3-1b95-4489-9ee8-d0b8f6b24028",
        "cursor": {
          "ref": "121b37a4-a38d-43f6-bc3d-c874f9cd9d06",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a0463aeb-7cdb-4bc1-ae3c-8a0998c70ab8"
        },
        "item": {
          "id": "22e686e3-1b95-4489-9ee8-d0b8f6b24028",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "76d28476-977f-4207-bc26-87ab9895c79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a419a8d3-8c2c-4112-896c-f2c3867b6904",
        "cursor": {
          "ref": "f0c247a0-9182-4e5b-ba66-821b960ef82a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "44f7245a-a4a8-4c9d-9219-d610a6db0543"
        },
        "item": {
          "id": "a419a8d3-8c2c-4112-896c-f2c3867b6904",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "53ed91e1-b2f7-4949-871f-56e4c350cde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cb0bfe-e301-4d54-ba8c-262f13b9f8e6",
        "cursor": {
          "ref": "6fe93599-8258-4200-8669-84a414b12af4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c9dac4dc-1bb4-41d9-a759-753d67730015"
        },
        "item": {
          "id": "a0cb0bfe-e301-4d54-ba8c-262f13b9f8e6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "85d0117b-721e-403f-bb41-c08b6c654568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85707990-3b57-4bb6-9892-26bd482542c9",
        "cursor": {
          "ref": "eef33c05-ef5a-402e-8846-0460d9272d57",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "aad6077e-3165-46bf-af9a-0558add56487"
        },
        "item": {
          "id": "85707990-3b57-4bb6-9892-26bd482542c9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c9095244-978b-4992-ac85-91858d636c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c33ef2-c948-4771-83d5-40cdbf4e8f6e",
        "cursor": {
          "ref": "e8f80719-00e1-468b-b693-787dab181d3b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ace9fe27-7786-47cc-a088-7014846affed"
        },
        "item": {
          "id": "e0c33ef2-c948-4771-83d5-40cdbf4e8f6e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b84cc0ba-0738-49a5-9db6-913ca3daf9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9df089-92a5-42da-96fe-2ff1650f4e39",
        "cursor": {
          "ref": "800aa8e5-fef2-4b0d-bd38-fa958a879b0d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "73462e65-3efd-4a5e-913e-9ffd8553ed32"
        },
        "item": {
          "id": "5f9df089-92a5-42da-96fe-2ff1650f4e39",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ecb56fb5-6f63-4271-9259-51ded13a5836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0958ece-eeaa-4d95-94ac-5c4bb8cb9e70",
        "cursor": {
          "ref": "18e91cb8-2299-427b-b3b8-78356593c4e4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1cd00760-184c-4074-8563-495431040b5d"
        },
        "item": {
          "id": "c0958ece-eeaa-4d95-94ac-5c4bb8cb9e70",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8f37bbde-a565-4f61-8a8b-f116708c501a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ebcc2f-4d1d-4f62-a9d6-45eb894e6b78",
        "cursor": {
          "ref": "e23d5495-85e5-43ee-98df-efbe741b0dfb",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2bc8a32b-1ee5-43ed-ab0c-374c710e0f58"
        },
        "item": {
          "id": "17ebcc2f-4d1d-4f62-a9d6-45eb894e6b78",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c3d66340-5d1c-4206-8763-c7f6dbd828e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057a4619-86fe-4474-83f3-7e5a2875313c",
        "cursor": {
          "ref": "099876cb-4eb6-45fe-86e0-daebe41654e5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "710c5d65-ff08-4829-926d-685685003257"
        },
        "item": {
          "id": "057a4619-86fe-4474-83f3-7e5a2875313c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4ef669b7-c2ab-4eb0-b7af-f96f9d177c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda24405-e1a6-4284-8b2d-0f0bb728f050",
        "cursor": {
          "ref": "23f38a26-6917-44b7-8f7a-24982e8d8ef9",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3da509f2-fee3-46b0-a568-fc6f7209a898"
        },
        "item": {
          "id": "cda24405-e1a6-4284-8b2d-0f0bb728f050",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "82af96fe-d56a-4ce9-872f-2bfc4f748bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5370831b-981d-46a9-a3bc-dc8480892664",
        "cursor": {
          "ref": "7a860c36-0db7-4582-b8cf-964bc1a926ae",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f8160a59-9b71-48a1-aa16-de40ac4709c5"
        },
        "item": {
          "id": "5370831b-981d-46a9-a3bc-dc8480892664",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "455fa4d5-056e-40d2-8ff1-5e86eedd4efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e65501-7552-40c4-b8b9-97431a43249f",
        "cursor": {
          "ref": "a7d5a3f0-baf7-40a5-81ab-61f785c8cd4e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "699dbe82-4a28-495c-96aa-cae3989f53e0"
        },
        "item": {
          "id": "40e65501-7552-40c4-b8b9-97431a43249f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aca919dd-c98d-4a9a-9da3-dec68babb7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa8ed59-1989-486c-91a3-85fabf5b3e25",
        "cursor": {
          "ref": "afd39cb2-b1ac-44b9-8160-6d47fb7e7db4",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a809dbf3-c5f8-43df-bcf4-cd9dc1c01ded"
        },
        "item": {
          "id": "aaa8ed59-1989-486c-91a3-85fabf5b3e25",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c1e6d102-9519-46c0-89b9-d977b75dad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6448e518-ca83-468d-be1f-733e238d004b",
        "cursor": {
          "ref": "5913342f-9d44-4f4d-9262-23d882abf2f2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ce2741eb-007d-470d-bb2f-d40659752e3a"
        },
        "item": {
          "id": "6448e518-ca83-468d-be1f-733e238d004b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b9d12947-c002-4a9b-9060-b290e66ff5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ef1794-ef95-4f51-ac6d-067191a4dff4",
        "cursor": {
          "ref": "2e016ad3-f31e-4436-af32-cb89f038e8f3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fd637ab8-d38f-40a8-9d9f-1d642c8703aa"
        },
        "item": {
          "id": "96ef1794-ef95-4f51-ac6d-067191a4dff4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a5ed56a9-9792-4a67-9ed4-2c5e8f29a9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf84be2-6261-41ec-9c0a-63e46620d307",
        "cursor": {
          "ref": "dff04eef-86bc-43f4-932b-d91e9bbf5782",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0694bc5e-433b-4ea1-8f17-8c733fe57f20"
        },
        "item": {
          "id": "2cf84be2-6261-41ec-9c0a-63e46620d307",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "369cb413-cf4d-418f-8455-59f436922bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ddec01-c715-42f1-8feb-7c79e61da90b",
        "cursor": {
          "ref": "8c40776f-c34b-470a-8e23-3c3d368de689",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d0b37566-45e0-47d6-aa11-70963d33ccc4"
        },
        "item": {
          "id": "88ddec01-c715-42f1-8feb-7c79e61da90b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a785b17e-6256-4626-aac3-973163562f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9732952-5fd6-47da-8bff-151a80c1358b",
        "cursor": {
          "ref": "8735c81f-a8b6-4a3e-b074-62c65047f5ac",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9727ac64-4bdd-49b2-9fdb-4f95c1e2c29d"
        },
        "item": {
          "id": "b9732952-5fd6-47da-8bff-151a80c1358b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5923968b-eb57-44eb-a51c-2f4b8bffe35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ad110d-f2c9-4172-a398-c232b7c86aa4",
        "cursor": {
          "ref": "9c9dddd2-e388-4ab6-a821-aac0530a21aa",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "04bfd5ab-eb7d-49af-8c41-b370ae6b3438"
        },
        "item": {
          "id": "35ad110d-f2c9-4172-a398-c232b7c86aa4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "40701398-d93c-4666-9d39-f02ec26438a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af53d0a-80c5-421c-bfb9-6198637949c4",
        "cursor": {
          "ref": "3865751e-df2f-405b-b3e1-94829176d6fd",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "008b950b-e081-4033-9cc4-9b1dee7d2d9f"
        },
        "item": {
          "id": "8af53d0a-80c5-421c-bfb9-6198637949c4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "71d63e0f-9e01-4a06-8074-66e671da8b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff39ed4-ffa9-41ae-8264-7c548ef6fdab",
        "cursor": {
          "ref": "a184dba4-fdac-4145-ae19-9e966aa12b9e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c23ec31e-489d-4cdb-ae8d-7cd15dcb2d0c"
        },
        "item": {
          "id": "2ff39ed4-ffa9-41ae-8264-7c548ef6fdab",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d9a6e630-9d2d-41f8-af3e-ef7f5a09e490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef913dd3-807b-439e-abbc-4b23d4021d23",
        "cursor": {
          "ref": "6122e51a-48b6-4848-9122-9ec32c169f2f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "21145c49-b934-4006-90f3-9718864d4af5"
        },
        "item": {
          "id": "ef913dd3-807b-439e-abbc-4b23d4021d23",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bbea0028-f186-4ac9-95df-4cac8b893c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6660707c-75d9-4a8f-8914-74b8572a087a",
        "cursor": {
          "ref": "9a1548d0-1c44-46bf-b496-46bc5e32c52a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "046f2d21-c6ec-45f1-a0a1-dd370c7193ab"
        },
        "item": {
          "id": "6660707c-75d9-4a8f-8914-74b8572a087a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b47654d6-1b16-4134-8e84-9f3894c0d53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6c76f1-8c08-429d-8ef4-e60a95aa6696",
        "cursor": {
          "ref": "1b37c1d1-893c-4f39-97fa-687f9e5acc06",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "979a6e95-5459-4aa7-97e8-09a41fe636c4"
        },
        "item": {
          "id": "2f6c76f1-8c08-429d-8ef4-e60a95aa6696",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8a031dc9-e281-4c93-a605-c795323327ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0473f13c-a775-4a10-87c1-f5eefd1c4b8a",
        "cursor": {
          "ref": "2027ddc4-2be2-4989-a3bd-658f482c849a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b1938341-c70e-42b3-8776-e8f9fff27a91"
        },
        "item": {
          "id": "0473f13c-a775-4a10-87c1-f5eefd1c4b8a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fb75975d-1100-4fc0-8bbb-b0fb9ec469a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56101e3-9c30-4508-9ee9-d017fea32d1b",
        "cursor": {
          "ref": "e774d362-f3b1-41cf-9436-cb5983064111",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2570be0b-4c6d-4578-9e13-6c296796447a"
        },
        "item": {
          "id": "b56101e3-9c30-4508-9ee9-d017fea32d1b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0605442a-efae-4fa0-8db9-c6356475cd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229945ed-d63d-48bf-bef1-81f0695cc758",
        "cursor": {
          "ref": "4f715667-d05e-4250-80e4-341a0792abf7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "66db39ed-92f0-42d3-9eb1-47030adb0141"
        },
        "item": {
          "id": "229945ed-d63d-48bf-bef1-81f0695cc758",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ae008050-cbbb-4bb4-acdd-d335e5b5caeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fba899-2f26-4c35-807e-93130ca0f34c",
        "cursor": {
          "ref": "5c56a76e-95b8-4c3e-a9ba-4df0210bd9f6",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4611bcb0-b22c-492d-8a37-43955b5a62e6"
        },
        "item": {
          "id": "46fba899-2f26-4c35-807e-93130ca0f34c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6a0d3df7-0e55-4023-869a-4e14e1f8d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65897cf6-8027-411f-a7fb-ca08ea22c345",
        "cursor": {
          "ref": "bc1fc7be-103e-41f2-9137-3964a8b93ce2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "040d1c27-16be-4c47-a7d5-bc0634aefd5c"
        },
        "item": {
          "id": "65897cf6-8027-411f-a7fb-ca08ea22c345",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d15f5fe5-5332-42e9-aa2d-ebeda98a4eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c8a501-d656-4b67-b380-7214a50b9647",
        "cursor": {
          "ref": "11c36c3d-0e9b-4212-a1f9-0fb954cf18dc",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7b91b811-21f4-4c17-b312-25aea05ccf61"
        },
        "item": {
          "id": "05c8a501-d656-4b67-b380-7214a50b9647",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "38e395ea-d8f5-4ea5-9363-a069ec01cd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5508216-e9b3-419e-b385-2b0d2e5f57f5",
        "cursor": {
          "ref": "cde75e1e-ab87-4a3f-b00f-d44bfcfb3ed7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fc08ef14-2eee-46dd-86c7-6ec6aa4ef547"
        },
        "item": {
          "id": "f5508216-e9b3-419e-b385-2b0d2e5f57f5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3b151e4c-bb62-4e5a-a84a-536c248e1d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192e601b-0b1b-40cd-9560-6bfb6850757a",
        "cursor": {
          "ref": "9c9ea9f1-8772-4913-bcf0-d36e08b93892",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2d96d67-f6ee-4073-a393-68c3917cd7be"
        },
        "item": {
          "id": "192e601b-0b1b-40cd-9560-6bfb6850757a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6c4963dd-4984-4f58-b87f-577e579b6920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6447556-46ca-4bdb-8917-71ef38ec10d6",
        "cursor": {
          "ref": "41ccdc24-0e88-4f39-873b-1360518f3b89",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ccfdc479-38a5-423c-b880-53f346ab4323"
        },
        "item": {
          "id": "b6447556-46ca-4bdb-8917-71ef38ec10d6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7cbeb193-9599-4a5d-bb14-4146ba1f4793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eedf50-16c7-41b8-a6b7-013b50cf3f08",
        "cursor": {
          "ref": "ed87caf7-0e82-4081-af98-96b6f6b075db",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dc241221-2992-470d-b483-6b55b2529cc0"
        },
        "item": {
          "id": "64eedf50-16c7-41b8-a6b7-013b50cf3f08",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "068dcc82-d287-4486-8152-53096d8b3d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aa8e03-383d-4a86-a506-6a30ae0cfbdf",
        "cursor": {
          "ref": "1159cc9a-e923-492d-8b80-1c87d764bb43",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "98810b0a-cab9-40e4-94b5-7158036c7f10"
        },
        "item": {
          "id": "92aa8e03-383d-4a86-a506-6a30ae0cfbdf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4d163dee-eed7-46de-849b-574396e26df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2279f5e-c880-4c53-a8a6-d7e419227849",
        "cursor": {
          "ref": "0df8a478-e665-4e10-b644-9fd09f76bbd4",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "70a7e17d-127d-457c-a6b6-5057009acd83"
        },
        "item": {
          "id": "a2279f5e-c880-4c53-a8a6-d7e419227849",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "62a413a9-70b5-436a-8fe8-442ec2da6c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9245b2f2-0ebc-4c91-88de-f7f502b08316",
        "cursor": {
          "ref": "61235aee-50b3-4a6e-a366-785873cbf466",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ed5ea06b-bdb1-48fc-885c-9eda479d8184"
        },
        "item": {
          "id": "9245b2f2-0ebc-4c91-88de-f7f502b08316",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "617f4e06-b4b7-41c8-ad6b-76210042bbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f3bf10-1e5a-492c-bb44-fa755e8eaff1",
        "cursor": {
          "ref": "1379023d-d441-47bc-83b3-4a396869ef6b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c65570b-98f6-4344-8af8-95e72666f0f5"
        },
        "item": {
          "id": "14f3bf10-1e5a-492c-bb44-fa755e8eaff1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8716ac72-639f-4fbc-b52e-43cd5c3e1786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a30c95-070f-4ef9-8fbc-c10576026e7c",
        "cursor": {
          "ref": "f9936fd8-27c6-42cb-a7c4-62f8356ddba5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ab40dbbd-6702-43d1-af82-81dd5ec7684b"
        },
        "item": {
          "id": "91a30c95-070f-4ef9-8fbc-c10576026e7c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c2687607-0938-4f28-81c6-98d26f2bcde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adceecef-e39c-45e1-a5a7-74ae630f0265",
        "cursor": {
          "ref": "1e49ebdf-244e-4a5e-8278-e307a10f2bd7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cc651936-8732-4a4f-9a17-eedfc9ade4f3"
        },
        "item": {
          "id": "adceecef-e39c-45e1-a5a7-74ae630f0265",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3e3c7a1a-2753-4f1f-b657-1d415ee21c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b2024-13be-44bc-8152-6239a925278f",
        "cursor": {
          "ref": "fa1f7de6-1f9f-45d9-af7b-be323776fdb8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a6aef9ac-ea98-4af3-a939-812d4cc77ec4"
        },
        "item": {
          "id": "8a6b2024-13be-44bc-8152-6239a925278f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2800c6f0-d557-4d75-a345-3645262fc93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5199f3e5-bc1a-49f0-b286-2b672ec4229e",
        "cursor": {
          "ref": "2f0b0455-b9b8-443e-ab95-996bb645dce2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b1371476-44cf-4206-8dc9-a289d5ba6053"
        },
        "item": {
          "id": "5199f3e5-bc1a-49f0-b286-2b672ec4229e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5048c30d-4738-4bdd-b3b9-5b42d871ad5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f9b2c1-5cd9-4dfe-9702-1a49235d78d5",
        "cursor": {
          "ref": "e08be465-06e1-4417-96be-286c761eae37",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8b568dec-5155-4dfd-b955-efc2fb520ffb"
        },
        "item": {
          "id": "a3f9b2c1-5cd9-4dfe-9702-1a49235d78d5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "71a639f5-1dc8-4099-a507-3620244e4b2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 346,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7566ff73-62d2-4af8-92c4-46756552b1fe",
        "cursor": {
          "ref": "2b2750b8-c7ab-4a44-8924-de53d62432cf",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eec93599-93d2-46e4-a59e-38bea94f19fa"
        },
        "item": {
          "id": "7566ff73-62d2-4af8-92c4-46756552b1fe",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d52cf8a-001b-468a-b1d8-866ff581d30c",
          "status": "OK",
          "code": 200,
          "responseTime": 430,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5530c0bc-fa86-4c5b-8c59-931f24dd5bf8",
        "cursor": {
          "ref": "1c2ad44d-04a6-41ea-8447-4a7a54f29f8b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "faabaa0f-a2ff-4f0f-a700-ac1f810363aa"
        },
        "item": {
          "id": "5530c0bc-fa86-4c5b-8c59-931f24dd5bf8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7a4372a5-b8ae-4d29-82b8-ebd2f815ea45",
          "status": "OK",
          "code": 200,
          "responseTime": 2052,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a16d90c-d5f3-415b-aa82-a1aec0512bb7",
        "cursor": {
          "ref": "c6b1ec8d-586c-40e1-ac9d-9ff5c75e61d1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f814b495-c45e-4cb7-a32f-e6189ea1b76f"
        },
        "item": {
          "id": "8a16d90c-d5f3-415b-aa82-a1aec0512bb7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4971371b-e46f-481e-99ea-ea9fc0bf98d8",
          "status": "OK",
          "code": 200,
          "responseTime": 1955,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155287e-3369-4be3-9b96-8e22075ae1b3",
        "cursor": {
          "ref": "fd69c2e0-2cdf-45d4-ba81-0febe11a66d5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b81a1112-25ac-4edb-8e6d-8fd0eb129a95"
        },
        "item": {
          "id": "d155287e-3369-4be3-9b96-8e22075ae1b3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9d5bbd19-fc15-4043-b14d-2ad2b4d073a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155287e-3369-4be3-9b96-8e22075ae1b3",
        "cursor": {
          "ref": "fd69c2e0-2cdf-45d4-ba81-0febe11a66d5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b81a1112-25ac-4edb-8e6d-8fd0eb129a95"
        },
        "item": {
          "id": "d155287e-3369-4be3-9b96-8e22075ae1b3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9d5bbd19-fc15-4043-b14d-2ad2b4d073a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155287e-3369-4be3-9b96-8e22075ae1b3",
        "cursor": {
          "ref": "fd69c2e0-2cdf-45d4-ba81-0febe11a66d5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b81a1112-25ac-4edb-8e6d-8fd0eb129a95"
        },
        "item": {
          "id": "d155287e-3369-4be3-9b96-8e22075ae1b3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9d5bbd19-fc15-4043-b14d-2ad2b4d073a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad4fee4-633c-431e-9cc1-f728be5ac053",
        "cursor": {
          "ref": "6902645f-a3f3-460c-91ce-195c57f81f0e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e37a3cc5-c245-4c53-acee-f35a2fea2de4"
        },
        "item": {
          "id": "7ad4fee4-633c-431e-9cc1-f728be5ac053",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ff6e891f-e109-490b-be33-334e36f2b714",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 343,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ec56fa-e1d7-467a-8da9-4390b33df8a9",
        "cursor": {
          "ref": "4dd58e95-01d0-4d13-82a8-cbafd8879676",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6b10db59-bd16-4614-8401-7b5a29e47c90"
        },
        "item": {
          "id": "89ec56fa-e1d7-467a-8da9-4390b33df8a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2b173df-4b70-4f99-b5ad-fca1430ced32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ec56fa-e1d7-467a-8da9-4390b33df8a9",
        "cursor": {
          "ref": "4dd58e95-01d0-4d13-82a8-cbafd8879676",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6b10db59-bd16-4614-8401-7b5a29e47c90"
        },
        "item": {
          "id": "89ec56fa-e1d7-467a-8da9-4390b33df8a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2b173df-4b70-4f99-b5ad-fca1430ced32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebefee1-d364-4745-a192-dcd67c31dcf7",
        "cursor": {
          "ref": "ecf96efa-ba12-4ea4-9a3b-aa941562963c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "19284da9-9d28-4c27-8d6e-4e51dddd9921"
        },
        "item": {
          "id": "aebefee1-d364-4745-a192-dcd67c31dcf7",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f48ebfa4-e8a7-4443-8c7f-89cdf5a4cad2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 549,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937a973b-a8e3-4e96-9078-be93986a704d",
        "cursor": {
          "ref": "07ed847a-d53b-4640-aee1-4194684e5530",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "99056f0a-c528-4be3-a2ef-0b004ad4723e"
        },
        "item": {
          "id": "937a973b-a8e3-4e96-9078-be93986a704d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9ddde007-f902-4de1-a5a8-d9ecc3f53fac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937a973b-a8e3-4e96-9078-be93986a704d",
        "cursor": {
          "ref": "07ed847a-d53b-4640-aee1-4194684e5530",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "99056f0a-c528-4be3-a2ef-0b004ad4723e"
        },
        "item": {
          "id": "937a973b-a8e3-4e96-9078-be93986a704d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9ddde007-f902-4de1-a5a8-d9ecc3f53fac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06f3b66-a3f6-4334-a821-137aa4215dec",
        "cursor": {
          "ref": "00eacaad-4a0f-43b1-b0b0-0db47c035e27",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ae756585-d594-4eb7-9e7d-8f6ec82d7e22"
        },
        "item": {
          "id": "f06f3b66-a3f6-4334-a821-137aa4215dec",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "548eee84-b656-48db-95fd-bcb7108b8f16",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 649,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}