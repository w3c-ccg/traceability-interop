{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b56e619b-e21d-475c-9629-45d037abc184",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7a9863f1-8508-4c0c-a0a5-eaf8b2e35c85",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a45196c6-cba6-43a8-ae1b-473df84a45a9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b6c34a5d-7b30-4675-a127-3825365120d7"
                }
              }
            ]
          },
          {
            "id": "316a508d-257f-44ff-b947-0f25058e13f0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d54c94c-0dd2-40ed-ace6-72d0abeb981c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75f76317-2431-40ef-a6ac-2a10b0e1a334"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b7bd38b2-18ea-48f4-b206-512142f085e5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4b0d30b5-ace0-4076-8f83-9ec054a97c01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "374dd2d9-c8a7-4890-95d7-25eb80b267c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb9679d4-07f3-4c8c-8e53-a6a029ba335d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41c1354d-4af0-40e6-9c0f-54ea0b175f38"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "070d5765-ffb7-4474-9319-8b6cf12a1606",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbb60970-781c-4221-9e7d-05c119e575ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f7820a1-7a14-462f-a157-731996934fb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f21a35f2-a86a-444f-b104-8a33a71aab8c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aad5e52d-1793-4365-8f89-44becdbc15e5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5d43f49e-419e-479c-9e4f-c006a581f3e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c201d75a-fe5a-4503-8460-a8b8941e70b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a11f4ef-cb67-4f40-bab9-127a4f344796"
            }
          }
        ]
      },
      {
        "id": "f555bd35-6caf-4e62-a134-4b84ca75c74a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2593bc50-c5c2-470d-8d0a-2d911827e435",
            "name": "Negative Testing",
            "item": [
              {
                "id": "366e1ec1-dc86-4531-b21a-76664ca69474",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "164e1dd5-eb2c-41dd-af14-12b1c67a29b3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea6077b-082a-4881-8c00-33cd744f1df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a133240c-046f-4010-998d-a27c1480a539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cde4c1-f87b-4b7a-816a-9445bd076a0f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c41b45-8e20-4ba0-8c6b-d7e1596c31b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee8cfa64-f8bc-4c2e-a771-54f5c30426fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a958ae-240a-47e6-8ca4-e0b6c53e92c0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b066cad-49a6-4c50-bf18-f47980af9123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecbb2e58-0ec5-4301-b9ea-87fc3d2724b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4af962bd-9fc7-43ee-b466-87ebed5fcdf6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08c9de16-ecdb-47b0-931e-88783fa16be5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5a365c-192b-45bf-a196-28fafb93b211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81c892a9-d873-4292-8f06-cc636359f654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d86c672-59c6-4df7-b850-3e97e6e0db1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b5823e-5a4f-4e96-96cd-b99951df51b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "efd629b5-5153-4a88-be88-87018255b2dd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64058c94-9203-4d03-a57a-3dbe5f90887a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e1956e0-c43a-4324-bf0d-191c1b0fede4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "99d986ff-82a9-4e96-9649-0c07b02af0a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f52d6e71-450c-4d17-bf56-e50f4460d832",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bbfb228f-c8e6-4326-9ffd-33c6c66681dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ba81985-f6ae-4fbb-927c-99dc8d593e35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd58f678-0309-4ca4-9ac6-7f40d9ce0c79"
            }
          }
        ]
      },
      {
        "id": "6c2b7981-a606-4a01-bd68-9ac1a98c8ee9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e7478c6a-daa1-48d2-a4c6-1beaba9bde2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fc33937-2d62-4ba5-bbee-61a7259c2fef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b2604673-84b9-4d64-8e63-efd20eb09692",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af364a98-a57e-47e4-aac9-06c7a731bfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c7b50f-97bb-47fd-acf7-7784806cfdce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9b3c47-592c-42d0-a4fe-3b8bf4e1c728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cca873a2-bffe-410a-a2d4-3d9035ba7d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2dcb00-ef08-4932-9915-a0fa2e244953",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a219f9-7f15-4170-a4f0-0940e7742276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e991b83-ba4e-4499-94b5-2ab1c5dfc195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2eff5f-879e-45cc-8b60-910adfbbc45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3221e5e-c03f-4b9e-87c6-5c469c1a9341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e2466f-2392-4c7d-8a7a-9c2145f6e2b9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79bf939-50e9-466a-81bf-75b78f2a9311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1343163-fd5c-49fd-bb5c-0305410cf291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1c5c34-1392-4c32-89eb-b1d2082f3360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd1e834b-51a6-4b95-8601-83510538309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ee8aa2-468d-4e10-b662-92ab94a5ba86",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd2a1dd-9b59-4f05-82dd-009a1943976f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06484598-fd1b-4aa0-ae9f-4f1bfb3a86d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a972e46-1f4b-4d54-933b-59943969b5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c27e1c80-a526-4911-9a91-0f888f846551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771b33ec-3b38-4f83-b32d-5d8a8d0ef883",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdcc81c-2657-4a5c-bfb4-8a37f9716b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675d305a-ee29-4c50-ae0e-f70043ebc06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471c63d4-cc09-4e67-9f7f-1a200e37b515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d36dbf71-4633-4fea-a402-883550453b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022775de-d5b4-44f0-9147-5f246c8d7985",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9d9613-23ad-48ce-8ce9-2d60acc3330b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918e4f25-2df3-4ad3-afa8-f7dc98c04d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87803b07-fb04-461b-83aa-da1675dcb8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3f4c82d-c659-43a2-9f96-965774b07b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fea7433-efbc-4baa-9ebc-38a1f66ab2f7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18b1097-ff80-49c5-adb3-7dd5b22b3a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0665b729-792a-40b3-a9ed-76c31ba770c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9764131-2cef-45be-90af-86607beee9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2bedc23-0f87-4afc-b11e-234119209166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070eb2d3-3e05-4748-86b6-d70dca4399a8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e350290f-d459-46fb-bded-bb70cd8c3f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2312c4-638d-4d20-85fb-b75834f94afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0348439-a476-4cf0-bd17-e22102bdd6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fb0e466-2588-49b8-8407-a4b8036dfbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64870187-637a-46f5-a631-a08b87bdad50",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8349be2-fa53-44e9-a4ab-6ccad9043aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe784c9-7226-4975-aa56-fe679a4b1088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15065ac-c33a-4b8a-9c47-1f34349be981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f5c8ed4-acc9-4489-86d8-665804f84f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce4c55a-d339-4ca0-ba32-aebc566476e5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602328fe-ad49-432f-9e0b-8ea7ae043650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfa2212-e22e-4ce1-ae83-20805101087b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c1256c-65f1-44e6-812e-e32de4c35a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54c55103-c017-4b47-b96c-cff8565abe4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26808f80-3784-4196-aed4-f8a525e04aa7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fc6248-4570-4551-9fcc-8b4759b9d600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f06bc6-390d-4c0c-8e6a-cbc5aa13432f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2c4dc7-13f7-40e3-96c8-d51be0077036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cbfe04a-80da-43ca-82de-98fcfd368224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced13958-3a0c-4af2-84e8-91838903f7e4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a94927-d31b-45dc-b333-a384ea1c1bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174f896b-486e-4327-aa58-ffce9ceb1829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f27d2b-8a97-4974-9342-ba2dae725b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0954e195-d8d2-4081-b57e-a7e0ac3a2dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d80186-d469-469c-a420-1faeaf58c334",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8861a49-e0aa-4593-a521-6d581bd9b598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15840bf-a174-473c-8a5b-69489bed8704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117b9853-bce0-48fb-807d-6b00c2fe9979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1758b29f-1232-4c8d-8382-057806855ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38df8150-41b2-4991-a22c-bc8279137445",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef21132b-dad3-4c8a-9fd5-d171a9e2f109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec516167-4857-4c9d-8ef8-31309d527bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4477f682-29da-4130-9215-1415936279d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c2c6582-28a8-4174-bc61-8743b0ccf555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88593834-53a6-4b10-86eb-5a1d9c6bae51",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1702d359-02ab-4664-b591-63ffcebd9501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe4a8b5-2899-4278-82f9-5dcd94db6766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21500a1-ded4-45b5-bd7a-09cecd01f485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0ebb46d-720d-4c39-acb2-6259b176c680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47c985e-da92-4f14-bf2b-3c94fa19532c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d584aae8-8e72-4bd1-a5dd-3ab723849387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fa8f12-c6e5-4a45-b0f6-65c11a62dbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8a8a2f-1d25-4871-b250-fabb9660faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53d7ebec-09c6-4789-b933-47506268ef79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd191f5-8216-4c3f-a311-24f4b377a558",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e31fd11-c43f-4817-bbb8-d30584524104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f147201-b313-41e8-b592-434ed13074af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7268a9d2-960f-4688-a2db-a838621ecbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d99b65de-5f8d-454f-b287-d3381e93433e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1a62c6-f38d-4a04-a5fa-0580d0d3b959",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf11c71-f56c-4a3a-b243-6178de45723e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c640d06-0d1a-4897-b8bb-73fee7aa9759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf080b3-4615-4a24-98c2-dbc3ca77c4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "11cf4de4-c6bd-437c-817a-52889958d808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6f2dc0-fdb4-4c92-96bf-e805dd246284",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f59ad0b-d885-4365-b9d5-ceb4a2b95482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1a193d-7b7c-4753-9aa2-e7820668ac6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfae32f-a02e-4a6a-a76f-44385eaf55b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eecd6e70-9259-4274-903f-d403a8fb83e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deef82d1-87ee-4441-bbe7-844b4f0d31ca",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f1991f-a6c3-44e1-a15e-dd4a24a96235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60e48bc-4a97-4236-9c11-05d65805d123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1004b6-c8a7-4403-ac42-f2090c729d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8c5b5e-6673-4dda-8217-54b85c6a865c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24aee51-6593-4818-a516-c46c85718211",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2169a0-6a8d-4585-8c69-3b1521057262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb99148-35d1-41e3-acb4-b6a75dc30034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d863d99-7b0e-4e91-8edc-3c110f28e0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2977bf-0e49-4024-91cf-a27aeb2ed339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c805d6-0fa7-4eaa-a374-d94d2f7f071b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3271aa-2662-4818-8846-380e918beb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13db33f-2223-400c-a9aa-b68fbbd5bdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b28feb-4d55-4348-856a-b02ee1e685a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc36348a-3edd-4a99-b0c6-5a746d52ff7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa3305b-7803-44f7-8e02-0a34621c22e4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04de6713-d5ca-4085-b352-558be7d29b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b78896a-c055-479e-81fe-f60f7e8b8e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad517f2e-92ec-4915-90ef-c36455d9bad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5bc81a-f55f-4959-892f-cfb62ea7a39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38be3601-cbec-48c5-b636-14c3cdcbdf8f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62c7ae1-4836-4561-83e4-5562738e7cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55dd996-7182-4083-8fdd-f9f33ee16052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a1c4a7-b760-4cf4-b621-01658390472a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bdde94-51e9-43f4-abaf-1f793f2e6f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed7eef9-1444-453b-a2ec-605fe5e4ae71",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b0dda6-8059-4bf8-855a-d0ceab7b5932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef25d6df-0e60-4d8c-a63d-bc56c16f149d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a29c89c-54b1-4b1e-ab74-13f48ef74032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "044a48dd-22f5-4f79-848a-0ec35b5ca3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e81ddfc-0f60-4569-ad74-b046310ceb54",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a20a10-f5bb-4a88-8ab2-be4b7487867e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a87b3e-0e86-4784-ae4d-eb4694a7db15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c06180e-0eb0-459f-b19c-30a069546333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f2e65d-b824-45b7-ba09-7a3af9fc84a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67b3ddf-9422-40c1-881e-fd056fea2b54",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7f3485-cb76-431b-93e4-68620e28bbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111f0c0c-fc35-4896-86c4-f41db44911b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6268afa-69a2-441a-ba26-b2cf394e01f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd1c783-5e51-49c3-a901-4d80047340fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691d27e8-61ca-4c22-8ee3-cd209c30d3be",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bee02d-5e6a-40cf-b635-fcc99012b0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be08185e-fa26-405d-bb7f-bf5758cd317f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b672d836-07a4-42b0-9674-6658b6d836ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44544047-5f6d-4a96-8707-aca4c7a65638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dfec8e-5e7d-445d-9166-bfe6a41a0baa",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844ecef0-a3c4-4174-8006-3cef210c3e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15089778-eb90-4897-8935-9bf826f91a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7105805-0496-4832-8fb8-dfe2b7c60d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4efb32c-e99d-45e0-bf9e-c6b0d513175c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbc2ecd-f820-4b88-9b2d-7cf7188fe479",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4d9fed-d880-4293-9674-34ad73e2e4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8d99da-8fe8-44ce-80f0-2d0b49d4a35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7508254-42fb-4bd1-b474-6da134752d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bc98e6-8f37-474c-9129-556c694bebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd66c885-0211-44ea-ad58-7af51c66fc03",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc2944a-cd2f-46c8-a34b-deaec4baf5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d9d70c-15c6-4997-b80b-601aee14b3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912877f1-0018-440b-9dae-692042dd7edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "150e891f-47f4-4b51-a5e4-95e087bf90d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6aa032a-e778-46a5-a1db-d8b86c01e758",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f6c30c-60f7-4b1c-b5e7-381b964315d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bcd3e2-0e1c-479a-ac8a-5673236c4d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf641fe-36b8-4676-b69f-1963ec71de86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f28c63-0fe4-4f94-bec9-b5258f56798f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc42cf45-e4f7-41a2-bd02-c307d9f94dc6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74b233e-c9a7-4355-bfed-7974e57f22df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac5e8c8-e22e-4367-a017-7d9da7aeb9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7bf609-8109-4698-8815-84287d815285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60559d4-c465-4229-8e42-664bd8b69e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca38f3e-77b9-430d-8c99-94831edb1ece",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b71ad5-e182-458e-b701-d0d3a85a2d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2daa3c2-ec6e-4865-b024-52fe20f26ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c34b3e2-5319-433a-b6e6-9ab4027fc40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "947fdddf-b732-4173-8843-a3d9d631e18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a0cd7b-1ca0-4d1f-bed6-bce88fd44016",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa11a92-4d27-4350-b19b-fff2740eb62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1007216b-1c4a-4b81-beaf-0a5f86111186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6c9869-3e13-45e3-9ded-ee5fe557f651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6bec10-b460-432d-9b12-37bfa131ea4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ce215b-b4a7-4889-8031-51339f7532d4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425acf10-4ebc-44d4-9dc9-bd5abea9c5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eec26dc1-f6cb-421a-91f6-5fb1c8e0a979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af6ad2e-4e73-43b0-bf8f-b9480119e056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "326f86ee-7cef-4cc8-a4f8-07581436a6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9623c4-10f0-4076-88e0-16811c96d1f9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d450c82-b6bb-4312-ac30-93a0c69f7c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee6fbd3-50b2-4172-9d4a-b0a4661ec37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06a4be1-d318-4ac8-9eb7-b8fd408abbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8e80bf-8c17-444c-ac64-3b362c0bbfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910d0b68-70bd-462d-a58f-04cdcdda79e1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8792a9-205f-400d-b34a-0250c714ee6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a802786-708e-415f-9479-693fb3fd073a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4444f6c-98eb-4aca-9522-412e0ccd63f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cd8a2f-ebc9-45bb-a4db-03c3088f930a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20839edd-c7c1-4f15-8900-e2a61184e89a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c5b467-fa08-4bff-8161-e75e1e057941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6666e1b1-5ad5-4fab-90d2-6b6b2a9f2d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a04ddf-f85e-4eda-bebd-0dc8cbb2d6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e451e20-08e9-423e-8144-a70d2a97f7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50526123-9798-48d5-9f9e-4827ed6eb27f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa16158c-35de-4b4e-a3aa-c93287e020c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4654239-6b05-4b48-9c35-3eb7aa437e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94097448-c1c1-449d-977f-8df6380145d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37ec88d0-a728-4a40-9772-b9b6c7b641cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b250c6-5f34-472a-bcc6-6941ab77efe9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ebf3f-2ca9-4008-88b0-5c851f81bc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d21da13-de49-4a57-ae50-3833e8dbfb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b46066-a386-48a5-bd9a-34750c6de051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f2d4bd-a87f-413d-8688-bfb6194b028c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d93e85e-b703-4b65-8126-5f230951e431",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5da045-ac5a-45d6-86ed-482481e38cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf536e12-a116-48af-b128-8594ab0e51d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577ca107-9793-4bf0-bfea-1b91edcf71d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c7aeb0d9-cb6d-46de-b502-46ae2078f867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d1761c-3271-469c-96ab-434644def517",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9640733f-a23c-4ee2-b340-60a55b58742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc5a709-e130-4d0a-bf5f-cd1170fd63db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b997e2ba-ff30-434c-b3be-20e0dd7040b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5f4dc5-b863-4d9b-b324-3730a82bbd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435ec21f-d7dd-4ffa-a58c-f0a36b51299a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffe8c47-a2b1-416d-9dc7-1c40ecc36aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28735433-ee68-4cfb-90eb-a2e553a245cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939ebdd-1208-4971-9406-f298bc266138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "89f2cd43-7047-4162-bd42-942ed340b468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e23c0e-ad47-45c1-8519-386cd91e85b9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349da98c-2af1-4fa6-a416-659806b86acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845878d0-48b5-416d-9b55-ae09d3b17fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb550f0-768d-4bf1-aed6-df7cd3e04b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2dce36-73ff-4c3b-b399-2ff84199d656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859949d7-b29c-44b2-a9f2-7962bdd782a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361f5153-0fc7-4028-8877-df34611ba132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334fff4c-5677-42af-8453-09282953a8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82c0613-8454-4eef-882e-da957782fb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cefa98-8174-4b81-83c3-eb34a11080f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3753fcb-ccba-487d-8b1b-05c3b315659a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dbc9b9-e141-4e0d-8908-028956d8d794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4185d2e8-750a-435b-82f3-0f115fdbf152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda080f9-3fed-4a12-858c-1c808ddff27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2a991a-0527-4aba-be68-e0fd992c51f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd8da5-9b42-4112-9ad3-fb84ab9d2d68",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d8134a-4624-448c-ad45-fd34443b21c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b620b12f-deef-40b7-b452-71d6a0a05baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46327f17-f276-403f-b743-2e0554c2b982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4a8d56-82b1-450c-9231-67e97fd55b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f661275f-eb27-49d7-98df-1df7a39c174c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916ac1df-f5ce-43ea-9eae-f395b354610f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da52323-1c22-48ad-9de6-a3f00a5e2fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921acfc7-2f1a-486b-8fc3-0df72852c4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c29e66a4-7836-421e-b0ff-98d651a868f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7fbddb-8027-4d3a-b47e-255900abeccd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043dc3cd-9495-43a1-beb3-9d819c0418e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333cf880-f384-4a8a-8cf7-af130af5bf2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e94cf8-27d2-40d6-85df-dc751a640637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f83aa38f-b7d4-414d-88a1-ffc59b7658b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e80247-eb03-4a8c-abbf-65893b3e75e8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8318376c-fb4c-4dbf-ae07-1f2344f9e552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a985af0-4eea-4b9d-aadc-bbffaca0c8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342245fd-a5f8-4adc-90cc-52dbf512185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "782cd52f-407d-4f7e-9db0-9cea9795092c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd03635-0070-4763-a03e-a73979522318",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e4827c-5945-4c96-9eb5-695e06fc1fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67edebe5-fd0a-41cd-a973-b8d4fe81e8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6436f4c2-2851-47a8-898f-6b4b292d4e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a34d39-5398-4919-9ad9-3ba331570f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da313d19-c566-44fb-8e6a-e85c1e9b555e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dace1864-8828-4e86-b65b-cc47229e1fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d734a88e-bcac-49d0-b0fb-800a5fb03a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d349b36-2529-402b-8b19-01cab8893ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b151da-cc62-4702-af80-21df0b5a10b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a23b18-44bc-4293-8af1-6c78d29038b7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a553d0-9633-44d0-8142-15156dc106e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6671980-6802-46c6-b57f-bd3562a539ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912bc494-33b5-4a7f-94c3-e9117f7ab484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7b5710-c9a3-49a4-81fe-86b355cf8643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0d49ef-2c17-4847-bade-0ab758930a14",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac24502-c2c5-472b-845a-83c882abb59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3b9a84-b4b4-4bcf-a3c3-959d7dd774f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6a7b1d-179c-4fdf-985d-6669ec050b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a05196d7-3ec3-480c-95cd-714157f4ecba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc11df6-6a94-428a-9f6c-108530cccc6f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6563d88d-1334-4073-a9eb-61a8e5450759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9269e63-62b3-4842-a79a-cf43b9b5b16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f349b751-d089-43ec-9dca-b7e3df48dca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbfaa4e-1af6-4b1b-974e-81adc76ff843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdafb75-b4c9-47c2-b464-486cfc7f67a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdbc92d-1a27-44ea-8325-b36e39d0331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4897e9-037d-4ed8-aab4-8a455df19367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54822049-19c9-4638-a72c-cd9536f5c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "142390c9-231c-482b-aa10-dc9fd5f95512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c1b863-5bb5-4c78-aa21-9bd6c8a9e8dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47bde33-c415-447c-8bde-be994f5f176b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6753a6-1b01-4b21-bb62-37352fca6f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e62b6fa-3630-4f16-94ed-886156a21f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59a3e131-8d22-492f-816f-11051aa1c02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ce9642-7d0a-4c87-af58-517bdb609662",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f9fa34-cffd-4601-899c-0b020a10ce85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383645cd-4407-44c3-b187-c28cfb591eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850419dc-e8a6-4950-8af0-a19a5209bc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78214353-81c3-49fe-95e7-22966a3ffa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532de903-29b4-4340-a3bd-23a799f55392",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9035662-3270-4e45-b002-d0f8a13670fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a651cf49-7547-4d38-ad2c-2319b9fa40d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b601cf-9455-43c1-974d-c08db86f5f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf06b7b5-a9f2-4994-9f38-08e11138cd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad608b00-6502-481f-b4cb-3a1555b509a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d68ea7-1ade-4a18-9167-4e8f91dbb822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc3209a-dd1a-44b4-b783-a055750a5173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296f9146-a35a-47a0-8018-79d271d24ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "abdc1ffc-5db2-4ea4-8761-289c177af98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec2f427-975a-4027-8b07-516f68f5b8aa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0399a873-7b9c-481a-bfe2-143d36fb4d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d464b7-e35a-4006-a5ad-605602be4c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0eb431-5fe3-41e4-b019-8b24bcf60dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "252276ec-5a3f-41d8-8d7d-e9bd7376f175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6555d78-9bbc-4f66-86aa-fa6b583ce908",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2203f1d8-2029-4813-96df-af3588aa0800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542a8db1-321c-48a3-841b-44db814139f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5e45bd-f67f-4077-8c6f-e30db2e1c3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e65afa60-aa27-4daf-b09c-5105dfb38cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac60b4bb-832f-482d-b29b-726dca5322e2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d96d096-a705-46d3-864d-acf947bcab19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f841b55f-df67-4e85-b155-731cbad490d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3464f41d-954f-4ab6-aef6-de1124e6523c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35217770-d42e-47c3-ac19-c1a6018f4844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8b524c-df35-4ad6-834c-61d4d13bab02",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a43d75-4816-4810-8d48-cb17a5e4afc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c64d9b-52c8-4304-be65-96c550dba54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae393f0-1669-4635-95f9-be06d9f9a171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "940c4cb3-2be7-488c-ae6a-8a69161032d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa2b48d-1c67-41a5-a45f-19ddf540b6cb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92195d55-3c47-404b-9816-561a3edaad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d43d695-b721-4ead-ac35-23e7574da7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47908a3-6da8-44b3-a3fb-8e7451f9c112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "492d5f07-62f8-401f-8222-d0acbcbb4d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6f7952-6a82-44a9-8b0e-856967b05a81",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451d8c47-6d77-4fca-8e7e-e3abcba09780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a1117c-b50b-41aa-9263-f4315198c900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3134f92-a1dc-4b9c-9b80-74e9f2643248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55955d39-c85c-4bad-9cfc-968da753b6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369ae53e-36f5-4af7-9ad0-654e89d99ebb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4938f83-4a93-4a45-b8d5-cba5101dcb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cce0efc-9929-478a-8de9-f6fac631d22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d33f42-ea47-41cd-8183-473fabb13747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98cd1a7c-5d85-463e-be25-7b7671abca22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967a1d40-999c-4ea8-82da-b120123b1407",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb14ef3-ed64-40b0-8685-52e52450385a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7520e78b-d3f7-4db9-b1e8-de4b2de77f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd62d08-d35f-4b40-a76e-4f41b34285b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "747675fc-793e-472e-828c-426874b0920e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e2b53e-6fe2-451b-bf8d-1274b3f831e0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbceb210-0cec-4319-ab48-d6f7badc05aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e94e1a4-24c8-4d2a-929f-ce4a90df19f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d020d948-210e-4317-9aa6-e95944737bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba1d6bd-5063-4a6b-866a-f7830320b287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024b9b47-ae8e-4e41-aea4-629b6986e75b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bad101-c2aa-4886-839c-32f17c826052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68d2be4-ccb1-4fa1-b763-d629d46b5782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e249f51-6828-4cb7-9de5-27ecd3a21c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9bec0e-b239-416c-8f57-4242ebd3729b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fa40fc-ac3c-406c-a1a4-01ae7088e878",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2943a60d-2e80-4c22-a2c2-cebc75c71667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65cf782f-cc95-437d-8c70-d0e236a8cef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38f6c25-87a2-4c4a-9a96-80c94a619273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7decb234-4e39-48ef-b04c-6ba7e0295b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e6c84c-7d48-48ec-a10d-1dfeba426f04",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34109fe8-c6b3-480f-aacf-034dc1464547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612bf945-70d9-42e8-bd14-5c2e42d83f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02d7b33-d0b7-4849-ad67-77c2b3925982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24de2138-b22b-4411-ac18-9eb5479728b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae606536-27e9-458b-8d30-648f96974143",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7625d19-ed29-4ec8-afec-93689cc2db66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd458824-a59f-4601-aed6-8cf3595ef8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9447f6-f734-44c6-b7af-f340b5e677ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4988a33-0813-43db-85cb-425f9e615714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d03e920-6e03-4615-bdb4-ac9dad0a1586",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d71bf5-a298-40ed-888e-9fe612b60a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a914bd13-81e5-4f7a-a35a-9c3dbcd6ac38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee2cdac-9829-48e6-9096-34bc4cbad383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f19cf595-96a1-4819-95e7-0e0f2d82acb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84198dc8-50e2-4a08-927e-9352d026f418",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f7f4c0-590f-4ede-bc2f-93e3c7b4fa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdbd239-0458-43ad-8480-ef6bdfc197e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579f7514-7b75-4cee-aaf3-6811b7c0f00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2211a9-370c-4c23-9611-5c8ae7a509e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a5f184-ade8-430b-b6e1-ba7998b2f758",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce583150-e836-48e3-b96a-2de5608bcbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9781ae-8136-4710-917b-f6696dd1403a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d70ed1-775f-4b73-bf2a-c8a5e0cb9a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5062b117-95a5-48a8-9d89-8098dbc530ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712da579-d36a-4e91-a5ff-5e39079b672f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b2db4a-d409-496a-9ecf-e369b7019dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27ce98f-29a6-4a55-909c-31ddab9e18c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d96a2ff-29b1-458e-accc-c782fe39dc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9a1010-31ce-4ae2-ad7b-f2d7ae37dbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a341e3f-a197-4b14-ad19-23a5ef10468e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44828809-b001-4460-9023-1e8692b536e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54de4b7-1aab-4f35-a41e-392ed17d2155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1632c48c-f473-48bd-9b9a-c08014e3879f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d93c2632-93b2-45af-b3a3-15047d782535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e1d78a-5bf0-4ef0-8f22-547b131d4504",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e2b643-297a-4b23-9816-85af45bf0223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd03d8e-cf33-440d-bd97-cce96323340a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88fa1b1-ca9f-4258-84c1-3623998e880a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be95a85f-a1f5-4352-bd36-1dd01d06f772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e694eb3c-5f5b-470b-9dac-f2c75ace2d52",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22858110-529d-4dd5-a21c-1c86edd5b0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abb32f4-8222-4c68-a237-c146390d9f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38673571-d3c3-40e0-ba77-d730a2ffad28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d40a924b-c97e-4e3f-b903-836185f603ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad59518-652b-4d66-a842-1c4c656f534f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becefaa9-3e9d-43cd-b505-92a3bb66bb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10037cb3-36af-4933-a020-b3958537581d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122cac53-6792-40f0-b1e7-00b784f02ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "582a249f-924b-49a0-9caf-14f96b00a68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a4ca55-2b15-44e7-88c7-c29b0cf226a3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3572289-ddb9-4002-bbc0-69bb40eeedd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59b1181-eec3-428d-9c79-4cca273b2b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd821e98-9d3e-4f06-847f-6f153c1024cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb146dc-ca05-4499-be2e-bc273f3d00aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f9a61b-c2cf-4767-8890-0097b51d9571",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e4a4ec-8910-4f59-9d1e-0cbd583abd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef81a4c-397d-4733-b623-5205fcde748e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd9a5f2-a5a7-4a54-8c64-d88a8114df4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac0c77e-5fbc-40c8-a0cd-6b703e13f5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8695ade6-b239-48a7-a5a1-85788a9cc95d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a011db7-e8c9-4649-9058-ba625c541094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea925fa-cd04-4a0f-9d3a-5fb69dcd8dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ced4cd-ec65-4fc6-8df1-84838778c860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df5e1336-cc27-455a-87fb-ccfc45fb5f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e871f9ed-a5f1-482e-8ac2-2839166c7dd0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283deea9-1aa1-4c00-adcb-fa1c9d25d507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4925111a-a434-4677-841b-c910b16f57b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b620254b-ea75-449c-bbaa-4c2379db726f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d42ab8-714f-4f96-8cd3-76e4b3fa7efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df69184e-b9a5-4031-995b-bf0c90bc0d55",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f06261-cc92-4925-b703-c63f33c577a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cfd5a6-34a3-4452-b2f2-b61f0871bde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2169f6b-7d31-4c4f-ba69-1bfcfdd084da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9e10dc-c368-4113-84d8-493684e85b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fe1afb-e850-4aa6-a411-289b1343b666",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c83a60-8cba-4504-83f5-6f0fb59f72b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb3f65a-fe69-44b5-b52d-dde7ecbb9e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d852c46-e6d7-4a22-b64f-12e3e9ee4efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91612ce6-e3f1-42fa-8733-8e0cadb34e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d905800a-5e6e-46ce-9f1a-fee9e31083a5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1e2093-d358-4d72-81d6-21e33722793d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d04575e-0adc-414c-9a1e-973982500a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1024551-d295-46f5-9372-653bba4ad5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81e3b25c-67cb-4610-9890-6c538ec7d141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828aa5f6-d656-4dea-8c4e-66ba779006f5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2847ae7-37e4-4386-a4c8-22381eeef380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb9be90-ebf4-45a6-be27-a6977b673125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683e5bef-fcd0-4fef-90fc-25cb4c58d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "047dc767-8190-4b74-917e-c601f23da43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1778c33a-0760-45db-b791-49190545128a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bef585c-b05d-43ba-9b62-5f6a8f95592a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77d3d33-720d-4311-aa0b-ac31239b19dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b86424-f5c9-429b-9629-bd45651e7931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8588154-9c1c-4278-8292-43c4bfa4ba66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63c335e-ebcc-498c-be62-06eb575ae083",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f57ff3-5afd-4b75-9180-c79fbf5bb766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1e5b2519-a757-4706-a9df-b22bf383a47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60d6cfd-503a-408f-a7b2-8a879593f830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "47347b81-c48e-49ba-b582-aae135a8aacc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7004836-b526-4c83-89a6-a8c2632001b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87767ad1-c70b-4d93-8bed-0ab3bc5d051a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db54d5e-1433-4152-8945-1a4dc7af7470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "023c0866-5c31-4c64-965f-b622595224ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642973ba-7b79-42ba-9dc9-094a846244a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2abdb333-0557-47f4-9f65-b15d6b9cb4df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1960677d-719f-45f1-86e4-b89c9c3bdc73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bc2786e-e5cf-469a-9c94-907d11e7d8e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f70212a9-d8ac-4c73-a2b9-d4c6de08cad3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f976860-9227-44cc-a708-efa6869b083f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b99f046-12b6-459f-b02d-347a22833380",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13515a6c-20b3-41b2-9ffd-1855e720ebcf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a1279407-05b7-4970-a1c9-fa21d0180fea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb63e13d-5146-482d-a804-db00171ddafa"
                }
              }
            ]
          },
          {
            "id": "9bc6686a-75f5-4ed3-893b-c0c5c8ff891b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed1e0589-d70c-4c62-8518-6aa711549947",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0c1265f6-a336-4d69-9941-995e8886049f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888beebd-f2eb-4568-8db1-722edac6387b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9d08cce6-2fb1-4e7c-980a-badb73db1d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6086ce10-685b-48f7-8fca-523105cbb765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6dd5df-853c-4f40-81e2-da98ded50e64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e54eed2-2ea2-4b5b-ba8d-b53e77b30e2d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86563553-374c-4420-970c-47c811f1ca77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1952be45-9009-45d7-ac25-33641e01ea2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f084321-3651-4159-9cfd-ae6daf288ec1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb3d02ce-e2fe-430c-b7e6-dc3159795bcf"
                    }
                  }
                ]
              },
              {
                "id": "f478c8fe-10f8-41c6-b778-c5c7eb7f1268",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbe681d5-3bdd-4898-aa7b-34e84f73a67e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7934078c-43fc-45f6-b270-762a3d483331"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ed7dcce-70ed-4b33-9cd7-ef7ffc885133",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c25bc5fe-a0a0-4a17-9f85-019582a84d16"
                    }
                  }
                ]
              },
              {
                "id": "d7fde6b0-0616-403f-a789-e81513370be0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65818636-5327-4f60-8961-44368470ade7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6dbcf36c-0ca3-4a2a-bb3d-5bd386a9e7f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05eb1e3d-33eb-4d25-81ad-32663e96f335",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93b24f46-dbf1-402d-a867-c86ec199907d"
                    }
                  }
                ]
              },
              {
                "id": "b14a7446-f502-4158-8b5f-1b028fbd763c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81f6da9b-e558-4760-9e99-1b3d6ab35c02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c89f2a9-be64-407d-997b-a14e444ddd3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8393faad-0f8f-4d9b-b9ce-b14fd0366b04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a56cc253-5ef5-411b-b9de-84077949cf20"
                    }
                  }
                ]
              },
              {
                "id": "d4a61766-e03f-4ab7-baf8-f2978d232ffa",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da83973d-36ab-4e38-80fd-99031592a332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd2ac594-b78f-43d2-bd51-db2c3c168e52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35a14e15-abfd-45a3-b879-1bd9fc4457c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a0873a48-655a-4826-8cb4-2dcc7a082bee"
                    }
                  }
                ]
              },
              {
                "id": "104deb9f-0ad7-4f5a-9e0c-884bc606de48",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9804249b-4d75-44e9-93d8-2223ffca92b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "076da4f1-fb02-497a-a734-7bb267be2b87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be2a02ad-594b-4445-97eb-596cf21ebd38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18f65a8b-5383-4931-b275-cf2ce9403af6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db6c97f8-915f-4411-aaa2-3d23872d20ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fb65647-e2a5-4863-9c75-10ee97c3f493"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71a573f0-7028-42de-90e6-88a77d6978a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17e5224f-999f-4721-9120-7a1cc7e10948"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59c4204a-88b5-4e62-817c-a72ee6e7d8f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a3607c98-9fe7-4336-a519-7c37675cc9e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f10d7ce-77e5-4b2b-a8f2-df945a664940",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "875bbcc6-26f6-4ff0-8d33-43b82f0836c0"
            }
          }
        ]
      },
      {
        "id": "0f7eb051-c674-4398-bf01-6c585035fef6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "062fecfd-1172-4924-991d-e348af07be31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d672ad7-f442-4362-9842-c72ba8933e89",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6952e68c-0f88-4dce-85c9-84adf1b4aa51",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718e6ea8-1d50-4058-8bc8-9c0b173b0565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee72bf16-f80b-413c-a81e-09b344722bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09283b91-3716-4e38-b7b1-0d82b71a1c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6043f480-c51d-4118-b1fd-1d9f1681098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a145e0db-7ba4-4b60-aba4-aacba845f97e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c77034-ec9c-433d-90a2-42d6f12428e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dd9bee-9b35-481d-84d1-8e0c8ae19b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49846a5c-fe1c-4b05-a3d7-2db52807505d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4a9088-0dfb-4958-8d09-20f50ce08ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f436b126-baad-4bcd-9e48-b1ead0858543",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09b4c20-171f-4877-83c8-754f0642fd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48452b7-c30d-4f8f-9615-76e37d92cce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36410526-6399-41af-aef2-2b9ab16976f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7014e427-27f0-4abf-a243-845380e728ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52f0e25-2ffe-4b87-9bf5-a62f310af30e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4010d-ee16-42bb-911c-3d407ae879cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9398c12a-c95e-4049-a5fa-8c3effccf199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51e4896-2466-4a65-a112-79be46b3f264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "215d7ff9-3f34-4866-ba0e-9a2f9ce65ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0e050c-54b3-4bcc-b36c-841e5c95e797",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de74395-cba3-4591-a9d1-286462d48bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe1e479-c6ff-4d83-9484-1c5bbf3bc15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262884d5-7bae-49be-a6c4-b9bf116384ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff74cb0-7941-48c3-863c-b3ad1665cf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4d07a2-a05b-4189-97ce-77ba326d3e6c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bfd5d0-fc8d-41c1-9cc6-21ac3ba3ca8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39bcdb3-4739-4bfb-9b84-927a862cedf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3a3fe4-0000-45cb-b1b7-37ee75d3d522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "437b53f8-1c79-479a-9bbb-2325e1cc7ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a7901d-dc93-4bee-bafd-4d677ae1c845",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03525ea-3c5a-4316-96ad-68f050239d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd2f04d-9ab8-4983-add4-b6032ce0a8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f15427-c403-4d6f-b48b-24dc023748d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "655482aa-2ced-4525-9b9e-725c3892ca25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cac3e18-7afc-4504-970f-9be72c631917",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca400516-b947-45cc-b903-35f9a5e16ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a33fa6c-ec47-4eed-94ec-280b485f9ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e69003-bca6-44e0-a6ce-1903b484186d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae832ee4-aaac-4e4e-ac15-9922745fb027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235fce4c-d36a-4e29-b7ff-dc959ce53106",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664eff9c-9207-4bd3-85f5-05460d8e744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce4845d-822f-4092-a7f2-5c0eac0c3d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07b2264-fb43-4f66-bb97-afd1b04afff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae3a8e3-1b8e-4106-8417-b79840ff1729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531f058b-4d0e-43e1-8c84-1c232a490cf1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7b3648-c91d-4f95-ab1b-674127e48b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b1ff6a-aa64-43c9-8602-39c514fb8058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97100ac9-311d-424e-9746-bd9896a81af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a76f1ed7-8b20-470a-bfcc-dd8e510c8453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5250d888-9421-4b9f-b1f7-f8fad6f9bb87",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29f948d-ea23-4dad-8784-7fb2c8362b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d861a43-f6f3-44b1-b494-1da7d316caa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b021cae-24bd-4cc0-b495-c9176ce71f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "28633bd6-5a2e-4754-86af-e1568b25e7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fdc322-b720-4d3f-bc1f-4bd059e01348",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06272564-8ced-402d-b38f-6eb7065a07e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67114476-6808-4300-ae5c-c3aceeec792b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5196a66c-2e4a-48a5-9867-7bc3ba2e25ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1ff92d-7f50-4ac2-8751-8892d1629669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3035bc1-1d23-40d8-9bcd-665435313c36",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8149da33-6a64-41e4-a231-6e20632f6825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f75f12-d0c9-414b-a842-04bce8e413ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11727bb6-49eb-4deb-bd7a-2871bfa8b843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9f36fb-50e0-4c2d-82fb-d41302087abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b0d4ed-6ae9-48d7-9830-b66fba9a625d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590b0e55-5b8f-4ef8-ba38-fae2c5f7a361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5072900f-91cb-4e04-92ba-9a4efee0d9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6f4129-33a9-4499-89bf-749828be0a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea90b687-1cdc-4f31-991f-a74fb69b00b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294ef85f-b2e3-450a-a1e7-c618ce3f76e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b23f31-bdc1-4732-96d1-f4c9b5be806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd3ec2d-51de-4e3e-b1fb-02256696b503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371551ae-b8f4-4b2b-8a80-e55960277af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2efc3df-8945-462a-895b-b5ed1999fd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a3a789-7561-4fc5-9df6-2b3ffe63c4ec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733d638d-08fb-4c1a-8e86-3d99abfcc615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34854332-09c9-4d1f-b721-eca86b8c55cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8ee720-b966-45b2-803d-b7951c472aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb8925e-172a-4931-87be-95f98c48ebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461164d4-2126-4462-a12c-b5d0e8604466",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee845f6-adf4-4a33-a69c-419ce40c0072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9141f9-9f4b-4f3b-8290-633d2729c21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dddae4-e435-4d9b-a99f-73595cfabd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc4b904-cecd-4a5d-a852-80ab18f422b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36adfeee-9d06-4dbe-8f21-7be912ec9656",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1003181-2cad-465f-b940-286096cb24c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0651438f-fe85-4abc-a9a1-a673051da436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df0ac0d-0cab-4914-8350-4a7898a358d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b23c06-7115-4587-a677-da85584738d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4dff30-c57f-4b54-a083-2ba19b11464a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cccf8e-c043-4116-9a92-71107f6fa1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9fba4b-e384-4b1a-8eb2-559e1f8ad1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff23223-db10-430d-85ad-6fc632541787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f9603b-2891-4deb-93c0-34d37093b336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dfdaeb-1c32-4f6d-9314-56d3d1b75771",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ae24f8-0404-4e08-918a-557222ba4fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca199e49-46ab-4d2e-be82-76c179f7418b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ae4d9d-81c9-41c2-948f-21896a92ef41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bda3fa6-d944-4d06-b6d5-799f9658689e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3922e02f-136f-4a25-8d98-b32aa1c1a58a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ba89b7-02f8-4085-8428-b9d67a0bf75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c7ba44-6a0c-4ca5-b6fc-f4bb8f506251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788d3ace-af48-4369-a6c0-370503ff36e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64ad655-e0fb-4d2a-b370-e4c4070bd977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eb4b9c-0b19-448e-b78c-6343c4d6363a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b53c716-e679-46cd-bc45-b4e9508f4d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319a1e3d-a71e-4923-8fdd-788a51b603d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48606043-0cb7-4253-8634-2e518b4408b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e12b99d-8f83-4af7-bf5b-50b024ea230e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4744e523-a2dd-43b2-8fd1-a238353c454e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2af017c-3388-45fa-b825-37a6527212c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb515d4-b645-4b69-afdf-e18ed9039222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382f6f03-f5ed-47d2-877c-3a1c01478654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6333c0-eda6-47a7-beb5-a94d42371514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5f308b-7ddb-4c27-8249-7067d1432488",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466ec882-ba73-438b-8785-e566a2eeb7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2dd1835-1268-4721-9d99-5fef581d0dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca50d760-5e7a-4760-9f4e-ba2da7df77b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc734f59-de4a-4f0b-bc98-fb869063a6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f7d5af-d57c-46ae-946c-6e3c62eb52a4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4237e2be-bc3d-4a61-9dfc-caf965eea0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42136fb4-2c42-456e-b93f-ff1f1e35f523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ec9e53-11f2-430c-bc5b-4fa2e38a2483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "753f1a45-66a8-46ae-a1d0-c718d3dbd227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadc5cbd-6c8b-4669-95ff-fa61d336311d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071146cc-769f-4b8c-b5ea-1ed3d8dfc697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6a71f1-1f75-4302-a0d2-66029cad2e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216da1f6-01b6-4ecc-be93-47964ca086ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bd2f7c-18cb-4e29-86c2-f7e2b02d5d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5e5303-c9fa-43a7-85ce-dc7b742e575d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298ba670-b755-4df2-a28d-3a7b0da4fa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b298bda-35fb-4b7a-8a41-39df3d137c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e720141-15cc-4ff8-a642-331bbfe14a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c42ada3-69f6-4c8f-af6d-10004006b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df08b698-6ddb-4918-8df4-89e578d26f8b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cdd1c4-56b0-4ccf-84bf-05d9cd99f09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd115b73-ba73-406c-bcdc-6315705b90de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70b7055-8c91-442c-975b-371f4bda2bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cef4b36d-20e9-49e6-9ff1-fc23ce525440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970462f8-daaa-4f2b-b4c0-155f314ce0be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc769857-7c99-4ca2-974f-885f255fbd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73139fb-f059-47f1-97d0-67a7b0e4d489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6b8f23-660e-4911-a1ae-b34d3b199e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8351d0e2-a11b-453d-aeec-64e1108aef65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13780c1-26c3-4e5e-984b-66cc3bec7c83",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17693a15-db52-4f08-98c5-bee235a2e97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "513c3d82-8849-48d3-a3c5-92e9a0fd337b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf3dd3e-8763-4aef-8cce-71446f8fd598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f68a970e-4f74-4165-afb0-6c525a0e7937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2759314e-ba6c-4cf8-8f27-00a1e6dce2bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7706ef21-630c-439e-9cc9-f78156d37214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1262419f-de42-4d08-b39f-f658d5fea268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ace94f-fa42-4130-af5f-a15aa7ecd2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8133673d-c210-4d2c-bb74-6c0b78269814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1ef2bf-0961-4012-a4ed-e7c8a84590a9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84aa0e5-476e-4c06-8692-cfebc0bb8581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780fe2a3-e4fb-47d2-a9e7-78cb610e13f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdd4e90-6c2e-407a-b293-fb69ea507d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a67c6349-28fe-4333-b527-5b1a23456955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6829ad0d-a895-4c5a-b301-f147afcdfa6c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3e1cf5-e7e3-4584-942c-0facc49663e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c11c303-49c2-45f2-819a-05882e76425c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcceca4-b0a7-4da9-bf74-7ac8b7930d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60a2861-13c8-4851-bd20-0de42617c2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0651acb-6f99-4c81-b5e1-112aba1c8590",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c576a116-0bb8-47b9-a431-441a01b031c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756b9b82-e6aa-4ce0-a8a4-8e35f6f2cddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0e6733-1144-4b74-b9a7-787eb203ce60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d496679-37a6-4444-8429-f9c64c6f0fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8067ec-7f4a-442c-ab4c-7e9bfd832513",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb04bfc-9ba0-45b1-9c0e-516af47237e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8a2ae5-b214-4704-b3d3-ff7f7c18071d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e82559c-2759-4909-8a09-3665b7c134d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fecb37b-78e0-4a7d-a6c8-5b5336f1f658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a265313-8596-4d07-885e-6b74d0bbaf86",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73c5815-25f8-43bd-a811-2f0073f857ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2204582-0d98-4092-a4d6-53254b783094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe65a1c-9c56-4933-b3b7-d79421093beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "246c0df2-ef81-40a5-9d5a-da0dd5ea8d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d82c51-d291-4255-b757-40c3652bf2d5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536403ab-360a-4215-a3f5-08cd2bd9ff52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5262e5c7-66c7-4b46-8c93-4c917e2a6fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb543081-39d9-4794-979a-71b53b853580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0375a6-3bcb-4656-a58e-0c88811b3843"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a09c7b4d-b503-4cea-839a-afa1664e3677",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aaee6c5f-7bf5-49fd-a53e-3e4d21ddb585",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104d5adf-2ec9-49c7-85fd-37c480af889d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e37bc48c-db89-4fb4-b36d-9546e371102c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c36448-bac4-4138-b01e-59dec12f768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7b30e03-9631-4517-98e9-3b52a9c46431"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43f80de4-0d41-4712-b82f-1a6ec87fc10d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de0aa200-46c8-4ab1-aa3f-1f1cb5c263a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d0d08c5-152e-4f82-972c-5224113858ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b47b93b-a5fd-4848-9a30-5c4f63ea7ee5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6393cc5b-e226-4810-916a-9ff0884c23fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d7cae76-c756-414c-9317-370416a98162"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a38b69bb-f6f4-4d29-a112-f04c69c33136",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2441f99c-1105-4fd8-aabe-c42d5699d118"
            }
          }
        ]
      },
      {
        "id": "037886c3-a9a3-4bbd-92fc-c5dee35a0206",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "29901f36-5ee4-4421-97ce-a6b31143e806",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6601127a-f05b-4de6-9700-3a2ea65e9cf6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0e0a68c-279e-4124-a33a-d2fcfe240fb9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef15e985-9ec5-4f6a-b29e-b3125d8c7d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dc0207-bbb8-49dd-af4e-e0bb4727c24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdf6060-0bb3-4fde-99e9-9a8b2f1652ff",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eceb1eb6-eb0f-474f-a976-9faebc0b4112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af6e937-9585-44c0-ae98-f4a045aa6a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7a49e8-df0d-47be-9d9d-ccf0cf5a63e3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d1fbc8-47fd-4ae0-abc0-2580975588b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d58455e-4acb-434f-8726-28406aacc48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693a58ab-5bc7-4a57-888e-f193977fa178",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af176c2e-b8fd-4dba-8fd9-f14b2b6f8a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10b1c26-117b-4f02-9ca0-6870d2f4b03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ddc88e-a386-46a9-a48f-f71cb826051c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc47c5d-9a33-4016-95e6-c00b5621724f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84cfd76-4ee3-4fc2-a9f6-8dd17f9f5874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f053407-4703-480c-85ed-471e5ce54399",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f64801-54d6-4e22-ba8d-340a3eb77b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38069367-d226-48eb-8061-0802f78afcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8930d828-185c-4b4d-8f2c-ecda5a6a41fd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fbfd43-1c71-4785-9082-67ed4f180907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a3c2fc-68e6-4096-a5cb-d756f66c004a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1214a2e0-5b87-4290-8cd2-dfe0b4aa8ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf0b136-ba23-407d-a15c-8f6dbf2251a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d1d1ef-317f-4e78-a630-08ded4d70787",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3a870d-a5d8-4137-8ade-4f5028dac9f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31e28bb-dbbc-46de-bf41-aafb0fb4d403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e45bc29-a5f9-4616-acd6-b7a12208de64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf944f5-d0ec-499b-a7da-4067e3d34676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b2cdca-954f-4544-b68a-9de00207b62b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a9726c-e9b8-4ed1-8d8d-1df0e44d859c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa9e2a72-b473-4fc7-8588-2ef953b9fe26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3650e36-178a-4603-a695-e7a5aaa23306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cabf4d2-90c3-443e-8938-ee92a141d1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889fc34a-834e-4b7e-97c4-7e3b32c60823",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382ef372-253a-4bcc-a4a6-18c604383819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ccbfd8-6326-4d13-a456-4bd7d31144ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65660ea8-3b17-4d2e-82a1-9301692de132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1729dd74-7809-4c93-8591-044e9dc4f080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5f3826-cce6-4d96-8816-f1a1023f72f3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2478c06d-4850-4c89-94a6-bac1b7a10057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08bd620d-8b67-48b5-ac89-4750f716d0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a7475f-587b-485b-9f24-9961bea57001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9864bba-639a-4be4-a8e7-a686ef4ebcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8ff2c1-0f16-4287-b144-2708949dce7d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe6d787-18b1-4aa4-ba66-6150d888624b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6010d7cf-8f46-4d9a-b66f-c111f9567a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028b4dca-d5a8-4fc3-b118-284350cb32b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cb4cf6-1629-4e77-834f-d67458d36a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85ed00f-d98c-46c7-92c2-24d4427cc2b4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e7d230-3b0d-45ea-85f5-4debe9b63694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d5a9015-2ea0-411b-87ee-95b758cfa4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbd3154-3b22-47b8-9aa3-c77a55c115d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583b906b-a32d-499f-8e49-53b9dbdf9ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0a8495-8521-458e-9bb0-9fa48a5cac1e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5b2a41-626c-404f-9bb4-3af6c25c30df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed534d8f-ca74-4b90-b8e3-ca95e253a694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dfb73e-7882-46e4-962a-8248db6473b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782587c1-af9f-46df-8038-50b3c4aeda1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afb5a76-abb4-4b41-b632-fce8ffc3de5e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f57529-ed1c-4ca6-9cb1-d4e38c1c94eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664a6126-bb5f-4067-8387-5cefa12c08e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c0ad70-1ef3-4d72-be97-e1fa491a7e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01b2c82-4843-4dea-a9bd-8d5ed58d2d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a2b86d-28cc-4a05-92d4-21e59bfc5d5a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d838f4f1-2450-4c17-82a2-f2cd345c8d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab603eb-d461-416b-9b76-749afff3b7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0246a0-052a-412f-ac40-6f49b9c04685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2a3464-22b4-4edb-9b5e-1c2b592ab205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f0b832-c536-4a65-8e98-d70b55268806",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74417352-734d-4373-bc18-5b06ebebdfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f113769d-2733-4ec7-94f7-88ca2cb78341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e650bd24-16ea-4993-8ec3-de8de283efe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baf43d4-a1d1-48f0-a4ba-98f681893011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3fa6af-d571-4165-a0b0-e3406dcd80cb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0604f53c-034f-4699-b458-09fed1682896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cd3b54-658b-4b9c-b748-2f0f1cd69bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225a5500-00b0-422f-8a61-1184386517c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd93442-c1f6-4541-afb2-e18f3dcdb909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a041ba32-aa20-4815-817c-1c6d3936bb5a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d84ad14-4a8b-4592-bc74-1612c6c6f2bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb723c8-bdd2-45ae-948b-bfe6ef3e8225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784c24af-2e48-49c8-9bdf-c9293967008f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d1ceac-a777-4b9e-9281-955cdf4aacc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c006d85-048c-4988-be34-2275831dfcf9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2144c9b-d394-4988-8667-b18221ddc389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50def36-2281-498e-8d69-5379b8d54e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ef3d88-02f2-4717-b6bd-862d0c51132c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac78d847-7f26-45c4-85c0-fde60d5b9fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efb6f9f-8c2c-40e1-97cd-647fb39f9399",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2ec450-8e0f-4ca8-ba28-059c8c3bcb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b95398-a43a-4697-b184-a4027cf05f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1cad82-700a-4862-b346-e061ffb0f7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699fdb74-14e1-4bda-925d-77f19a645c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cf0a61-56f3-4c95-9962-ca6be80de39b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e9559e-8971-427b-b4f8-a118bf2daa3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8019bad4-ce42-4e13-a074-c58364d20ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699728da-5067-489b-9e36-782f2c9ce987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf247054-7ac6-4cfa-8ec5-81875cc273a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4b2e2e-a476-4d00-b712-1e6e95c9e409",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f983cf-f42f-470f-a70b-3fe0da290026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23afb5e2-7c5e-4b11-88c7-dca256c6f03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8469f524-3980-47e6-8546-ad7558202bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d624706-d1f6-4472-8cd1-82b54ac3b7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443fd896-edd2-441b-87e6-1d126738243e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204ed8be-43af-4fb6-96fd-3b3bdb0b236c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b882d0-0f1e-4790-b4a9-9e0c8bac44bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b412f122-d1a0-4ddb-a60c-fd9553e2d6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb043a4-9a7e-4e7b-b2ce-e971f6677e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b1a2fd-e73c-486c-ae09-1c45c0dcaf19",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5289eda8-28a8-4405-9498-4ae9b3e4c18c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd97127d-6f2b-4bfb-8a8c-f3d01f8906ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c309e20-5c30-4b71-a4fb-e2747b3ab14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be80015-8d2c-4358-b1e8-76ebe0b455a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf13268-a7a5-45cd-815f-55ad92c9acea",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968b52d6-04a7-4794-92ef-b885ce859c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62e6c5f-3867-4cd1-b886-4965dfa9505c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504f61e9-e903-473e-98c9-6479aff7cfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7698338-34a0-4ddb-98ff-1ad929b758ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a00c785-2773-449a-8a9c-ae970af3496c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bf5710-1d02-4648-9eca-06a46cca1f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "143cf4b7-3a38-46eb-a600-e3634a90fee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01911ab7-a5a8-4e55-a389-da1162615c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99398aa9-ac72-45a7-9281-3988add97eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dc4612-ddd2-4d5c-bae6-bd166cfe17d2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cc7251-e359-4b4a-9e44-05004f0dbd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2699ca5c-e75a-4903-b64c-9cf52d02776d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b83a112-ca6f-4e81-9026-89cf1996ecad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f47999a-3618-40fe-b3d5-3433a12a946c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89670afd-9270-4440-9a65-0d6ad74c5d27",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df897b82-bfe1-4cd6-a02a-68d6648e6eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d4fe5f-e2c0-44d2-9c39-76a4b11bcdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d03b168-eb77-4096-b6f6-a0c7d175d4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4674a6f8-23d1-41d1-be92-2de64be9befb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c4a19c-31ba-48d5-be68-183f3c1be11f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2774d4-0e1c-4831-877d-3d2619ceebd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc4adfc-be55-42d3-91d8-8cde9f37dbeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55590fb8-df99-4922-8ac9-afcb305d38cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b16220-7975-4b1a-9771-e2ea665803d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef33657-90e0-4e41-b356-e1b30ce2e0c1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14d2743-2c67-4e72-9417-352e8223465c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d3fe0f0-1760-4117-9b62-db814ef863bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f10195-62d5-4fe2-9460-0f80ec08996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f7d5c4-3b22-40c9-839d-41a3f3dbc0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9051ea6-779f-4a57-b3cd-1171542f2532",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ef137-dcb8-4a45-b95f-94b13b49eae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77080d0a-8684-46cb-b2a7-9b46ff39eac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6860b7-a39c-44e1-8cc7-564efc56a7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c720a83-29db-4d4a-8bb4-ee2454634588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1039307-b914-4f9d-81d8-c97cd0b68f84",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c117b3e2-1177-4f62-84d3-39e92bec6060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1289116-00ea-4937-b663-906530f43654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4f6166-47ed-48c7-82eb-2c0095a979c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07498666-b853-461e-ae4f-0db810cabd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5471d3-5982-4fbd-96a8-0ee4440ed850",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6c0809-7d0a-4796-8070-857d9f02672e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52fa63a8-63b8-481b-81d0-95123c598410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26560111-0844-4e19-a1ee-f537c0738520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7912fd7-b9a0-4d9c-99a1-0807448aa98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7309fb-effc-435c-bb62-fc7063f482b0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca5138c-3824-4768-8dca-5c6335615595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee92e3f-81c3-4684-9119-d7c27178343a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcb1584-78a3-4d3c-9d9f-55200574744b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bac4d74-6a18-4996-aaaf-002f2f293843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67429d83-8bba-45e9-ab98-358238b1efa0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49ae099-5dbd-4511-a399-6f4b1a8b4e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50b64d7-cbd6-400d-82a4-046266fadee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c101aaee-efa1-4c7f-b7bc-7a8aae1554c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a07a2da-ee4e-4bce-b870-3267773d4e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abe2ef3-c518-4e36-a157-7817e8c6e86a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cde7f2-703a-45c0-ba40-e4a7b238e401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f117e09a-e9ef-498e-8fc8-4e2138825021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de745f6c-bcae-4906-9a31-45b144db7c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25752942-1a40-4227-9b8b-642f1e207697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d48a16-ac5f-4995-b0b5-88d90691ec01",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9265ae-c5fd-4d6b-b9c5-c04d82cb4c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d355ba35-60a3-46c6-83b1-605f2bad5643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e906ee-92ee-4a13-ae0f-c7a199d837c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be841ff2-3486-4751-8b14-4a0f68d18dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457ce41c-1e49-4712-9f3c-46924808d56c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979e512d-d710-491e-8ce1-a1aeaa0169f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945a0f67-b3fa-4f7a-a847-e99aace97b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ff995b-755a-4702-b745-cb8f96abc5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31847ea-7c93-49bd-be7b-a261f76430e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441a7b29-74fe-4d5f-aaf8-e07e019784e4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95504a94-a106-4eb8-8391-20a91d8d58bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edb6d6e-c786-4275-9716-381a36e6acc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aafe66-6756-462b-87d1-8e21d98b5660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24611e9e-1250-4365-a682-20c877442129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056ab46c-f111-4df0-ae27-14fea2ac2451",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ca3f8f-0acf-4962-964e-0076af51bbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61361ca2-24cb-43f1-a74f-5eef36a9c4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea62c1c-bab5-409f-8c53-109c74f74ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fab75cb-763f-47f4-bc97-985ecd1c09f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10429cd-638b-47cf-86a1-4a2c0ed7a00c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc10aac-794d-4ab6-a0bf-b8e52c124dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896eb64c-6eb9-4258-9244-1562d3fa495e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504aab8b-ea2e-4d29-817a-df824ffdf401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02652793-3990-4f6f-86b0-4f55cbfa4a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170d8986-a016-4f1d-9293-c438ca6a2e07",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5854ba-8924-4cce-9006-3f159d289214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a775d37-8272-4fba-bf94-58af3c8c27f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb64fd8-2b63-40c5-8a96-1531b5d83a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a376451-be0b-464a-93ea-dc8e6d1de6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc23476-f099-424b-9e6e-5679299b8f5f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb9250a-8330-4459-98ef-4df136cb435d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6c0a99-220c-41a9-9b20-063a8806ad77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00070d47-5564-4aa0-b5b7-6fc166badd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f81993-2d6a-4e67-b166-9f15ddbc45e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10be9773-ddb9-4a15-8281-00e8ec930a94",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37639f0-1073-49f3-b998-6a7c9cdff4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44aabab1-d501-4779-af80-7fefbb1be1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdd5d78-4f60-4976-9665-293ac8ffcf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3ee616-009e-45d6-b88c-07509adcd724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb01b40a-6101-43d6-be97-085ef061ddb5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7d7247-a0d8-4c2b-ac8e-3632249e17d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75720803-44e3-4bd9-8f5c-22aa4f2216fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e741d6b-0885-4498-abbe-39e816b1ee33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cccf84-05f3-4bff-938a-67c8ca1434b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc837040-9301-446a-8d4c-34b3d04f540e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b744af8b-95a4-40d8-b136-f8b39c124860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a4acdd-5399-4801-83c4-5aee6a405859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eccc347-bd14-4f12-bf34-ab1c53eca214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d00b89-6e42-4650-960c-41f54df0079f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3828fc-c393-4d3c-99f7-68606f5c67d9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bbbaa1-91c1-40f3-9319-6174c3226cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb7f251-e9e5-40f0-afaa-98c140721ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f5df84-214e-4fe3-8432-6cf2bde3883f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d5d567-3616-43e1-98ba-f03b968ca4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7935f53-3306-446a-98ac-5090ca4c7bc6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4959215-467f-487e-82d1-285f656ccb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91126521-893b-4610-bd00-3cbb5703ae57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d271ddd0-29a5-4ada-9c62-d5aaccdbdab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cf1d8a-b791-4272-8c97-e05303765b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45063e2-694d-400e-9b44-e09cb2fd2cce",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9a1b7d-cce7-402e-9cfc-c81c5cea2106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042422df-c55f-405d-8e81-a1af9bee2be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53c1ecb-2415-4ca5-9b2c-e7dee7652dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c94f9fa-a8eb-4c75-b9c9-60f93c9f1c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d6f94f-42b9-4655-ba23-e205de9e3ebc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c50f5e-613b-486d-a185-52bfb477a9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d367490-affc-4f79-8c67-3a1870f1edd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7cdc6a-a5b6-4a7c-803b-0dc942cad983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc309f0-9cff-489f-971c-94d08b517e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c3af10-2aff-4783-81f7-a3818ddc5939",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6874bbdb-1d2c-4d4b-9a26-1c3e27e1f24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880ef1d1-3956-40ca-957f-81a8033762a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c891af05-3d48-4797-8acd-26e843e21fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957d7f22-8276-4164-87d2-9ed93ead01ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889a0a9d-d4c1-4ccc-a1c8-35e24d2c76d8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7354d8be-4fe3-4261-934d-9a554f2fda72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca6be4c-4fb5-4f2a-bec9-30a1424f0ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8438d6ad-5b6c-413c-9d5c-dda35b2c3daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2444727e-2611-4aee-b2ec-d04e1a2a831c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3711c3ed-8f6c-41cd-a715-1f0cd5ec8936",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c66e7d-37f9-445a-a745-d93a622a03ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966b79a6-7059-4a6e-8fa5-3fec09f7a728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26de7f7a-5b62-40a4-a701-82b7a47d6c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a69f48-fafe-452c-abbb-f093733da81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e098d400-f137-4faf-8eff-9b18f2796a7d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c248e46-5ef0-4606-99e8-c45ed66f7f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b59cfe-bb27-48c5-b397-46ea4402295c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61700e7-25a0-47fc-918c-b943d6c5860a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a6de01-e9f2-4fb3-8577-7d6f64253855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345525ef-58c9-47bd-8918-f62c6ce25497",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ada4c24-f7ff-46f3-a2bd-da380cdbdf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ea08f2-f58d-4b04-9c5f-00f518c1b3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc42b15-bb2d-470d-bd78-de4a2036fb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a82737-f4ba-4722-8985-f7ae006d65b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fe90c1-a938-4248-9c82-078101f206c5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80111661-1c24-438d-a262-4c19f80010fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d528a77-cb96-492e-95c7-2eb70afa16c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7c5027-0871-402b-838d-12bf99b1442f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b2bf3c-f4b7-4496-b845-7515ba9468b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52656c57-fe6a-445f-a8be-7e6bc839bc67",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd270d9-6801-4825-b267-521a2daf066e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c18c950-f38b-4014-bb68-97b8257c3e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b348895-cd68-4491-a499-1953de7eb7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bf7546-8239-4e3e-89ac-a79fc230795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0736fcd2-1998-4f67-acec-604cd99ea593",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e6b4cb-1a7c-44b4-961d-ad50b383ba9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0ab40b-ce16-41a0-a712-09f33946ffe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbc3dc3-d8f7-4119-9d05-aeaad5e341de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d91c8e5-d97b-4518-b730-6a299517b13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdb4ca5-8794-4aed-94a7-bde48f5fde56",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a4eebd-51b8-4cfe-a68e-2e753bb3173e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf83e63-e5d5-4f65-a887-15a7f25aa8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3d8ac9-17e8-45a3-ac64-ac9cd4b31a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd9ecb6-a3f8-4c4d-8caf-8e94cbf177c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec918067-d5c1-43a8-88b9-0cf7f59c86d5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62be2f4d-d105-455f-8c42-c02ca5b4f7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee7bd6d-f4d1-4521-b7e2-cf0a701394ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464ad6d5-c2e4-443c-9845-d3342c510051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695b0463-3981-41f9-b9b7-03e629238369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ae3893-a3b5-4b34-a133-fce357b5997f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9855921f-793b-44c1-bd45-0d726b30e1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef67a599-84a8-425b-9a59-7da289c69a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8591c2a-5e8d-4371-9c0b-ff9ad8718837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783031a2-074f-4a95-a42d-b26c862f6728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ef6294-d200-43c4-bbf1-66df3248b6a9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4edf3b-c9a7-4154-a5c8-b9bca0e314c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd13842-9035-4b91-8c20-7f02444088e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b746da-9a48-49da-80d3-12b285fdf8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd7b4db-1bd3-4c83-9905-dc0e7c9a7051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff947c12-99fb-4877-8918-431596a6b9b5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a7c0c7-6ae5-4c16-a733-eabadae571f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f919a9b-9cb4-44d9-bcc8-6b60b9bf1944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70bd648-80f9-4642-a307-5a1d377bcca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6f2739-8d73-487d-b3dc-88b32797f3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42ff343-1a28-4681-a07d-1b99bb17fe3a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d429dcf0-7961-4e4d-a705-264e8de1432e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "072eed54-5f40-4260-ba16-9a2c371879cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13427c7-c4b0-433a-9199-2d077b7c4e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00ccc20-de47-42b3-9458-aa3f01a50add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03eeff8-9024-4a64-a773-1e24f8c34740",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29898f60-0f2b-4b90-ba38-d8a6a4f65ab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3218f053-9d32-480d-9c72-758f775172fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8278141c-0ce6-4375-b24b-5e567d789a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e96e4ed-a997-4ea2-88aa-705a03e67a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d741b07d-59ea-4456-a5e1-45b8fcdbb7f7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd2052e-07f6-43f6-ad4b-500560f40ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba340e2b-7293-445f-b298-b5ec8bcf8ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76adeff2-f097-4b9e-aca1-a2aa245129e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38135c4-497b-4b68-8fc5-d352ee27bf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60884a53-251d-43e7-ab86-14d511b077bf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438c2800-fa86-4e95-9fc7-e5ca408a3f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c93b7f-67ab-44b7-8c8f-37de3c7dc12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e19038-41ac-41a3-80e9-690891428c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdcbae4-7df3-47b3-9f2f-71fc9e341163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d627ebc3-eb5f-4133-878e-53625fd3e7c5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8129f1f6-1588-4e56-bb09-7fc4601dbe98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0730109d-5b40-4877-9727-8ee365714bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1ab86c-a5f6-44ea-a325-192b84a3a246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f2574e-345d-4946-bb87-5725270cf5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b9529e-9e48-45d7-ade0-607e328c2348",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99560d12-dfb3-4a56-bbf7-b94f39a7e029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd32665-6d7e-4462-beac-5db350387f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354a9ff2-6e8b-4da2-bf0d-a616fb19b803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589f1aec-9d7b-4171-9553-9ebb7c700870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ff0f7c-915e-4c96-a6b5-c8cb763ae81a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06bbf84-bf0b-4924-9339-451a63beabb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eb84079-ca9b-4837-96f6-1557843efabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8539f9-bf3e-4681-b112-60314ac05726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ba2dc5-b75c-45e3-825c-16457f4edcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0271ec4-0aed-4095-b0a3-2a24c7fd9e2a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442b32b4-05b0-4061-9010-8963d135b36c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8660dabb-4d74-4b4b-8e3a-e601662e2c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13ff36-49d5-4de7-a6d0-dddde78db5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea46c1ef-965a-4931-a5a6-0ae527473d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9184fb95-fccc-4048-a9a5-ec2661858109",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2fc2c0-3147-4bba-9eba-f77704dee027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4df0b5-c01c-4243-811c-adcb862cf4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0e47e4-73ab-4004-bbba-3ea591da5fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f86e40d-f71f-48d7-b4dd-166c4d617b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff7e88a-45d6-4031-9d09-881adf7e05c8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a10ef47-3861-4cae-a677-7403de4b203f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26a673c-db3f-4377-9073-98cee1d4d771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9826220-c966-4c57-94ec-98375a511010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bbddd7-c9e4-4171-b8d9-19df34de191f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683c7cae-497a-41be-8462-0fd0375da300",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6622337b-d233-4a16-aba1-cd1a1bc618a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c9a108f-e8ab-4add-9508-fce99ee00e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c543ebf5-50ab-4ac1-97bc-468c062db3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f21cc5-27cc-48d1-9f2d-9fc4a142a0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972d8f5a-b004-45c5-beed-45143dce042d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0f4883-9f85-4f13-8883-f6448ab58c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27fd7483-2cce-4a8b-b5e8-0ab74c9d5dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08be948-ac94-487b-8b74-5cbb9f31021c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7df2aa9-660b-40f8-b995-bdb9d32228a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45afe624-c550-43cd-91b3-48c137085584",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8bc88c-584e-4d5f-8afd-ad2436ffa6e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1be3f4-f027-45dc-a876-67132d1cb3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4729c3cf-9743-48d4-b197-9243549da625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c27168b-cca6-4363-83b8-3e62bbdd67d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24924980-5f29-48fa-8685-94ad91d20305",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae7fad0-688b-4ef0-931f-a033adf07372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da117a39-4b47-4394-b1f8-7a1550c0b4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e2b99a-1217-4a65-95c2-8aacd56ab0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2399e1d-2943-422e-b0ae-7e9119814288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e72fdf0-6b34-4083-9903-5b69c82b864e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74a7f5d-4f74-45b5-b4fc-6dfd75570042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a46be67b-649f-46fb-8de8-3ef3fdc5f9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4d6471-e415-4fa4-871c-a699333338fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbb19d6-1518-464c-9e38-fb0d14ce897e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894e9f2e-5b6c-4d27-b36f-e2cffbb89fd2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d160e5d-5363-423b-89ec-fcb624a8ff66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a0195c-7e64-43c6-b106-88a2aac32052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf21f68-3506-4159-8812-3b6910eafe77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34d10f3-39e7-44a6-b271-9f15681db878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a1052b-235c-4ac7-8b41-52cb9be64e04",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77b32ba-77e8-482f-b84d-dbc2aa24dd37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bfe905f-bee8-499e-9d3a-8df0960c5dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9875c83-e292-411c-8a63-458413fe5923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93735cbc-d31b-42c3-8aab-8720cfc24746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f745a40c-79bb-4d4e-a72a-cda229963eb0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb30fa2f-76de-4b43-bada-b6d36a178e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b955e811-8b9f-416f-ad94-fda46c98f982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2f674a-3e2d-45ff-8263-32764a5a8f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909aa112-36c8-446d-a73f-31c5c68a221c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca311c23-c515-4813-b23f-2f7485572e8f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca4c263-21ae-4928-8127-9c5a94f1de01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d417e7cd-6ba1-4bdf-96d0-9506306e3ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85637736-d956-46f7-a678-032446aedf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86766399-0034-4624-8938-23a6c8679d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eaea72-85da-4c9d-90cb-1c65a12f7df1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0774b84-9a3f-47cf-8afd-ad7ffdaa76bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b41e4bd-3585-4189-9a2c-bdcb8c71e201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c47981-202a-48bd-8afd-9f3263707b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e16192-6cc6-42d9-b954-8464f9deb282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8808f2c-8acc-4b3e-b312-5dc0e06b5dbc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7d6d8c-8dd1-40eb-a8d0-2ec98090d899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22166e9-05a1-46ab-a085-671a08af3e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b843385-5f6e-4587-98c9-87d2c4895a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c263f55-5d60-4882-b76b-63e6e8769d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9d985f-0432-4bb4-9c27-a5352634e771",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7600deb9-651f-4e5f-ba0e-760f0b98a082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1e8385-ffc5-4bb3-bac4-db02fc41007e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9ee836-72c2-4b29-88bd-89ea7ca80db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26811b86-84b5-4abd-8a1f-60b8a4d974e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e7940f-0083-49f3-af14-247af13b272d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b96ef86-8c70-48a1-bc48-b07334bcf4e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1ca308-fd4a-44f2-b811-2d408d80b301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e642286-0536-4d5d-8d1c-4e807791b634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44210b8a-6ccf-4032-8747-7c0ef52f6009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf488ea5-042d-4356-86f9-c333dafc44ba",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8b0eec-3433-46db-ab36-98ae71c65e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15b4748-c025-45de-a73b-fefd5b9688de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd79fb7-2e79-4f87-bd25-2d8adbed683d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e674e8-3915-4ef1-b308-b901e5d7bf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56071aef-09cd-49b5-a2ba-34b62ccbae9c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd51d65e-7c23-4bff-9780-7e2ccc1cc6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "038b0eae-20c2-4398-915f-7b9ada3c803a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435e99d6-5a16-40c6-a8ae-1fea319bdd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e9d663-f7c2-4130-94a2-6fccd3ec48da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9e26c6-ab36-4b81-9297-19d839c335d8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc28edef-cd2d-470a-aab1-2664b6d11910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841d2ea8-1ec9-4fb7-aad3-b264a7913abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3235695f-833b-4389-bf69-311bd6bce363",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9761cebf-896a-4794-bf27-b7ace2125182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1943b3-2c13-4c52-ad54-e5c873016543",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e20382-9cf5-44ab-a5f9-79e88c809c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb94b9c-dfcb-4ad9-b80d-732e874c48f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bd7ca6-f632-4b55-a250-a109f03953f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3958d000-5d4a-4c54-9e18-4aa526735976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c05b7e-563c-4b1f-aa0f-7245c1ff7d67",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6d8f2d-1ab5-47a2-af2f-4e41f56304f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ce3b1d-25d3-4788-a640-7c71a58a9df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ad1139-1b65-40ba-a9c9-a2e90f9412a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dc52d7-09d6-4350-9847-436a4aa02f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecd3ced-89f3-4d3a-90fb-1873672a7897",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1adb49-daac-4963-ad5a-4df9911fbc30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f83f90d-b385-4f6d-91ea-60017d777076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9f8cbd-1e27-4b7b-b749-1da330bd59fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e34760-5d88-45c8-96ec-aef511e0ea77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2368f7a-7427-488f-b7c9-8e3f6a63d54d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d815ff30-0a9e-472f-87b3-ad7a64c977af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e941b275-efb1-452a-b5ea-a0fdf8146aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feebf9c-2394-4a97-9968-83b52f597bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb49274-018b-4d5c-ae12-b855cd0d53da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d1932b-43e2-434a-a95e-dc550679eb50",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6f77cf-7e0d-4351-ad66-93e986d1b2ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5122fb4-a1e0-44f8-a1bc-5c13c981af1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7c20e3-fd2c-4096-8e05-7b96bf968dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb43951-2e96-41c7-9c04-45a03d249828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0fdae6-bd3a-433e-b131-9f0730e7c9a5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78db1084-4f11-4d29-933f-93a1a19bca14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b84b3e-e4fd-4843-a810-9a6dbef4936f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e95e4f-d6dd-42d3-b70b-86444b891316",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb337b7-beb0-4e42-814e-b3f18854b95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c270f620-1e95-46c3-8d29-deae03b2cf36",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c448caac-2047-48ca-ba0e-49a3daf77c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01507d7-9c61-4d73-b6e8-4c8b990d7df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70904e16-e88c-4ed1-a4ad-7e70fc3762cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2cfca2-1047-40a2-9d47-6d21c5c2ae15"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c3599d1-a984-472d-9703-2c00ce5cfee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5396cdc1-8cad-437e-a8d2-ccad50159d5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f077f93-e1ce-46a6-bd6a-603452c5ef08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0aa6fcbf-87f0-4951-ac99-b7f70a5d125b"
                    }
                  }
                ]
              },
              {
                "id": "819311e2-5f30-4dfc-b1ea-6dd9c2881f30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0752245-044a-4f36-9371-59a761d8a517",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486c3afd-7df9-4cee-a96c-433efb12f2c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3259f780-9d82-45fc-9a71-af7e4f3307cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8200d5-f35a-4683-a84a-8f09a8d357f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "839f7208-36db-4c73-839e-2c6d653a0e84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7213b35-42a7-4388-9c99-c6bf41fbb716",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d25ed494-d921-4c56-b054-4f681583c484"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "461301f0-acb7-4230-a172-56eaf3e16809",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bcb8464-866b-42e0-a99c-d07a6ee9d952"
                    }
                  }
                ]
              },
              {
                "id": "1e7ba9bf-8061-4cbf-9738-414ac713a5d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "288bdd41-b89e-40d7-bbb9-fd6956ab4d65",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee9fa0f-ad89-445f-8d2b-7f6d13283af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5903090c-de65-412c-a592-cdfa1a0f83e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319c2f29-e751-47a1-b706-c4e05d5b91ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5eed2c-9d08-4481-a3c4-7f4d348405b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "111e9627-a670-4778-812c-46ec4121f908",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01f1bbc8-f48e-4793-b590-09567beea5b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f88fd921-2cad-4416-a93d-1fc1ceb68215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fb476669-e72b-4215-aad5-ac200284b93c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c7cee43-6853-41e9-a1be-427bd1eb2d45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aab150ed-26eb-4d91-8c56-3fe40db98164"
                    }
                  }
                ]
              },
              {
                "id": "4208ce9a-bed1-4699-87c5-6eb8dfb6eccb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d6df3d7-4912-412c-b059-7fabd895bc2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fcf01806-9eaa-429b-842d-d3070050d7f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d12f89f0-5070-43e0-a0f9-dd60e1927109",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f41dc15b-9afc-4534-8ce5-409cddfa7c8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38227003-feae-498b-af9c-967688848b0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fbe48c71-afc9-4636-ad8f-bdadc1f991b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da3b076b-8876-4964-a9ce-9bae4eb72ac8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd9c4259-6c5b-4394-8786-301ca9b1ec6b"
            }
          }
        ]
      },
      {
        "id": "6b41a434-733e-4cfd-b040-4eb24d9f28a8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9cf82313-fd97-4688-b860-698986ab8d03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "632da107-906e-4c2a-a87b-558dcbe36c23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10f7581a-6d06-405f-9b53-e19805cc84bf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17de044-573d-4cc2-bcbc-6d8574ee8f49",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "523f1efa-ff7a-47ca-9761-c7921d3895de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2a992c-085e-44f2-81c6-76d7761a33c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a7154f8-f3ce-425a-b23d-c8375c33301d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee26075c-0616-4738-bf89-ed3421c13ef4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0923ffa6-f84a-4e65-b495-ac99a122ae8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb9d3714-e33e-4d2d-bd2c-986d5fc8bdc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cc7b0fa-eceb-47ee-b244-a30360f67d9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd8a7cc1-7d26-4dab-83be-e7a4f62f128f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "83f045c4-a38e-41ff-a279-7f7333d9eba6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4abc8efe-09a3-4e2b-8c30-489017b5eaa9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9efbd82e-c3a5-47ef-b43e-e1fff9d6b602"
            }
          }
        ]
      },
      {
        "id": "f51ee604-936e-4000-a842-236b855f34b4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e3ef47dd-a55e-4e92-a400-499be0796a26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61444e0e-0a94-49c4-95c1-646a360a27df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e6508a2-e3ad-42ac-896d-4d5dae983f81",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288fc244-7fbe-4803-8975-38e4700b519f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd6751b2-7d79-4c07-abaa-af44d0883e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc02cdf1-2691-4e77-ad30-341a4211c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d5760e2-c7e6-4cb0-b8bf-d1c02e8629fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4a26c18-f769-4bea-a8d9-5658d6b5cbf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa8caaee-518d-4a41-b911-8f2f90ca17dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b61cfc80-17e1-4f0b-b108-fc83eb144ba5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0053095c-9e5d-4988-adc5-81d8df9f0eb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30e7a0c8-227c-442d-9d89-d4fb22125e61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55ae7b11-97d1-4529-b51b-7577a87dd1fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a59da009-7d4f-426f-b455-a0a16613af23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d501994-514c-4f09-9219-ec9fa9db2290"
            }
          }
        ]
      },
      {
        "id": "b463097f-89cc-45e2-add7-05db8277ea15",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fd779a9e-b5ff-4c1d-864c-096bc93683bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81cf2eab-e5a5-4d8c-a510-0c4b0ea88715",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce41be2b-256c-4d92-b2d7-ed709dfd6f6b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540797db-cdc0-4c62-b545-80fb1ff14eb9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3878f6d3-14bc-47c0-ac22-a0000a300274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0923d71f-2389-4c67-93c2-ba72a0dc5d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3de90d07-5891-4cc7-865b-fb980c7914aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c9c5a6c-25a5-4535-8498-ba17cfd6eaee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ff1834d-4204-40de-b806-0d1584c810a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79c5d694-7211-4bf1-ad61-730db3eb5af6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b98cf96-159d-456d-a173-2e75e5bbbc20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa649232-9f96-485b-bf3d-69428777bbf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f7ac372-882e-499e-abe0-1de9b00f6e04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33c4c043-bad4-4f1c-b91f-8e8e7afbf83a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3e681a0-a027-4373-98b8-afb7f5366705"
            }
          }
        ]
      },
      {
        "id": "99a0dccd-f2b9-49d0-8e95-23393fd09fa5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae80a606-84b5-47ee-a59f-bcc0f9ddadef",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e4f4752-642c-4182-ac45-1ae354da065f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb6c4457-591b-4391-adae-c65a648dc45a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38f530c3-dfb8-43bd-8149-b5e61bd71604",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e777f59c-402d-4f21-8de2-a36556ff2dc5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 127.74206349206354,
      "responseMin": 7,
      "responseMax": 8875,
      "responseSd": 606.316343887894,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726793034803,
      "completed": 1726793075554
    },
    "executions": [
      {
        "id": "7a9863f1-8508-4c0c-a0a5-eaf8b2e35c85",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6bb1fc21-25a4-4543-9839-43bf07a7e750",
          "httpRequestId": "b6ad267f-32ed-4ea4-970e-4b644ef0012d"
        },
        "item": {
          "id": "7a9863f1-8508-4c0c-a0a5-eaf8b2e35c85",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d01ee1b0-abfc-4951-b436-1d1a4ec080ba",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "316a508d-257f-44ff-b947-0f25058e13f0",
        "cursor": {
          "ref": "329014ac-eb1c-4ee9-9e21-f411c751087e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c9883975-5672-4487-b281-e8847a0adff0"
        },
        "item": {
          "id": "316a508d-257f-44ff-b947-0f25058e13f0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d22ca106-1d3e-4828-845d-31768be4cc8c",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "374dd2d9-c8a7-4890-95d7-25eb80b267c7",
        "cursor": {
          "ref": "dd540f3f-6cbe-4c68-b87e-6b4acab81ef3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d2630ef4-e783-4821-aaca-fc92be402f2e"
        },
        "item": {
          "id": "374dd2d9-c8a7-4890-95d7-25eb80b267c7",
          "name": "did_json"
        },
        "response": {
          "id": "8ec5ac0d-2a0a-4c79-9e3f-40287bf98dad",
          "status": "OK",
          "code": 200,
          "responseTime": 267,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164e1dd5-eb2c-41dd-af14-12b1c67a29b3",
        "cursor": {
          "ref": "c119efe0-1b5f-4e4c-a112-7f140a1dd8f6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09efbd95-a184-4dcb-bd82-b815bcab8072"
        },
        "item": {
          "id": "164e1dd5-eb2c-41dd-af14-12b1c67a29b3",
          "name": "did:invalid"
        },
        "response": {
          "id": "86267e06-972c-484d-a280-0bb3861e5a26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 220,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164e1dd5-eb2c-41dd-af14-12b1c67a29b3",
        "cursor": {
          "ref": "c119efe0-1b5f-4e4c-a112-7f140a1dd8f6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09efbd95-a184-4dcb-bd82-b815bcab8072"
        },
        "item": {
          "id": "164e1dd5-eb2c-41dd-af14-12b1c67a29b3",
          "name": "did:invalid"
        },
        "response": {
          "id": "86267e06-972c-484d-a280-0bb3861e5a26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 220,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cde4c1-f87b-4b7a-816a-9445bd076a0f",
        "cursor": {
          "ref": "c1173c9f-8b5a-4e80-b4f9-e45150be5fb0",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a6a83780-7f2c-45a0-9c52-9626c3d89a55"
        },
        "item": {
          "id": "79cde4c1-f87b-4b7a-816a-9445bd076a0f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9c1109b2-d2f7-4ad6-9676-319a5c79507e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a958ae-240a-47e6-8ca4-e0b6c53e92c0",
        "cursor": {
          "ref": "f0665db3-4398-41e0-97ac-3489bdd332d9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4875ebb2-399d-4d49-a919-12a599cbd475"
        },
        "item": {
          "id": "b3a958ae-240a-47e6-8ca4-e0b6c53e92c0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fc062ff7-5ea3-4d88-b4ec-e3d3e52a038d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c9de16-ecdb-47b0-931e-88783fa16be5",
        "cursor": {
          "ref": "794065bf-4d6d-4716-9eb2-3a5f6c1c60bb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8d07cb22-276c-477e-a2a3-2829e6284b66"
        },
        "item": {
          "id": "08c9de16-ecdb-47b0-931e-88783fa16be5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "47f0fa64-3ae6-4794-90b5-9004c1cfabaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64058c94-9203-4d03-a57a-3dbe5f90887a",
        "cursor": {
          "ref": "862d37df-c103-4716-a9a1-91ee13f06535",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0fb88a81-7e8d-4f05-b071-2a4a3da0ee99"
        },
        "item": {
          "id": "64058c94-9203-4d03-a57a-3dbe5f90887a",
          "name": "identifiers"
        },
        "response": {
          "id": "09b2a2f8-7737-4683-b58a-2af682db48e1",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2604673-84b9-4d64-8e63-efd20eb09692",
        "cursor": {
          "ref": "0a66b08e-9f5d-45a5-9375-375c78a91cd7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "89f88fe8-2f6b-4c97-b532-1f090e39383e"
        },
        "item": {
          "id": "b2604673-84b9-4d64-8e63-efd20eb09692",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9645a116-7b42-4544-babc-c17134560373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2dcb00-ef08-4932-9915-a0fa2e244953",
        "cursor": {
          "ref": "488fae9d-8c15-43e0-b667-385f66e4aac4",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d7d57ec2-d578-4ca6-b67f-4bfd5758021b"
        },
        "item": {
          "id": "cf2dcb00-ef08-4932-9915-a0fa2e244953",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3096f2e7-75f2-4e1f-bbfb-112cc0da898a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e2466f-2392-4c7d-8a7a-9c2145f6e2b9",
        "cursor": {
          "ref": "a89fcb98-e162-42ee-aa0e-216ac27b031c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "35c1bba4-231a-480f-bb51-1141b4f8482f"
        },
        "item": {
          "id": "67e2466f-2392-4c7d-8a7a-9c2145f6e2b9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "238be677-e52c-445b-919e-91bdab631dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ee8aa2-468d-4e10-b662-92ab94a5ba86",
        "cursor": {
          "ref": "c7a0e1ad-0e74-404a-845a-5c3c1ebdd964",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "293813a3-020c-4313-9235-c3f47525a187"
        },
        "item": {
          "id": "19ee8aa2-468d-4e10-b662-92ab94a5ba86",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3b110c49-8df4-49e2-aed4-3be4a2a954a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771b33ec-3b38-4f83-b32d-5d8a8d0ef883",
        "cursor": {
          "ref": "d9b03828-55b6-44fb-a0fb-71c149355aa0",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0ac4027b-3c73-4167-b1bb-caaca157ad4a"
        },
        "item": {
          "id": "771b33ec-3b38-4f83-b32d-5d8a8d0ef883",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1da81133-a290-4ef9-b669-971e0d824a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022775de-d5b4-44f0-9147-5f246c8d7985",
        "cursor": {
          "ref": "2f388537-9443-4608-a54f-3f5f754cc601",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3e272c7b-c44d-4101-8836-45928661354b"
        },
        "item": {
          "id": "022775de-d5b4-44f0-9147-5f246c8d7985",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "71beb9be-d692-4829-b6d5-d6e522e6f99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fea7433-efbc-4baa-9ebc-38a1f66ab2f7",
        "cursor": {
          "ref": "7f774293-8640-4191-a5b0-23cd5d638098",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "13cf6501-b9dc-4d0a-8072-215ecd1f72af"
        },
        "item": {
          "id": "7fea7433-efbc-4baa-9ebc-38a1f66ab2f7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cf74b536-1c59-41f2-9114-b34863b4374a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070eb2d3-3e05-4748-86b6-d70dca4399a8",
        "cursor": {
          "ref": "26345c42-7733-48eb-98d6-bc82dd4fa0f4",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "216cd4d7-3ba1-46a7-84fd-fb2efea7c9b0"
        },
        "item": {
          "id": "070eb2d3-3e05-4748-86b6-d70dca4399a8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ba69b2ce-c941-46d1-859f-1ac828fde66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64870187-637a-46f5-a631-a08b87bdad50",
        "cursor": {
          "ref": "5554b1f7-9a24-4f59-ad9a-c337962a66a2",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "adeda79d-e831-4af1-9a59-0e14f54e3b1f"
        },
        "item": {
          "id": "64870187-637a-46f5-a631-a08b87bdad50",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "91c7bbf1-20cb-42b0-8565-1a0e4a470bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce4c55a-d339-4ca0-ba32-aebc566476e5",
        "cursor": {
          "ref": "e34efbba-3d0d-449a-b815-ce02a66de34d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f0b43f4e-0091-4f1d-87fc-3d234d191cf0"
        },
        "item": {
          "id": "7ce4c55a-d339-4ca0-ba32-aebc566476e5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e4568d82-45c8-4c37-b222-e407bf2c3a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26808f80-3784-4196-aed4-f8a525e04aa7",
        "cursor": {
          "ref": "512df306-8d06-49f8-9abb-cc5a3ae685f7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "469a22ec-59f1-4fc4-8ddc-ff480b318f6c"
        },
        "item": {
          "id": "26808f80-3784-4196-aed4-f8a525e04aa7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d53baff6-79ca-4a3b-9f3c-e653cb65f711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced13958-3a0c-4af2-84e8-91838903f7e4",
        "cursor": {
          "ref": "d01e3958-636f-4ae8-b72a-1b1dec9324af",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "46f47258-9aa7-400a-9d98-b90b0cb58058"
        },
        "item": {
          "id": "ced13958-3a0c-4af2-84e8-91838903f7e4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4b67b2c7-c466-49ed-9a12-88c3982b3012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d80186-d469-469c-a420-1faeaf58c334",
        "cursor": {
          "ref": "67645f0d-9201-48b1-8ba6-34022ee115f7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "85aecdbf-0c45-477f-bc9b-30192b29f6c8"
        },
        "item": {
          "id": "42d80186-d469-469c-a420-1faeaf58c334",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d667e5c4-bfaa-4d85-8b56-3641201d564c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38df8150-41b2-4991-a22c-bc8279137445",
        "cursor": {
          "ref": "a1701ff9-17f2-4887-a356-0aa5e8d76c86",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "011c7f3c-14d8-4797-b7ab-b6c7f62611c1"
        },
        "item": {
          "id": "38df8150-41b2-4991-a22c-bc8279137445",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2d220dbe-a5cf-4989-9f0b-bcdbd3242513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88593834-53a6-4b10-86eb-5a1d9c6bae51",
        "cursor": {
          "ref": "f9b4d4d3-2845-4709-a85c-8c477411b9a0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ffb5e83c-ac79-4390-8113-80ca5a1bcd79"
        },
        "item": {
          "id": "88593834-53a6-4b10-86eb-5a1d9c6bae51",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b3d05629-d24b-442b-b4ae-630e1c578750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47c985e-da92-4f14-bf2b-3c94fa19532c",
        "cursor": {
          "ref": "192ae0aa-1cb3-4586-9261-7d6098b56178",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0b1faf1b-8d76-4122-a436-5f83177fb0cc"
        },
        "item": {
          "id": "f47c985e-da92-4f14-bf2b-3c94fa19532c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "560943a7-3d45-4eb3-b5d0-32cff964b0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd191f5-8216-4c3f-a311-24f4b377a558",
        "cursor": {
          "ref": "3816d917-3d06-4290-8af9-48bfc14b8a0c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0701179e-6f61-4789-859e-69ea7e3b0a7a"
        },
        "item": {
          "id": "5cd191f5-8216-4c3f-a311-24f4b377a558",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "88d8f85f-5004-45e9-93e2-db52775acec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1a62c6-f38d-4a04-a5fa-0580d0d3b959",
        "cursor": {
          "ref": "613a1044-ba2a-46c8-b6d2-03679aedc6d9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c44c08b8-65d1-4ae8-bcd4-d7449a76bba3"
        },
        "item": {
          "id": "9d1a62c6-f38d-4a04-a5fa-0580d0d3b959",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "97dc01ef-e4ec-4d82-9ba7-c18e63927ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6f2dc0-fdb4-4c92-96bf-e805dd246284",
        "cursor": {
          "ref": "acecd154-1308-4644-8b4f-ad234fdfb146",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6d989000-7788-4550-9496-8cd9e427400f"
        },
        "item": {
          "id": "4f6f2dc0-fdb4-4c92-96bf-e805dd246284",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8ac56003-fb2d-433d-a665-c180f165fe68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deef82d1-87ee-4441-bbe7-844b4f0d31ca",
        "cursor": {
          "ref": "728d4a53-67e1-4b0f-8ba7-cf3d6a5c23aa",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4281d70e-74e1-49df-a578-39f40b2f828f"
        },
        "item": {
          "id": "deef82d1-87ee-4441-bbe7-844b4f0d31ca",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2bd0412b-aaf7-48d1-b6df-8387eb089535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24aee51-6593-4818-a516-c46c85718211",
        "cursor": {
          "ref": "b28f70ed-3a68-49ce-a699-243c2abd4849",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3dfcedf7-8369-426b-b8a8-c578ebc3aa45"
        },
        "item": {
          "id": "b24aee51-6593-4818-a516-c46c85718211",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f48edb09-1254-4ab0-ba32-66a58d7c5f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c805d6-0fa7-4eaa-a374-d94d2f7f071b",
        "cursor": {
          "ref": "810e8033-4b05-464e-8408-f469324c6ab1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f6f3d2d3-873e-48fc-a212-720979635379"
        },
        "item": {
          "id": "23c805d6-0fa7-4eaa-a374-d94d2f7f071b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c17f0a60-307b-41ab-9b5c-e12ade3e54b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa3305b-7803-44f7-8e02-0a34621c22e4",
        "cursor": {
          "ref": "136fa5ad-8560-4fb3-973e-06f287cb959a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "725a1db6-0a81-4cca-87fb-85064809d122"
        },
        "item": {
          "id": "7aa3305b-7803-44f7-8e02-0a34621c22e4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "39dd1312-7775-4581-a16f-bf12c2d9e024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38be3601-cbec-48c5-b636-14c3cdcbdf8f",
        "cursor": {
          "ref": "aec03551-8435-4402-bfc6-d4b6597fe3fc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d591c144-2ecb-424d-959f-e78f4a299471"
        },
        "item": {
          "id": "38be3601-cbec-48c5-b636-14c3cdcbdf8f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "41260d4c-935e-4c5d-ba8b-ba6b6c976696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed7eef9-1444-453b-a2ec-605fe5e4ae71",
        "cursor": {
          "ref": "23b5e4e2-93c9-443a-8040-a3f376471001",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1a574d04-e191-4b49-83e2-f29709c6caf2"
        },
        "item": {
          "id": "0ed7eef9-1444-453b-a2ec-605fe5e4ae71",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3fda667b-2594-49ad-823b-4595c440fc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e81ddfc-0f60-4569-ad74-b046310ceb54",
        "cursor": {
          "ref": "a1595df5-77fe-4eeb-b2c5-e00925d1b9f4",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2263294d-611e-4534-834d-dde959b27f27"
        },
        "item": {
          "id": "4e81ddfc-0f60-4569-ad74-b046310ceb54",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "85c2e99a-3c39-4bbb-aba6-cce186b69b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67b3ddf-9422-40c1-881e-fd056fea2b54",
        "cursor": {
          "ref": "6cc05914-ae6f-4c79-87be-6ffe796b17f3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c40a5d7d-29e6-4dc8-98e2-50fc86966659"
        },
        "item": {
          "id": "c67b3ddf-9422-40c1-881e-fd056fea2b54",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e9a21663-4db5-4d13-876d-9d8fecde8c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691d27e8-61ca-4c22-8ee3-cd209c30d3be",
        "cursor": {
          "ref": "f127f07e-6ac0-4f40-8db5-41bb11750565",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4fb95b0d-cb7c-4902-b90d-cced5e2370d8"
        },
        "item": {
          "id": "691d27e8-61ca-4c22-8ee3-cd209c30d3be",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4c22efac-6777-42e0-afc3-74973ec9c832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dfec8e-5e7d-445d-9166-bfe6a41a0baa",
        "cursor": {
          "ref": "c17574a9-cbe9-4cab-a41b-902d32e1f35d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ff18a62c-24f7-4c55-b8c5-63cbe018915a"
        },
        "item": {
          "id": "58dfec8e-5e7d-445d-9166-bfe6a41a0baa",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ea4be194-d3cb-4eee-86a8-6137ab91d0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbc2ecd-f820-4b88-9b2d-7cf7188fe479",
        "cursor": {
          "ref": "c79667ff-0247-4e2a-bcce-e85b48376dfd",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1239a174-499b-4ee9-84fe-1c89f0adafd6"
        },
        "item": {
          "id": "cfbc2ecd-f820-4b88-9b2d-7cf7188fe479",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f9f63018-b414-4cdd-af45-9aa0786be8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd66c885-0211-44ea-ad58-7af51c66fc03",
        "cursor": {
          "ref": "8b58cc11-efcc-4afc-816f-443ff8fd84c0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7ef026d2-0cb5-4ba5-9771-11c90222f1fa"
        },
        "item": {
          "id": "dd66c885-0211-44ea-ad58-7af51c66fc03",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "df53121b-d46d-4cf3-a136-4f274e99a88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6aa032a-e778-46a5-a1db-d8b86c01e758",
        "cursor": {
          "ref": "370621fd-6b78-4dd1-9745-3034b4b01215",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7d186337-ada1-4221-a947-e2a0a5f30349"
        },
        "item": {
          "id": "c6aa032a-e778-46a5-a1db-d8b86c01e758",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7bd3fd2c-8654-4126-bd10-4ca7ce74ee1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc42cf45-e4f7-41a2-bd02-c307d9f94dc6",
        "cursor": {
          "ref": "dc5ea4e1-947d-48a8-a302-254f3edab797",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6dc802e0-fe16-4504-840a-525216eae5c1"
        },
        "item": {
          "id": "dc42cf45-e4f7-41a2-bd02-c307d9f94dc6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "00ac6470-d714-4b7f-af19-bb6a7828e083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca38f3e-77b9-430d-8c99-94831edb1ece",
        "cursor": {
          "ref": "467dbf0b-fece-444c-9d3b-54602b410ec5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3ec0b322-521c-4e8b-ac34-ef290086026f"
        },
        "item": {
          "id": "6ca38f3e-77b9-430d-8c99-94831edb1ece",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8f35b2da-47da-4f29-b0ea-6772059aa560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a0cd7b-1ca0-4d1f-bed6-bce88fd44016",
        "cursor": {
          "ref": "06ad4cee-0d3d-4748-a4fe-58220d5e271f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "57ec6776-1551-460f-b0cd-ca75d6e88635"
        },
        "item": {
          "id": "60a0cd7b-1ca0-4d1f-bed6-bce88fd44016",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "195e08b1-ff1f-4635-b47a-c62d39e1c257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ce215b-b4a7-4889-8031-51339f7532d4",
        "cursor": {
          "ref": "2a382188-d5f4-44bf-8992-580e0eb54ee5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e63118a0-e385-41ae-8a94-fb3a80fe99e6"
        },
        "item": {
          "id": "a1ce215b-b4a7-4889-8031-51339f7532d4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d858f31b-0227-41f5-aceb-53659699627e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9623c4-10f0-4076-88e0-16811c96d1f9",
        "cursor": {
          "ref": "90a4cc96-cdf6-47e6-a1d8-85822c8cf674",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f0c8bd3f-118d-44a9-a205-8c24f3b22425"
        },
        "item": {
          "id": "7c9623c4-10f0-4076-88e0-16811c96d1f9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0d22573c-96f5-4994-a484-070e5b9573a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910d0b68-70bd-462d-a58f-04cdcdda79e1",
        "cursor": {
          "ref": "e9e1f558-aca2-4d7e-8013-a7afa5c65c9e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7357931f-2dce-4d61-aa8c-598b4b8551e1"
        },
        "item": {
          "id": "910d0b68-70bd-462d-a58f-04cdcdda79e1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "45f9c9fb-56fe-48ed-894b-8278095ae104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20839edd-c7c1-4f15-8900-e2a61184e89a",
        "cursor": {
          "ref": "88e8ddaa-aa7c-4784-bacf-ae22c4330ca3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9d6f97dc-a315-4472-81d2-b3918fbd2c5c"
        },
        "item": {
          "id": "20839edd-c7c1-4f15-8900-e2a61184e89a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4991d9b1-9ece-46a8-8d7a-a013dd787a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50526123-9798-48d5-9f9e-4827ed6eb27f",
        "cursor": {
          "ref": "0266ec05-f3f3-448c-a650-0621adadbbab",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f969ad56-73e7-41b5-8c3b-36f1de71a50a"
        },
        "item": {
          "id": "50526123-9798-48d5-9f9e-4827ed6eb27f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "07474cb3-e753-4bbe-a414-35c601553901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b250c6-5f34-472a-bcc6-6941ab77efe9",
        "cursor": {
          "ref": "f536db26-7352-4d5f-9477-668aeed9c292",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5539a47d-f339-44d3-982b-07941220a040"
        },
        "item": {
          "id": "a6b250c6-5f34-472a-bcc6-6941ab77efe9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1b3771d4-ce48-49ef-b83f-bd402357902d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d93e85e-b703-4b65-8126-5f230951e431",
        "cursor": {
          "ref": "e34b25d5-b89e-4c74-aa19-23a2f1a7311b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fd5167fd-9679-4ce7-9e2e-2ef2dd0860c5"
        },
        "item": {
          "id": "1d93e85e-b703-4b65-8126-5f230951e431",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "18afaedd-4816-4d79-85eb-93ca41bc0a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d1761c-3271-469c-96ab-434644def517",
        "cursor": {
          "ref": "5cae70b5-a714-44e6-9e28-0095a7deffbf",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "574bbd28-2a43-445e-a3ba-4d0fa3488c2e"
        },
        "item": {
          "id": "26d1761c-3271-469c-96ab-434644def517",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ca3cee50-4e38-4bb5-9111-40b62be498e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435ec21f-d7dd-4ffa-a58c-f0a36b51299a",
        "cursor": {
          "ref": "d039aa7f-a9f7-4783-bbf8-60a6a5fb8309",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "78add1d2-0fc0-45dd-a018-9330cff3f267"
        },
        "item": {
          "id": "435ec21f-d7dd-4ffa-a58c-f0a36b51299a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a606ee2b-2f95-4eb3-8c1f-eea11572c3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e23c0e-ad47-45c1-8519-386cd91e85b9",
        "cursor": {
          "ref": "b9f159ed-50c8-4106-b777-db0930b50a4f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "72be5844-114f-4097-a250-a89a62007eab"
        },
        "item": {
          "id": "09e23c0e-ad47-45c1-8519-386cd91e85b9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "78f2d372-5d2f-4863-9e3d-28c2e41d50f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859949d7-b29c-44b2-a9f2-7962bdd782a2",
        "cursor": {
          "ref": "76a143fc-96ce-4100-aab2-d65f5aaf1eab",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fee48105-e3cf-49f1-9162-77c906abf0dd"
        },
        "item": {
          "id": "859949d7-b29c-44b2-a9f2-7962bdd782a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3ada6d00-95d1-4266-818b-f4ef726634cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3753fcb-ccba-487d-8b1b-05c3b315659a",
        "cursor": {
          "ref": "56f4d058-a634-4220-8cd0-b7980b5d9e65",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5ed7489b-c461-4591-9cd8-5667a9013eef"
        },
        "item": {
          "id": "e3753fcb-ccba-487d-8b1b-05c3b315659a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fb65ceda-0409-418d-bd3a-95d2929b8c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd8da5-9b42-4112-9ad3-fb84ab9d2d68",
        "cursor": {
          "ref": "71fff0d9-2415-4097-8614-f82c723be534",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "098e3b13-58f2-4243-ae5d-a70ad8a89f2b"
        },
        "item": {
          "id": "1edd8da5-9b42-4112-9ad3-fb84ab9d2d68",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c35900a3-a0d5-4bfb-9653-01233f1ff7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f661275f-eb27-49d7-98df-1df7a39c174c",
        "cursor": {
          "ref": "75df8dd8-9f8a-4236-9afb-38d95797ff33",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c7d37610-f74b-4b1e-abba-c6af9ec9c181"
        },
        "item": {
          "id": "f661275f-eb27-49d7-98df-1df7a39c174c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "06421660-fdc1-4d56-a391-1e4355b63e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7fbddb-8027-4d3a-b47e-255900abeccd",
        "cursor": {
          "ref": "6d6371d1-a651-4895-8ba6-e121e59139ce",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b7652609-982f-4ed5-b77e-b304dfba7b3a"
        },
        "item": {
          "id": "0c7fbddb-8027-4d3a-b47e-255900abeccd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "106335cd-03c2-4cbe-a982-1dc2d96e914d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e80247-eb03-4a8c-abbf-65893b3e75e8",
        "cursor": {
          "ref": "3c5271e7-173f-4760-8d7d-aa35c1824d57",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8231bc2f-2647-4aad-8ac2-ad69cd6f5482"
        },
        "item": {
          "id": "38e80247-eb03-4a8c-abbf-65893b3e75e8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a84d756d-05e7-4065-bc15-5e2993bd0f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd03635-0070-4763-a03e-a73979522318",
        "cursor": {
          "ref": "4ea28bd6-a4bb-4bee-bcc7-81ec19a7816f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9daadf00-95d2-44a4-ac71-8dc49255a6d4"
        },
        "item": {
          "id": "7dd03635-0070-4763-a03e-a73979522318",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "63c8e077-388e-4df6-ab2f-9fb650e92af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da313d19-c566-44fb-8e6a-e85c1e9b555e",
        "cursor": {
          "ref": "52a2ee14-1584-4535-ba40-1986b715fded",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1c776f6d-a201-499c-817a-cc099379dcfe"
        },
        "item": {
          "id": "da313d19-c566-44fb-8e6a-e85c1e9b555e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "828ee2e6-78e5-4d2b-9fc0-3852c31e785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a23b18-44bc-4293-8af1-6c78d29038b7",
        "cursor": {
          "ref": "2c0a552a-9b62-443c-9f98-7a972b1efb09",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "28520f42-2162-4cb6-9a52-cdc74567d475"
        },
        "item": {
          "id": "85a23b18-44bc-4293-8af1-6c78d29038b7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5371817a-35d4-4831-a4d8-5dd23946dd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0d49ef-2c17-4847-bade-0ab758930a14",
        "cursor": {
          "ref": "404519e7-a4d1-4dbc-8f2c-233e709eb8a4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7e85c329-8d6f-45f2-9bc0-6e72a3c814c7"
        },
        "item": {
          "id": "ed0d49ef-2c17-4847-bade-0ab758930a14",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e843bb24-1ec0-4d32-b49d-fe2d7cb55ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc11df6-6a94-428a-9f6c-108530cccc6f",
        "cursor": {
          "ref": "e9d11f05-903d-4c17-9241-be2e49232833",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "241b9932-c3dd-43e3-87a7-5459c39eee15"
        },
        "item": {
          "id": "6cc11df6-6a94-428a-9f6c-108530cccc6f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d3b0ed32-c753-4b6c-aaa9-5505f11aff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdafb75-b4c9-47c2-b464-486cfc7f67a5",
        "cursor": {
          "ref": "8374617c-9e35-4214-83e1-1cf693f21fc2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "86028d60-a1cb-41f6-bcc3-1e9a2ddd9c5a"
        },
        "item": {
          "id": "9bdafb75-b4c9-47c2-b464-486cfc7f67a5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cbe3eb2f-6f2b-4ce8-92d2-19845cd3e47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c1b863-5bb5-4c78-aa21-9bd6c8a9e8dc",
        "cursor": {
          "ref": "b155e832-f057-4789-96a7-abd7e494a474",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b1ce25a9-03ab-433f-9b16-cb53ae13f3b9"
        },
        "item": {
          "id": "29c1b863-5bb5-4c78-aa21-9bd6c8a9e8dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "596df253-edbe-4078-8404-1760c870b3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ce9642-7d0a-4c87-af58-517bdb609662",
        "cursor": {
          "ref": "2002c0bf-d806-427b-b4ba-fabd1b381cb6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0d670022-cff0-4f72-bb95-096da8ffef98"
        },
        "item": {
          "id": "88ce9642-7d0a-4c87-af58-517bdb609662",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d4fa99f8-6a2f-451f-9922-21fc3c28a305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532de903-29b4-4340-a3bd-23a799f55392",
        "cursor": {
          "ref": "cb67afe5-63fc-4493-a442-af509e6afdd0",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5c1f17fa-c075-4537-9a84-d980191f7442"
        },
        "item": {
          "id": "532de903-29b4-4340-a3bd-23a799f55392",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "69163d36-2a2b-4828-89a0-56139c6c2de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad608b00-6502-481f-b4cb-3a1555b509a4",
        "cursor": {
          "ref": "aefa97c2-a51e-49b0-b3d1-fa7089bb1458",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e3bec53e-ad44-44fe-b0a0-6310918e6a07"
        },
        "item": {
          "id": "ad608b00-6502-481f-b4cb-3a1555b509a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "74e04139-aa41-490f-9cd5-8c67cb268ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec2f427-975a-4027-8b07-516f68f5b8aa",
        "cursor": {
          "ref": "640655db-d8d7-4fa5-a195-0931c022c6f9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "aa04dca6-cc6a-4d93-ad50-1015368d3161"
        },
        "item": {
          "id": "eec2f427-975a-4027-8b07-516f68f5b8aa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c7853680-79c0-41a0-92b8-34c2e844f728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6555d78-9bbc-4f66-86aa-fa6b583ce908",
        "cursor": {
          "ref": "a38dff04-6dd4-4cdd-8874-e95ea8364f76",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "95cff2c0-f200-4525-b5d2-26e159db49c8"
        },
        "item": {
          "id": "a6555d78-9bbc-4f66-86aa-fa6b583ce908",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cd6ec39f-d75e-4852-82af-db8b6d68b416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac60b4bb-832f-482d-b29b-726dca5322e2",
        "cursor": {
          "ref": "e235fa26-319a-47f0-b953-0d1a2b0e7f16",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0692d5f2-bee1-46b3-8084-75792f79395c"
        },
        "item": {
          "id": "ac60b4bb-832f-482d-b29b-726dca5322e2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5c9c1dc1-6437-4a83-9be3-35cb8aa00afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8b524c-df35-4ad6-834c-61d4d13bab02",
        "cursor": {
          "ref": "446fc9f9-e5c3-4ceb-ba10-e76ff27f0f5d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ae1bcb6c-77ca-4c09-bf3b-f46e91a4dae6"
        },
        "item": {
          "id": "9a8b524c-df35-4ad6-834c-61d4d13bab02",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0d9f9a93-c8ac-4700-869d-d8c1d0264ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa2b48d-1c67-41a5-a45f-19ddf540b6cb",
        "cursor": {
          "ref": "51c83b03-792d-4a27-bf9f-6ab6abfc558e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "73f44adc-2408-4365-a09d-2fac024bae0e"
        },
        "item": {
          "id": "2aa2b48d-1c67-41a5-a45f-19ddf540b6cb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "016eb1de-3a3b-4fd3-8acd-4e0641de9219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6f7952-6a82-44a9-8b0e-856967b05a81",
        "cursor": {
          "ref": "91d8b7fc-fb25-4ffd-abe4-6bb49bac858b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2a415129-e008-4043-b4c4-68c52eb1ebb4"
        },
        "item": {
          "id": "ee6f7952-6a82-44a9-8b0e-856967b05a81",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1df2a086-faf0-4be3-9d3b-55ea03e4bcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369ae53e-36f5-4af7-9ad0-654e89d99ebb",
        "cursor": {
          "ref": "2c29f2b1-28a0-4d93-8f2b-09d6a663b8d0",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4ba04380-0748-4888-9a41-49f1ec7eea54"
        },
        "item": {
          "id": "369ae53e-36f5-4af7-9ad0-654e89d99ebb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c134c3b1-6c08-4ec7-b5fc-e0a0d0e1cbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967a1d40-999c-4ea8-82da-b120123b1407",
        "cursor": {
          "ref": "2e3c226c-79e7-4259-ba24-4f59928303d8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ffb874d5-9757-4eba-ba1f-6fffb8e6cfd6"
        },
        "item": {
          "id": "967a1d40-999c-4ea8-82da-b120123b1407",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "18679567-30cd-407d-919a-575397cbaf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e2b53e-6fe2-451b-bf8d-1274b3f831e0",
        "cursor": {
          "ref": "016ddae1-0ef7-4228-83e6-37c2eaca14bb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0e065b3a-9c1b-47fc-a56d-44ad136e6096"
        },
        "item": {
          "id": "c8e2b53e-6fe2-451b-bf8d-1274b3f831e0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "47fe1c2f-3af8-4345-8c7d-146dcf24911e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024b9b47-ae8e-4e41-aea4-629b6986e75b",
        "cursor": {
          "ref": "82bd0981-9478-46a9-b6b5-3e37aee59b02",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cf22e376-13f8-419a-8e11-6bce1e843d42"
        },
        "item": {
          "id": "024b9b47-ae8e-4e41-aea4-629b6986e75b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c76914dc-da5c-4e14-acae-9dbc3c0247c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fa40fc-ac3c-406c-a1a4-01ae7088e878",
        "cursor": {
          "ref": "78b3a14c-e0b2-4c49-8821-7c817f7fd936",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d264b575-09db-49b2-ab5a-7de2ac012016"
        },
        "item": {
          "id": "73fa40fc-ac3c-406c-a1a4-01ae7088e878",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6a3c0437-2ecc-4e27-b2e3-bb9ed53ea319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e6c84c-7d48-48ec-a10d-1dfeba426f04",
        "cursor": {
          "ref": "37f09989-5f37-4f3d-814b-e71852980c16",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bf015594-9444-4ca0-8966-99453d83f8a8"
        },
        "item": {
          "id": "65e6c84c-7d48-48ec-a10d-1dfeba426f04",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5af25ae9-b675-4eeb-a34b-29bbd712ce9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae606536-27e9-458b-8d30-648f96974143",
        "cursor": {
          "ref": "6925aa4e-a7be-4d85-ac5f-a5c95a8ffc7f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d0ca0a35-7dad-4512-bd47-3ef727d6ebb4"
        },
        "item": {
          "id": "ae606536-27e9-458b-8d30-648f96974143",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4daeb03c-b016-4419-b377-7532ca73105f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d03e920-6e03-4615-bdb4-ac9dad0a1586",
        "cursor": {
          "ref": "43462448-cbe0-42b5-a348-bb6542f17bc1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "de358097-6d6d-4925-9c4d-c9297670620f"
        },
        "item": {
          "id": "8d03e920-6e03-4615-bdb4-ac9dad0a1586",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "02443fab-4f87-49bd-b397-31ad7efde2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84198dc8-50e2-4a08-927e-9352d026f418",
        "cursor": {
          "ref": "b313f9d5-a158-404c-ae87-fbe639d741db",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2c9206c4-2a75-4b59-9c9c-086d30c3be2c"
        },
        "item": {
          "id": "84198dc8-50e2-4a08-927e-9352d026f418",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7fb4132b-e0a7-44b9-a84b-e52eff0b37cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a5f184-ade8-430b-b6e1-ba7998b2f758",
        "cursor": {
          "ref": "a3f57427-7e8b-4aee-816a-0b89c1fb19d9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "72789a1b-b468-4dea-9dbf-da6d674096d5"
        },
        "item": {
          "id": "98a5f184-ade8-430b-b6e1-ba7998b2f758",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "14c34880-616a-4c23-b5d9-581c0d44f6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712da579-d36a-4e91-a5ff-5e39079b672f",
        "cursor": {
          "ref": "878d180f-8da9-4a8b-82e0-16e5aee843a7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7574ea2e-c6d3-4dd9-8cb5-c3a8e8466e0c"
        },
        "item": {
          "id": "712da579-d36a-4e91-a5ff-5e39079b672f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "69bfc020-647a-4449-baec-10786565abef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a341e3f-a197-4b14-ad19-23a5ef10468e",
        "cursor": {
          "ref": "ce7501e8-24d7-4a66-a5ab-723de2601a19",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "41e4b7e3-79ef-4e8f-9a5e-6f4abb630a74"
        },
        "item": {
          "id": "3a341e3f-a197-4b14-ad19-23a5ef10468e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "650e3903-622e-4841-adaf-c4dc4f7fe643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e1d78a-5bf0-4ef0-8f22-547b131d4504",
        "cursor": {
          "ref": "1eb2b409-61f5-42f2-bb8d-fffe3db27d58",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "740bc588-f2ef-44f4-a69b-f83f9e00981d"
        },
        "item": {
          "id": "14e1d78a-5bf0-4ef0-8f22-547b131d4504",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2ef34dcb-7a8c-4bca-b0fe-b14dac8cb71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e694eb3c-5f5b-470b-9dac-f2c75ace2d52",
        "cursor": {
          "ref": "31b1a061-30fe-4636-ade6-99a784574e88",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "05bc22a5-1ba5-4973-b9e9-9910fdf1474e"
        },
        "item": {
          "id": "e694eb3c-5f5b-470b-9dac-f2c75ace2d52",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "60c5c14e-0823-4fbc-ada7-d724a9a5abbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad59518-652b-4d66-a842-1c4c656f534f",
        "cursor": {
          "ref": "95d90a27-32dd-4be8-989c-5fdb6b4308a0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "35271bb7-32ce-4d52-b403-46c56324920f"
        },
        "item": {
          "id": "8ad59518-652b-4d66-a842-1c4c656f534f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "246928b4-7f15-4f8d-99be-f7a9d023d16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a4ca55-2b15-44e7-88c7-c29b0cf226a3",
        "cursor": {
          "ref": "2f745bb0-85de-454e-a367-570a606a8cf1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bbf8827a-46f7-4321-95aa-2857bca7c9c9"
        },
        "item": {
          "id": "93a4ca55-2b15-44e7-88c7-c29b0cf226a3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bc983647-8cdb-4aca-9b76-66f60d8429b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f9a61b-c2cf-4767-8890-0097b51d9571",
        "cursor": {
          "ref": "05ebf170-a182-4b3f-968d-8bbd78a01600",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "124f5590-7352-4f3f-9676-c39e88a89b78"
        },
        "item": {
          "id": "19f9a61b-c2cf-4767-8890-0097b51d9571",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "901e788d-ed1f-4e29-93d5-363fb9a4d9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8695ade6-b239-48a7-a5a1-85788a9cc95d",
        "cursor": {
          "ref": "f188761c-a662-4384-8c7b-696c9b99d812",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "45f6af18-0aa6-430f-9fb1-2586497266fe"
        },
        "item": {
          "id": "8695ade6-b239-48a7-a5a1-85788a9cc95d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b40bf9f7-cec5-4980-9177-50df62fce0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e871f9ed-a5f1-482e-8ac2-2839166c7dd0",
        "cursor": {
          "ref": "24f2e8b7-0b6d-4438-b0b8-fcfdafbca1ec",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "77c3dd81-f39e-4d70-83d4-f7f82b668911"
        },
        "item": {
          "id": "e871f9ed-a5f1-482e-8ac2-2839166c7dd0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5ba36da3-4187-478f-8f65-67cf0c5fe027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df69184e-b9a5-4031-995b-bf0c90bc0d55",
        "cursor": {
          "ref": "7318ccf7-2f91-4010-a363-79554471b3e3",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9fee6182-06ec-43fc-9832-abb84bf03a3d"
        },
        "item": {
          "id": "df69184e-b9a5-4031-995b-bf0c90bc0d55",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b528942f-0ade-4071-aae5-960d1220e77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fe1afb-e850-4aa6-a411-289b1343b666",
        "cursor": {
          "ref": "4ba4d859-09b5-480d-b886-a82eb8f027b7",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cdb64e00-2034-439f-b687-b8b11c56759a"
        },
        "item": {
          "id": "51fe1afb-e850-4aa6-a411-289b1343b666",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "53d50503-e9a0-4505-beca-83c24890f370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d905800a-5e6e-46ce-9f1a-fee9e31083a5",
        "cursor": {
          "ref": "6bb359ac-4b8a-46eb-9952-542c020784cf",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "55cf41ae-706c-416b-ad39-48aa6c986439"
        },
        "item": {
          "id": "d905800a-5e6e-46ce-9f1a-fee9e31083a5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1c3d59fc-a015-48e1-baa1-60456eeaf78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828aa5f6-d656-4dea-8c4e-66ba779006f5",
        "cursor": {
          "ref": "578d38d3-7674-4435-bf25-a1e9244b534e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e5de4775-1747-4230-87df-f8c16cec4310"
        },
        "item": {
          "id": "828aa5f6-d656-4dea-8c4e-66ba779006f5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c8f34d2d-9613-47ce-92ea-6af8a1b197ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1778c33a-0760-45db-b791-49190545128a",
        "cursor": {
          "ref": "96a44094-fcec-4735-b123-5cd40987d935",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e87f68f-6658-479a-83b0-df80e12e1813"
        },
        "item": {
          "id": "1778c33a-0760-45db-b791-49190545128a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5d98ef6a-040e-4c1d-ab2d-3a87596ae518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63c335e-ebcc-498c-be62-06eb575ae083",
        "cursor": {
          "ref": "01b21d9f-9c6a-4b6b-9d36-9c98fee8a48c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "153b19fe-4e38-4990-a904-3aff9094ef80"
        },
        "item": {
          "id": "d63c335e-ebcc-498c-be62-06eb575ae083",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b617cf82-584c-467b-8200-39b0ce419a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87767ad1-c70b-4d93-8bed-0ab3bc5d051a",
        "cursor": {
          "ref": "33e28403-a60e-4fbc-9269-1ccc9e70c288",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f7f7006c-99e0-4229-9524-d7bad7d51e95"
        },
        "item": {
          "id": "87767ad1-c70b-4d93-8bed-0ab3bc5d051a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a48371d0-c69f-470f-80ea-3c07c92de58f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1265f6-a336-4d69-9941-995e8886049f",
        "cursor": {
          "ref": "cffd7e90-c700-41f3-86a8-93ec2b7020d6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e9c7ad0d-ee61-4856-88ff-65cbe51e9c1c"
        },
        "item": {
          "id": "0c1265f6-a336-4d69-9941-995e8886049f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f9238645-c76a-46d8-bf5a-91b6f896f2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8e54eed2-2ea2-4b5b-ba8d-b53e77b30e2d",
        "cursor": {
          "ref": "dfe3c73c-a942-46ad-99a1-d40a79c43445",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e4bf44da-83ac-484f-a894-591821bb226b"
        },
        "item": {
          "id": "8e54eed2-2ea2-4b5b-ba8d-b53e77b30e2d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cb0e96a5-815d-43a4-ae79-063ea6ec1643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f478c8fe-10f8-41c6-b778-c5c7eb7f1268",
        "cursor": {
          "ref": "2e5fb650-5b56-4346-bf76-84c20a9c58c9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ef9889a4-b023-4ca0-88a2-e7f15acf7a28"
        },
        "item": {
          "id": "f478c8fe-10f8-41c6-b778-c5c7eb7f1268",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0311be90-d54f-416a-a6b6-b25d4b896049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d7fde6b0-0616-403f-a789-e81513370be0",
        "cursor": {
          "ref": "b7dabc77-7ce8-4b64-aabc-590d917b56a8",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5c6a8546-9212-4b6a-ad41-dfda60bbdd81"
        },
        "item": {
          "id": "d7fde6b0-0616-403f-a789-e81513370be0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a2f61cc-0700-4c0c-8c72-4a43c88c5ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b14a7446-f502-4158-8b5f-1b028fbd763c",
        "cursor": {
          "ref": "74aef1f9-efb1-430e-a883-b3e93a78b2ea",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4eef1a25-9f11-42cc-8fa7-f53a1bab36ff"
        },
        "item": {
          "id": "b14a7446-f502-4158-8b5f-1b028fbd763c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "336b6fee-ce84-4f56-9b76-e5e121620825",
          "status": "Created",
          "code": 201,
          "responseTime": 8875,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a61766-e03f-4ab7-baf8-f2978d232ffa",
        "cursor": {
          "ref": "b54cd53f-f719-4142-9200-dd3fd227541e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1382e589-17a1-493e-9db7-948653be4b94"
        },
        "item": {
          "id": "d4a61766-e03f-4ab7-baf8-f2978d232ffa",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c0ae4ea0-8d8a-44ae-ac48-f9617b0dabf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "104deb9f-0ad7-4f5a-9e0c-884bc606de48",
        "cursor": {
          "ref": "53830c75-c171-4e9b-9e29-075491eb5ff5",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "759075a7-7b40-44fe-addf-0a973ed3b7ae"
        },
        "item": {
          "id": "104deb9f-0ad7-4f5a-9e0c-884bc606de48",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "506e1f6c-c229-4325-9cad-48cdc342df29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6952e68c-0f88-4dce-85c9-84adf1b4aa51",
        "cursor": {
          "ref": "80b8e91d-797e-4687-b80b-d7175f0266dd",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8abc32e0-6889-413e-9f8e-2fd5df2701f2"
        },
        "item": {
          "id": "6952e68c-0f88-4dce-85c9-84adf1b4aa51",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "735a7bea-a1c9-42b9-b8f0-de26985c52fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a145e0db-7ba4-4b60-aba4-aacba845f97e",
        "cursor": {
          "ref": "29bb9b1f-5c41-4947-b2ed-cc320ce39215",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9b04ae88-84f6-4519-9b10-9723f90dce96"
        },
        "item": {
          "id": "a145e0db-7ba4-4b60-aba4-aacba845f97e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "555c7c8a-8ee3-4cdc-95b2-05cc07760990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f436b126-baad-4bcd-9e48-b1ead0858543",
        "cursor": {
          "ref": "3971a77c-a630-4070-8bbb-b0b23135fc1c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2dec4890-611c-4472-b8c2-9129b930c397"
        },
        "item": {
          "id": "f436b126-baad-4bcd-9e48-b1ead0858543",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "62eb3a69-df7b-4d9d-9d8e-0dffac9c9cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52f0e25-2ffe-4b87-9bf5-a62f310af30e",
        "cursor": {
          "ref": "5a72e3a9-8604-4061-bd79-3d2c7d887374",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "04858aa3-e461-4b06-a6f9-34f6110f9254"
        },
        "item": {
          "id": "e52f0e25-2ffe-4b87-9bf5-a62f310af30e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "06c4d77f-a34b-4500-a602-23e6f49143f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0e050c-54b3-4bcc-b36c-841e5c95e797",
        "cursor": {
          "ref": "fac4559b-e14a-4016-bdaa-7495334a5a63",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e9504d37-8f6d-4513-9de5-048eb2fc9428"
        },
        "item": {
          "id": "8d0e050c-54b3-4bcc-b36c-841e5c95e797",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f6d48e2e-8ca6-49fc-981f-a5d88990a6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4d07a2-a05b-4189-97ce-77ba326d3e6c",
        "cursor": {
          "ref": "1f6aaf07-4a59-4329-9851-87ff6c549dcb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bea78982-3782-4ba4-80fa-70510c406f90"
        },
        "item": {
          "id": "fb4d07a2-a05b-4189-97ce-77ba326d3e6c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9b29d56a-b9b6-4ddf-a1bf-edc5a71e3779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a7901d-dc93-4bee-bafd-4d677ae1c845",
        "cursor": {
          "ref": "13ce5694-fcdd-4e44-89b0-5234410ae3cf",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b3afa610-dcdd-4f58-aa6d-cf2e5fd8b56a"
        },
        "item": {
          "id": "32a7901d-dc93-4bee-bafd-4d677ae1c845",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f871d5f2-d33c-4f81-b24d-50e043eb7881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cac3e18-7afc-4504-970f-9be72c631917",
        "cursor": {
          "ref": "2bc77f09-486d-48d8-a312-eacfdc03b065",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bd8563ea-d9d5-4307-9b93-81ceee1d339c"
        },
        "item": {
          "id": "6cac3e18-7afc-4504-970f-9be72c631917",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f30df439-23fd-4482-9618-3401e1043902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235fce4c-d36a-4e29-b7ff-dc959ce53106",
        "cursor": {
          "ref": "46b049d4-23fc-41c4-aeb5-6fb97b9ce385",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5058d152-a8e7-4bcd-842a-6125f97a319f"
        },
        "item": {
          "id": "235fce4c-d36a-4e29-b7ff-dc959ce53106",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4bb90bc8-2416-438c-94c6-370bb166eebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531f058b-4d0e-43e1-8c84-1c232a490cf1",
        "cursor": {
          "ref": "34e8afa2-8476-4283-ad0b-bf4fb20060bb",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ed6095ee-e38b-4503-96cd-abdcf0151dff"
        },
        "item": {
          "id": "531f058b-4d0e-43e1-8c84-1c232a490cf1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "997ecc31-c372-467d-af65-2df91e80a204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5250d888-9421-4b9f-b1f7-f8fad6f9bb87",
        "cursor": {
          "ref": "fdab769b-b832-4726-8391-50153a790b39",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "689c0adf-b1aa-4a8a-83ad-33d7777b57ca"
        },
        "item": {
          "id": "5250d888-9421-4b9f-b1f7-f8fad6f9bb87",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f8340625-e8c3-4769-b4ea-dd7f560daee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fdc322-b720-4d3f-bc1f-4bd059e01348",
        "cursor": {
          "ref": "0ebe6b32-4532-486d-99ea-0c83888031c5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "980c8bb0-16ed-4420-add6-c59ba1409585"
        },
        "item": {
          "id": "96fdc322-b720-4d3f-bc1f-4bd059e01348",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6086fdf4-0e52-4ed2-8023-a5d5c606b1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3035bc1-1d23-40d8-9bcd-665435313c36",
        "cursor": {
          "ref": "a9a328bc-c08b-45b3-aa84-7fb6c600502d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3766821e-8cd2-47ce-8e10-574acef382e4"
        },
        "item": {
          "id": "d3035bc1-1d23-40d8-9bcd-665435313c36",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb977eab-b4ec-4632-90ff-1270cb8ecb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b0d4ed-6ae9-48d7-9830-b66fba9a625d",
        "cursor": {
          "ref": "3237bac6-f927-407e-9945-09f83e23a81d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4c8b0254-5443-41da-8d02-f169a3935557"
        },
        "item": {
          "id": "c0b0d4ed-6ae9-48d7-9830-b66fba9a625d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb262182-4833-4506-8098-43c970913b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294ef85f-b2e3-450a-a1e7-c618ce3f76e5",
        "cursor": {
          "ref": "149e4f39-c360-4e8a-b31b-4ad4b7e386ea",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "984d1606-efaa-41fa-a077-d448e86ad8d6"
        },
        "item": {
          "id": "294ef85f-b2e3-450a-a1e7-c618ce3f76e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "019c1597-13a1-4562-a1cf-14e20c1a4b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a3a789-7561-4fc5-9df6-2b3ffe63c4ec",
        "cursor": {
          "ref": "67ff55ef-d8a2-49f8-81ff-31a5f6d31ecc",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cbe0cde2-ef25-44e2-9e00-ae1d35248601"
        },
        "item": {
          "id": "d9a3a789-7561-4fc5-9df6-2b3ffe63c4ec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b598830f-63d6-47a5-9972-3a7ee3498004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461164d4-2126-4462-a12c-b5d0e8604466",
        "cursor": {
          "ref": "8ff5ca12-ec65-4bba-ac9d-32f4bcfacaba",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c6f2ac72-7bf0-46ed-9316-84d0cefe3c92"
        },
        "item": {
          "id": "461164d4-2126-4462-a12c-b5d0e8604466",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8fcc30f2-2da8-459f-8358-38503163c98e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "36adfeee-9d06-4dbe-8f21-7be912ec9656",
        "cursor": {
          "ref": "e19169c5-c4c7-442f-a207-256429ed1f6c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "328b4645-fffc-46ae-8cf9-73bc12f7af1e"
        },
        "item": {
          "id": "36adfeee-9d06-4dbe-8f21-7be912ec9656",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "606ed73c-2030-4fae-9648-d2e9e79b09a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4dff30-c57f-4b54-a083-2ba19b11464a",
        "cursor": {
          "ref": "88f3f474-96c3-4def-9d83-81380e174191",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3cf09c93-b6f9-47ad-af6a-8b393ad1f22d"
        },
        "item": {
          "id": "4e4dff30-c57f-4b54-a083-2ba19b11464a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d0763530-d263-4145-8fa4-b3b7e2ade943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dfdaeb-1c32-4f6d-9314-56d3d1b75771",
        "cursor": {
          "ref": "fcbab6ab-e798-4ba4-8880-28e34fc2c099",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ada2e177-1478-47b7-a7cb-82becfe3d4bb"
        },
        "item": {
          "id": "17dfdaeb-1c32-4f6d-9314-56d3d1b75771",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0243e54a-3b77-4922-9703-a1f49602e093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3922e02f-136f-4a25-8d98-b32aa1c1a58a",
        "cursor": {
          "ref": "8efcbd32-fd5e-40fc-90a0-8cabfcace78f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0528db7b-fd2c-4809-a036-a53cba7e4d57"
        },
        "item": {
          "id": "3922e02f-136f-4a25-8d98-b32aa1c1a58a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a834e3ae-3cfb-4817-b450-7c096fc38a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eb4b9c-0b19-448e-b78c-6343c4d6363a",
        "cursor": {
          "ref": "a7ee7835-bbea-49f0-abb1-ffe87c64a536",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d25631ad-1f29-4e58-8e18-5231bd044b08"
        },
        "item": {
          "id": "e1eb4b9c-0b19-448e-b78c-6343c4d6363a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7548aec-11ac-47a2-9e2a-90d2cfd757e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4744e523-a2dd-43b2-8fd1-a238353c454e",
        "cursor": {
          "ref": "ed289e06-57ad-436b-8f11-242797f9a495",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6b87169b-54cf-467c-b2f5-e7938863f224"
        },
        "item": {
          "id": "4744e523-a2dd-43b2-8fd1-a238353c454e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2cf7c213-ad7d-4f23-b83a-c0b10ff89cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5f308b-7ddb-4c27-8249-7067d1432488",
        "cursor": {
          "ref": "320d097e-3132-4174-bf93-7a7e23648bd1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1711b2b1-c7ac-431c-9949-0941735b143f"
        },
        "item": {
          "id": "ce5f308b-7ddb-4c27-8249-7067d1432488",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e91fee94-83db-46fc-b694-05532f41f47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f7d5af-d57c-46ae-946c-6e3c62eb52a4",
        "cursor": {
          "ref": "fc24a166-34a6-4b3c-899e-c3af88badf18",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8fa54373-830a-49f2-8a10-ebffc3c18200"
        },
        "item": {
          "id": "95f7d5af-d57c-46ae-946c-6e3c62eb52a4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "533df921-14b1-4ba5-8f3b-4bb6bca88e0f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "fadc5cbd-6c8b-4669-95ff-fa61d336311d",
        "cursor": {
          "ref": "3b4decd9-dbab-4991-86f6-e02befdfa594",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5e31c95c-cef6-4fb3-87c6-9cd9b420d0b2"
        },
        "item": {
          "id": "fadc5cbd-6c8b-4669-95ff-fa61d336311d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b6edc04b-d7b0-4c70-b59d-7e8832cc5b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5e5303-c9fa-43a7-85ce-dc7b742e575d",
        "cursor": {
          "ref": "789d8e9e-2652-4983-9861-c696e032186e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "15652c96-0a0e-4914-8e37-b750bf0dd3f9"
        },
        "item": {
          "id": "2a5e5303-c9fa-43a7-85ce-dc7b742e575d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bf8c3fb4-d1ab-488e-a1b4-3ddbc5cddcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df08b698-6ddb-4918-8df4-89e578d26f8b",
        "cursor": {
          "ref": "1ceccbea-da79-4a74-87f8-8ad610bd3ac6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7ed8d2bc-cc4a-4af4-abc7-11fb0e1c5493"
        },
        "item": {
          "id": "df08b698-6ddb-4918-8df4-89e578d26f8b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cdf91c7f-d82f-4ee9-afda-15915f6fa94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970462f8-daaa-4f2b-b4c0-155f314ce0be",
        "cursor": {
          "ref": "34f1fafd-b8b3-4cbd-a962-94972b06844d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d9384bd3-032f-4b7c-a56c-196c4d7654b9"
        },
        "item": {
          "id": "970462f8-daaa-4f2b-b4c0-155f314ce0be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "96f43f76-fd98-4dd4-a1c6-20ae4d81a40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13780c1-26c3-4e5e-984b-66cc3bec7c83",
        "cursor": {
          "ref": "66df4fe0-8ab5-4cda-ab9e-e3dc8d419a20",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dbccb1e6-12d3-46aa-a87e-f3f473520327"
        },
        "item": {
          "id": "d13780c1-26c3-4e5e-984b-66cc3bec7c83",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d9d5ad9c-058d-4660-b09c-f0ac78c3f00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2759314e-ba6c-4cf8-8f27-00a1e6dce2bc",
        "cursor": {
          "ref": "ad5fce53-b21b-441e-a5e8-ee428f493ba7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "010489ef-ee8f-4598-af2c-3be3388aef71"
        },
        "item": {
          "id": "2759314e-ba6c-4cf8-8f27-00a1e6dce2bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "94303289-2145-44f4-9b7f-56b81493e566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1ef2bf-0961-4012-a4ed-e7c8a84590a9",
        "cursor": {
          "ref": "bf7c187c-9171-4e23-a1a7-c33f8f99b215",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1460a129-d816-4b16-9738-56220e20d92b"
        },
        "item": {
          "id": "3a1ef2bf-0961-4012-a4ed-e7c8a84590a9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "93fe8f82-84e7-435a-b387-70ce17ffe5be",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6829ad0d-a895-4c5a-b301-f147afcdfa6c",
        "cursor": {
          "ref": "5d552831-8d80-4df2-989b-583aa8253cdf",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1bd2d665-d248-4f3a-b6bc-e448de6a6cca"
        },
        "item": {
          "id": "6829ad0d-a895-4c5a-b301-f147afcdfa6c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "68206951-5b61-4a59-be41-95bfd93bfac3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c0651acb-6f99-4c81-b5e1-112aba1c8590",
        "cursor": {
          "ref": "1dfb73cf-b3ba-42dc-b22b-77771d05c22b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4b45b798-0af8-4542-afab-f67e5c90e0d7"
        },
        "item": {
          "id": "c0651acb-6f99-4c81-b5e1-112aba1c8590",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "55ee0415-7381-4ded-a1f7-f584ff3c8b1f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "3b8067ec-7f4a-442c-ab4c-7e9bfd832513",
        "cursor": {
          "ref": "118e1502-51f9-4c41-8659-f760e607658b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e5ab74aa-dea4-493a-874b-a06ee70c9a15"
        },
        "item": {
          "id": "3b8067ec-7f4a-442c-ab4c-7e9bfd832513",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3b04d7c3-c806-4431-9ffe-2b01bd719548",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "7a265313-8596-4d07-885e-6b74d0bbaf86",
        "cursor": {
          "ref": "79f31b5e-f9e7-4344-b3f1-42e7205e641b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c3255dae-0b1c-4ffa-a37b-0f08f7ddf6b3"
        },
        "item": {
          "id": "7a265313-8596-4d07-885e-6b74d0bbaf86",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dd364c1a-875a-4eb0-9324-8c5e3b978a98",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "f3d82c51-d291-4255-b757-40c3652bf2d5",
        "cursor": {
          "ref": "b30f6368-84fd-4dec-82e7-3969048b7435",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "66638fa0-3a6a-4465-950f-feb5f79c0553"
        },
        "item": {
          "id": "f3d82c51-d291-4255-b757-40c3652bf2d5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8daf5918-11c8-469d-b925-7586a84a0ef2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "aaee6c5f-7bf5-49fd-a53e-3e4d21ddb585",
        "cursor": {
          "ref": "6d12e6e4-95f3-45a8-9699-a566e96e1395",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "95bbef62-aef3-44f8-8e85-09af1867231e"
        },
        "item": {
          "id": "aaee6c5f-7bf5-49fd-a53e-3e4d21ddb585",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "11bb7049-6e13-43bf-b9cd-e5202c5e60ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e0a68c-279e-4124-a33a-d2fcfe240fb9",
        "cursor": {
          "ref": "cdef1b84-0c7d-43e4-8bb4-1fbbcd6aa261",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c3f2af03-5ffb-4b82-bca5-6fd95be6482a"
        },
        "item": {
          "id": "f0e0a68c-279e-4124-a33a-d2fcfe240fb9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5afca5df-8035-43b8-800e-ad55f6233c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdf6060-0bb3-4fde-99e9-9a8b2f1652ff",
        "cursor": {
          "ref": "1e459013-6406-4f63-8f46-e43f4b729cdb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "526ed92e-3a26-4b14-b2e1-fec789fd4497"
        },
        "item": {
          "id": "dbdf6060-0bb3-4fde-99e9-9a8b2f1652ff",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "95dfbbd7-c70f-435b-9d1c-c977c67c18f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7a49e8-df0d-47be-9d9d-ccf0cf5a63e3",
        "cursor": {
          "ref": "ea5e2180-589a-43d0-bcc4-4c574cb4a9dd",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "afead83e-4849-47a1-a6a4-ba2ba7ffe9c4"
        },
        "item": {
          "id": "fa7a49e8-df0d-47be-9d9d-ccf0cf5a63e3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9c493a08-ec8c-4ed6-9000-71e3a66bfd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693a58ab-5bc7-4a57-888e-f193977fa178",
        "cursor": {
          "ref": "ed578f52-391a-4361-8960-0e3efe02ea3b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a2d812d6-31a7-4ea5-9270-6eb4b10fe27f"
        },
        "item": {
          "id": "693a58ab-5bc7-4a57-888e-f193977fa178",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d4cc3c5a-ba6b-4d3e-bab7-138cfdde722c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ddc88e-a386-46a9-a48f-f71cb826051c",
        "cursor": {
          "ref": "7712ccf0-e642-4a4e-b834-6dfc54b6cdb8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "73f64811-1ace-4439-9ab2-1f3d682f5da8"
        },
        "item": {
          "id": "37ddc88e-a386-46a9-a48f-f71cb826051c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5a6ec09a-bead-461c-b0b6-600ac22d7a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f053407-4703-480c-85ed-471e5ce54399",
        "cursor": {
          "ref": "0e800797-3905-4a60-ab32-a11b5e344ad1",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a13096c6-49b7-47fe-927d-26ea34cf785d"
        },
        "item": {
          "id": "6f053407-4703-480c-85ed-471e5ce54399",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0e85f577-47c9-49ae-b3c8-f741bce5a9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8930d828-185c-4b4d-8f2c-ecda5a6a41fd",
        "cursor": {
          "ref": "e5f9febf-8465-412c-8a10-237914ea6d74",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "491696ab-b400-47b3-8cfe-34495a79843e"
        },
        "item": {
          "id": "8930d828-185c-4b4d-8f2c-ecda5a6a41fd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5050547f-3f8e-4098-bb2d-b5775d926d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d1d1ef-317f-4e78-a630-08ded4d70787",
        "cursor": {
          "ref": "21d73baf-f192-49a1-a1c1-60864871f5f9",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c0c58433-ff4b-407e-be27-3adec4ebfbd4"
        },
        "item": {
          "id": "49d1d1ef-317f-4e78-a630-08ded4d70787",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ee3d16ec-cd20-40de-b686-df2c3dea354b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b2cdca-954f-4544-b68a-9de00207b62b",
        "cursor": {
          "ref": "d4797bbd-c43f-4375-9765-4895aed2657c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "96024d92-b27d-43ed-8099-9d4b8dd25293"
        },
        "item": {
          "id": "61b2cdca-954f-4544-b68a-9de00207b62b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8e493183-1bc4-444b-9625-490edc8870b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889fc34a-834e-4b7e-97c4-7e3b32c60823",
        "cursor": {
          "ref": "0e33f726-fd0c-432c-a107-3e2cef28a097",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4d2f034f-5d45-4541-ba9b-49316434c305"
        },
        "item": {
          "id": "889fc34a-834e-4b7e-97c4-7e3b32c60823",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "59230246-c105-4a5b-a4a6-9c28c6d5ba9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5f3826-cce6-4d96-8816-f1a1023f72f3",
        "cursor": {
          "ref": "7312b9b0-a3ab-4c3c-9300-fc9ffaa11532",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "65576bc2-514a-4020-aae6-96e0bbd3bf34"
        },
        "item": {
          "id": "df5f3826-cce6-4d96-8816-f1a1023f72f3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5a7175dc-5f0c-496f-9f44-d3e396e263b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8ff2c1-0f16-4287-b144-2708949dce7d",
        "cursor": {
          "ref": "a0a3fcff-c3c0-4d33-9883-e6f6aaa4ad5a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1a36bfc2-c2db-4043-a1dc-c3875da331ce"
        },
        "item": {
          "id": "6b8ff2c1-0f16-4287-b144-2708949dce7d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b917f9cb-b5d2-420a-8f04-3053b4195df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85ed00f-d98c-46c7-92c2-24d4427cc2b4",
        "cursor": {
          "ref": "df5e725b-01aa-45bf-bd13-901c5f8648fa",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e0a80608-7653-44b2-8efd-17bffda95270"
        },
        "item": {
          "id": "a85ed00f-d98c-46c7-92c2-24d4427cc2b4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "edb9d4a4-17ed-418a-86bc-5795b5aa1708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0a8495-8521-458e-9bb0-9fa48a5cac1e",
        "cursor": {
          "ref": "e81b0d12-3abc-4592-8273-a94fa70a6b67",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9a4f95fe-d432-4fcb-9d26-23e36cd63dc9"
        },
        "item": {
          "id": "7b0a8495-8521-458e-9bb0-9fa48a5cac1e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f5f38e8a-f5fe-40ce-b38c-a05740af4c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afb5a76-abb4-4b41-b632-fce8ffc3de5e",
        "cursor": {
          "ref": "b08e4941-0d4d-4163-ba17-2413ca127421",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2c546c15-0938-4874-91f3-488711432d67"
        },
        "item": {
          "id": "9afb5a76-abb4-4b41-b632-fce8ffc3de5e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fc9663c4-fee1-4038-bda0-ce6607187807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a2b86d-28cc-4a05-92d4-21e59bfc5d5a",
        "cursor": {
          "ref": "4814a60f-ce6a-48f6-b81a-9bef036458a4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "406a8e44-9782-4395-a142-ee1f42189061"
        },
        "item": {
          "id": "e3a2b86d-28cc-4a05-92d4-21e59bfc5d5a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bfb7c9d9-e453-4120-b8f8-f4e927a08c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f0b832-c536-4a65-8e98-d70b55268806",
        "cursor": {
          "ref": "61d33dc5-fad4-41fd-9498-127f197bf447",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9e73f4f7-ad34-4b95-bce6-84141cf5590e"
        },
        "item": {
          "id": "77f0b832-c536-4a65-8e98-d70b55268806",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b43a54dc-064e-46f8-9b0b-be5f8fa77928",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "5a3fa6af-d571-4165-a0b0-e3406dcd80cb",
        "cursor": {
          "ref": "95859f6c-83e8-4903-b5b1-24393d1ce6d0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ca0da4f9-e499-4533-913d-920651367127"
        },
        "item": {
          "id": "5a3fa6af-d571-4165-a0b0-e3406dcd80cb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ee0fea3c-549f-4207-a7e4-a99d2951e972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a041ba32-aa20-4815-817c-1c6d3936bb5a",
        "cursor": {
          "ref": "9ecdf29e-b3a4-40b9-b9f6-74c488d8d204",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3555f192-4255-49aa-90d0-3b08d152e315"
        },
        "item": {
          "id": "a041ba32-aa20-4815-817c-1c6d3936bb5a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bad75c13-e501-4799-82b5-e11007415807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c006d85-048c-4988-be34-2275831dfcf9",
        "cursor": {
          "ref": "4f6adb40-8c95-486e-b0b8-b4487c392938",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "838499eb-9922-457b-b13b-b27b3c4faf26"
        },
        "item": {
          "id": "6c006d85-048c-4988-be34-2275831dfcf9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2fc95b6c-0110-4e10-994b-ae320386815b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efb6f9f-8c2c-40e1-97cd-647fb39f9399",
        "cursor": {
          "ref": "4ea50ee3-593d-4c39-9dde-4adbe5e33379",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f866692c-3f15-472c-a350-01490afddfb7"
        },
        "item": {
          "id": "8efb6f9f-8c2c-40e1-97cd-647fb39f9399",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ec297643-9376-49b4-bf31-e3148c4c729f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cf0a61-56f3-4c95-9962-ca6be80de39b",
        "cursor": {
          "ref": "d3893528-f94d-4444-b8bd-77d1be29c931",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "947605d6-64d7-4c2a-885e-442a87ef2172"
        },
        "item": {
          "id": "89cf0a61-56f3-4c95-9962-ca6be80de39b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "046eda47-1b60-4441-bdc7-20e888bcc1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4b2e2e-a476-4d00-b712-1e6e95c9e409",
        "cursor": {
          "ref": "36df0248-5e22-47cd-a954-ac61cbf22440",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f29bd1c6-680b-4bb9-a588-33a93a37a7bb"
        },
        "item": {
          "id": "9e4b2e2e-a476-4d00-b712-1e6e95c9e409",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "68da73a9-6055-426c-bea6-2329e0afd340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443fd896-edd2-441b-87e6-1d126738243e",
        "cursor": {
          "ref": "a6b0b49f-5d86-4e3c-a4d2-2496c1ec94f9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c0348266-ac7b-4e07-96d8-92726e678c66"
        },
        "item": {
          "id": "443fd896-edd2-441b-87e6-1d126738243e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c6376443-c517-4821-8a86-1b3c8b81e26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b1a2fd-e73c-486c-ae09-1c45c0dcaf19",
        "cursor": {
          "ref": "e0fc2fcb-4835-4d96-a96f-06cf566fe437",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5e191c64-8287-49e2-8a79-ffb1edba4e23"
        },
        "item": {
          "id": "33b1a2fd-e73c-486c-ae09-1c45c0dcaf19",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e79e1317-2240-4619-ae54-589d5ef9f91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf13268-a7a5-45cd-815f-55ad92c9acea",
        "cursor": {
          "ref": "769be1bd-f3fc-4ae1-8cbe-f0b82cf59571",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6041dd54-be14-4796-a627-04e4b6273caf"
        },
        "item": {
          "id": "fdf13268-a7a5-45cd-815f-55ad92c9acea",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d7d46ef5-05fa-4cb0-a280-bebb346e28bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a00c785-2773-449a-8a9c-ae970af3496c",
        "cursor": {
          "ref": "a3771257-b1ae-4dba-9c42-506b111bb23f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f5432cc-5871-451c-a636-94e7a7165777"
        },
        "item": {
          "id": "3a00c785-2773-449a-8a9c-ae970af3496c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bdc2e501-752a-468b-919f-cebd7498e682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dc4612-ddd2-4d5c-bae6-bd166cfe17d2",
        "cursor": {
          "ref": "fe8acdf1-784b-4fc3-94f2-159942f5b8b0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e349c0dd-b4b1-4435-9a69-557d9609952c"
        },
        "item": {
          "id": "12dc4612-ddd2-4d5c-bae6-bd166cfe17d2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "126b5d3e-dd3b-456e-ac8d-49df00e60006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89670afd-9270-4440-9a65-0d6ad74c5d27",
        "cursor": {
          "ref": "41d3880e-1b2c-4b9e-acee-ce5a24dc5794",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7b9cc86d-0990-4d76-b400-4e21508db5a8"
        },
        "item": {
          "id": "89670afd-9270-4440-9a65-0d6ad74c5d27",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "22fe9254-9e59-42ae-874a-54821dc6f58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c4a19c-31ba-48d5-be68-183f3c1be11f",
        "cursor": {
          "ref": "c4289f04-d74a-43ff-8a28-39ba81a3cbab",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9a611bd8-5537-4f66-99ec-ac914ee3c471"
        },
        "item": {
          "id": "b0c4a19c-31ba-48d5-be68-183f3c1be11f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8670ac80-f5da-46ff-be1e-d36832fe9b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef33657-90e0-4e41-b356-e1b30ce2e0c1",
        "cursor": {
          "ref": "1729e013-94fa-48ab-9414-97da64415ae6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9f4e375e-20d9-4be6-a0e8-0c407c2e8d8f"
        },
        "item": {
          "id": "aef33657-90e0-4e41-b356-e1b30ce2e0c1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3766ae73-48f2-48b8-99d9-b24b2f548067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9051ea6-779f-4a57-b3cd-1171542f2532",
        "cursor": {
          "ref": "0ad12c17-af47-4214-a81e-d6d820b988e3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "560d9a4a-05a6-4fc6-9b46-b77276f2aa2d"
        },
        "item": {
          "id": "a9051ea6-779f-4a57-b3cd-1171542f2532",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9d5fb08e-d7f0-4744-b517-b8c2ed93c0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1039307-b914-4f9d-81d8-c97cd0b68f84",
        "cursor": {
          "ref": "0b2e19dc-b402-462b-baa7-18de38621a2b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2a1ca2da-3f6c-45cf-ad24-7753a3e39f86"
        },
        "item": {
          "id": "b1039307-b914-4f9d-81d8-c97cd0b68f84",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5aff9e28-4425-405b-b738-4ad51e2dfc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5471d3-5982-4fbd-96a8-0ee4440ed850",
        "cursor": {
          "ref": "a82c08c1-57b4-44df-870d-9b758a41023f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6ad1ae0c-31df-4aca-90b8-dfbd706a977b"
        },
        "item": {
          "id": "5c5471d3-5982-4fbd-96a8-0ee4440ed850",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "116cb82e-f901-458d-9faa-5d6ad629032e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7309fb-effc-435c-bb62-fc7063f482b0",
        "cursor": {
          "ref": "eded8d1c-4f39-4e77-a85d-2ed7aba55d6c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0c38893f-48ba-4934-960b-4acc12ab35ba"
        },
        "item": {
          "id": "af7309fb-effc-435c-bb62-fc7063f482b0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6eef093e-dd09-4ae5-9d21-0186c7f5e3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67429d83-8bba-45e9-ab98-358238b1efa0",
        "cursor": {
          "ref": "b35ad60c-cddc-4d39-af31-7c09168055fd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8e68b8ef-67fa-488d-aca1-1dbec455bcbb"
        },
        "item": {
          "id": "67429d83-8bba-45e9-ab98-358238b1efa0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "48d0009b-cae4-4135-9af9-09937b906f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abe2ef3-c518-4e36-a157-7817e8c6e86a",
        "cursor": {
          "ref": "10fb9aa6-15ea-47e8-8534-f49447da26cc",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3b072d44-a8cd-4264-a2b8-41f84f8e4673"
        },
        "item": {
          "id": "1abe2ef3-c518-4e36-a157-7817e8c6e86a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4ef1109f-e529-4cfe-a8a5-f51e880505f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d48a16-ac5f-4995-b0b5-88d90691ec01",
        "cursor": {
          "ref": "c0bd8a16-0d05-470c-85f8-cb9a33bce2b7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b3040bf1-93f8-420e-9015-8408d0feb087"
        },
        "item": {
          "id": "f4d48a16-ac5f-4995-b0b5-88d90691ec01",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "56c68a58-a052-4016-bd3d-777734a6aef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457ce41c-1e49-4712-9f3c-46924808d56c",
        "cursor": {
          "ref": "72c3fda7-1242-48f0-90cd-e39aa123e237",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "71476a59-c3aa-41ad-9898-5f2a475f12d6"
        },
        "item": {
          "id": "457ce41c-1e49-4712-9f3c-46924808d56c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "533f430d-605f-4494-a201-97541c9b0df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441a7b29-74fe-4d5f-aaf8-e07e019784e4",
        "cursor": {
          "ref": "4c5d1763-7c4c-4a86-b689-0fe3e3cfe97d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "67e1c6fa-48e4-49f6-8764-38879bf4f1be"
        },
        "item": {
          "id": "441a7b29-74fe-4d5f-aaf8-e07e019784e4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b6988b99-13fe-4e7a-a9c6-765f8754931a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056ab46c-f111-4df0-ae27-14fea2ac2451",
        "cursor": {
          "ref": "d17d851e-fb4b-4d4d-bfbb-08dc4cc034dd",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e1b1a5c2-88c2-4a67-9a1d-e1a5869f9e4a"
        },
        "item": {
          "id": "056ab46c-f111-4df0-ae27-14fea2ac2451",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7ffd3b3e-90df-43ee-92dd-d6a3c96fc625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10429cd-638b-47cf-86a1-4a2c0ed7a00c",
        "cursor": {
          "ref": "1f8f6621-4d4d-4f07-bb84-2f1921e10adc",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "66937acb-f96a-4d52-ad55-d6f164dc4045"
        },
        "item": {
          "id": "e10429cd-638b-47cf-86a1-4a2c0ed7a00c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8dedc8d1-afdf-444e-b280-c78f2d1232e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170d8986-a016-4f1d-9293-c438ca6a2e07",
        "cursor": {
          "ref": "3a4008f1-8aef-4e19-9a84-d2c8c4bd0e2e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4f9dba9c-255c-4af3-a2da-e7f5dae90c54"
        },
        "item": {
          "id": "170d8986-a016-4f1d-9293-c438ca6a2e07",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f70beebb-e54a-4625-b09b-03b3b8431e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc23476-f099-424b-9e6e-5679299b8f5f",
        "cursor": {
          "ref": "69b401df-680c-460f-a533-1a8369a49fc6",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "52a9fc01-f0d0-432e-a9e0-485898b4c386"
        },
        "item": {
          "id": "ebc23476-f099-424b-9e6e-5679299b8f5f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6074a724-69ec-4861-a9a7-44b82101ea6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10be9773-ddb9-4a15-8281-00e8ec930a94",
        "cursor": {
          "ref": "5d3aff52-7425-45be-bd4d-6c98195b7441",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6ee0a0e9-5379-451b-a0ab-281ca5e40ced"
        },
        "item": {
          "id": "10be9773-ddb9-4a15-8281-00e8ec930a94",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8bda150a-d243-4538-88be-3f2e09c2f6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb01b40a-6101-43d6-be97-085ef061ddb5",
        "cursor": {
          "ref": "8828a61d-8142-4d0a-b509-6b69549056cb",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "816ed512-e463-490a-be3e-8d5feeda56ba"
        },
        "item": {
          "id": "fb01b40a-6101-43d6-be97-085ef061ddb5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b55b81d6-cb85-476c-9e1a-695fe71e20c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc837040-9301-446a-8d4c-34b3d04f540e",
        "cursor": {
          "ref": "b49175d3-4ed3-4af4-a317-4ef82925d7fb",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f8cec7c9-3dfe-412d-bbe9-e4a386fe1fd2"
        },
        "item": {
          "id": "bc837040-9301-446a-8d4c-34b3d04f540e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d2a391ad-53e6-450b-9ec2-a5180c258350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3828fc-c393-4d3c-99f7-68606f5c67d9",
        "cursor": {
          "ref": "a4394b0f-da15-4ad5-a2d7-833819b35d52",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "312b5e2c-2da5-48bf-ac0a-ad03b1d49b91"
        },
        "item": {
          "id": "ee3828fc-c393-4d3c-99f7-68606f5c67d9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "21f6f151-2687-4e6d-9465-60548ecd4e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7935f53-3306-446a-98ac-5090ca4c7bc6",
        "cursor": {
          "ref": "364d3adc-975e-400f-96c2-0acd2c1af25b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "88c9b323-30eb-45ce-aa78-568579bead69"
        },
        "item": {
          "id": "b7935f53-3306-446a-98ac-5090ca4c7bc6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "056333fa-d9ba-48ff-baae-6c6af78210ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45063e2-694d-400e-9b44-e09cb2fd2cce",
        "cursor": {
          "ref": "68426c40-2424-4164-b6f8-56df650d32d0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1e2ae4e8-1777-42e7-b5ab-9d7c9622efc7"
        },
        "item": {
          "id": "f45063e2-694d-400e-9b44-e09cb2fd2cce",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f0672ba5-d301-4327-9148-f376723897ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d6f94f-42b9-4655-ba23-e205de9e3ebc",
        "cursor": {
          "ref": "98f77b7d-0b1a-409b-b034-c15da5cf8431",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8ef86d3b-1bb6-4771-942d-7bc5f7e3099f"
        },
        "item": {
          "id": "d6d6f94f-42b9-4655-ba23-e205de9e3ebc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "48355754-8572-45f5-967d-440ca25eaba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c3af10-2aff-4783-81f7-a3818ddc5939",
        "cursor": {
          "ref": "66dfe8b2-757d-43b0-8408-c70e8929bfca",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f968b729-fb86-4b69-a283-7cff285cc05d"
        },
        "item": {
          "id": "20c3af10-2aff-4783-81f7-a3818ddc5939",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f75b1e85-ad5a-409a-9c5d-7c96f8f81158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889a0a9d-d4c1-4ccc-a1c8-35e24d2c76d8",
        "cursor": {
          "ref": "8c8e5af3-acaf-4fbf-8d61-720ef2ee4c90",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3d46d198-087a-4a03-9deb-4d6d4450694c"
        },
        "item": {
          "id": "889a0a9d-d4c1-4ccc-a1c8-35e24d2c76d8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "63664490-84ca-4b79-a19e-22353dc982b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3711c3ed-8f6c-41cd-a715-1f0cd5ec8936",
        "cursor": {
          "ref": "fa17004f-fcb4-48e8-afd5-34e9f9851a45",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d4575d1a-1b21-4c37-a381-3d886b8dfd7d"
        },
        "item": {
          "id": "3711c3ed-8f6c-41cd-a715-1f0cd5ec8936",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d9788205-1fcd-43d7-9ab4-738aa7aaa216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e098d400-f137-4faf-8eff-9b18f2796a7d",
        "cursor": {
          "ref": "154aacd2-376c-4587-850b-6a3a9ce377c5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "da7cf4a3-b96b-43d3-afcd-2488c7069ccc"
        },
        "item": {
          "id": "e098d400-f137-4faf-8eff-9b18f2796a7d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5c42627c-7080-457a-adec-6a6e7a90cde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345525ef-58c9-47bd-8918-f62c6ce25497",
        "cursor": {
          "ref": "1f7a2d09-6e21-476f-89f0-93c70b16ec62",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4361c188-5813-48a6-aa08-c1308e4a1ac3"
        },
        "item": {
          "id": "345525ef-58c9-47bd-8918-f62c6ce25497",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "157a2fd8-fc85-4a94-bc94-5eb91cc0d67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fe90c1-a938-4248-9c82-078101f206c5",
        "cursor": {
          "ref": "ad972d6b-9297-414a-b5c7-775cb32daf2f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "72a581e2-141a-495a-9750-d742854f74ae"
        },
        "item": {
          "id": "a2fe90c1-a938-4248-9c82-078101f206c5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73a3f871-bd1e-4ed8-bdfb-60ec042bfef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52656c57-fe6a-445f-a8be-7e6bc839bc67",
        "cursor": {
          "ref": "24c345cf-b2b7-4178-9fae-ee6d54bb0ccb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ee4e6361-7503-4cc2-b325-f2dfff8b9c27"
        },
        "item": {
          "id": "52656c57-fe6a-445f-a8be-7e6bc839bc67",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a20f2dd9-04aa-4698-b243-2c7262def513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0736fcd2-1998-4f67-acec-604cd99ea593",
        "cursor": {
          "ref": "c98855ce-9519-45e5-b6db-e8bebd0c56ec",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1d0b8286-13cc-4c35-9482-268ddfb81d87"
        },
        "item": {
          "id": "0736fcd2-1998-4f67-acec-604cd99ea593",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4b2c0766-fae8-41d6-a2fd-def705f2aa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdb4ca5-8794-4aed-94a7-bde48f5fde56",
        "cursor": {
          "ref": "e7642c58-fae7-4ffd-9cd2-9acc14a0f9a7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c0b6e9d3-05b2-4608-9129-793dcb212983"
        },
        "item": {
          "id": "5fdb4ca5-8794-4aed-94a7-bde48f5fde56",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bf86ec42-2497-41dc-b072-db6561ca22ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec918067-d5c1-43a8-88b9-0cf7f59c86d5",
        "cursor": {
          "ref": "0cf2d365-8467-4d1d-b95e-5868494be1fc",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "957b532d-609b-4070-afe7-82e0a520a504"
        },
        "item": {
          "id": "ec918067-d5c1-43a8-88b9-0cf7f59c86d5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "57d9a5a3-175f-4b54-916e-970a2c68da68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ae3893-a3b5-4b34-a133-fce357b5997f",
        "cursor": {
          "ref": "656746f6-bfa0-4dc1-9c6c-4305789af4d0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b4c38159-5f44-4ea5-a65b-902c944592b9"
        },
        "item": {
          "id": "78ae3893-a3b5-4b34-a133-fce357b5997f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a4cdf63d-9f6c-47c0-9f61-3d0e0372ce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ef6294-d200-43c4-bbf1-66df3248b6a9",
        "cursor": {
          "ref": "9432b33d-3779-4b24-b5c1-e2cbcaa4ff70",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "96e977f8-c2d6-4ae6-b2c3-0ebf8dc32e83"
        },
        "item": {
          "id": "d8ef6294-d200-43c4-bbf1-66df3248b6a9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a2844800-48c8-4a2b-8908-5821e2265963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff947c12-99fb-4877-8918-431596a6b9b5",
        "cursor": {
          "ref": "e2433685-6774-4c92-bae2-75a13c5ee036",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "852fc46f-d66f-48cf-8f55-b65f94f75686"
        },
        "item": {
          "id": "ff947c12-99fb-4877-8918-431596a6b9b5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e035d502-8510-4a0b-b939-5709e74fcc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42ff343-1a28-4681-a07d-1b99bb17fe3a",
        "cursor": {
          "ref": "bef926b6-1629-4230-861c-68d576ca5344",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d88a83c8-f265-4458-b97a-d6e06fc0c6df"
        },
        "item": {
          "id": "c42ff343-1a28-4681-a07d-1b99bb17fe3a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0b6fac9d-9719-4550-9aa4-bc814ed1a4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03eeff8-9024-4a64-a773-1e24f8c34740",
        "cursor": {
          "ref": "ca1c88ae-fdec-4dd3-a373-8c307305ba43",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9321e9c2-f367-4f39-9755-cdf0abf85b93"
        },
        "item": {
          "id": "d03eeff8-9024-4a64-a773-1e24f8c34740",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "73224dc9-5c29-4adb-bcbd-be6923a1b36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d741b07d-59ea-4456-a5e1-45b8fcdbb7f7",
        "cursor": {
          "ref": "97aada03-a195-48c7-b6d4-bc14d8a2bb42",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e65f72bd-a090-4e68-8c25-fbda36c6b018"
        },
        "item": {
          "id": "d741b07d-59ea-4456-a5e1-45b8fcdbb7f7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d44f8b75-0963-42f0-b554-1fe5d571da37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60884a53-251d-43e7-ab86-14d511b077bf",
        "cursor": {
          "ref": "2e4d7648-2d17-4382-8022-203b8ff2b2c0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "864a638a-b7c4-4043-abfd-5ea07821379a"
        },
        "item": {
          "id": "60884a53-251d-43e7-ab86-14d511b077bf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "88975a5b-e12e-4aad-8bd5-1ccd054b8a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d627ebc3-eb5f-4133-878e-53625fd3e7c5",
        "cursor": {
          "ref": "cdb280a0-8160-45e6-83ef-6d6ddeaf1230",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bae818d7-30f9-470b-bb4c-b6e0b1e05ba9"
        },
        "item": {
          "id": "d627ebc3-eb5f-4133-878e-53625fd3e7c5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "82ca0423-5d1f-4855-b23f-dfdfa10e5610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b9529e-9e48-45d7-ade0-607e328c2348",
        "cursor": {
          "ref": "888d7ace-3861-4e03-872a-1321f80076b8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f1bd7816-112d-48a3-ad3d-882187b5b96d"
        },
        "item": {
          "id": "59b9529e-9e48-45d7-ade0-607e328c2348",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9e6ca88e-8522-4d0f-a99d-404b1c5bab1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ff0f7c-915e-4c96-a6b5-c8cb763ae81a",
        "cursor": {
          "ref": "b0114c07-f6ba-4197-9ef6-8916a092fb07",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "192070e6-34b0-4d80-9ba1-5bed825a5485"
        },
        "item": {
          "id": "f7ff0f7c-915e-4c96-a6b5-c8cb763ae81a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e67e4530-df77-4331-977c-d86a87c9cf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0271ec4-0aed-4095-b0a3-2a24c7fd9e2a",
        "cursor": {
          "ref": "c7679657-d6d6-48c9-92b7-56b47bcf2250",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1e1fa4de-db7b-4647-ae71-18eca56af013"
        },
        "item": {
          "id": "e0271ec4-0aed-4095-b0a3-2a24c7fd9e2a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9a36564b-2c39-4b65-87ad-b4817d852af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9184fb95-fccc-4048-a9a5-ec2661858109",
        "cursor": {
          "ref": "a586b197-3f4d-4d5c-8d4d-1f859076de10",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dcff47be-e1f0-4b68-b83f-bc609729270c"
        },
        "item": {
          "id": "9184fb95-fccc-4048-a9a5-ec2661858109",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "432fa911-6c7e-4290-86c3-093abeb76f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff7e88a-45d6-4031-9d09-881adf7e05c8",
        "cursor": {
          "ref": "39c471cc-3f35-4cb7-86f6-d7fa61d3ae15",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "39b3957c-5d97-40b6-9b8d-0fcfedf1de29"
        },
        "item": {
          "id": "9ff7e88a-45d6-4031-9d09-881adf7e05c8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d3822d8c-3b74-46dd-ba30-c5ce1de2ed71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683c7cae-497a-41be-8462-0fd0375da300",
        "cursor": {
          "ref": "838709d6-d989-444a-8376-b164b7415d35",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f7e83984-8c96-4627-98f7-e82bd6ea015e"
        },
        "item": {
          "id": "683c7cae-497a-41be-8462-0fd0375da300",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "247c3afe-c72a-4c93-b9fd-5bcfc9b7feb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972d8f5a-b004-45c5-beed-45143dce042d",
        "cursor": {
          "ref": "6b86e4d9-b2a1-47b7-88cd-72770b879278",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9ee3a877-67bf-4137-98cd-ecf8b43cc041"
        },
        "item": {
          "id": "972d8f5a-b004-45c5-beed-45143dce042d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d0449e98-0554-44af-b815-656cb77aff27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45afe624-c550-43cd-91b3-48c137085584",
        "cursor": {
          "ref": "be37d5e2-683b-44fe-ae57-d572a69ee68c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f9e68d7f-9017-49d5-8251-4e7209ab0fe9"
        },
        "item": {
          "id": "45afe624-c550-43cd-91b3-48c137085584",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ee9cba88-e3d7-42bc-b8f2-bf32317569b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24924980-5f29-48fa-8685-94ad91d20305",
        "cursor": {
          "ref": "0a3001c4-7966-43d1-aeee-cb4a92f4bf9c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f8d83423-23c2-43ef-a4bc-56aeac0f4814"
        },
        "item": {
          "id": "24924980-5f29-48fa-8685-94ad91d20305",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9ac035a3-5f92-4b79-8772-e059354de96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e72fdf0-6b34-4083-9903-5b69c82b864e",
        "cursor": {
          "ref": "3448ad58-2156-4913-8895-358452045a1f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "115e795e-6880-4d83-a9ce-d05a1178b2ad"
        },
        "item": {
          "id": "4e72fdf0-6b34-4083-9903-5b69c82b864e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6044ede5-213a-4a35-ae84-ce15cf8725da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894e9f2e-5b6c-4d27-b36f-e2cffbb89fd2",
        "cursor": {
          "ref": "b17c0a7c-e089-4242-844f-549bf4650fd7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8db0b5cb-9cee-4a9a-b07c-975b97fab2f9"
        },
        "item": {
          "id": "894e9f2e-5b6c-4d27-b36f-e2cffbb89fd2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "655d41fe-2183-40cf-abd3-9dc3878bc565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a1052b-235c-4ac7-8b41-52cb9be64e04",
        "cursor": {
          "ref": "494fcd9c-3d5b-4906-beed-e36ee36b96ea",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "942f81de-862e-40a6-9e62-75052f748423"
        },
        "item": {
          "id": "42a1052b-235c-4ac7-8b41-52cb9be64e04",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "449d89bf-0317-4528-ba78-db92f4c852c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f745a40c-79bb-4d4e-a72a-cda229963eb0",
        "cursor": {
          "ref": "611d862f-fb13-4c22-bc40-c1425c0a4446",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "85195773-77c3-4117-8d13-4511fa12c69a"
        },
        "item": {
          "id": "f745a40c-79bb-4d4e-a72a-cda229963eb0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0911cd5a-b96e-4d44-b04a-1ccbe614e188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca311c23-c515-4813-b23f-2f7485572e8f",
        "cursor": {
          "ref": "ffc83c99-c99d-43a5-b294-dcc11d3051f4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "45d49a86-1dd4-4ec4-b146-1f03b9994c4c"
        },
        "item": {
          "id": "ca311c23-c515-4813-b23f-2f7485572e8f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4d8418fc-994a-475b-9a0a-5fc7c2fed374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eaea72-85da-4c9d-90cb-1c65a12f7df1",
        "cursor": {
          "ref": "a17a42a5-f66b-4dcf-b7f9-c0659001aa2f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9f89db1f-040d-4825-bb03-3d570a8698a8"
        },
        "item": {
          "id": "e8eaea72-85da-4c9d-90cb-1c65a12f7df1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b9df0d87-dc61-4c5a-8ed6-a819f7ec96f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8808f2c-8acc-4b3e-b312-5dc0e06b5dbc",
        "cursor": {
          "ref": "0e6c1f06-3804-42f6-8749-abff982063f8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1fa8e9d4-4df8-4369-9cc0-4579438b0db3"
        },
        "item": {
          "id": "c8808f2c-8acc-4b3e-b312-5dc0e06b5dbc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "28c8dcbd-db02-4d00-bf3c-3dafaeaa5926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9d985f-0432-4bb4-9c27-a5352634e771",
        "cursor": {
          "ref": "4138418a-c0cf-43f7-9e2f-5921c78e3c97",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "02da447d-58b4-47ad-8ea7-2eddc62ef261"
        },
        "item": {
          "id": "de9d985f-0432-4bb4-9c27-a5352634e771",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8c39ddee-11f7-416d-8be2-11b77a96023a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e7940f-0083-49f3-af14-247af13b272d",
        "cursor": {
          "ref": "b26f516b-5c58-4bff-8ba4-540f82c8e992",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e5d768af-0eca-4eeb-a601-46d93721db68"
        },
        "item": {
          "id": "02e7940f-0083-49f3-af14-247af13b272d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "724fdb86-422c-4e14-b4a6-37a6a6d92d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf488ea5-042d-4356-86f9-c333dafc44ba",
        "cursor": {
          "ref": "d42af7ff-42cf-4ac4-98e7-6fcd4fbfa52b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "db4994b8-16fc-4004-886b-d9398f1e0bc1"
        },
        "item": {
          "id": "bf488ea5-042d-4356-86f9-c333dafc44ba",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2ab12075-2664-4322-b8b2-d15cfb286ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56071aef-09cd-49b5-a2ba-34b62ccbae9c",
        "cursor": {
          "ref": "bb824e6b-07a5-4710-bea9-262fbd7f6692",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "89f89f3d-0e37-49a6-a07c-dd9fc86e7c12"
        },
        "item": {
          "id": "56071aef-09cd-49b5-a2ba-34b62ccbae9c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6b5baee9-d30b-4ba6-a87c-2940d94923c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9e26c6-ab36-4b81-9297-19d839c335d8",
        "cursor": {
          "ref": "537a1ff4-8ae1-4af4-97e5-a009a8f52b16",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6fdf8e27-f677-44d2-8a77-b2e69f7d0fce"
        },
        "item": {
          "id": "1c9e26c6-ab36-4b81-9297-19d839c335d8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fe313fe8-d9fb-47f2-9fff-97957293800c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1943b3-2c13-4c52-ad54-e5c873016543",
        "cursor": {
          "ref": "cfdf40e6-89f2-4291-87dd-bb5c70554e00",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "52948c3d-2183-4f0a-925c-4a9bc377df73"
        },
        "item": {
          "id": "fc1943b3-2c13-4c52-ad54-e5c873016543",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dada4bd3-d9b5-4550-90b0-b0b519af1c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c05b7e-563c-4b1f-aa0f-7245c1ff7d67",
        "cursor": {
          "ref": "5e7508a4-5970-448f-a4c0-761680bc5980",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "20dc01da-e3fa-48e2-aff9-6441a1a4e776"
        },
        "item": {
          "id": "50c05b7e-563c-4b1f-aa0f-7245c1ff7d67",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "319c796d-ce50-4948-848e-8401361f2c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecd3ced-89f3-4d3a-90fb-1873672a7897",
        "cursor": {
          "ref": "f01312cf-d9d0-49e3-b03c-e9050577f7ca",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "15d721b9-11e4-4523-be45-a95701b50966"
        },
        "item": {
          "id": "9ecd3ced-89f3-4d3a-90fb-1873672a7897",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a4e0fcc2-729a-40f3-b50c-df5dbb04fdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2368f7a-7427-488f-b7c9-8e3f6a63d54d",
        "cursor": {
          "ref": "a4ef8ac8-a7d9-4a99-acec-0973c6b3ee57",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3571bac7-3e5d-4a4f-8f0d-3164fef9cdc4"
        },
        "item": {
          "id": "e2368f7a-7427-488f-b7c9-8e3f6a63d54d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e1d62eb2-1a49-41ec-9328-831f7e873844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d1932b-43e2-434a-a95e-dc550679eb50",
        "cursor": {
          "ref": "e151f00c-1b09-4583-94b1-7759f856a702",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e6b173c8-cf3e-489f-825b-4d4674adf80a"
        },
        "item": {
          "id": "76d1932b-43e2-434a-a95e-dc550679eb50",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0231bc60-9339-48cb-a03b-c86065c3f781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0fdae6-bd3a-433e-b131-9f0730e7c9a5",
        "cursor": {
          "ref": "40142097-fc90-4daf-8445-684194b61a2f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "95034dd2-a24d-4841-af95-279482e2a19c"
        },
        "item": {
          "id": "9f0fdae6-bd3a-433e-b131-9f0730e7c9a5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "12117d69-3c2f-4788-94a6-df6f661161da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c270f620-1e95-46c3-8d29-deae03b2cf36",
        "cursor": {
          "ref": "6d47edad-e4a6-4e04-9612-1011ff68bf99",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9ef549ca-e510-47bf-b4f6-361ec4356722"
        },
        "item": {
          "id": "c270f620-1e95-46c3-8d29-deae03b2cf36",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "59e3aa1c-0d13-4025-a579-748e1a53032d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0752245-044a-4f36-9371-59a761d8a517",
        "cursor": {
          "ref": "00b86c97-ea7a-43d0-8b94-77a05c47d48b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0a8e652c-b4b4-4085-b05a-6bb1392403b0"
        },
        "item": {
          "id": "c0752245-044a-4f36-9371-59a761d8a517",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d1547574-17e9-484c-9b5d-0614753a8e44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288bdd41-b89e-40d7-bbb9-fd6956ab4d65",
        "cursor": {
          "ref": "e585e565-9fa3-4a75-ba0c-3687ab033173",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7d9735ef-6c88-409f-a6b4-31edd57aecc6"
        },
        "item": {
          "id": "288bdd41-b89e-40d7-bbb9-fd6956ab4d65",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "65618751-0321-4dc7-8d64-b5cf4968baae",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f1bbc8-f48e-4793-b590-09567beea5b3",
        "cursor": {
          "ref": "0ed1e959-0501-4bdf-b0b4-7ac4335f6da9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0fb72c05-c1fd-4ff7-a44d-efb43d13bb45"
        },
        "item": {
          "id": "01f1bbc8-f48e-4793-b590-09567beea5b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6b861953-f504-4b57-aa88-ccaf89160f5e",
          "status": "OK",
          "code": 200,
          "responseTime": 3043,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4208ce9a-bed1-4699-87c5-6eb8dfb6eccb",
        "cursor": {
          "ref": "3437ad3d-72f3-46ec-9431-e53972a56b82",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c7ebbecb-06d6-4f49-b41a-6ce4e63fea0c"
        },
        "item": {
          "id": "4208ce9a-bed1-4699-87c5-6eb8dfb6eccb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1692bd9f-9020-4361-ba78-7d947bc5fb04",
          "status": "OK",
          "code": 200,
          "responseTime": 2561,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f7581a-6d06-405f-9b53-e19805cc84bf",
        "cursor": {
          "ref": "e5802408-3766-4c3e-9343-aeffa6f4e5e1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "464e2ecd-ae63-4d64-a613-082677cf89de"
        },
        "item": {
          "id": "10f7581a-6d06-405f-9b53-e19805cc84bf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "30081924-a963-4326-bf0e-3b4e0b6ef5e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f7581a-6d06-405f-9b53-e19805cc84bf",
        "cursor": {
          "ref": "e5802408-3766-4c3e-9343-aeffa6f4e5e1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "464e2ecd-ae63-4d64-a613-082677cf89de"
        },
        "item": {
          "id": "10f7581a-6d06-405f-9b53-e19805cc84bf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "30081924-a963-4326-bf0e-3b4e0b6ef5e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6508a2-e3ad-42ac-896d-4d5dae983f81",
        "cursor": {
          "ref": "7f49812d-c8a2-4e21-bc17-bc53d276e227",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "289e5280-9bef-4d75-ac85-72788d058b75"
        },
        "item": {
          "id": "7e6508a2-e3ad-42ac-896d-4d5dae983f81",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a39c1214-f9e4-4180-bd15-6975160b785b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce41be2b-256c-4d92-b2d7-ed709dfd6f6b",
        "cursor": {
          "ref": "4720176d-c6f3-4dfc-8f76-24b127165e53",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8c31c1ef-cca3-499d-a3cc-cd378f0ee2e6"
        },
        "item": {
          "id": "ce41be2b-256c-4d92-b2d7-ed709dfd6f6b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6ef4f8f4-dced-4ad8-b500-9ba09af3667c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}