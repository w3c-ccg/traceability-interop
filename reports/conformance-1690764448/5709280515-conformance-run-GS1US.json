{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "93b59eb7-13e0-418b-98c7-307ab6064a0c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "62bbf501-59f4-418d-9e20-a126fbb1f023",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97d230c1-3f87-4885-b187-e2ac8409e893",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "908688a2-2bcc-4f13-8eec-f456ffc8e942"
                }
              }
            ]
          },
          {
            "id": "e936cc91-0867-440b-8945-3ed554129ab8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00c3ec81-65b8-4925-b80a-f6d1954c7c6d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3ee74f53-e142-4324-86a1-3d3016f095b6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3bf25139-8aac-4f9d-bf02-777cee50ef1b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "aab10315-0a39-43a2-b151-f8f02c355716",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbe53071-0586-474a-8753-bf852a7a623c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a584e9a7-d44c-47fb-a0a6-2498ee35d3de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a035eec-d13a-4404-805e-47be8e00e991"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43985d8f-7c40-4bac-9b7e-58662dd59650",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "030a8570-e53c-4654-9603-89ee77bb20bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c9f0ab42-d235-41ae-9d16-35a1697a0528",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9b7f40b-66e3-4b48-98c1-b4005737ef43"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c29e0185-e6cc-4914-9d86-d9e095f190f4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6876a7e5-e64a-45d4-98bc-48767e4e737a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57493866-6f26-4438-9641-04b1d2adcaf0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "102637c4-2c5f-460e-bdce-44155bdbf7d7"
            }
          }
        ]
      },
      {
        "id": "a4f80d8a-d8e5-4ebd-9b74-3f35ddf20da2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d60e4e4c-4d2f-4f53-8f59-77f1dd23e7d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21d8cab9-cc77-48b2-90b4-6a2cfd4994f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40e08ce3-e69e-493d-89ba-5a904ace67da",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b0e887-6f46-4088-8655-f0658e4e9a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "347310c8-3caa-4302-b5d3-f0eb27eb6763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbce4e50-a4bd-4a31-9bd8-d6e5d4a7f62a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b22513d-88fd-418f-8957-a66919988aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ca8317b-5bf0-4904-adfc-969f4e4fe727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63888847-37d4-44ec-8cb8-66bee16707d0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b907d7-5d79-498d-a185-dbbbaf639f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "569f4fd6-9804-49c6-9549-2c43cda8ea21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d9b5da0-4a8b-4ba0-a5fd-dfbba0e7a661",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "214c7aff-8158-4269-87ab-bbd6c73c465d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f988a1-34c8-4276-9774-aa7104a3dc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c404409a-51f9-42d9-979c-3c1a1b67d0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bb78d5-2103-49ee-903a-7491f80c431a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c7ada4-6434-47d9-9ef7-44c2f89a9859"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3d509c11-a097-4222-8307-9bdac4d9001d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c1ac175-7efd-470f-836c-0d819c1d0849",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da0fe201-f258-49d0-959e-787042b38e5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "278254cb-04e2-431b-bdb3-d0e022bcda3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9353ee54-bace-4186-8668-6775cc4eb3d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1d4f14f1-a8c7-44fa-b844-a07a151ad0e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a03d7b36-69f1-448d-af32-d6fc8f9dcfdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca05c143-2a23-46e4-b206-dd62a349c63b"
            }
          }
        ]
      },
      {
        "id": "8d17156c-43ce-4509-bc81-91eecad62f16",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b6848b7e-ceab-4289-ad20-852d2dd3958f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae34240b-3ae8-45fe-8d62-71a99c042b27",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3838fea7-e578-4431-89ca-45d4b522ec5b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630ee7d0-cb64-4a5c-8213-334da92a2ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b43b5a-52c8-4214-acea-0aa26e930ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5efbea-8b5a-44bf-8329-20d5d107544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09df2af9-0f05-426f-8b88-7a609aa47526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0469fd36-e5f5-4a11-bea6-2bbfdd1c33a0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4efd433-9cc9-4cd6-814f-ee360a45d80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1320c90b-a3de-4c8f-a84a-820759516b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4535e355-81be-42a7-991c-706bd544f0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "654f158e-c022-42fe-83ef-b2283d5facc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dc44b9-f021-4ad4-8c9d-2eb7b7502f37",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baec0c78-f5d7-45f7-ae00-e02610a2a62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b273ac9-71f6-491e-95ae-1bb903c59039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ef2df3-170e-48ca-8cef-996e2abdcf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d2ead90-50c7-47a9-adef-860062b2958f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20ea464-3b9f-48d3-8c18-6f9c086e15a9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4ddfd0-52d9-47ba-a8e4-65e6ad7a15c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de888c1e-ac33-4281-917d-47eb4d08b16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28afbadb-1cf9-4424-aa43-1dd767fb2f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd9c9403-ff66-40dd-bb54-5379d252bc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517ef6eb-6692-43f8-ba63-29b6891e1d3a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7e4dbd-2e00-4eb4-975c-18c917437a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3780a89d-ce35-4249-83a0-4e0949559510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bb689a-41e4-4b04-9cba-0d7b3c27f075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dda5c088-df12-46c9-af17-a2b815bb3079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ce75c6-baae-4571-bfbe-605c4b0798a6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8164982-a549-4820-8f25-af39d9a0dc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abfdd67-ed72-4a53-95ad-167ea7090811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d501a33-7dd7-486b-bc9f-149039527acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44113b55-0095-4103-b60a-ebf5806cb58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68c8fef-9234-4ed9-b461-34a626827448",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f1a908-3b49-4a68-bd5e-71c8ba801a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952d8568-4b6d-4889-9ebd-b360242258df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b51ef9-497f-4744-93ed-8e8e88bb577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c550ee65-becd-4c7f-b53d-3a7daeeaf244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8c9d0f-3185-4860-b865-bf5af474d352",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87951c61-27fc-46ba-b606-0fa0b6b45a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea93d17a-5bd9-4b8e-960d-680ab87b2ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c53522-1bc6-44b1-9651-001a06b83aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff25015-a061-4820-9999-6354da96868b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85ed9d9-4486-41dc-a2be-80389b36b5c9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76de1a37-378d-40a8-bcc8-14de5256ebe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fad089-e68c-4574-abf2-e878b5bef94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b242219-aa4b-4a26-9826-ad53be9ac911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a5cdf7f-5f54-4e4b-8320-f51e81f9859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5957db68-61db-4f66-bf75-5ae7020314aa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331acafe-1635-496e-8d9c-6bdaaf19693a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072cb50c-b587-41de-86db-8e8caac00776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeb1312-07e0-4587-8260-ba2c77c7043b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3ab6e1a-91f1-44ee-b8a2-910e4a0d4c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ebd027-40f7-4aeb-ae11-b4a3a4feafe1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dad176-6924-4749-8382-5d77adc7c573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a203556-956b-4bf2-a80e-b7d5367dd65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d116546e-eea7-473a-80f4-01d253fbb701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c64168-06fc-4c63-a429-43005a01bb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca48005-b8be-4b1c-a2ea-e97f87ae821c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29d51e2-ae9e-4cd9-be25-b4014e8cc249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b72f86-1284-4bb2-a816-5abad1ce9f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642ad34e-03de-44b9-9198-8a00c112411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7434af4-8f2e-42e1-8372-43325b6f440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce981497-2c0c-45f8-9308-80b3150ace40",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ab669a-5464-46d7-a0e6-93db60ab201a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d695db-7ae5-44e9-b0ea-58e07fb95dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08a9538-f6c6-447f-a796-ba21ac8048aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d32c8be-aa74-4100-808d-782c1863350c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb75af9e-146b-40f3-bc94-5360d01e6f29",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f83b200-b193-416a-9ca6-510b3129aaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db16db98-567d-4be2-93f7-c30912c73dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c994dc0-f482-4474-a405-24066ee6717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3c8ba08-a7f3-48af-97f7-425376bfb008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337a0c94-d09a-4b4a-a507-b10a170d91aa",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd23a7b8-f3e0-486d-9be4-bb4d46644364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5dc0a2-607c-4456-be18-eb613e00a0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3099ea3-17d7-41b7-bb0b-405d8ca43252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d13750-18c1-48a7-a72b-578328f2db05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e880ab-23bd-4314-a7f2-b3cb8f0cf4ff",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db37c034-d834-45b4-a924-a248cf58c7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9ed7a3-34be-4a27-8b34-bb82942a0cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab13739c-b99f-4a5e-b592-9cdf9f907ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2df54e62-8b63-4029-805c-694006bf3e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d263ec3f-bc55-4cb0-a341-a780f1daef08",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194d8e14-c30a-49ab-a138-0bcb52844c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d0d392-856d-4d51-a683-dc26e249ec88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a16dc64-a600-4cdd-80b1-bc4b8aee8ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bd09425-ce47-4492-98a1-00be26a532fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346617de-7fc9-45b8-9e48-ef1daecb3b33",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e5387d-a248-4542-adee-463aa38bb066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5a2b08-eb96-4e4c-bcd1-f8e0819df4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758174d1-5b2d-44ee-9185-c52861f5a004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "448a6196-f56f-4a26-8073-4e8c7228b083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e550c228-37fc-46cf-8cb5-e0882b3c4df3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa74e1f-76dd-4712-9d91-08a8a1465b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e293ce66-7199-4cac-bce7-d3e809810f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76bdb55-908f-4d22-b335-ef85c609e3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ceb6553-d83d-4f4b-9db5-76a490f520a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e04ab53-9a6f-4568-b9bc-15dde101523a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecfb253-c196-4c1e-b1b4-a9562327f65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f93abce-66a3-4589-92b5-89fb4f84b6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e12d80-ef4a-40bb-9b70-87e66ee64c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9674b77-a888-4682-927e-15872bcaf062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202a2081-4178-4fa7-b751-6e226fc0d7ce",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c683c500-020e-443c-8965-4bf17068d055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7089a06c-7417-4f03-ac81-f841b026d8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6fd123-f956-46c8-9f42-55e6e9e76d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68c6cce-e1d9-4aaf-961f-7527a6136502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef05497d-afbd-49ae-a6f4-689ad8ecc4c3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadf9e7b-4c14-4079-970b-f4d464f5bf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f79b38-c424-4db1-b15d-867c388d3d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df88eb8-eadf-4cb6-9279-5bf26ed56acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c06db83d-ed04-4fe3-b662-06a4e33918a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d5a8c6-225c-4452-9a32-e9322367b7ba",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f53ee5-2a6a-4299-afbb-0990988cc5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42016b41-5651-4e27-abae-8a300338f275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077b2a9e-96cf-49a3-9119-e8d993a9888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01019aa7-2f37-40d1-92c1-e61284bf2192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d565aaeb-9f0b-4cb5-a5da-e466bf304a4b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e2ae3b-d651-453e-b72d-cd34cf580f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e97298e-345f-49a5-ba5c-edd431240a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34534273-d591-4387-a61b-fde98d3f436d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a12e0e-6e5c-4d3a-af9e-d3fd1f217c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7a9a71-80a4-4f58-837c-0b48d8f9323a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f32aed-74d7-4589-b993-6e928f336dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f8971b-1864-4c03-9f86-1248176464fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd4ff3d-80fa-4f6f-a312-0da080e79b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa31c0d-daa6-4efa-a488-6fcdb72414c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c1c5b1-d1e2-4dbf-a8ba-9cf989ec41f2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ddeec7-55a5-4837-baca-280345a5eab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d001944-a011-421d-b25a-c3e219f5cbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdf0b4a-bc57-4b94-84c2-2d0c03ba1587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a2b1b3-4a83-4085-95bd-f43dec3fcd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d8cce8-11e5-447b-bf34-b32ed6902ddf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb08bd8-806d-414a-a387-281a6e573b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ef4d59-e431-40fa-bc2c-c9ceb4cba5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bede48-3300-4554-beb8-196190e47c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25446a7-20ce-4e5b-a714-dab482b69348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7030efa1-654f-43db-8e8b-dacb60df63b9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4015c3a-593b-410e-9306-e6add9e1e9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989f7ce7-8d43-4288-8f61-123a7656ef3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c04d0a2-ee3e-4c87-8e85-c289336800fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b8db0b-c2b6-4bf6-8970-22bb289523c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c036056f-91a6-48a1-a8b1-1ef511f7df39",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31f3b48-0254-4de0-9b7f-f0469dd96f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44357272-5965-4077-ac4e-8045143433b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f238f75-3e6c-423f-b54f-0abf38b26dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a175c208-8b28-432f-b79a-dfbdafec290c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1e9ca2-d18a-453f-b5b0-ffdfb755fd3e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156ffadc-6029-4904-94ea-bff3d74bb5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7936b65a-17d5-483b-9729-7f3e12686bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befcfbe3-f225-4d4b-9aa9-898dab276a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "00a7cd2e-1290-41ec-bdae-13179613a724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c6eec6-8e5e-42ab-ae77-249a5454dbbc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4953849e-b185-45a9-a50c-de2f81d0ff76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df25787-6e52-4d8c-804b-9a82cd0e8af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ccc916-65f4-43e3-bae9-45d7448c9034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e236d3-9abf-48e3-8281-84b154066615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bdd8da-2923-488e-b7da-5919d15719c6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8396e983-cabf-4428-bddc-0d099b229b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfebfff7-129d-466c-9010-c59149e45020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b00fd-2636-46d4-9477-b84467edb878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6c1837-d472-478b-b3d4-bb1edfe17906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4acd362-945b-4720-9e3b-d716d71c5abe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f42872b-7f3a-4349-aaff-9b1b12607d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc1efc8-98aa-4267-b201-b7a3bf743c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afeee573-61de-4aa0-89a2-8dd931fa030e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45355bff-854b-4429-94cb-f367d4104070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6685d1-5bef-451e-882e-c1fe2b5cc05f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63df6866-6a93-4203-8409-8731a9d9d491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04212d3-a67b-4308-a6cd-316fca8525ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b0551c-ea58-459c-b9d8-288ca8dd1269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a09e3000-5bef-491e-b687-34b9833c22ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e985f3cf-1ef8-47b6-9f0f-ebf26c4ccc5a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64224e57-c395-4515-ab9c-dc1509b493f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b382e9f-1d90-483d-90fc-d48f442aade6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f50b58e-bb5b-4433-adf1-42e8ec925adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d5ce01-aa6c-4f35-97df-e0aa861965c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202d534f-a30c-467b-a605-7e09823f80a2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d034abf-ace1-4f6f-91fa-72cf6295c552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0f2b799-9b84-42f7-9e44-967fcdd54b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc725941-acf1-4269-aa1d-4f0407df13a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eccd8af-59b1-47b9-89f8-83e0ea4a9b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f7d750-5335-4e6e-bcf6-bc5ab7f89789",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a0f34-91bf-4633-ae13-6ce08cb9d196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f43a738-59fe-49e1-b483-ede1d8494ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0193bc6-8e5c-46e2-8aee-c8adfec541a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59e58628-c263-468d-aff7-fc44b1e1369e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36b348a-7b22-45aa-8167-7395e1ff285b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288aea3f-6d95-42f4-b01c-6bd40f725094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a946e1-d9f9-46a2-a384-7e5fa755d9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1b9e9b-066f-4f4d-9358-62ce30d25255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a115ae-2892-467c-8af2-92bc0e6fae38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3d734b-7fc0-43f7-b294-34f77a8fd623",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb160ccb-b8b2-475d-9d9f-b19224f26ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9a41e5-591e-43f8-8ee9-06faea99b272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7706ee9-0e41-4365-97d2-0d785816b762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c43528-e7e5-42b5-96ab-d922e1f79f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4549b19b-8cc9-43d9-aaa0-f931ec8bfc74",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6dba60-2078-4587-a170-67d2b46a4e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913fca28-a6d5-4c9b-87c1-350f30b5a0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f008ca8-326e-43ce-9ecd-8cf540034d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5117c9da-a8bc-4db1-a3f7-60d49d206c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d759c-6d5f-4528-81ac-8a333f6970cf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d8ba58-6713-4040-8754-17b14bae0256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4215ead8-acd6-4e71-a035-a4408db94490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ea2530-0baa-4aac-a72c-44bf2eb5be6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "09d49519-5b0e-4041-b090-a022a7ccfb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c87329f-37ab-4624-9f65-d413a54b64f1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00709eef-1ad6-4350-a843-90575c7cd59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3d95ee-2307-446c-affc-bc2d525da362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6d1082-6a56-41b6-aed0-fa7441d96e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cb0a48-ac6a-4168-aa74-7c23ca8e2840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2cc48d-4167-4be1-aba6-c4e577c216c6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b885fe6a-6201-400f-85b2-a5d8ddf63c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e83fccd-2e54-41d8-ae79-70c67a056e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387e60e9-fcdd-4586-8748-6cc3106ce5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a363994-9eb5-4f39-a349-4f96c5b69f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dca7f8d-c15b-460f-a119-5e925203b816",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f198da3c-79e8-4a12-9a64-d27a511dc220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3467c9-69eb-4c4c-b13c-7593a8bd7fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ecc48a-ff14-4525-bd98-619b97e5d326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4461e8-82f7-4f8b-881f-cd0f2cbb00df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c415e96-18c0-4d0a-b5fc-256931a20533",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90dcda5-7b43-4d4c-b237-ecea4bf9c57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3493021f-f930-487c-b2b2-f22383b3528c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c9f0d1-263e-4005-acdc-2f73de19622e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb018ee-dc5e-43a2-8440-1edae5fc955e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ecfe6f-6178-465e-8557-379154330e98",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6df198-62e1-4788-b707-146c3cc685f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a93f18-39e9-4ddc-b233-79e4006c585f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41601e31-6875-485a-b8a0-666893ae5c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04891964-6a80-4896-b573-4197e0f8e14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12664d8-7fa5-4feb-a2ff-c4b079febe7a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f07f23-2015-4d54-b144-0989d1400072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdc49a6-8236-468e-b01e-c06af2c1a576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9c2709-2e1c-42ee-9b05-d3bd3f161e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "755173c7-66ad-4b3b-b22b-69425eb1cb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93c597b-eb92-44ff-86ad-26f344eb2f01",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7150a7b-8462-411c-8293-d855bd36b3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744a198d-837f-442a-ae6a-e0204204a8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5081c210-5d19-419f-aa36-4af627550c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd4ef19-7591-4727-bc1b-7afbd981ef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4248e87-6cb5-4079-8526-1f725a39c253",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a75fcf-5297-466e-b84b-9105a1be0f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a18cdf6-8011-4e45-8fcf-d6fcb7c3f595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd86cfb-23d8-4b9b-99d6-56d9a3433561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "185406b6-cbec-4c5e-bff5-9780e3c15f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc45c41-2b64-41d4-9346-b3a7eeb7dc08",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fc0a82-31cf-40f6-a39f-4dfdaca1b876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c46d69a-54e9-4985-ac24-1d3dc60db86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e3f7d4-786d-4868-8605-1ae00c344c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29240617-3e3a-401f-862a-773487227e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45285a5-03b6-4e07-8eef-3c8faaebb318",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2139d42-0a89-4f66-ae4d-0a3bde23a5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc48c837-c1c9-4d0c-8e71-04b323e3bb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e8b583-ae8c-495d-a669-5d1b1f5e52f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd4e7f4-6240-4c16-bdff-476f02853963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb3b845-05b3-4376-8ebe-3d7969c39b85",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36020746-1641-48de-8b21-c78fbbe8cce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32116539-1c9a-4498-865b-aecd1d7c72b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab7da1c-8623-4025-95a1-2525d5e68980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "615a2a94-53c8-42df-b271-57c100a8cb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7caa47-8e0d-406d-9a4c-b0e93ebaacf6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a641be3-4feb-4b52-b130-2734cc35a3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9371033-f94f-49b5-86d7-abb0fe8ba63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2de2d31-440d-452a-b2d0-277b9203e339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "388f432b-d01a-4d9b-a44a-5b64fbd57cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5adc33f-5bce-4bae-9be4-29c288445db3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f04430f-8669-458f-8c58-50b7f33a3e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b34d76-deb7-49dc-a7ca-518529149e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebed111-a878-4e7e-8612-88cc75a4b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63b25222-e53f-457e-870f-429df065d351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636dcfea-931c-41d8-9ee3-59997b0d2d5b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268d7425-a7da-445b-877d-18aa63e8ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8debf8d-7afc-43a9-9b01-2692781c5e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca3e1dc-a021-49ba-9655-73d33abde3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cbe476-39fd-4cb2-87b0-cebac541f27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ada5c3-f794-4532-b09b-dfa611758cbe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eec27e4-49db-486c-a3e9-5108859e52f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3db753-8615-4087-948f-8719570a138f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ccc51c-70a0-4e37-a9f0-379498ae765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd86689-0040-49e4-832d-036de50d8a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b409069-03e2-44c0-92da-c24a7bdd5963",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70728733-7f4a-49fb-8a7d-52fe6ffbee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df83c39-4440-4663-bd00-1cd7bc5a3763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dabcd9-006c-4ce5-9b53-b27b20139c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56fed1cc-a459-4cfa-bf69-b688c41d8540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f212309c-1df6-4965-a87a-9dad053beadf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813b05ac-0653-4925-bb2d-06942375b871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd09c449-5439-4e77-ba61-c8c137ea09a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc3c9cb-9694-495e-91ac-34f85f365ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f47364ac-6c53-4167-a41c-a381b0d1f3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44a3d4a-2f87-45e6-b31e-327be21961b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aff720-ba4e-4d19-aec0-bf63c7d89be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79051769-bc0f-49ce-b9cb-78fec7ea89a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122c9511-676f-486c-bf25-040c8d8b4c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfdec47-3021-4d2a-b4a0-feff96c60c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c77ffb7-1fb0-471d-a8c7-d8a7f758561c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8cd2fd-ffba-4fad-b845-fbadc0a20c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d700a7aa-7bfd-4f02-8ceb-ecace31e437e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f6bc68-36cc-4eb4-8a64-18f50b71f90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0aef8e9-1f00-49d5-af91-dc7db36e645a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb04152d-711c-46c2-ad5d-c1ed2f7bc7a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b81aa9-63f7-4ed5-8b67-5bcdf8c8166d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f2be90-00db-42b4-823b-2052ce260feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c14d8d-3019-4572-9411-3cd7b583ce51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed2e200-94c4-4651-ba20-7d364d301ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b70fc6-cf12-4c0f-baec-ee7013eee603",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b3debb-96a6-4c50-9b97-1697ae076291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26da0258-5f09-4470-8815-657200ee0225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c514c7-4213-4443-a9e3-66614bca0975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e87df9c-45b8-4a7a-9239-15588239ffb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354a2850-3a47-41a3-aa11-78c4202e1202",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fb5acd-7441-4863-b417-fb85f5784def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367724b0-3d67-41f5-85a8-76a4837d4492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bd8670-2a76-43b7-a9ae-25ccee7d00d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c564694-9533-4f3d-9665-8ebe4d555d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c2489c-371c-4340-afe4-c3544e94d7d4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c21a60-3760-4784-9754-4e20dfb4aee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397cebfc-829f-4658-80d4-99827a830853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7a52c5-5ece-4dc4-b7b1-a1c78bb41ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f54e61c9-c274-48e0-bd15-1013431f55ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a68b993-71a1-4797-a61e-9ef1a66fefd6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af316e4-1bf1-4a4f-a9e6-26c16ca9a4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a665be80-0ff5-4f96-9d0d-3ab19fa0311c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213338ef-3b5a-4cff-8ab3-568f336b93ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "905a918c-5fba-4077-96eb-8fe0bd16bffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1958623f-c667-4c9a-be67-3e73b1dee1a0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348db58f-347d-421f-89a8-a50aef43ecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcc2b4b-c814-44eb-87e0-5097b9dbd73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948ff991-a21e-4dd9-9e94-573280b46a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1bd3ca-14a0-4563-ab7b-1064c0d3ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5721c0-e96d-40fb-90e1-27e400264c09",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e6474-a2b4-43f1-9f1b-4e520eb40d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0c8210-bc7c-4977-94e9-8ae55a06965d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96de8759-fba6-4afc-8914-8a26f44826b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6eae014-59d3-4df8-98a2-05b3364d2ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116fb1eb-ed0b-427e-822e-461e2bf09556",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b62890e-73a1-429d-b6f2-62e9c42dd4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9093a16a-0ff6-44b9-b363-82b1685b1126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e00eb2-8252-480e-afd4-b7dbc50fa0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcffbbe-cdeb-4c77-ad5c-bb14fc3ce1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d941a-6df8-49e0-8ea8-a50081cea653",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f467003-381e-4ca8-8ea5-9eb9b7653ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c0ca3a-9358-4100-bb5a-26c12574791d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41731eba-43a8-4b1f-b3d8-99c23f251890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99417878-14e4-4743-9d02-e0c05a56392d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e01665-554a-4d16-adb4-612b70d47eb6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3642f371-0eb6-4840-be35-916f1b8c14eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf46af6-0e66-4a3f-b869-a64ae79b0343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f82db48-cd85-42c0-9b14-30677d25c893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6859ac66-57d4-44e4-972e-a9ebb76efaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0882c52-b762-4e5a-af07-9eba18585210",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa12303e-4573-41cc-9e18-c74ccfb8fc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f1ad4e-beed-46fa-948f-0d17432808bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a3499b-7e0e-4547-b51b-034c3c44c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6353c967-4470-4546-bf1a-9fda5565b655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e1cf70-e49e-4a30-a7b8-3f3a545a0cef",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713cafe1-0705-4c80-b6f2-b6e9f5a2ca63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b70b56-cdb7-4666-a680-1e20a39b3323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48566d9f-9dd3-4123-aa8c-1b20a95e74b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ee8808-1440-41bf-a55e-3b16e5fd549f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d3c6f0-54e2-49dc-bf10-e38e1c6b136c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508e6a00-e75d-4f35-a0c7-e918bc007246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9abe0a-2ea6-497d-a16c-e23f06850253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e618325a-af20-4c14-a421-c73a94fe9353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca1c4a2-af74-41fb-b80f-f46176efb815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb1b34a-8cd9-464a-8806-70c55c28e2fc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba258754-b498-4377-b9eb-391ac4bbf82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8768ea7-64e3-4e93-9d78-95bae6204158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbace95-70dd-4da7-83c0-b8c602b2c23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b404e416-2bfd-4b05-916a-ad0257d59db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087af9fa-c33e-4594-b3ef-3e212725404d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2e780c-63ae-4ff9-a058-5ae517353f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3c7374-5f4c-4791-b9c5-eab1b143148a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0b8e7f-4171-4221-a9c9-d886afd90d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "07293a4f-b366-4300-8eb0-bef60f5c482a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764ab8eb-0abe-45a9-863f-e881661837cc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bb5e14-8d20-4d78-8151-8df8a0a695dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bef0a5-171f-44b1-9045-bed9d7f060ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0d1ba9-9ad6-4f78-9499-3fe8dd6ad90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9681a7cb-ab1e-40b6-be07-8ad037457861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06fdf80-a33c-460b-a123-03f0f1f9b3a3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7855bc54-5da7-4332-9452-726833ad0d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e46cd7-36b1-4c84-83ee-311e2405b886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7c6454-d927-4d16-a952-a260ef703eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4525734e-bfc5-4765-a013-47f0a809e1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00c2e71-260d-43e3-a846-859df94498b9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498565b9-af5b-45e7-9006-4b87edc52786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcff7315-005b-4bb2-9c5d-3f4e326b866a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecabdd90-79b1-4fd4-81bc-42654e99b98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f19ec2f-261d-434e-b819-26ccd62c79e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d399d09a-a64c-4511-a193-ce3e91cbca4a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49c31b9-4504-443c-acde-d032f249773e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708adc36-8bd4-400f-89a9-02e480e5b33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334af1fe-6bd7-498f-bd3a-5cda9ffae1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d807c3-91e4-445e-ae11-b63d6a453ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67db758-95e7-49c0-b4c1-39c3dabf6e32",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368849d3-b718-4969-8fe8-a738a3d32a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66b280e-11fc-42ff-9c58-13b8446ba8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211957e4-7d42-4b80-9343-158b63d7ef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "942787b6-daed-4674-98f0-641c00bfbe3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11bb88a-7880-4ba6-bef3-222e61f870dd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e26b958-c2e7-440e-bbc0-da980ea138f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364d6cf8-b8ec-4f48-b0af-dd5e68d3ad2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13709f8-42ea-45e4-8ad4-b9da3a607d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9037ac-0eb5-4af5-bb4f-9d3c295f32a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e748387-0d13-460b-88bf-29ee9f3bf4e1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040970dd-4ded-450a-ba79-0c32bddce97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638d1c83-a270-4349-9a86-b1fb07d53dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877a595c-a95a-4fca-811f-6d0c9d2cef99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f50fbf2-b76a-4ee7-bdd1-e41b3042f2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4985292-e800-445b-b5c7-819c98d2f563",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc8e451-6147-4240-8546-9700e00cfae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4468f370-119a-40a2-8a40-c71d3a07e63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4647f05e-a452-4c33-bcce-c2b04ccaf4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "668158ce-eb0f-4d6a-94ac-627d7a7fa7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716d10d8-8860-4b44-a308-5bc069bcefbc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2d109d-7533-492c-a697-c91507f65ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b662ea-0975-48f0-acee-4699e9dc271c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964c67b7-1a31-4399-9a41-b699c41d54d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d28e90-f801-4665-8b85-96b386e0e455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550d0c75-b96b-4d3b-8117-4c0a4e109a20",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833838c0-10b5-4df7-b8f5-455e0bf52f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afb8255-e251-437a-b997-b9cff71a37d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c62c73-b8c2-4624-a3bd-5ecf8385909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8826f9f0-82dc-48b0-a251-1066f5086c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a29191e-64b0-4c30-8ebd-4606322a2628",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87f2dc9-0f87-4bb8-b7d3-d2a4244e3b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6422ac03-5442-4856-9af5-aa04245a59a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b023a5-fe6c-42d0-ab73-d7b52c4ebacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74fcbedd-b710-4170-870c-6283bed9bd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de183e65-464b-4579-86b8-b35e233fbc46",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61697d3-0256-4071-900f-71d5fec16fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feec6cae-b85c-4139-b8a4-58c4db0a9900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3965dc8a-c0c0-4261-98e0-5a2895e31efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5532cdb7-3471-437e-8afa-262748ecc910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6248f0e8-7cc3-4e6b-b067-0c34280a100a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d17db1a-af7b-495e-b859-b626b33a5bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b035004d-ce65-420b-8421-3a90726733df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deed34b2-165d-43f9-9af4-65aa14532260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b8df26-63c4-460a-82fd-8a576e73f22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e5c1d2-40db-4743-8d14-0436795d0e11",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6613b95-8d4f-4b64-a79e-2509f964fbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8435b0dc-b5ce-42e0-986f-19945a3bc36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d264cf-8e31-411b-9d1e-c0ab16ff8f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28eb65bb-268f-4d6f-835c-958c073e284c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8336ba-600d-4523-a2c0-012f319b0f40",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94c9b39-e653-4124-9abd-b4151f017310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc02c74-ae3e-4fa6-9263-3d7bf1500ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b6d470-b9f2-4617-b30a-95a14caeca9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ded87cf8-3ed7-420c-8eec-98a7df43cbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33d171b-2e90-4845-b584-d79c9de8183f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25289ff-0dc7-4ea6-a416-afbb20ecae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a23a6a-0055-47c2-9fe0-fde211c4da21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50157b4f-b2d2-4cba-8823-cccd756472ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d645084-2608-4486-a0a8-435e003fcc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad9a0fa-cbb1-4a1f-8d79-336797e3a1a7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be92b1b8-f927-4784-9c00-0d628ef5fb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b17f6d0e-ba5c-4d1e-8d9f-97088ed7ef4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3f28f3-ffb4-4259-9af2-c956bfca4941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "363d8c28-504f-4839-a9a8-85a481e25e19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ec240cd-07cd-4ca2-b922-2082b6e070f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4045fa19-594e-4139-89f2-fd0a89e137f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9007273a-360d-419a-b4f3-9d7050f6bb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "505fc25c-911a-4f68-9b8b-55763e30a27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d11bcaa-aec4-4ab9-a32d-079e0146a149",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0423d375-ad59-48ac-9c96-578b4b27292f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ad4b8f1-562f-48d3-b5f7-7fb5fcc2079d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fd44b35-18f6-42a3-bf47-f30dcd420eab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "777be565-0387-4c95-bd0a-13b3881cc554",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ab3cc82-7e97-4079-bc10-dc375c326a89"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95706020-9244-495b-8472-089b2d6f76fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af209c88-a700-45ae-ac4c-7c908c263e27"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8594f3c2-5fc9-4410-b104-e6c5c76d9ef8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e63d7ec6-16a0-452a-a669-7ac505292e53"
                }
              }
            ]
          },
          {
            "id": "5193c9a2-361a-4a4b-a3de-3597fbf16191",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86509aac-9b11-4704-82e4-d5cee4d4c80c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92af60b9-8c97-4171-b154-5cebe5c75d77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2ea3fae-328d-4d9c-87e1-a5bea33c0fa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46f127a7-9f3c-4331-a805-02c246f9d997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12d2ab67-0c79-42ee-9ca5-d89671125d64"
                    }
                  }
                ]
              },
              {
                "id": "af541d70-c013-430a-8b99-2ad28edf81a1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bb6c304-5560-4cce-a693-ba27b8a64b04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd4760f8-724a-4688-a419-b5f827f39f14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55937ce5-1ca4-4e87-86f1-8a2d00a43de9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fa09365-1dd5-4bb8-a775-32084758c786"
                    }
                  }
                ]
              },
              {
                "id": "7a9ba13d-324c-4fa9-b7d3-1f84eeb49d23",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e20711c-485d-443e-832e-061d51a64bf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8c5f9a1-735d-4807-a75e-0d2857766127"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be8b2f1b-f1ac-48f3-bf41-62261c964699",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1fe1ef5b-09e0-48d0-bcae-0d85272ae345"
                    }
                  }
                ]
              },
              {
                "id": "ca85a119-117e-4117-94de-73e2aa8ffd0d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14ea336d-f2fb-4736-8d07-4092589143be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40e5554a-d4c3-4156-89d8-3f29f4f0a879"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39efcb76-9e84-4e3d-acb1-0f33f563baab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e388b548-a765-4900-809d-ec60a90edb95"
                    }
                  }
                ]
              },
              {
                "id": "f39d4b01-a75c-4bce-8d01-b035473e5ed9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3cf00f4-362c-4b83-9466-71a276ba5a7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15e953a1-9f4f-4cf2-b39a-ddee98f59cc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "435b3864-5ec2-4b7f-8a15-8ea9274a1a52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "af3a589e-61ea-4182-ad0c-0f57fb2b9a3e"
                    }
                  }
                ]
              },
              {
                "id": "013444d8-b645-4b7f-83f8-8b9c6b4d8c07",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51ee09c1-6fe9-4a91-b7db-4d506be4c6d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cec42bc-9933-415c-a1ae-480b9bd76189"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72de7414-b9f2-435e-9db7-492a5e15a32f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec490b59-722e-4c0a-81a1-24c447b3f2ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c45a3d1d-edeb-4d2b-aab8-eb970c096feb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da2ad709-cd4a-42ed-9cf2-e894f8776d35"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3809ded9-dc8d-47a8-89e9-bf5ef6c1eb19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21e606c1-6322-4546-b3b8-2f6c5c665d51"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1194726d-f759-4f6f-be12-17a6c6983c85",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "99d5b7f4-8452-432b-a9b2-5fd547a800de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca9d878d-e0ca-4cd8-85cb-83bcba5d0805",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27f425f4-548f-4197-ae95-985665f20e57"
            }
          }
        ]
      },
      {
        "id": "e3683622-7d7d-405a-ad5f-04e7b2c0f60c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "83178856-7744-49be-b313-0095d6187f0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7ada2d3-c9df-4d9e-ada8-8e8e5b78155f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73a6d4e6-4767-422d-b18c-facbf5fd28ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbf4250-d338-422c-8f27-e521e936397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffc04dd-62b3-4d86-964f-f0fb53dcc275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26d1ea7-a7e7-42ac-8a01-8a5b14983b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0fe5cc-fa62-4c10-9f23-429feed8ee63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26da987e-bc10-4ca7-bbea-4ab365bede14",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1dfd4b-a312-413e-91d6-f2eb3419b44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28acc337-6415-4542-a57c-00178fa0d9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729eb696-8f8c-4a48-9c4a-78d0bbbfd67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "361fd5fb-8d6b-4e56-81e8-9605d0d7e1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291c7a8b-19a6-4237-8c22-0c34456aa386",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dbb31e-81ea-493c-a78d-b3900be17d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5394997a-2daa-43cb-9eb8-4c8c4df55df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57346e26-372a-4828-9957-1e130eea8aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd755d86-8696-461c-a760-257ea5ecf0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fe7034-79f7-4611-979d-ddb1afb8b4a2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60d9392-4ac6-4758-8218-13a0147b21fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ba9e32-b32e-4916-a223-bd3a82a46be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc657627-6943-4859-a93f-496efd3c850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f450ee8-14ab-4942-8f4b-1b67a4929cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ffa432-a218-4aa9-8e8d-1fd066d49afd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0428cb17-43d8-4063-a6da-54fad12630ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ced74c3-008b-48eb-8bb5-ddfd5cb747e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ade27c2-a029-4c3a-9010-7ff1a4038f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "935365c9-20d9-4b2f-86cc-379e46a35429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4dc9a2-04b8-437d-8122-0e6764233ab1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f413d2f-6bce-49e0-925f-53b0c5b4f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8687c89-e76c-43f4-a2db-ac4f5a8c5a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046abd2a-2f0c-4811-b598-a6c014165b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8124cb-54ad-4eec-b5a4-bbf507ab1ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26046d2-e27d-4779-be8e-699e9177c467",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0c5563-67ea-4110-83e4-3c11e9bd6a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca66703-a503-4a25-bb98-3e6d5df8449e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11505be7-eb21-4c56-8db0-c5baef8a5579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8607ee8-4ca8-4c36-ad56-36af043e6360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd48bd7-44a2-45cf-bb29-07e7bac1888a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7a7b39-8a7e-4bff-8d54-7b9b9b9426c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d52ae96-e12a-413e-9f44-9602d53b52fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985e2a11-abcd-4011-9b44-bb1083557534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7757b29c-3b19-4650-af4a-48953dc19ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70e4b04-5975-468c-b110-745850a12c9c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a991553-4c6a-4806-a660-b12e3db36775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f314c28b-d2f1-429b-8134-8b7f8c17dbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dec181-ead9-4b0d-ab66-41b9ba5622ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e66abfd-db30-459c-a08f-ab0f43446741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d975ef90-2f2d-45da-a267-b0ab5d2b497d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9800de8-a79b-41c8-beeb-e3dd82228679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a239f2-4be5-41f7-af33-3798473ea7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d023cf-90fc-42c2-9eb5-86491c8996c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b9b42a-1ac9-4cde-b213-c952d31a97ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c147df0-8e5f-44b5-a2ec-7ba509c01090",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bf33a5-db4e-437e-a3d8-8fa7282d8f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6c1902-c411-40d8-a2ca-54592bd5244b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8bf940-9f4c-4f8d-9fcf-36422b1423b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c1defb85-ad0d-473d-acf8-b50e24cee24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164276fc-0ee7-48b8-a6ad-647f87d5dcd9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddaf4b4-6fb4-4447-bb5d-a4ff8a674448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2536476-c0c5-4c01-8576-fbef89617096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f207be1e-b5a2-4672-8b78-11b1b4f36871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2db38a2b-6c3b-4ac3-97e8-4755a74dfbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e24146-85d8-44dd-9ae6-b79a37866ef0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cf67fd-cf6a-472a-a935-4e69a51e004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e585b4a-ce5f-42be-86ea-e1ad73d16087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c8fd3c-8001-4549-b155-f885e98300f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a41860c-2791-4703-8fe1-bcebf0071b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43613ad0-98e4-4679-b997-69973f67393e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70511db2-7390-4fc4-9644-74a02dc56922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e699773c-4569-4465-9624-b11d97070cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b47a8f-44ae-4da3-aa44-5e1b8f3d0bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f6a50a-5bd5-4fea-a514-1aaf33c04263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47588097-3bb6-44fd-919f-8fde19747871",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1871ac1-f556-4b9a-a5c5-e7df4eda0936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8aacd2-d548-4cc7-a98f-4eaff4bb26ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e780dd-9eb1-4245-b94a-2438d6bae856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dc2d61-9a0c-4fbd-9756-2f2bd55d9ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55352c97-9556-4e7d-84d6-a39e47c7c21e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973d22d3-7e17-41c3-8b29-4cd35cad3a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4062d9-de50-43e2-bb42-cae8cc476567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc2b572-2fae-4cca-a930-103089af29bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cca35c0f-8444-4d4a-86de-ca11ba8d6163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69396d2-3184-44e9-affd-459f19ef91ac",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cff2645-e2b4-487d-89f5-dfb9e60b0bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34ab06e-2ddd-454c-95a7-99579559e649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d837a4-796a-4e1b-8b91-1cdedb6b0dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3c674e-ebbc-49dc-bcb1-cddb023a4bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0414d56e-bb51-457a-9b1c-4d05e1bdb890",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f3d9f3-61d5-4a21-8462-f5e093521d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6deb83a1-c1dd-42ff-96b0-0676b3e27d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c99ac3-3547-46b9-9b74-2f5f747b8121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e81b4c8-2abb-4336-b3ce-cc07728fa8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872c1330-279a-438b-a542-84ced6479026",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec7bf23-1b12-4494-ac25-9236f51cbfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a385873c-2be4-49e7-99ce-39b11265dab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ef01d8-bd1e-49fd-8d58-f81d6c3208bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "015841ff-0a3a-4305-94ae-70a07655ed8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c503e9-da19-4e5b-8208-b9e2647ed718",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca71483-d8d0-424f-b1e0-45854d87701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d072d146-1eb5-46a2-824f-8b08670afdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b30e258-43a0-40a7-bcf1-a052b86d0d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb1942e-6e43-483c-a3f7-4c77d3bd4ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84b7611-8b71-4729-9906-4df617a9710a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7a7097-2790-4e5b-83ec-e5dadd730464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35969492-477e-4067-8e2d-3203bbbebe9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf2baf1-8751-457e-8140-e8ec1c599d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b532746-33b8-4127-837d-e4fe14c5a8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ad8b54-cc72-4c43-9cbd-e365fc21f59e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d6d3e8-3fd1-4f98-b348-370677758207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f95314-c41f-4653-a824-73a595389dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620bda67-073e-408e-a2db-4d6a1be4bf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9fc097-2ae7-4cb2-87a7-bb4a3df0a9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c01f0db-f7ef-489e-af52-aad0db096baf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce0a635-62d6-4809-9d29-72ce0311021f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4580445-18e6-407e-b783-0b8e0a248b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37488a6d-26f0-4ba1-be5d-8150d93d83d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3ea700-d089-426c-8ecc-2697f308d16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31be47c7-7bb6-43a9-9de2-0fbf291339b3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d16ba1-ed01-430e-b933-ecf4bcd5f745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110c1663-27c2-4db9-a216-aeb413000485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79af58e8-0e63-4cf2-8479-f26af8ab025e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c27188e1-c1c7-4ad2-82f3-aaa2a9fd2d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f447b833-6c54-4eeb-a327-17e1dfc0164b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f47ec4-861e-440d-a05c-e001a0fb8f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3f4e41-1752-4a24-9375-8cca67734d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5912b9-65b9-4fae-8cc0-b50e738f67a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f812180a-e102-4523-8bdb-2c722af7c195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43834ef-1954-4655-b332-880e7a22bf9d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e107a4b0-a4f1-4ee4-8d70-53b1ba1aab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd44c34f-b1db-4afd-bada-b5f1975ee920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98b32f5-c7e5-4454-a9e9-0b98237e3a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "315a15c2-a294-471f-98b0-388b87552784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beeb5a6-ec5a-4587-803d-bd182e429ad7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c2f3c-3f4d-472e-a854-e609f9f99307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ac8f28-b398-4837-b3e1-c331e7c5a1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba3b9bc-102d-43d1-a77c-9a28dcfe53ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a609e3aa-d073-4908-94f4-1ef49315453a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfd5dfa-708e-4354-b1a5-8aa8274173f4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d1bb71-9ff3-42b8-9d98-90fb2662ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4eacac2-e2b4-4b69-8104-df8c4ae94eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc78bf7-9293-4845-8831-669dc196e2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5018d95-879e-4de2-a01f-3d393fada9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e094f102-7dbc-444e-96ea-80284f3bcaf7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2147c53d-555c-4d17-93bf-d2253412e328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8d61fa-525d-4e7a-8e90-669778430c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d86089-afa7-4777-8a8f-28fbe5b5bf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2373a282-4d00-4cf8-9888-e0af83adf926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df285971-5e8b-4c6c-82e0-03475db243fb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d24a2b3-be29-40e3-b3fa-561ea7f7d7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d923325-9aab-482a-86e9-b36246d68644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9282855-5bd7-44de-8663-5c65c180af43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3e502e-0cf8-4a14-84b4-06e5c34a4856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa20ef8b-ca3f-4181-8c87-76b6dd27f546",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a351b4f-8275-4020-a37a-c0ae5dd500a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a69874-31f3-4e2e-843b-42bd97a6bfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685c906d-7ad8-4ff6-8158-1d092bb80b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f63338a-e188-4890-9907-d7b13a0e8da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1f4794-438c-4ac7-98c5-c16d48f75185",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de500204-ed57-44b5-b6d5-70d7603ddf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80750b02-ab7f-4b81-9965-de0a476110ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2f6f70-8f91-4681-b31e-b7859c13f282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d13d3de-e5eb-4fa5-8ecb-36abbcd73575"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a5bdf8f-9a36-476b-b556-59c16b437195",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06b13160-a000-41a3-beb1-50d345d1b4ca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b0d2d7-c021-47c9-9a67-731f4e150621",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b5afc19c-c67c-497f-99d1-ab89d165d007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1994d72-6b9c-4da0-8a3c-1283ac5a899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1653fbe-9040-425a-8bc3-8d54d6a1efea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "949fcfd4-b709-4483-b8c6-831ab146e1a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fff3e4d1-2d96-4a13-8dec-c2cad1acf1ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c3de4f5-97dc-4354-bf8f-8c8926a897c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a39035c-3af5-4fdf-bd26-297cbe00b13b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6befc446-a9b1-4b96-bf66-20e9b7d62ee3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb983bce-7f24-4e9e-a5f7-89a4704ab256"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c00ad2d-49cb-4258-a873-cbb2f26d2b79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b5aff36-e754-4369-86ac-b0e82d96cf0b"
            }
          }
        ]
      },
      {
        "id": "f774133e-fad2-4aec-aec6-f11d27a6a555",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a50e1ec2-568d-4f92-9491-f41dbc98e50a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a02caeb-705a-4f08-9126-32700522c2dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8764cae3-d88c-4309-8ec7-96be07722a5e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf20c546-f0aa-4bdb-875f-99a5c909ee37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5753dc-3663-4a4a-8480-b7e82ed4e454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceab9e20-3606-464b-95fb-efab85beac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7c5bce-1340-4ad2-ab72-aa267b6d4865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533cc33f-6a14-4699-b5c4-e09f783c256e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50dc48a-ad68-4b12-9385-f19441a1a819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6e0590-0334-4c34-acbe-600841885f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa0014-36dd-4275-ac6f-f51f4bfa2eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba3879b-c30e-4058-9201-64de46df5586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93c2f2b-6854-4cae-986a-992d6e13413d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e48701-1e58-4011-87a8-aa15b62888ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35446dbf-cd73-47d8-8032-a766c1de97bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d7a41a-ff3a-4acc-a774-b59121980541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "619adf2f-bf85-4654-b5a6-45ffcbdd01d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8450c18-29fb-480b-91e3-4f3581ba1a14",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1f861b-5a88-4d2c-84f1-7e13472b9abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9df97d3-d169-4da8-bf00-5ca772d24c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d21c6f-6de7-4df0-81e0-42e62c960835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ef18a3-2b37-4816-b350-b9fd86af2ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c13a813-9a14-4be4-adfd-fbb949c16570",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca27807c-2b80-492f-ad69-1dd58ea1d499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c457ea87-c230-4f07-8f1b-a4bcbf893332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1fac57-503d-4d0d-a444-a7ebef7039dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14170184-9c75-4270-9983-19d5c4708579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40123264-92d8-452a-afe3-fa5aa5d19c37",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d763ea-fe6f-4dfe-bfdf-0e2bedef0837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89858e1-d4e1-4e4a-911c-16684b6f81f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1defc9ff-efb2-4bb5-96b5-35f82fc5ae27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8cc1e8-8e32-4fd0-bca3-6141d97a91da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ba8a80-6b48-41b0-9d20-b7807aabec35",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ea1b56-630b-4480-804b-66b9e5973747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856b94ac-2820-48b0-9f59-450fed6d66f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74ae9aa-a59c-4cbd-b11d-7fe3a887c624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ed6fd8-7551-4b3d-9708-781a5b50def6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e46eef-90f7-46b2-a769-61a7af3897ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ec9905-ddf2-452d-9d04-f09affd481dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc31ffa-fae4-4f03-bdd7-8865cbac25c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee72ae0-ffeb-46d7-b659-6d219812fd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c548533-e161-406d-ae72-5084eeec87ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a893c1f-f203-49b2-a671-6bbca5d2a9a3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674694ae-fbf9-46f2-8d21-9d7b5d766dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13afbf07-5e4e-4b06-85ad-094bff8476f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c77449f-1805-4325-ab10-f41a48897e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3051b46b-0738-4c6b-b77c-17788bb928a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9867d791-1d5f-42d3-97f5-c5ed22218b20",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6570d622-98f2-4ab8-8b69-36f4ffad29b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463b2294-71b6-4985-a11d-b9245b9f0c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b47cb7-56d7-452b-9c34-fdde539a27b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd12dee-7700-4114-aed0-814e0cfbf850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9257b052-9f4a-4f9c-ac6c-0b853126b773",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295389dc-8b0a-4162-8326-617df0e48989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db83254c-ee43-4b02-a91d-b284aec942c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21671415-778e-4b75-be99-e9636ae42e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c901f1dc-2a55-46f8-8669-d0a2afd3f19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541770a2-0b78-44cd-bc51-d7bf9d97a2ea",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954f7bb6-7748-4750-a94c-c6784a7a44fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e266655-1faf-49b5-adc2-fcbcacb3b0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e18630-b570-44e6-aae5-4eab7f2bc240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50a8c8e9-760f-4e0d-a2b7-6b98174afcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb0b8b8-98dd-421d-acae-e057bee3b6e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19727f1-674e-42f3-98b3-bd61344a2554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29d406b-6efb-4e0b-90e2-507882466883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae33e28-6409-4f1c-b06e-14b10ebc04ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3743cb65-e04b-49b7-a3f7-a575e1c47deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c8dd79-7978-495c-9780-0d4205814ec4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b3a55f-a4b7-4ec0-90fd-a8395d1b46d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083d9510-624b-413e-87e6-b8bcb85b9f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03acfe9-c1e0-420b-a9e5-80b25b28dbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f56829-b2d7-4db0-880a-30d8682d4a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21eb7b08-ec10-461e-9d52-f9c843891a62",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d3ceba-d4f1-4082-835f-e0e2c427f63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baca586-ad74-4eec-b224-6efdab726119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3c51c2-50d4-42cf-9688-572ed18301a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b949ff08-1aca-48df-bd65-681289990054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e6b412-e166-4146-b4e0-e890319e21ce",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24931f61-951f-42f6-a905-2055f59957bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3939dd-f28c-4f99-b99b-37584b568b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5626df7f-bc26-4a2e-80ab-ec8ba9f129ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "437de543-3101-4ee9-93bc-f778fadd6b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff67403-0ea4-494a-83ae-fc6d6f98b4c7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2257825-e48c-4957-85e7-256f51e61156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f04671e-f098-42db-8b60-01d328c5aaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4553a834-d577-4caa-9386-8ebc4cb587bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c393f4-9f15-4f15-8100-df78e7eef49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242bf54b-eec6-49aa-a1fe-8b527ddafd3d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26011e7e-6cd5-40dd-87b4-72c64eb5a0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a810ca8b-b42c-4ef4-ac47-9b2579cf8900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd5afdc-4b58-4b5b-aff0-d87cda27c7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec271db-38c9-4281-b37e-c95af4cb95b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b47d69f-f222-4419-9094-6c9565266acb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e311e0-8834-4016-802e-90ad029ee55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772401dc-b9f8-4198-a85e-110c96cbb048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ad4052-4bdd-4e2b-841c-ba6d8c6d2b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c14613-7dc6-4594-9b67-1edc34321020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb54cdb5-8a95-43a1-b8ac-a3534f5895a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378eab90-f6d6-4724-97eb-d7959fe343fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdef60e-2d8e-4c60-adba-86ea462a3bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d501c69b-2844-42bc-a6f8-30af4cb4fe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dee362-b7a6-486d-af5f-8cee3ec764ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5c14fd-0014-453f-b4a9-9781436d23c9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe6ee0b-567c-4fbb-8c45-a54c9d01bf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54662502-02f8-4368-8535-8cea199b9417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4fdb4c-b3e0-4e0f-9532-1c0764e6343e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71bffcc0-57bb-4a7d-9622-d360e040b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87e977b-9ba1-4837-bc63-e1e8eff67fbb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824c7430-b56c-4f7a-81a6-aa04edd10fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4d4930-8498-4405-8c65-3787dbe08689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcd0542-83e1-4679-8e58-fa382bc9d8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db2dd4d-329e-4231-8ec7-ca8fc8365bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0280cc59-f725-4d36-959e-6faddd2e0303",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7431c7-7aba-496e-ba88-9f72effb7090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a8c48f-72e9-4798-87f6-d6f1286f9af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9abcf7-f0e4-4a17-bea8-03bac9c40bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb16960-5bc3-480c-9f8b-14dd48a7a915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cfcdf5-75d7-4fd2-88d0-a0c8e0146b1e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada202a6-cf0c-458a-953d-7642b5d6dabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c271cce-91b2-497d-855a-9e222fdc37c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4c2817-e2c8-4d1e-832d-0d1f6cd0039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9363249-1186-4d23-82f9-b50fdd0200ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fea4b6-3488-43bf-bfdd-b4eed168da65",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae4e076-bfb4-4e1d-9779-9313f9ca7f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a603bd4-f7ff-4ec7-b4f5-c35ef26f36d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a7d40a-be05-4d19-9276-5097d0e884c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6991c0a2-06a6-4af2-811f-8019eeb21f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354d3635-c19c-4465-b684-b2a2186cd7f4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a722cb-b4d4-4d79-91aa-62281ca781a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099a01ee-1813-48d9-ae7e-b9b9a54e999b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7b207e-7f17-4982-aa83-389f06d3fcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86a52d7-c1ef-4dc6-801f-13bc0b1bf30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bf9293-9ca7-4da4-9a6e-9e1a6225fbd4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678b7ada-d8bb-4e50-a727-c233ce20f9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3071dbe3-9aaa-414e-8535-c30ee98565ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20e5298-ce17-4bfc-90cd-003f5eea469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b584a9-3ad3-4d6d-b558-8abd50607664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd34848-b391-47a9-a22a-0192ca9da031",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bdfa73-0ce3-46b0-b95c-15e99198bd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0149b4-4734-47a8-a82e-739fbab6f2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31457d29-3c82-48a6-bf01-468a97a9a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99c18359-ab19-41da-81dd-63f8d1f2073e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808aa19d-72b8-4b55-b9e7-429750c62cd9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10035189-e381-4645-b230-db2c946bf0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22146b0e-b92d-496d-8154-7b1ccf4b9ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f99fe4-601a-46b0-b910-1f403d445526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f59088-7f0b-4527-a980-2808333a99a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4754e71-8a3a-473d-93dd-5c1a909b82cd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf2d8a1-95df-438d-930a-7a83234c99f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d993b7fa-76a0-44fb-845a-d0851b0c94c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b15609-861c-49b5-ade2-57908a0cf1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87fe806d-a797-4afa-9ad7-e9fec3bc14f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407caaba-610d-4562-ba36-2fb7ff46b9e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f668cf59-4dd3-499e-837f-2827a7ed9741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914a8309-b4ba-470b-825c-b3fe3fc1ef09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685ad55e-de98-406e-a82f-16e78aaff7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4742ba5-7f15-4be6-b02d-9aa98ca335e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e32f9e4-455b-4a43-bccd-731ab0b25dba",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc528389-c648-407a-8537-1bb8b212cd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c4aa74-a559-47e0-8d85-99b1e7405484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c9a4f7-04bd-4a59-af57-389d0c3a23f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e552228f-6490-4831-927b-3b6180ad5ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa906a1-9c71-4232-812b-e4df5fb59c4a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4882db29-1a65-42bf-8fcb-d8e917d5a2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f01d7fb-fa2e-4450-946a-491009d03e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93a2920-6f79-4fdb-8551-a4bd60af3d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b05e816-48b1-4cf6-b95e-fac4b632c816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6299eb69-48ea-4d8c-a209-1a6799f0b562",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af781f7e-2db3-4973-abde-59a82428f028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934acc3a-bee4-4a22-abc4-90129e235206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eb2454-2d69-40eb-b564-af050b9264fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34917f32-2006-4f0b-ba9d-53eb0749ee48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c3b3b5-932a-4f87-8c83-5eb8c6901b29",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e59bb22-9fa6-4fad-bb8b-ffe3ad8bad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefd26d2-cf82-4468-b78a-13b48849b891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8aa0c9c-6efe-4ac2-b939-9556ed47ce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39196c89-f870-42a8-85f8-7ed8410d4ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd833d3-6f2c-4fb6-8bc9-fa180519a832",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34fd904-acd6-4fc5-905f-e9d9cd4d0eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81684be4-abdf-4c2c-a19f-3bac47874b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee28c0c-4dd0-4b1f-b56e-bd01501f1b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a4f308-65b5-4f88-9dfc-94c2d4b0805c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7b4dc0-8274-4337-8d96-939f367c39b5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb92be6-a2f8-4cc3-9a59-d8be8b4744ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21f5f76-985f-4ce6-b3f9-6885a4cf5e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2c4df6-a700-4aa8-adc2-a0fd3dba1143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bc6b86-1c2d-415d-8cba-ee9d8d13591a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98f4b4fa-5a05-4278-aad9-552ff6293ebb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b290a06-d2c3-46bd-9ee9-4a536dd31ef8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0d4194-1ed2-4b1d-a51a-0e8d09b4d9fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "34025c5c-5623-40f2-b506-15dce6b00a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e115d05c-09be-451a-b778-ba0d95f8cef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9019ad02-008d-42c1-a7f2-206202712cac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ce003d8-8e69-43da-ae0f-6ad0601820bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a3859c0-c4c9-4569-aaff-53c9082af1af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51bc4460-4436-424c-a99b-cd41d4fca0f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee6a79a-46e9-45db-a604-327f64aa304a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2936f36b-8297-4a2b-bd6e-77982295f1ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92528c97-ecc8-4d95-941a-87b71e3b11f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0531c1e1-f5e6-42ac-9cc7-ba3268c91a72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ac0b2bc-ec89-45af-a226-d8a537a55eba"
            }
          }
        ]
      },
      {
        "id": "bff90fc5-c199-4c6a-8908-58b4fecf67e3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5782204b-e3a3-48f2-a2f4-947ea056477a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44a44892-353a-46cb-8729-713360854e76",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "117114a3-091c-429f-9e80-b6c2c4f89051",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da70950-c5be-4595-b2e4-9bcfc795a6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254ab351-23d6-4a7c-a19d-c703ff5e2477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8737c4b-1e12-402a-a494-904626a75af1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21402b10-c254-44be-9862-176620e4cad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e23378-775e-45e1-b0ac-936766dcca04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839529a6-1032-463c-b381-1624c2eda838",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58349757-0334-4b15-bb0d-a227c96042cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8e261a-07fa-47c0-b7d4-6b51110ae402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd098a0c-9f9f-456f-ac8d-482978b643e6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263bf9c0-279f-4059-a45c-1696c3e35094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ab5a29-07ea-417e-bcf8-fe371bdd119f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675a92eb-2f55-4e8e-8694-4dd446f9351b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86924365-8d57-42c3-91d2-9cfb4b49cc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4ea731-d988-4fab-bb3d-5e56f63ff828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ff4f3e-2d67-44a1-922b-9abec3aecffc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca8c5e3-9fc3-4909-8156-9f72e0744457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fe48a2-a49c-4233-b1cc-05489b77f60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce83854a-4238-421f-ba82-1ef4fb165dfe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c9fd3f-cf5a-4eac-8079-87a5119aa736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c074bba-2f47-48cb-920b-125d24f34355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1db62af-2dc5-4eaf-94ce-b9e003be6667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67cb8cd-5af0-42dd-85c1-ddf78fa95039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83e66f9-45ea-4623-80f2-94ceaaf04f52",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c347f4-4715-4afe-aef3-815aa49fecc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f88dc6e-9ddc-486d-9bfa-dbdfcedd9f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fed77cd-0a8c-4aa0-b249-8714a7c41c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9678338-5833-45ee-83cf-2cfc2441ad8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d876111-8471-42bb-9cf8-4902cd2f977a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91de5f9-af81-4707-b357-a1b3f1f7ed63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2badc4-7ac0-4aed-b772-1c3a48c0e113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac27826-1b03-4743-b817-2ecfce3939fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8aac763-cbda-4d14-847b-3670832f5fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b8956c-1b1d-4028-b4a0-11e35f59fa7a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628c2056-3d39-45b4-bf3c-2fc95e1eae38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e5fb82-b221-4233-970c-e0c87f6f09dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78cd09b-cc0a-4359-a905-9efe623666aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae54636-7b89-4634-80bc-469d420b21b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebce128-6f0f-4dd4-a547-4aa5f0cf4060",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd10d480-4e90-46fe-b56a-2dd99b359f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e63038d-337d-4b9b-b3c9-3c7d08ff29a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e79ef1-b7d5-47e3-98bc-e47e90706f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6037449d-a51b-4d72-b3a1-8b814a719d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719ffdb2-0832-4a4e-9216-210d657e371b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5274ebbc-4b15-4f3d-bd4d-48cc5890335d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c83b223-3973-4ae8-8c07-a2e297795ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb25571-2e12-41cc-93d6-14246b68bc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14080472-f197-4a01-856f-6ab37a5a8b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27a7560-5821-4050-93dd-ac7c00cd57df",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc8533b-4b17-4cbe-9895-2d9e74e540ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b73a1c5-d7e0-4187-b7c5-c74e977492e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e78d356-29f4-42fd-90f8-106a6a8e3614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d5b230-63d2-4541-b416-b0d2b5d22c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6984639-13e8-4d5e-a9c9-e8d2f1157f42",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8267aa04-320d-49cb-8a7a-3028b41fb57f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74cb6884-4e14-4998-907a-fa18918488f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1b17c7-3e96-4e0c-b947-670a1b3c5bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b2d46d-164d-49fa-8719-ce09431b055e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266ace7f-3bc6-4fab-a4f2-2a52dfc43324",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6712346a-285b-49c7-8309-54fe87550437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58ce73b1-3eee-4001-9995-ae5d6fccc67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d4bb25-37e2-48ab-bb10-58cabb98c15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49167ac-7df0-4683-9614-d059c85c9fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb97285-3e89-4cd5-ae6e-f2ca1abf6394",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94593844-6c37-42d8-8a3d-daf0aaaf3003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f42f33-76d1-4839-bbac-5a7897bb5f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff115448-fca7-4f2d-8b9e-3324610d01b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a19e7ff-b10c-44dd-af7e-3d88ba5e7dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef56f03-5b39-40fb-a42c-335e9cc360c7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21951152-60bb-452b-a579-46fc31b0f826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c68049-476a-4177-82f6-d48e955b15cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d2ee3d-9da1-44b4-8721-f70be0e6a0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f390ccb-4d13-46c9-b5ce-4e7217ce506a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370f3336-37cb-4f9d-92e6-d51f8b454bd5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9787b2d-dbbd-455c-b07c-c5bf2efd1c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574fe0d4-2d2f-4cc0-9dc9-6308dc69fd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140268ad-78d1-4516-afb7-774b09f58dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a07013-f3d3-4210-b861-f9810e5af663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae2189e-7118-4a4c-99e4-40b8c16a21af",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff4a6f7-17be-4047-b3b6-8acc84c7ee44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c30b15f-a154-4874-871a-bedc039b0a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a8ed93-d999-4704-8301-708d21831150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5d0c56-0cca-45ec-969a-de8ac8e5f815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32f6e17-0f08-4023-be25-52c616b842d7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ad9ff4-af24-4247-bb23-c44590ba83af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812c6b66-35b9-4ca0-8f69-93c7f481f520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458e1b02-7787-4f23-a880-42816fd8f918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f28b01-a444-4043-b292-fc4021b58db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a1bae7-5c40-4bda-af99-86bc744ce4d6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4024002-0fe6-4092-8adc-f9814b89ad86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f59702-1893-450a-ac2b-aea3a2baff1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7a7b42-6d85-473e-85ca-50a4a6d2f802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef8990c-c93f-4d84-929a-3611241a05ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cb0ab7-978c-4e85-9bc5-4ed8afdeb2ef",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c70b2bc-17d3-4d3e-860b-e03b040b23a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afca145-9fd7-42fa-b6c9-66d1b750f686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272dd5e8-7b5d-4883-a829-ff4e01e8beaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd44cb1-4892-4540-ae02-4e79770c1b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b8b767-f1de-47fc-bd7b-81d71e33311f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ae0588-4d65-4934-9160-15f11af40fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7ce61e-d973-4ac5-afd7-66ad1d00c30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3207f1f-433e-4289-a9b3-1329b58cb02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a254f0-8a37-4542-864d-61cc31620926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb368e6-b96e-431a-93e7-8e464f1bb4bc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be2d802-9b75-488e-a280-d53570b5dca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fedccbfa-fc90-4724-a4b1-3bda37cf35d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e32991-d0e6-4ff2-b3d3-314d18f947de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b9e537-fdec-4669-9dae-a8f43522edd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3194435c-59f3-4c14-b6e1-7e3dfa02b7aa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46ab21f-7b7c-415a-b221-1128a2e06453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a0a840-c1e1-44d7-b32d-88e736945780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d86251-62a1-4520-8403-13f7cbce40d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e40b05e-ad15-45da-a11d-a0a973a7950e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429c4224-1891-4de3-aeb5-44a90df42a00",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e70e693-5a97-4bd1-a535-678d22533463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845c8f85-ee7d-4d9a-825c-7405f95fd98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc35b38-4954-4174-aca4-07ff392a3c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e17e987-6077-4770-88c0-7277e6d4046f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49603c70-f4fc-4dbd-aad8-85b3a861ff33",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f95afc-8ca8-499e-8811-a9e5438394a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c463680-0ba7-49df-9ca4-8d3c70329f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c357e72-d606-406d-9508-7ec3b92a4dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49edbd4c-a1f1-485d-896d-23b9c81a6f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c579809d-dbc1-4b91-9738-afb25c19e4c3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b58346-9751-4de5-aadb-6317c2136e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09447b6-dd19-469b-81c3-85c0c7525f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8048afc8-7428-4fe4-b426-0e53fce8588c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718e3c5f-72e4-4996-9c8e-8e756f558ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9cfe73-d319-41ff-a65d-962cc2de633c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d48ebd-c2a4-4729-908a-2830569e90bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aabccc9-e090-4d1b-b30c-6de23160960e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d8571f-6ed5-4f9c-9c5b-08fd48340842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b841682-5215-4ad4-bb73-4f6f93727cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5e9376-7f6a-47b2-a6bd-000d8f34ad96",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5db88c-3c83-47a8-997e-3523bf36ca99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be11a60b-a45b-4d0f-a8aa-cba76872b7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d4d895-1429-43d8-ac54-9c86a4bc572a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5e161b-2655-4a1a-8990-abd5b34f22c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a14548-e873-46f9-aade-d71549282168",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2b6ba8-8662-4516-b069-1dae3708fc9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df58a5d-cc37-4a0a-8ab0-5dca7858d417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f320f7-83d4-4a51-9ab7-45295f904d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b05d9f-1625-415e-a237-655d959a997d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd51c739-6288-4a58-85f5-8b4356242d5e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed912dbd-65a0-4b0a-8d7c-062ca31653ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1950975-646e-47f2-b1d8-ea0facc9afbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c82c73c-4b35-4e73-9e29-bd79ff4fcb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2a6d7b-6376-48ae-b4a1-cf503faca33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd1d888-a0b8-4166-a437-58f030ac4a68",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed86999d-3f7c-4648-990d-7ea973c77d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a37fe5-f26c-481d-8dbf-55684ec1d9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4fa8b3-7311-4797-9303-5b2800aab740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7b8221-0b9a-43c7-91b9-6ab86063786c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c189a1-e2bb-45f0-a50e-4425119d4285",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802693ca-f707-4047-8f35-963f8d4f8d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ee7e5e-376d-4301-a315-14c50a3a2b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e417a4-1d65-4549-9107-a9d5796c0adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6257aa8e-b565-4b0a-a318-38e100f0bee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb9f7a1-8a0f-4294-824b-e8357455c729",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9988e00e-8d01-498c-b391-7a0eca104fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726496f3-5ba0-41d1-88d2-fe88c1b1b12b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec108b0-de7b-4e98-be8c-8f8d4d254d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d002ba3f-ea63-4b72-b7d1-389d61a92938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29edc6f8-7fab-4eae-a133-3178d90055f7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adbb7d3-5e12-4510-8095-70c1fb0a447e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c46bbc-ec7b-49bd-b34f-f04bbad57adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87872b49-cc35-45ae-867e-390d9a5b8953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d94192-1248-4172-a9bd-44512c49ae72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c5d38f-386a-4e3c-b980-3e756f0e39f8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a08df1f-6b22-4d45-bd3d-2c9dbb70c656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad627d5-256c-4d3d-8295-6aa0e508402a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b5e3b7-65d9-4044-9baa-c917720f9b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fedc69a-beb3-4a64-8837-5a3f285e8e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e70a1bd-cb85-42e9-97a6-bde3290f4cce",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4b6102-fac3-4249-828b-f12b76b53c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2c8659-1a37-48e6-9a37-276004856f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2ea866-9516-4d88-be37-04cf94009ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0cd9f4-8d71-42c9-9c02-b8f3962d2643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1609c003-64c2-4ec3-98d1-39e2e180ee55",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb344059-a07b-4280-b68a-7bb2a76cc54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0f09fa-4678-44a3-92c7-8b2b03112e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f843184-2547-4151-ac9a-a8cc04c36b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d9a9c0-0452-45ab-a82c-87fdf087d2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ab400b-8ed7-42a0-bdb9-25254172784f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dff056-7a83-4c0c-8df1-31a725550f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75963be3-6283-4f0d-bfbb-4b5f4eaf7b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc120ac9-25fd-4187-9f97-4a63ff95b41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c80559-9274-41c7-a6f9-77179b9ae171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e76e39-ea79-475a-8566-08bd06565266",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04884e4-e18f-4c96-b043-d41a8fc8ba37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a5167b-d48a-431e-bc0f-c206fa9cbd99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d8a683-734c-4f54-b66b-06cdba06f966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a86571-cb45-4ed8-b439-40b649fc1224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac04788-97fc-4a72-9dc5-b6978b8e1da5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2160f8-ddc1-4f3e-b538-6caed4905380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac4853e7-4e52-45d4-82a7-ea2712a994aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a79ce5-d186-49b2-8f90-eeb86f2b2d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5b90a1-39a4-4ab6-bcd7-dc859a48fe65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373b01c0-b9a8-4250-bcd8-7d1a8f377d49",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87272cf1-43cf-4307-a83e-9d12cbf54010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea4d752-024c-4a8d-a908-d0edc547fa71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf12e128-13a0-4a73-8397-36d8b5b0d330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f79789-4ab5-4162-b751-e33db8008137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98e26e0-23d9-40c9-a44f-cdc1e52c9df8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8effd5a3-32da-457a-9882-99c3a313433b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a35874c-f477-4280-8da4-ee5ceb0cb6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faeffb2-1db0-491d-9084-ee8bed4421dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6801d5fe-507e-4e92-9a75-e030f04119c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7305194-0674-4d1c-ba1a-01904268756c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc1e328-65d0-4a04-8891-936984589481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559a019f-fb10-41d1-a5a5-4d50a3c471da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871b8e6e-f5e4-45a9-af91-d8b9f44e740d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6632b3-12fe-4043-9ef0-22eb0b788d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c9565a-7c33-4f7b-a7d0-c08e242eaf95",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e65215-2082-4c5b-9492-bd5577bd5b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e92682-a3d8-45ac-adfb-703895e5af3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66947281-9695-4d4c-b28e-b8894750771f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87623388-97f4-4c0e-84d8-cff6e6ba62ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaeb1482-4e46-4e53-8bc1-39d17b3721f9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c168a119-7822-48f3-bf22-1f4b4c88e244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a396e9-b2ea-4f17-9c24-ee5d15d67328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "258c9536-4554-496d-84dd-70c4b2d5b0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636af544-53f4-4917-ba3d-24b0d45bd91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6eee7fa-da56-48e3-9890-0fe92c1074e5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd89514-490a-41eb-bbd8-93860b3cd1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f95a627-4913-4ddf-b207-d41c93ff94f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353cb615-a241-4bb0-a081-05881e99e97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893aeafc-8304-4c30-8601-3b4e04099eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c5f6c9-d0d7-4bf1-8977-c4de8d3de753",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a97561-e97a-4159-a2ae-37f55481812c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec75b2d-0dc1-4692-8079-dce482fc4cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaadca8-04a1-4f64-9315-7dcefa7d519f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9367a16f-4c73-4e10-86c5-d26266aa8340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fba563-3e91-456e-af3c-dd8d55ca491b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3a0a99-e3a0-4503-a7b1-affd889e63c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcd1109-c00d-40e6-bf56-79ef4b0c018b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea4cfa3-ae6c-4ffc-96f0-59f0b4f6b8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb8ceed-2e51-4d33-b2d6-9a1686b5c6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee81088b-c40d-4f6b-8bdf-f6438841e14c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a213f311-07ca-489d-beeb-c43bddbfe47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9932bcea-dc75-420f-9931-16ebd60402a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb647121-173b-4da0-87cd-18b52c0e0bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9081716d-cc45-41f3-a86f-a1afb078a1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d274118-b429-4607-ab15-3a03402d4bb8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f0ef58-1b6c-457b-82d6-36c8c0feb61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40975bc3-4d53-417c-b0dc-18fd623981a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4ea93b-0542-4345-a3bf-d707c656a6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b6432f-4878-43d1-9e4b-3f309c513ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd6b11c-0db1-4530-bf2a-8b0629d3e34d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d5c0f7-6e07-41c9-a233-6568f9c4db78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bb2146-7b66-4318-b115-c73cf9f6c243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e58987-fee6-481b-9a9e-03663d3b51f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913877e9-22f3-49c3-b275-ff58b04547b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a192e38c-f593-419a-b12b-ff46270ed7c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375af54b-1f80-4b2a-a185-a1173995b37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df85a4ae-cea0-470a-ae0b-d1e7057a19b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e6a115-a938-4548-af70-46f902256c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4460c143-9a73-44c7-8783-dff943dc426a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912fc347-7fe0-4250-82df-03067c8b742a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76e973d-8774-4dcf-825a-f42621599bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa527a77-de18-4c3b-b466-65a198875b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53d29da-f916-4727-849f-f1f4817f1adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcd5179-7eb4-4b7c-a611-ffb02c1a03c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614b7db7-7d01-41ff-89a4-e50bdcd7385e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312680bb-2f70-43e3-9ca5-3621fb0dff30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d959151-6a0b-4e0c-82e0-8a836f589c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2892ba6-7cdf-4e68-b0be-955ff6e41c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f4aaac-8e19-465a-a4b5-3878091b5f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ea99d5-a5b6-4a42-945b-22edf2a6f90a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3e537a-af5f-475a-b21a-e7d06ef19297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc52141-23a8-4e33-839c-014a658f3db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78398126-6cba-4c42-85dd-449865e53ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35581f2a-dacb-49a1-86d5-5cbb4d6e4639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99ae8e4-f01f-49a6-89b3-2b40bddc63f0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5f1c39-8d7b-43e0-b4c5-e8559d74f8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8838713a-a1df-49ab-8d54-81b6eda91433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f443a-2c86-40fa-bb03-2428d36dccb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035299d6-2af2-4d6e-b597-072bb3372c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c15767-8cce-4a7d-92ea-da7ebc41e249",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2bc474-7314-45b3-8b2e-a26feb71d6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a830fa0d-a338-4e11-975b-6d48d13b68de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5889309-47bc-4f24-8668-9a765769de51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02b6e2d-2f55-45df-b92d-9f756a2cdb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408c12f5-4be5-4aea-a273-466bc376280f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d502b073-124c-45d2-ad76-a633f284dc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4ecab6-1bc8-44a0-96b4-acba78a1fbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2cc978-5f64-42bc-9744-ba22fbb8cebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0eb2c6f-e1af-4715-9ee6-bb2559da7381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bac939-dc03-4e07-8fc0-22323286a390",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4bfae7-65ae-49c5-b0c9-a9cd6664ccde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe29f500-af72-4eb4-9970-9fb22126704e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27552950-f4fe-4d2a-bb50-38f74eb80b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674d79b9-62d4-4ea6-8712-516f93c6545a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d3558f-b343-4698-a89d-aab09a21d598",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60406d6-b493-4307-95b9-cc258402d74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c9548f-2f9f-479e-8342-b7b59f43550d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed7f189-5d1d-4b81-ba36-7e5ed2925461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138a3267-e7ae-4611-abba-0e6ac7281432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a398b25-2a32-40bf-b347-d6b153c1a1bc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f458448-625a-43c2-b78b-9b2d18a11a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d790ee1f-c5d6-4027-8c4f-1976dd45f72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ce3a7a-70ed-4a5b-9e3f-286bd6aabb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d67277-b967-4ca8-93f5-c28db699194e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85724dc7-24af-40f0-8c16-f84b76334f08",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9027af61-c3db-41a2-b3bf-b3bc1e954e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84de78e3-fe84-4d0c-9e0f-183b0a6f2066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea978e0a-4f87-4ede-984c-a7fa3dbebca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bed5dce-ff7d-4897-a887-3a2679f6fdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a92c6a1-a2b1-44aa-a3f5-79e9fdf14f60",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddec01d5-4d04-47c3-8dd9-b9955fa87eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367205ef-663b-4a5f-a4e5-3e10a50ef654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6b3f1e-2d73-4ca9-a374-16de548e3afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b75cc0b-484b-43d6-b129-410e798cd333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c068b7-1298-4b3c-8411-527e9d47feb0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3378f68-b9e6-41f8-95f9-c2b954331398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd38d1e-0eaf-4a98-a48d-d25f0985e2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fd2eba-fa60-4233-98de-a7a2cf95999e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6619e568-0c2e-4598-a0b7-5386a1e21cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17097141-aaf6-46d5-9ab6-3f64f8a6e189",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8314660-33a3-4244-b225-9d459d5dde27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f39faa1-a7ad-4e6f-a3a1-31e1bad2a7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34e82c9-55f1-4896-bc20-1ba173d5e9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a8b2d3-5933-4e41-a323-3da16a101be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01fbd00-9d95-496f-a07b-8f5d74c6f835",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659d63d1-bc8f-48f9-ac2d-4e674aad28a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb6a6d32-4ccb-4120-bb42-1df2a437ecf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1302c695-40bd-48f9-bd19-56c23cb30087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7968103f-6539-4e63-b402-7969a6d8c40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1deff39-0f0a-4ad1-8d66-77180f22cffe",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd553a44-21fc-4e96-bb7a-53d482603c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0963fb54-3645-4325-8a49-e6f1977e94dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770d0cf2-d957-430e-9788-48389e479ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5610ca-a232-410e-a8eb-3c4aeaf1c739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290372af-d662-4fec-8a1d-364ef1fed9ba",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b2a8a0-f55e-4852-a7c9-5985b4434009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dda404b-009d-4947-bc9f-db33ae0985d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b45cc8-cb70-44bc-9793-09a0c05d1cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311b933a-1700-4c8c-9b5e-d5457f779902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5aace29-6946-4995-9adf-07b5c0e414d2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f985a160-147f-49be-ae14-4e9188183bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b82e029-68b3-418a-b5ad-8df55b54231c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c8db19-2b8d-42b8-9d42-b76672003ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66795fc-bc5d-4779-bb11-314a2484b9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8028c4-02f5-4216-8320-0761b657af50",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99c9c6e-b6a7-47a9-b1c4-27bf8349e74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b832d9b-f180-4417-9959-42692b5c8f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e68c6c1-fe3e-45bd-b8f9-3e4c8729a8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b617460-2917-4edf-a3b0-e86b11ad0031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aecdc8-dd1a-4127-a16e-07519a022659",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56433990-2b6b-4e56-9064-3e542d1d2409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a108aeb-450e-48d4-87f2-a1e6d9c140aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae5af1e-7bba-4469-905b-7615c8436f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4822baaa-e3c0-46c1-ab8d-45a6a8d10e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f497c1-9ef6-4134-8276-4911c5749f1c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ec1ec8-e8b9-4d06-a650-f6d185495524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ee31d2-7c2d-4aca-8391-fe12a620345f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728408ac-15cb-437c-8290-0b9b1cfaab0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f5c2de-16e7-4028-91ce-b8cc89317bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a920795-6c15-4358-9899-4f3dc2866d22",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a6cf63-f248-4a3b-b0ed-51c90ef6ab5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c09bae9-c124-45ab-b649-c571a7ad3a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5c090d-18b4-4624-8cbe-d922442334e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e664dd22-1037-461c-9736-f184cb7faab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7235c95b-5666-40ec-a7f5-6359b4e33099",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737b57cb-ddec-4a3c-8600-7b073510ad3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066bbc1b-2847-4bdd-b10e-0137d1bb2458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63344650-04c7-472c-9e5e-0e2b114b9360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f99106-4372-4815-a29e-6332d2fa5c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1f4566-3622-41c3-885d-9354d21fe1cd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c02dba7-cab3-4956-af9a-50f2536e552c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db26d6f5-d5a9-430d-9ca1-4811a13e9b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9626242e-3a8c-4740-8d27-3eb852a286ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d076ee35-5ced-402d-bdfc-3338fcb5a7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ccd036-6a0e-45d1-8b9f-2153e060e05a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d01316-1e8a-49a3-bd59-cc88e617448e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe8e901-99f9-4ca8-80ae-a2fb1ba90bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c38230a-71d2-4e7f-8937-b58334d45ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfff13b4-7c6c-4734-b516-12c994044419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fb728a-29b3-486a-8d90-f5df12c9d9cb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33997518-95d9-482c-a228-7b736d823ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc403fd-c279-4109-928c-d00f9afec15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b6a58a-a71e-47a2-9076-f6b75bcae6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7733a7a3-94e9-4d7f-bca2-bc07e1a85d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6b942b-a2ea-4480-8861-e2a8aa05275f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e388aa60-12c4-4256-b2f1-ac5cea78b559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7c15a6-e56a-4095-ace6-c72b183cdeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caf9d0b-677c-43bf-a0fe-202597ddda2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d364e3-592f-4130-b203-04c4d572d225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05917870-ac7d-4c7c-99fa-44223fbf5928",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b110bfb-0902-4230-94b3-7acf11db7e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2855d0-851c-45a0-829a-cb465c424606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49dbbd0-8b16-4331-b82d-c1a8269f6baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b9af5e-e31a-4eaa-9100-36b5f4aa5a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e15348-8e68-4a0c-8e5d-dd8ce696cfbc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67200eb9-2cd9-430c-9650-311fd9f55f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "596f8faf-7a6c-4d22-a0a0-7056b1d45fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b0d551-3f44-43fc-a363-e16dcc192f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625b14d8-d372-4aae-93e6-82a344ae9c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01e5b51-95d1-4e9b-bead-392ffb782eb6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e832d-b23a-47c4-9e97-808f60ca0bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86011586-049b-4d24-acfa-f950437c5448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323e4fe8-9759-4f07-8e0c-e215ab6099ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ba1e4c-a2ec-4628-bb16-7c709fc7430a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34600ed2-798a-40e2-aa14-70d3bebce021",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c71985-d319-4695-b155-b870358296d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3174c5-2fb7-486b-b3d1-13c026d36e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8886d6aa-ba00-4eef-ab0f-0ff60f188f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beee8d1e-b5ae-47dc-89e8-f29be657cb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb73c205-0768-4dd9-ab1b-ff173363b8aa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ad1a11-abac-4553-bbef-ed204c233b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c601e49-36b3-40b4-90eb-6428e896e911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a033d3ac-828f-43a3-9c31-2eb0d94deff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fca24fb-66fa-4c5c-9243-1f71ae0c3179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0ea75c-55c7-4df0-8026-e211a6bddde6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f26fe96-5358-459c-b472-012a8c6f5108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fe2ec9f-bd42-4741-81a8-c31546544433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f41b8e-a193-4799-8df9-3f6aeff644d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b39d97-1278-4161-a360-833c46ca7714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dac40ef-88dd-4942-a826-a6a10baa2b4a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbe9af1-e967-4c76-874a-db60f5423dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f0bb306-dd54-4080-bd58-8273f4f6e689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ce6f28-ea09-4014-be87-e7a1b01d74fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a07596-490b-4a79-89c6-b8cd5232e8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee306a19-23d9-4b27-a734-03118028e333",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb29b71-f656-4197-a810-b01cdbf12844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42fee2bf-12d4-4775-8f6d-c2a8a361ba3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a6a457-b765-4295-a542-6e46fccdfff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a933d1-d8eb-4855-8c03-81c46a0b2215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb498036-2955-4416-bf22-89a34eb871cc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebafffb6-9c65-4fb3-ab76-8171070d6d9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ff5041-ee6b-4b06-8713-f5c55d8c97b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f099737b-8591-488c-b6ae-ccd8009db7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04552b7-1651-4a0c-bbcf-c39137a1988c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732d071d-8432-48bd-a850-cb4c99e6f6bd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c550c1-56d7-459d-a00a-d19248da7746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0189f833-ef50-4c9f-a660-151749424691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43726c76-fa22-4a40-85cc-cf6b7399201f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e2345d-1d2c-4ef7-b494-60c2cff85999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c09fa5d-5ce0-4493-9a89-6cd3620468d3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b76a5f-875c-4d83-9484-d17ca9515d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683594d5-3a9e-46db-85c2-36a6e6fa5650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc156243-590b-4d88-b15d-ce5bb35b5a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddcb3c4-9030-4557-9216-9d8c045acd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beae9ca-d035-43a1-bcb4-05e87d8095d7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff2bf02-bd67-4dc1-99b0-68d15455d003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9c9188-0782-4e19-b0b6-e43535ce1988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c975dacc-790a-47b8-a83e-c01542371ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a7dfcb-5182-4ff6-b7d5-ccfc520a0fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420961d2-888b-4848-82da-737f5aa61756",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcc21dd-b51a-4243-b1ef-53bc2ee9c74d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd6f44c-86ce-4360-a732-b584dc9d3b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4509653-d249-4009-a786-dafa9406f97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356c4a19-4597-460e-b678-9d0c0a83b72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f5791b-7bd2-4f4d-9d14-9ba303f7f55a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cf3647-d1f5-42e3-ada4-9b3e8b65904b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0377ba6f-2fe9-4ae7-b768-776c67fef911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c44a62-e9c5-441a-ad9a-9d86bc1c3b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba7cd42-e66d-4158-8fcc-40d75c39cf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419c0c44-348a-4aa5-9eeb-d97b469cf52b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fb7be2-62a0-43a0-a3db-418fb8018c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239a2773-3cb4-4661-b3a1-48ed9b4ba542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6b72aa-6ec8-4d41-ae61-a57811825cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cd6c46-a07f-4d78-8dbb-5368b5ad22d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e407d0-eb1e-4a4e-8865-9af303f1db8c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc35fdc-9a03-4297-9133-3b43bff8ee72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a363021-1472-4b9f-9652-00d6e838bc22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e930414-e2ed-4045-acf3-482c7c22c8ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a035c56-4321-4194-afb6-3c9b5ea44ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce32c23e-e141-43d4-af03-f3832a1d97f3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dbdc89-c237-4456-9bc8-3a5133ab8cd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f640d69b-9152-4137-9bd4-a212d9607769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db51f3ae-07a2-4ee1-be70-13d3790da9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477f56f3-c857-40b9-b69e-1f21bb763375"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "456c5d19-2e90-4130-bc9a-4de58d36d934",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2efda92f-5567-4b1b-ab6a-8942afcace5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5009edce-c90a-4288-896d-d56667c26120",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44bb3282-df54-4053-b1fc-0ea35ddf28b1"
                    }
                  }
                ]
              },
              {
                "id": "d6737b38-7be1-46b5-b9dc-abce86d09164",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a777a7ff-5d03-4e2e-bdba-ce895b6969ee",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef5b9d4-01e2-4177-bab0-11e5a3fb5ed5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fba64602-1a4d-41e5-a6fc-d5b7427fa47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d87cd07-c9a0-46be-9733-ab3cc8df0501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e2d8bde-16ed-4370-b80d-9684cae1e62f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "021feb3f-9673-46fc-8cb8-e5bce3669ea2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f570c04-bc10-4d35-bb29-b22756c01cab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b4a5a36-0d44-4595-be54-0fd576d8a0b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1970cea7-b563-4e39-b5e5-8300b79208bd"
                    }
                  }
                ]
              },
              {
                "id": "e7c67189-cdf5-48bc-900b-490a3776527a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3c60cbfa-f7d5-454a-b19a-86331603d7ec",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052cbe37-7d9f-47a1-bf64-6e56344f92ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0483e6f0-7cf6-4a56-b03b-0d5f1ebf3efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dfbf73-81ed-4b47-a927-11aee7f1f7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c515899e-ce28-43c0-8480-95b7e44246c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "44cbf166-4327-478f-9c96-b3557d9eaef6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2cba067-37ae-430a-9422-5572bdde1719",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "916aa8de-03c9-45ec-826a-477b6aa14b74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f86dee45-db51-4887-b9a5-263448e4f31c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3b1b57f-0589-43c0-9ac7-5288b0c88dfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9280887e-2cd5-438b-9b1f-c17d81af5bbc"
                    }
                  }
                ]
              },
              {
                "id": "8859d28d-f6e9-4cdd-8a00-9155c937c891",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee3c4aff-c5d7-4b35-976b-906c5213f4bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1aa76bb4-f779-4aaa-b0a7-63806fb055df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfecb916-a038-432e-8ad1-2755d2fece56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "641c5d69-120f-4ce4-8d7d-df7bc7bdb54d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e82cdcc0-700b-4653-9350-275a261b1a31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4b7c42c8-ef8b-4f89-972c-26ad27f1dcbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e070e87d-de83-47da-a997-5a9eac37558e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7002859-f89f-458c-abdf-89300b44c1d7"
            }
          }
        ]
      },
      {
        "id": "b631d79a-7f0b-4242-9438-bd342f81c5dc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "207a3a9c-713d-4beb-b063-343d7ce4aa1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d64c2c00-7142-439a-ae47-78a09181856a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12ddaf52-3728-4c16-9ee3-61659b90f751",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b9d0cd-9bfa-40ef-b79c-8447be204e40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3bcbc7df-972f-4f2f-aa44-84dc0697fe52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ed96ef-b79c-49ba-ab28-1c5505479389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7bbf519-6182-4f71-b1fd-bb5f9c90f833"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02e4bf6d-147b-4524-89be-2ba4b87e04ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57a3e106-b67c-42a9-9c72-e7b8ae968914"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7302d6ca-e664-42fc-816d-b3e2253088a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fb6ca7b-bd59-4dd4-bbc2-bffe47836522"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fe49cff-ec71-4709-a4a7-d57af3190637",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "278e7c93-39fa-4f33-94f2-fbdf02ddfc65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3a2d538-24c0-4003-9fb5-5ddc54219e22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11f7fe7a-fb4c-4deb-a723-9b984853a036"
            }
          }
        ]
      },
      {
        "id": "c2a70ec6-2c71-4038-a24c-415ea812919e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "143921f4-8218-46d7-9a13-394e17ae797d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "572675e6-d11e-485d-8586-546a138c2380",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bcca4152-60a3-4c6e-b2b9-37ad1b07d904",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dc759f-f69c-436a-9645-45968fe60f40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f103f6b-0af4-4b90-b378-3177c0633991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4944d5d-a1f5-43f2-b93f-eb33e15be165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac06ee00-f3c4-4784-b39d-e4beb168659c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aac98250-2570-496c-a685-6b2ebcf3606a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db9bc8b1-ead5-47b8-a068-e42998e4f2a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1ebedb-22b0-46ba-b216-0e84c7436b45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74946b89-a382-40ed-a763-71e1f61449b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c203120-7a8b-4329-b985-fe28cac0a663",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa36c4e5-4ca0-4851-842b-6bb87242c06e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27ac6963-cc98-4a6e-8c05-d661b2003024",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd8f5e95-4ec7-46f5-83f4-21a6bee8c6dc"
            }
          }
        ]
      },
      {
        "id": "4c44b635-b823-4617-b6df-cbd017adeb4e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "796ff558-dd92-429a-a5ad-5066db1c9580",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb6d0259-55f2-4f93-b412-310a69d30019",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b24e8e2d-5e3b-4c4b-bbff-097470c5549a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a82171a-6cf2-4eed-b997-be24a681c4bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df187c02-0e83-48b7-ad0e-76cde3441159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b0c229-05fb-4c85-bb40-2924f1ccd6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "206eb6ef-8a8c-4144-af03-2e93bbdefed7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d5c0baa-17b2-42e4-be3d-a2030867da84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02e827ca-9bd1-49f9-9199-dfcd49e7934c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c425d2-4451-4ceb-ba9c-c74ffcaa57e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f440f3b2-1a29-4f44-8874-5356bd3f8b6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6e93b9e-3a02-4774-9e06-66b70115df59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b17cdee8-86c9-4cee-85b0-0bc238572256"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04bc109e-1df5-48e3-8668-0f55059ba9e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "101865fc-1d40-422b-84e2-0f628039372a"
            }
          }
        ]
      },
      {
        "id": "504912e2-5851-4eb7-abf1-3a8e9267717f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfe65143-6fb8-4a0f-ad71-c9f4f730a114",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd61fd19-5253-4fd4-a732-a267f88516d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c700a7c3-affe-41af-956b-379fad0736d4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35fae025-e881-45eb-a8bc-1e9db7d893c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cc14df7-e5c4-41b6-afc5-c89ebc02f59b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 239.76056338028152,
      "responseMin": 9,
      "responseMax": 7799,
      "responseSd": 730.5785371937321,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690764158691,
      "completed": 1690764242019
    },
    "executions": [
      {
        "id": "62bbf501-59f4-418d-9e20-a126fbb1f023",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "abc575dd-5b78-44e0-9c13-4ddd0a15946f",
          "httpRequestId": "dfc0e625-7259-4343-9bcc-ba41c25b30b7"
        },
        "item": {
          "id": "62bbf501-59f4-418d-9e20-a126fbb1f023",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bc1181dd-8a03-4b9a-9660-7eeea1dc7f83",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 0
        }
      },
      {
        "id": "e936cc91-0867-440b-8945-3ed554129ab8",
        "cursor": {
          "ref": "eab41b37-a781-43d3-a429-397beccafa12",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cf9f48df-01a4-4f6b-9f5b-52bfd77a4354"
        },
        "item": {
          "id": "e936cc91-0867-440b-8945-3ed554129ab8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "01b8ecba-96c7-4830-8d9c-d7a6ee396b83",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "cbe53071-0586-474a-8753-bf852a7a623c",
        "cursor": {
          "ref": "39ba0680-64ee-468d-a0cf-c71c3196f921",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4920cc6e-310d-493b-9081-aa4be1940490"
        },
        "item": {
          "id": "cbe53071-0586-474a-8753-bf852a7a623c",
          "name": "did_json"
        },
        "response": {
          "id": "71ad1883-4fa3-4ce7-9dfb-a00c8807c20d",
          "status": "OK",
          "code": 200,
          "responseTime": 483,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e08ce3-e69e-493d-89ba-5a904ace67da",
        "cursor": {
          "ref": "1c521ca5-f803-4726-8b4c-cbda96ade909",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "05e29818-d15e-485d-892a-4eb3ebc0692b"
        },
        "item": {
          "id": "40e08ce3-e69e-493d-89ba-5a904ace67da",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c210d46-58a3-40e5-a65c-3e0b9468674b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 958,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e08ce3-e69e-493d-89ba-5a904ace67da",
        "cursor": {
          "ref": "1c521ca5-f803-4726-8b4c-cbda96ade909",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "05e29818-d15e-485d-892a-4eb3ebc0692b"
        },
        "item": {
          "id": "40e08ce3-e69e-493d-89ba-5a904ace67da",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c210d46-58a3-40e5-a65c-3e0b9468674b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 958,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbce4e50-a4bd-4a31-9bd8-d6e5d4a7f62a",
        "cursor": {
          "ref": "fab88dde-dd82-475e-ae54-d27bf54416ff",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "153f6a41-6664-452c-ad21-77356c9db74e"
        },
        "item": {
          "id": "dbce4e50-a4bd-4a31-9bd8-d6e5d4a7f62a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "529087fd-b13a-4157-8832-6981dcb37d49",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63888847-37d4-44ec-8cb8-66bee16707d0",
        "cursor": {
          "ref": "8947d42f-1078-4c27-98af-601380b0decb",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fd420947-f31c-4988-bf11-1fc284312aa7"
        },
        "item": {
          "id": "63888847-37d4-44ec-8cb8-66bee16707d0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c2085d2a-7ca4-4074-affd-70b38865e15f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214c7aff-8158-4269-87ab-bbd6c73c465d",
        "cursor": {
          "ref": "94e54aec-7392-4f9d-b514-585dc83c050e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "12e7824a-682e-40f8-ae4f-319e5cd5c746"
        },
        "item": {
          "id": "214c7aff-8158-4269-87ab-bbd6c73c465d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4600d2ac-1995-4da3-ba29-63b5c3dfe081",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1ac175-7efd-470f-836c-0d819c1d0849",
        "cursor": {
          "ref": "5ebdf9a0-dbee-42bf-9656-0a499532ac0f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6c9e47e7-0674-458b-95f0-374711c156a5"
        },
        "item": {
          "id": "2c1ac175-7efd-470f-836c-0d819c1d0849",
          "name": "identifiers"
        },
        "response": {
          "id": "cf5d7edd-a716-40c4-ac89-24e945dad231",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3838fea7-e578-4431-89ca-45d4b522ec5b",
        "cursor": {
          "ref": "1ce56ca7-9a54-41fa-9bb3-44d8cee751f5",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b509cd97-242b-4cb1-bb1a-0ea987fd7399"
        },
        "item": {
          "id": "3838fea7-e578-4431-89ca-45d4b522ec5b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3ffa6dad-e3e8-4e00-b930-dcdbd95a4ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0469fd36-e5f5-4a11-bea6-2bbfdd1c33a0",
        "cursor": {
          "ref": "157c617b-0b7e-4838-b8b2-61c4eeeb9f85",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0ffe9f93-f3b9-43e7-89dc-b353a2c1cf28"
        },
        "item": {
          "id": "0469fd36-e5f5-4a11-bea6-2bbfdd1c33a0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "25629509-8b2f-434b-bd56-894cbb15f2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dc44b9-f021-4ad4-8c9d-2eb7b7502f37",
        "cursor": {
          "ref": "5e696004-332b-4e9b-81c1-dec12c8c6615",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "63f594c9-d2bd-4d75-925c-5a43862db02d"
        },
        "item": {
          "id": "85dc44b9-f021-4ad4-8c9d-2eb7b7502f37",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5d2e90b5-3d89-4ac1-84da-58b3d8cee9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20ea464-3b9f-48d3-8c18-6f9c086e15a9",
        "cursor": {
          "ref": "a068b232-f1b0-4de0-90d0-46a837210db0",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4de958a6-7d6c-49d2-be40-cca7b415634a"
        },
        "item": {
          "id": "e20ea464-3b9f-48d3-8c18-6f9c086e15a9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e8492c66-53a2-430b-8ea7-c20f3ac799f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517ef6eb-6692-43f8-ba63-29b6891e1d3a",
        "cursor": {
          "ref": "f08ba0d1-cde7-42df-a7d8-79efab2547fe",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9778befa-0c40-46ef-9cab-96b25b3fadb1"
        },
        "item": {
          "id": "517ef6eb-6692-43f8-ba63-29b6891e1d3a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f2270a41-8f70-4401-b0fa-29a326a92955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ce75c6-baae-4571-bfbe-605c4b0798a6",
        "cursor": {
          "ref": "b5f597cc-0aa5-4c72-9e54-17e7ecaf5951",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6d938e48-56c0-4e64-b370-efa5c34c8140"
        },
        "item": {
          "id": "b3ce75c6-baae-4571-bfbe-605c4b0798a6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f793c932-bfb9-434f-b879-2e5dcbbd30f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68c8fef-9234-4ed9-b461-34a626827448",
        "cursor": {
          "ref": "b38f523c-3b80-47ea-9116-00387a0ccd35",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a2804ab4-aed7-4db8-a363-1e295794c276"
        },
        "item": {
          "id": "e68c8fef-9234-4ed9-b461-34a626827448",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f98c57a9-d4f6-43cc-ac5c-6c95eda279a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8c9d0f-3185-4860-b865-bf5af474d352",
        "cursor": {
          "ref": "6c0bcbfd-2c4e-4d7a-8ef3-abdf602fa250",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0aa564a6-d6f7-4f1d-8cdd-12920b6bb586"
        },
        "item": {
          "id": "9d8c9d0f-3185-4860-b865-bf5af474d352",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6231c8a1-7b69-4e91-b49c-08c8341f9635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85ed9d9-4486-41dc-a2be-80389b36b5c9",
        "cursor": {
          "ref": "014d58b0-c539-4e69-ba18-4bbe5fe57352",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6b784772-0ae9-4aea-9a1c-f453c07acf07"
        },
        "item": {
          "id": "f85ed9d9-4486-41dc-a2be-80389b36b5c9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2ebfc91b-73b0-4a1d-8b50-167fdaab8f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5957db68-61db-4f66-bf75-5ae7020314aa",
        "cursor": {
          "ref": "06f44b48-e86e-4443-91d2-ca16af12d988",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cbd7843c-ba90-4d0e-b73b-23831099284a"
        },
        "item": {
          "id": "5957db68-61db-4f66-bf75-5ae7020314aa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c40785f7-22ad-4246-8d02-06ed7ffc969f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ebd027-40f7-4aeb-ae11-b4a3a4feafe1",
        "cursor": {
          "ref": "4fe84fed-aa37-4b24-8621-cb0a1404ff96",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "edf36abe-86e5-45b8-a1f4-c057be03cab7"
        },
        "item": {
          "id": "88ebd027-40f7-4aeb-ae11-b4a3a4feafe1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d442716a-d6f9-4b71-8df7-bae2efa75512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca48005-b8be-4b1c-a2ea-e97f87ae821c",
        "cursor": {
          "ref": "bfe63b42-2d75-4344-8611-16adf6855c8d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a4c05d99-a157-4e0d-8eec-0206071a0fce"
        },
        "item": {
          "id": "3ca48005-b8be-4b1c-a2ea-e97f87ae821c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "efbb0747-730b-489d-a13d-42194b59f08d",
          "status": "Created",
          "code": 201,
          "responseTime": 691,
          "responseSize": 979
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "ce981497-2c0c-45f8-9308-80b3150ace40",
        "cursor": {
          "ref": "7a3b25f0-a58e-46ea-a356-61123a902f36",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f80ea4e7-647d-4139-90a1-b354e248d877"
        },
        "item": {
          "id": "ce981497-2c0c-45f8-9308-80b3150ace40",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "832551ca-c1e6-4213-8971-f1516857dbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb75af9e-146b-40f3-bc94-5360d01e6f29",
        "cursor": {
          "ref": "a1269d49-36eb-458f-aa5a-eabc48f38b70",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e2115718-c4c7-4673-98ae-448016b2ccca"
        },
        "item": {
          "id": "cb75af9e-146b-40f3-bc94-5360d01e6f29",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4201798b-ef76-4a33-bc4e-7bf3aeb9c971",
          "status": "Created",
          "code": 201,
          "responseTime": 7799,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "337a0c94-d09a-4b4a-a507-b10a170d91aa",
        "cursor": {
          "ref": "fff677f3-3c0b-445b-b1ba-c5bd98bb3b95",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3602e835-97b2-4937-abd5-c4c7ec2e0fa7"
        },
        "item": {
          "id": "337a0c94-d09a-4b4a-a507-b10a170d91aa",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "07ba8fd3-ff5d-46ab-b558-b8e3dd4a5eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e880ab-23bd-4314-a7f2-b3cb8f0cf4ff",
        "cursor": {
          "ref": "26ee7e8e-7946-4a64-afe7-23477c2ae347",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c099ca74-2ed8-4ef6-9740-7d4c314ee249"
        },
        "item": {
          "id": "85e880ab-23bd-4314-a7f2-b3cb8f0cf4ff",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8551210f-8997-4d3f-840a-058fb7bb3e02",
          "status": "Created",
          "code": 201,
          "responseTime": 3817,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "d263ec3f-bc55-4cb0-a341-a780f1daef08",
        "cursor": {
          "ref": "afeb86d3-53d6-4b48-8877-34c14b83828b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4c978fb6-9942-48e2-9d36-8b4873226ebc"
        },
        "item": {
          "id": "d263ec3f-bc55-4cb0-a341-a780f1daef08",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c39c07bf-d5ab-4977-b72d-845c7fe8d794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346617de-7fc9-45b8-9e48-ef1daecb3b33",
        "cursor": {
          "ref": "2a416efc-4561-464f-8002-7bf86d2092c3",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a8a6bfdd-a583-4b3d-a0dc-a67a63188e2e"
        },
        "item": {
          "id": "346617de-7fc9-45b8-9e48-ef1daecb3b33",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "51b1df66-4dfd-4bf5-aca3-f5a0b89dd53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e550c228-37fc-46cf-8cb5-e0882b3c4df3",
        "cursor": {
          "ref": "409bd2d4-9ab9-445b-aef3-bb8f208a036d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "79e88806-023b-4289-8473-342d76b6b8a8"
        },
        "item": {
          "id": "e550c228-37fc-46cf-8cb5-e0882b3c4df3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "77e381ef-321a-4d6f-bba1-6e6da6124a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e04ab53-9a6f-4568-b9bc-15dde101523a",
        "cursor": {
          "ref": "40fd9f7c-328f-4d70-b279-93fb8e801305",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "59d106f8-b0b6-49e2-8717-0a98fbd050ba"
        },
        "item": {
          "id": "2e04ab53-9a6f-4568-b9bc-15dde101523a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "455d8a61-fff6-4ab4-985c-84150a02bfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202a2081-4178-4fa7-b751-6e226fc0d7ce",
        "cursor": {
          "ref": "29268e61-f30b-4ce3-a4de-6cac26ff4892",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e92453b0-d988-47e2-abab-b2bd68c7c10e"
        },
        "item": {
          "id": "202a2081-4178-4fa7-b751-6e226fc0d7ce",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e6811c4e-7f04-42be-b2ef-a20138763282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef05497d-afbd-49ae-a6f4-689ad8ecc4c3",
        "cursor": {
          "ref": "7c32c9a1-c481-4897-ade4-6563206b78a5",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "faed15fa-e3aa-4c8b-b7d0-f65415a2ec08"
        },
        "item": {
          "id": "ef05497d-afbd-49ae-a6f4-689ad8ecc4c3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "227dc20b-3c38-4d15-a247-16f6014e309b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d5a8c6-225c-4452-9a32-e9322367b7ba",
        "cursor": {
          "ref": "b7081495-7180-4b85-a6aa-f9e9dba2c7b3",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bcc3265c-420e-4ebe-a97e-19b3d7c72a9b"
        },
        "item": {
          "id": "10d5a8c6-225c-4452-9a32-e9322367b7ba",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d55405bf-d78a-4eb5-9292-94b3a0c29b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d565aaeb-9f0b-4cb5-a5da-e466bf304a4b",
        "cursor": {
          "ref": "2f5a5976-fb83-41c9-a5c9-248d0cdd7236",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1ea05535-0556-4732-870b-ff593238284e"
        },
        "item": {
          "id": "d565aaeb-9f0b-4cb5-a5da-e466bf304a4b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8b8c958b-b6d6-4bd7-a31f-5ba1162108da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7a9a71-80a4-4f58-837c-0b48d8f9323a",
        "cursor": {
          "ref": "d60ffb25-8b70-4bd9-bb28-5657316c9628",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "07d79ec9-e79c-45ff-b577-acc59ecd0fae"
        },
        "item": {
          "id": "7e7a9a71-80a4-4f58-837c-0b48d8f9323a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0b285d99-a2f9-417a-a30e-a53ae59c003d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c1c5b1-d1e2-4dbf-a8ba-9cf989ec41f2",
        "cursor": {
          "ref": "b92a5c5b-d6dd-492e-8623-7dc849d13f1c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ed6719ab-d0be-4feb-8cdc-00050b28ea77"
        },
        "item": {
          "id": "21c1c5b1-d1e2-4dbf-a8ba-9cf989ec41f2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "04cf38c9-fedd-4562-922d-861fbef5c1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d8cce8-11e5-447b-bf34-b32ed6902ddf",
        "cursor": {
          "ref": "22cb7d61-bff6-4e00-ba98-7b571d065f41",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "513a5d32-881d-42f0-b32d-ab707fe1651a"
        },
        "item": {
          "id": "c6d8cce8-11e5-447b-bf34-b32ed6902ddf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "98107fd4-911d-4526-80fe-deccad4f3c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7030efa1-654f-43db-8e8b-dacb60df63b9",
        "cursor": {
          "ref": "51c2d837-d721-43b7-87fd-5b19463aad69",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8c8aac26-6b3a-4b7a-8256-8c1605fa429a"
        },
        "item": {
          "id": "7030efa1-654f-43db-8e8b-dacb60df63b9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "21ae70ee-79d5-4737-9286-995c12ad6bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c036056f-91a6-48a1-a8b1-1ef511f7df39",
        "cursor": {
          "ref": "c7f510b3-be70-4c5a-9446-46080a082678",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "416a8926-a43b-4491-8ecf-93dde5a3b567"
        },
        "item": {
          "id": "c036056f-91a6-48a1-a8b1-1ef511f7df39",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2976c257-6889-479d-b251-a5459eb892d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1e9ca2-d18a-453f-b5b0-ffdfb755fd3e",
        "cursor": {
          "ref": "72311e99-1141-44f1-916b-e40db3cbd0bc",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ae6fad61-902e-4c19-abdf-de7188577e33"
        },
        "item": {
          "id": "0e1e9ca2-d18a-453f-b5b0-ffdfb755fd3e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c7e8d1c2-62eb-4b47-b4b7-36bd335bf752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c6eec6-8e5e-42ab-ae77-249a5454dbbc",
        "cursor": {
          "ref": "9788b061-7cfd-40bb-81af-77ef2e7463ca",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e9f0a7f6-9f51-4467-ab0e-a3089d5ae433"
        },
        "item": {
          "id": "f3c6eec6-8e5e-42ab-ae77-249a5454dbbc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "55897329-4cea-4c6e-a1bc-a3484cc296cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bdd8da-2923-488e-b7da-5919d15719c6",
        "cursor": {
          "ref": "0371c147-46aa-4181-8aae-959eed56622e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "faf8bf8d-29b8-42c6-89fe-c9aaa9c212d8"
        },
        "item": {
          "id": "18bdd8da-2923-488e-b7da-5919d15719c6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a64591ce-1d72-4d95-8683-ba00f212ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4acd362-945b-4720-9e3b-d716d71c5abe",
        "cursor": {
          "ref": "8430446c-873d-459e-8c23-8d1c0965ea7d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "94c8de41-71b6-48d8-970d-c6069d9fcec6"
        },
        "item": {
          "id": "d4acd362-945b-4720-9e3b-d716d71c5abe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "28fa1417-3824-49c3-90dd-4c476c7b2e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6685d1-5bef-451e-882e-c1fe2b5cc05f",
        "cursor": {
          "ref": "8f19a20b-9a17-475a-b279-f3386f62bfe9",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a77fd427-8855-4c19-a89d-cd0f5b36f4b0"
        },
        "item": {
          "id": "9f6685d1-5bef-451e-882e-c1fe2b5cc05f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bd3c1725-314c-4fe1-8077-22c8e773f5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e985f3cf-1ef8-47b6-9f0f-ebf26c4ccc5a",
        "cursor": {
          "ref": "ef17eb1f-8db4-409b-b5f4-ee012d04aa89",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5ba2cf8c-cc99-4844-87b4-09cf7925b288"
        },
        "item": {
          "id": "e985f3cf-1ef8-47b6-9f0f-ebf26c4ccc5a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5b5b53fa-8147-43aa-866a-24f9310ad22a",
          "status": "Created",
          "code": 201,
          "responseTime": 2656,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "202d534f-a30c-467b-a605-7e09823f80a2",
        "cursor": {
          "ref": "56c68084-45cf-419e-9228-f9e45a2b6c1d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "932e346b-dc14-4f20-afa9-f990bcd6f1f7"
        },
        "item": {
          "id": "202d534f-a30c-467b-a605-7e09823f80a2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8a284831-5b5d-4e24-bc42-98c27944c9e8",
          "status": "Created",
          "code": 201,
          "responseTime": 2778,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "86f7d750-5335-4e6e-bcf6-bc5ab7f89789",
        "cursor": {
          "ref": "85d02544-238a-4dda-ae6e-72d02cea8fb9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5a415317-3c3c-4507-a971-c5750b017a4b"
        },
        "item": {
          "id": "86f7d750-5335-4e6e-bcf6-bc5ab7f89789",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "817d3761-af94-47ba-8cc1-8bfe92a7f9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36b348a-7b22-45aa-8167-7395e1ff285b",
        "cursor": {
          "ref": "6dfdfa61-869c-4180-817e-54a0905e9d9f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f0c6e5e5-053f-4c2b-9bf8-704b7fc199c7"
        },
        "item": {
          "id": "f36b348a-7b22-45aa-8167-7395e1ff285b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d16ab6b8-39b4-4f99-a545-f158c86b708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3d734b-7fc0-43f7-b294-34f77a8fd623",
        "cursor": {
          "ref": "f56ba7f2-0c38-48df-b25e-ff66f9ac9696",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "432feac9-8c1b-4b47-905d-d537c51acbb6"
        },
        "item": {
          "id": "6c3d734b-7fc0-43f7-b294-34f77a8fd623",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b9f39f2e-7c67-415e-acef-ec2dd4552e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4549b19b-8cc9-43d9-aaa0-f931ec8bfc74",
        "cursor": {
          "ref": "ef9db2fc-11d1-45ca-b451-dc6609a0348a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d096ec12-94dc-4b64-b375-50b23246ea19"
        },
        "item": {
          "id": "4549b19b-8cc9-43d9-aaa0-f931ec8bfc74",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ee429dd9-0f90-4ed4-9f36-329e482fd925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d759c-6d5f-4528-81ac-8a333f6970cf",
        "cursor": {
          "ref": "39579a10-3de2-43a7-b7c0-8ff68b8405d6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "61b30a5e-cb04-4400-a350-127f769c890f"
        },
        "item": {
          "id": "7a7d759c-6d5f-4528-81ac-8a333f6970cf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ab979566-a72d-45a5-9e4a-fbd688182a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c87329f-37ab-4624-9f65-d413a54b64f1",
        "cursor": {
          "ref": "b34bd3ae-9eac-41c5-a688-cca826166f90",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3ad07729-86a2-49f2-9ea2-08d91ca9cf93"
        },
        "item": {
          "id": "0c87329f-37ab-4624-9f65-d413a54b64f1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c002650b-6d04-430d-ad01-ce6cfb68317d",
          "status": "Created",
          "code": 201,
          "responseTime": 2086,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "1d2cc48d-4167-4be1-aba6-c4e577c216c6",
        "cursor": {
          "ref": "f7f8db65-a14c-4579-abb7-a2dbc4c48512",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dfab6a2d-b219-42ca-9303-064cb2ea951a"
        },
        "item": {
          "id": "1d2cc48d-4167-4be1-aba6-c4e577c216c6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b2c7606a-9b1e-4653-b3e0-4afbff051a42",
          "status": "Created",
          "code": 201,
          "responseTime": 2382,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "1dca7f8d-c15b-460f-a119-5e925203b816",
        "cursor": {
          "ref": "9e822aad-b43a-452e-9a8b-4477a0e09eb7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4c44ccb4-ca07-442c-a7f2-a69cd13afc08"
        },
        "item": {
          "id": "1dca7f8d-c15b-460f-a119-5e925203b816",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b52f12d-f815-46b9-8b0c-869b1bbacf64",
          "status": "Created",
          "code": 201,
          "responseTime": 2565,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "5c415e96-18c0-4d0a-b5fc-256931a20533",
        "cursor": {
          "ref": "d7abd160-bf42-4f86-a1c4-bbd46ece8f6c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "df29f445-0284-4a86-90dd-f7180b95d56d"
        },
        "item": {
          "id": "5c415e96-18c0-4d0a-b5fc-256931a20533",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ec242ef6-0e00-44ff-b74b-7b8f8d20e3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ecfe6f-6178-465e-8557-379154330e98",
        "cursor": {
          "ref": "9bf93aa1-dc60-42a6-8086-27ad23a6292d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dff16a2d-bd57-4a8f-8df0-1b7fe12f2bb8"
        },
        "item": {
          "id": "74ecfe6f-6178-465e-8557-379154330e98",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8dca15ff-1b55-425e-95f4-670b2fd85d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12664d8-7fa5-4feb-a2ff-c4b079febe7a",
        "cursor": {
          "ref": "80eb2558-1813-425e-a14d-404414bc40ea",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b982a853-ea22-4106-b19e-875c01831c99"
        },
        "item": {
          "id": "e12664d8-7fa5-4feb-a2ff-c4b079febe7a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c6bf3f60-d5db-44e5-a3a2-9d8d0de9b9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93c597b-eb92-44ff-86ad-26f344eb2f01",
        "cursor": {
          "ref": "d73b7a20-3f84-4e23-85cb-b4770095907f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "663bcafd-32d6-42de-8cb2-fcd6ffadac95"
        },
        "item": {
          "id": "a93c597b-eb92-44ff-86ad-26f344eb2f01",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "15e8b50e-4e0e-4e2b-b3d6-c02cb1471e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4248e87-6cb5-4079-8526-1f725a39c253",
        "cursor": {
          "ref": "8e4efb93-e6c4-4cb5-8c0e-e15985d458bf",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "68e6e8d3-1c72-4102-843f-34b3f6928a1f"
        },
        "item": {
          "id": "d4248e87-6cb5-4079-8526-1f725a39c253",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "52e53d19-d278-4dfa-97b0-1a4976ed4a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc45c41-2b64-41d4-9346-b3a7eeb7dc08",
        "cursor": {
          "ref": "1285cf91-0ec5-4c4b-b940-441f61701ac9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9aca82e4-3488-481a-a47a-daebb2fbe2bf"
        },
        "item": {
          "id": "3fc45c41-2b64-41d4-9346-b3a7eeb7dc08",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4d76c45d-7229-483b-b9c0-37d8a93da7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45285a5-03b6-4e07-8eef-3c8faaebb318",
        "cursor": {
          "ref": "af61f2ee-016a-4856-91e5-fce684fe6049",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6c973ce0-22e8-4b27-957a-9552ac2b3a50"
        },
        "item": {
          "id": "c45285a5-03b6-4e07-8eef-3c8faaebb318",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3adabca2-110c-4ebf-b57f-ad0c7b63b444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb3b845-05b3-4376-8ebe-3d7969c39b85",
        "cursor": {
          "ref": "530bd37d-3de1-46b3-9b9f-ea51075dbdef",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "160e3c70-beed-4ef1-8ce1-bea3cf568af4"
        },
        "item": {
          "id": "acb3b845-05b3-4376-8ebe-3d7969c39b85",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "29a7396a-8410-4496-b91a-d317f8d2e013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7caa47-8e0d-406d-9a4c-b0e93ebaacf6",
        "cursor": {
          "ref": "eb540c74-b3c4-4b8a-8ad5-2bce212a7e68",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "20046d7d-f560-4dd4-a40d-0320500e254c"
        },
        "item": {
          "id": "fe7caa47-8e0d-406d-9a4c-b0e93ebaacf6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f7ee4ccb-553c-42aa-835c-cc16d571e13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5adc33f-5bce-4bae-9be4-29c288445db3",
        "cursor": {
          "ref": "28cd1237-4fb2-4c1d-bf40-6416df703566",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "65d8a7d8-971d-466d-9df0-fdd4afa42aa3"
        },
        "item": {
          "id": "d5adc33f-5bce-4bae-9be4-29c288445db3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d0558353-5066-4330-aa38-ddcae2ca2f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636dcfea-931c-41d8-9ee3-59997b0d2d5b",
        "cursor": {
          "ref": "f5fdf62b-32ac-4de7-bcf2-547931521acd",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2c72b27e-0844-4ae6-be56-ce29d05c94eb"
        },
        "item": {
          "id": "636dcfea-931c-41d8-9ee3-59997b0d2d5b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d0a501d2-ef38-4fe4-b181-fb554dd088aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ada5c3-f794-4532-b09b-dfa611758cbe",
        "cursor": {
          "ref": "c6310727-9769-4af9-8800-73bcd1a333b3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "68bf9745-3e87-4c3b-9a9d-b24c02b2a4a9"
        },
        "item": {
          "id": "87ada5c3-f794-4532-b09b-dfa611758cbe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "82597be0-ca7f-4383-a887-85b74fe2b6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b409069-03e2-44c0-92da-c24a7bdd5963",
        "cursor": {
          "ref": "edb31fe9-f03d-43cf-bf08-a28ae1540ebc",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4e0c014c-c0ff-4e15-97ae-92d068c93161"
        },
        "item": {
          "id": "8b409069-03e2-44c0-92da-c24a7bdd5963",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dceb5ef1-8a1e-41df-9526-eb38c53990d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f212309c-1df6-4965-a87a-9dad053beadf",
        "cursor": {
          "ref": "b1fe0867-7417-434e-8c3d-90a600ebe2d5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d9937940-1060-4eff-9f11-6a9253053eff"
        },
        "item": {
          "id": "f212309c-1df6-4965-a87a-9dad053beadf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e76a2b77-cdfd-470c-9fff-a1a3a03583ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44a3d4a-2f87-45e6-b31e-327be21961b4",
        "cursor": {
          "ref": "36cd7c23-e833-4634-9526-0aece7056cbd",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "11b621cb-b224-4152-bc66-69aa1ba1304b"
        },
        "item": {
          "id": "a44a3d4a-2f87-45e6-b31e-327be21961b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b02f058a-2bed-400d-9d4c-bdd53c485d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c77ffb7-1fb0-471d-a8c7-d8a7f758561c",
        "cursor": {
          "ref": "27aba5a8-296b-420e-a160-86fa59fcf005",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2d25a324-4387-4f38-83a8-863aa7594609"
        },
        "item": {
          "id": "0c77ffb7-1fb0-471d-a8c7-d8a7f758561c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b3104316-e9d0-478d-9342-0f12b572bfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb04152d-711c-46c2-ad5d-c1ed2f7bc7a1",
        "cursor": {
          "ref": "184e2f88-5847-48a6-96a2-123f4afcbf64",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5eeb70dc-c25a-4cc3-bb18-0b746c4c50c4"
        },
        "item": {
          "id": "fb04152d-711c-46c2-ad5d-c1ed2f7bc7a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cdd9deaa-08af-4841-a6c4-7ac2fde8867f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b70fc6-cf12-4c0f-baec-ee7013eee603",
        "cursor": {
          "ref": "3c3bb16d-7c65-4eea-b1a5-ac8228b78336",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7d1c6a6e-4dca-4114-a6b1-bd861b47d6f1"
        },
        "item": {
          "id": "06b70fc6-cf12-4c0f-baec-ee7013eee603",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b482a062-5817-4448-98bb-602dcd61001c",
          "status": "Created",
          "code": 201,
          "responseTime": 2317,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "354a2850-3a47-41a3-aa11-78c4202e1202",
        "cursor": {
          "ref": "8e5af3eb-9d1a-4249-a5e6-47c95b70d14b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "37e13f95-f8f4-4199-8f3d-aa79e758cbb2"
        },
        "item": {
          "id": "354a2850-3a47-41a3-aa11-78c4202e1202",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "24ffd3a2-3757-4b68-8661-b951497ddfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c2489c-371c-4340-afe4-c3544e94d7d4",
        "cursor": {
          "ref": "388a5771-8989-4b4e-8af0-904e0a42e630",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9ef663fd-dd06-4805-99c5-b75d4f19d2b9"
        },
        "item": {
          "id": "45c2489c-371c-4340-afe4-c3544e94d7d4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "05585fa6-a1a3-4ae7-b520-f5d5d49b4c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a68b993-71a1-4797-a61e-9ef1a66fefd6",
        "cursor": {
          "ref": "eb9205b4-303f-4b3e-a96a-9a22b70186de",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7886c130-26f8-4dbf-bac9-8bb00220455d"
        },
        "item": {
          "id": "3a68b993-71a1-4797-a61e-9ef1a66fefd6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e3d580f3-7d9b-4649-8f27-65d9d1c160a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1958623f-c667-4c9a-be67-3e73b1dee1a0",
        "cursor": {
          "ref": "479929a9-288a-4a22-909f-d497586d08ee",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5420413b-9cb9-4df3-aad4-e0ee51ae6c45"
        },
        "item": {
          "id": "1958623f-c667-4c9a-be67-3e73b1dee1a0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ce57b9be-b91a-4e63-9f1f-373e3a007eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5721c0-e96d-40fb-90e1-27e400264c09",
        "cursor": {
          "ref": "893f19ab-4274-4ce2-98c3-a9d69292b4dc",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f8579688-60a8-47ce-adad-ec648d1f8ab9"
        },
        "item": {
          "id": "5e5721c0-e96d-40fb-90e1-27e400264c09",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "de4eb1f4-365f-4a0d-b5de-34cb72a0e6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116fb1eb-ed0b-427e-822e-461e2bf09556",
        "cursor": {
          "ref": "cea7bb7a-b4dd-4de2-9fe8-3705c904688d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "07a57bdf-a217-4eeb-a3df-399278bfbb29"
        },
        "item": {
          "id": "116fb1eb-ed0b-427e-822e-461e2bf09556",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "667a9950-be70-471f-acdd-31ce705d605c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d941a-6df8-49e0-8ea8-a50081cea653",
        "cursor": {
          "ref": "b245d82e-12a5-4ac1-894f-7a108135b186",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c050c0d1-b164-49dc-931a-885aa34d90dc"
        },
        "item": {
          "id": "f38d941a-6df8-49e0-8ea8-a50081cea653",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "19f0af49-5002-4ece-863c-cbe37935a073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e01665-554a-4d16-adb4-612b70d47eb6",
        "cursor": {
          "ref": "54a2b015-e9ab-4752-a7c0-b366d11d2de5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "486778da-cf2b-4a1d-9172-1729f5820933"
        },
        "item": {
          "id": "a0e01665-554a-4d16-adb4-612b70d47eb6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d08afe1-3e6d-44ce-a35b-14210a5ad2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0882c52-b762-4e5a-af07-9eba18585210",
        "cursor": {
          "ref": "4d08e0d6-a8bb-4bc4-a9e5-1c7f3eb2a44b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "23cf49ba-986f-4445-9503-9339700fef76"
        },
        "item": {
          "id": "a0882c52-b762-4e5a-af07-9eba18585210",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0a252696-723a-4f3f-b17f-20e16ca3b438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e1cf70-e49e-4a30-a7b8-3f3a545a0cef",
        "cursor": {
          "ref": "ad773776-8822-4b87-81f8-457b843085dd",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "34144920-fc2b-4455-8404-d485449fd764"
        },
        "item": {
          "id": "98e1cf70-e49e-4a30-a7b8-3f3a545a0cef",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7fda3aa3-0a5e-4cd7-9c25-b3b98d9fb19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d3c6f0-54e2-49dc-bf10-e38e1c6b136c",
        "cursor": {
          "ref": "d5e6579c-e97e-4655-a137-24a192fee82f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8ce74b8b-1211-42d7-b81d-9dea077bc00e"
        },
        "item": {
          "id": "e6d3c6f0-54e2-49dc-bf10-e38e1c6b136c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0384cc31-8364-4c27-b92a-e4fa774e96b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb1b34a-8cd9-464a-8806-70c55c28e2fc",
        "cursor": {
          "ref": "72312b17-7a60-44f4-99ff-a740578ef6ea",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3463b436-0fbe-44ed-9fef-62ff5c1b9fe3"
        },
        "item": {
          "id": "4fb1b34a-8cd9-464a-8806-70c55c28e2fc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "75197c91-4dfe-42f1-a67a-3abf795712aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087af9fa-c33e-4594-b3ef-3e212725404d",
        "cursor": {
          "ref": "eeeb3a26-afed-4c3e-8f44-137e60b0f0e2",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7b2cd96d-cc9e-4c25-8bfe-163c89064ca3"
        },
        "item": {
          "id": "087af9fa-c33e-4594-b3ef-3e212725404d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d7355d47-44de-43d9-9a69-29e9d452015b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764ab8eb-0abe-45a9-863f-e881661837cc",
        "cursor": {
          "ref": "7f6c84e9-84ad-48a4-bd3c-5d0cfeb8a3d4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d7b38f5d-19d2-425b-b92f-4fa22798b39b"
        },
        "item": {
          "id": "764ab8eb-0abe-45a9-863f-e881661837cc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eaab07ad-a5e2-43a8-ae03-1b1a7e3e3857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06fdf80-a33c-460b-a123-03f0f1f9b3a3",
        "cursor": {
          "ref": "c5b7ddc4-8f91-44de-86f6-13f552e94bba",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "27c106ae-ef22-468e-af17-c990622bc1cb"
        },
        "item": {
          "id": "f06fdf80-a33c-460b-a123-03f0f1f9b3a3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "68ea73f4-3f64-45a3-a5ab-9aaeefbca804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00c2e71-260d-43e3-a846-859df94498b9",
        "cursor": {
          "ref": "3cb3eb0b-ffc6-42a3-9d8a-fc1c6326a95b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d0d36411-9e10-4603-9b76-4ea047b29a94"
        },
        "item": {
          "id": "a00c2e71-260d-43e3-a846-859df94498b9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "90a1278d-d89a-4e99-95b9-bfa7df133e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d399d09a-a64c-4511-a193-ce3e91cbca4a",
        "cursor": {
          "ref": "d95a98d0-ba88-4e1f-8eeb-a3cc4ec8b406",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "94bf5ff7-3fd9-4ee4-af5a-06c064f6b232"
        },
        "item": {
          "id": "d399d09a-a64c-4511-a193-ce3e91cbca4a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "14e785c7-1590-499b-842c-e80dab72392f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67db758-95e7-49c0-b4c1-39c3dabf6e32",
        "cursor": {
          "ref": "f58d0419-8433-4bcb-a82e-113897a9faa4",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3ef4f248-d3b9-4f8e-a83e-641904e15362"
        },
        "item": {
          "id": "a67db758-95e7-49c0-b4c1-39c3dabf6e32",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a52e4983-1ff7-4755-8363-b00da682b4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11bb88a-7880-4ba6-bef3-222e61f870dd",
        "cursor": {
          "ref": "0f31a82e-e879-4f10-8fbe-32524efa9363",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "230e0af0-05b6-4270-8563-1d2dc700f654"
        },
        "item": {
          "id": "b11bb88a-7880-4ba6-bef3-222e61f870dd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "77dd9d9f-8ecf-40b0-b4bc-8ee36a1f916c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e748387-0d13-460b-88bf-29ee9f3bf4e1",
        "cursor": {
          "ref": "bd97c7a5-126b-4c6f-86d8-d61e76d276db",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fbb15b41-54d6-4f1b-980f-8e5b43e7632d"
        },
        "item": {
          "id": "0e748387-0d13-460b-88bf-29ee9f3bf4e1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "02844156-2630-4dd0-92ef-a89d1edb6a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4985292-e800-445b-b5c7-819c98d2f563",
        "cursor": {
          "ref": "18f5f07c-e817-4b51-a6a8-4d5183606bb2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "172d7ccd-c905-483f-a537-f406c027094e"
        },
        "item": {
          "id": "c4985292-e800-445b-b5c7-819c98d2f563",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9913be9a-843e-4086-ba0b-c8cd697a959d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716d10d8-8860-4b44-a308-5bc069bcefbc",
        "cursor": {
          "ref": "248aed27-e42b-426b-8783-1ee5079e849a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "546bd5f8-b78a-4c27-bf60-181368b5f98d"
        },
        "item": {
          "id": "716d10d8-8860-4b44-a308-5bc069bcefbc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "320d7567-210e-40ad-8bfb-ef52d8d449c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550d0c75-b96b-4d3b-8117-4c0a4e109a20",
        "cursor": {
          "ref": "f6c11798-171e-41be-8c3a-5386c3c9ba52",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "13d753bb-cc91-4ed4-a622-99130887a717"
        },
        "item": {
          "id": "550d0c75-b96b-4d3b-8117-4c0a4e109a20",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e79cc2b8-631f-449b-b332-3d7093497687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a29191e-64b0-4c30-8ebd-4606322a2628",
        "cursor": {
          "ref": "9a164c31-8188-4e9a-a0ce-13923971333e",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "91c715c9-30d2-4e5b-b00a-f549ade40703"
        },
        "item": {
          "id": "1a29191e-64b0-4c30-8ebd-4606322a2628",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "137a687b-6745-45a0-9948-0c1f0aa9493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de183e65-464b-4579-86b8-b35e233fbc46",
        "cursor": {
          "ref": "28ce5695-8633-4b49-b469-a8334fb42587",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ed9a2c17-aa88-4df4-bb29-ded07c632bbf"
        },
        "item": {
          "id": "de183e65-464b-4579-86b8-b35e233fbc46",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "af9792fc-f25a-450b-a1c7-82625d95f355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6248f0e8-7cc3-4e6b-b067-0c34280a100a",
        "cursor": {
          "ref": "650c0491-e3ce-4ab5-9475-eea70d6a3954",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c7ff6c98-a674-4923-8f2a-8b79d5ce5610"
        },
        "item": {
          "id": "6248f0e8-7cc3-4e6b-b067-0c34280a100a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ff57cb16-241e-43d7-b301-4d707f64b85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e5c1d2-40db-4743-8d14-0436795d0e11",
        "cursor": {
          "ref": "6a68e28e-4ebb-4688-be4b-bf85c16637fb",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "767b3376-fdbe-4fba-9f3d-9706907039f8"
        },
        "item": {
          "id": "e0e5c1d2-40db-4743-8d14-0436795d0e11",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bdd90c8a-78b8-445b-be17-6616b5942b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8336ba-600d-4523-a2c0-012f319b0f40",
        "cursor": {
          "ref": "cd68e19c-8b28-4202-bb7f-0bbd0f57e892",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eb737a4c-91ab-4474-894a-efa149233138"
        },
        "item": {
          "id": "9f8336ba-600d-4523-a2c0-012f319b0f40",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9242fd11-30c7-4b74-9b2a-3c006fad91fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33d171b-2e90-4845-b584-d79c9de8183f",
        "cursor": {
          "ref": "e649f64a-af1c-438f-a591-d3c55be791db",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0cdda2cd-7f29-4516-88fa-b229389ec913"
        },
        "item": {
          "id": "c33d171b-2e90-4845-b584-d79c9de8183f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "717e5641-fd14-4a82-9ca0-93edc42ff724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad9a0fa-cbb1-4a1f-8d79-336797e3a1a7",
        "cursor": {
          "ref": "75adff14-2cd2-4236-9dd7-703b4ead6053",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a1efcee4-93b8-4b2b-9935-f99e225ad301"
        },
        "item": {
          "id": "6ad9a0fa-cbb1-4a1f-8d79-336797e3a1a7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0959e41b-3116-493c-a0ff-af3c15b1a2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4045fa19-594e-4139-89f2-fd0a89e137f3",
        "cursor": {
          "ref": "5828c489-45bd-4af0-b971-4bb3a0119dc5",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4542497b-c02b-4a83-b7e2-a5c5c93e29a8"
        },
        "item": {
          "id": "4045fa19-594e-4139-89f2-fd0a89e137f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a0ebefa9-cab8-402e-a2fb-fa3cad95d38d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86509aac-9b11-4704-82e4-d5cee4d4c80c",
        "cursor": {
          "ref": "9a715d68-c82f-4977-8053-7b2bc166c726",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e2cc1865-1abe-4cab-a92d-d7b1918866fb"
        },
        "item": {
          "id": "86509aac-9b11-4704-82e4-d5cee4d4c80c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3ed4dda9-ae04-4921-90bb-914929f9cb40",
          "status": "Created",
          "code": 201,
          "responseTime": 2259,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "af541d70-c013-430a-8b99-2ad28edf81a1",
        "cursor": {
          "ref": "c83474ba-e444-4a22-9fee-57980a64558d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9218b6cc-23e0-4fc9-8f9e-008d485bb6bd"
        },
        "item": {
          "id": "af541d70-c013-430a-8b99-2ad28edf81a1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e78ca5a5-fb01-43c8-a8a9-cf503b044359",
          "status": "Created",
          "code": 201,
          "responseTime": 2894,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9ba13d-324c-4fa9-b7d3-1f84eeb49d23",
        "cursor": {
          "ref": "16a8dab9-5ac5-47e5-bf91-a7262b1f3350",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "25d7f8f1-80be-4bf7-a946-453c59dda788"
        },
        "item": {
          "id": "7a9ba13d-324c-4fa9-b7d3-1f84eeb49d23",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "403f0c50-3cbe-4b93-bdb3-8ab679740d4b",
          "status": "Created",
          "code": 201,
          "responseTime": 2709,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca85a119-117e-4117-94de-73e2aa8ffd0d",
        "cursor": {
          "ref": "2945719f-fad4-41c6-af6a-d1b1a0496a21",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "87005773-d4a0-4e16-ad2c-9406cf62b5c3"
        },
        "item": {
          "id": "ca85a119-117e-4117-94de-73e2aa8ffd0d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "18b006c9-a9f8-4c43-a64a-9aa5794bd775",
          "status": "Created",
          "code": 201,
          "responseTime": 3006,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39d4b01-a75c-4bce-8d01-b035473e5ed9",
        "cursor": {
          "ref": "0c31d980-f8c3-45c9-8cc2-359ba1c39c9a",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "07d24ef6-8754-4a97-9051-4c4e2b585101"
        },
        "item": {
          "id": "f39d4b01-a75c-4bce-8d01-b035473e5ed9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e81be761-a0ac-4110-b610-5bea943ec1e3",
          "status": "Created",
          "code": 201,
          "responseTime": 2485,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-31T00:43:33Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-31T00:43:33Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "013444d8-b645-4b7f-83f8-8b9c6b4d8c07",
        "cursor": {
          "ref": "fb1febfb-38f5-4c7c-9a81-f7c26ada5e7d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "af2258e0-dc5f-4d58-af32-87ae9bc16420"
        },
        "item": {
          "id": "013444d8-b645-4b7f-83f8-8b9c6b4d8c07",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "071b276f-5849-4207-ad15-52586cb6feb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "73a6d4e6-4767-422d-b18c-facbf5fd28ae",
        "cursor": {
          "ref": "c8391fe8-b1e0-4be7-b3a7-9e3f124fa859",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c9f9341e-b37d-4e20-be93-ce7b813a6343"
        },
        "item": {
          "id": "73a6d4e6-4767-422d-b18c-facbf5fd28ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6c062022-b195-4985-a32b-07c22aa89f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26da987e-bc10-4ca7-bbea-4ab365bede14",
        "cursor": {
          "ref": "b3ffb91c-1e7e-4c19-9e1f-90e77956faaf",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "36115c0f-47ed-4622-9b1a-ecc9bd75da59"
        },
        "item": {
          "id": "26da987e-bc10-4ca7-bbea-4ab365bede14",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ff80dc6e-7eb0-4f78-aafd-d7136f330fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291c7a8b-19a6-4237-8c22-0c34456aa386",
        "cursor": {
          "ref": "66fc4768-3840-4b96-ae49-75671393ef41",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "168ecc21-cc23-44ee-864a-70adb41f51f9"
        },
        "item": {
          "id": "291c7a8b-19a6-4237-8c22-0c34456aa386",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c5a641e-83c7-485a-9a9a-a055ccef726b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fe7034-79f7-4611-979d-ddb1afb8b4a2",
        "cursor": {
          "ref": "e12c9e93-4c08-46cf-8794-04a3b8ff38fd",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "febb002d-7ee4-4768-9a40-d008509715d6"
        },
        "item": {
          "id": "50fe7034-79f7-4611-979d-ddb1afb8b4a2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ce206ef-fd30-48ff-bf32-532a348762a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ffa432-a218-4aa9-8e8d-1fd066d49afd",
        "cursor": {
          "ref": "65a72e54-b72a-44ae-821c-6a3649e9f275",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3eb4e5cc-7be0-4e5d-a5d3-a110ad3a689b"
        },
        "item": {
          "id": "59ffa432-a218-4aa9-8e8d-1fd066d49afd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f2daeb79-b0f3-4fa9-909a-7dcb94a33ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4dc9a2-04b8-437d-8122-0e6764233ab1",
        "cursor": {
          "ref": "a95f3748-c2e5-4194-bcbc-d3b766113c41",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8fd3b198-02f3-4259-b268-97608268207d"
        },
        "item": {
          "id": "1d4dc9a2-04b8-437d-8122-0e6764233ab1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c77d8e00-7520-4d85-8939-146fa406a048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26046d2-e27d-4779-be8e-699e9177c467",
        "cursor": {
          "ref": "f126039e-50cd-4ed5-beed-12dd4f8fd407",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e472128b-67b6-4d0c-9947-ea1eed3fe7f5"
        },
        "item": {
          "id": "d26046d2-e27d-4779-be8e-699e9177c467",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "16f52f56-79fe-40c2-b927-93613b706bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd48bd7-44a2-45cf-bb29-07e7bac1888a",
        "cursor": {
          "ref": "5b08fec2-7e62-4ee8-a385-dba9eaec52fd",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4aed891c-0d66-497f-b25e-d1051a150514"
        },
        "item": {
          "id": "6dd48bd7-44a2-45cf-bb29-07e7bac1888a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d239a40d-9e89-406b-b1df-91aa78fe4ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70e4b04-5975-468c-b110-745850a12c9c",
        "cursor": {
          "ref": "49158ee8-e119-49b4-8989-d15ef7500926",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a039c5f9-8857-4a92-a28d-72b123a3dd40"
        },
        "item": {
          "id": "d70e4b04-5975-468c-b110-745850a12c9c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "71e3ebbb-013f-476f-adfe-5cec428a956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d975ef90-2f2d-45da-a267-b0ab5d2b497d",
        "cursor": {
          "ref": "f0742ba8-bff3-4178-b6a0-d98b6d43d5f3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "97624703-33a9-4c69-9cc0-5dbdd0a40b50"
        },
        "item": {
          "id": "d975ef90-2f2d-45da-a267-b0ab5d2b497d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "898dc36c-55a1-47c4-86bd-7ebd7d67cfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c147df0-8e5f-44b5-a2ec-7ba509c01090",
        "cursor": {
          "ref": "67ee60fe-7b9f-478d-9b0b-7dd9dab4c781",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be63a630-e6b6-4c94-b8b6-0267c3a782ef"
        },
        "item": {
          "id": "6c147df0-8e5f-44b5-a2ec-7ba509c01090",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eb4c7cfc-506c-40a7-9ae9-496783f9e3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164276fc-0ee7-48b8-a6ad-647f87d5dcd9",
        "cursor": {
          "ref": "8d39a77b-f534-4d8a-86b6-3e2ffe2ea7cc",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2c82538b-9401-477f-91a8-386b2d004339"
        },
        "item": {
          "id": "164276fc-0ee7-48b8-a6ad-647f87d5dcd9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d08670cb-96bb-40cc-87b9-ab242b2609fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e24146-85d8-44dd-9ae6-b79a37866ef0",
        "cursor": {
          "ref": "952b10b9-1065-4a2a-86d9-d241cbd1e85c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "10830df5-8857-41f2-a705-6f42b6a31136"
        },
        "item": {
          "id": "f7e24146-85d8-44dd-9ae6-b79a37866ef0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "04e4892d-1d95-47d2-b2c7-c2c5b50292c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43613ad0-98e4-4679-b997-69973f67393e",
        "cursor": {
          "ref": "b3ca110d-e8ab-4ae8-90e2-155b6f43e66b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3b81ecd3-1d6f-4749-93a8-161855dde6da"
        },
        "item": {
          "id": "43613ad0-98e4-4679-b997-69973f67393e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4f92f16c-5e94-4e23-9502-8c410e509f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47588097-3bb6-44fd-919f-8fde19747871",
        "cursor": {
          "ref": "2a0a7d95-8853-4443-a585-e8850a4535fd",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b624a41c-eb12-4fa7-9006-4a67136373fb"
        },
        "item": {
          "id": "47588097-3bb6-44fd-919f-8fde19747871",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b57ac826-87de-4b15-b6d7-0a0382ad6f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55352c97-9556-4e7d-84d6-a39e47c7c21e",
        "cursor": {
          "ref": "55f08244-44fb-4a06-9cba-6ce804b71c9d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "23458f4c-f51c-4a70-8442-da13fe013178"
        },
        "item": {
          "id": "55352c97-9556-4e7d-84d6-a39e47c7c21e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f576a8fe-dfa8-4ea2-b78a-9505e9d51efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69396d2-3184-44e9-affd-459f19ef91ac",
        "cursor": {
          "ref": "18b25946-fe35-4927-8f4a-02161cc1e6fc",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "828c53ac-2c7e-48bc-85a6-35b073e64dbd"
        },
        "item": {
          "id": "e69396d2-3184-44e9-affd-459f19ef91ac",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d0532fa2-049c-47d3-8fae-5be217b61312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0414d56e-bb51-457a-9b1c-4d05e1bdb890",
        "cursor": {
          "ref": "54444abb-f2d3-4e6f-8eea-28cae84cfaff",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d91d6034-46fa-4dae-80e6-dcca191ef7e4"
        },
        "item": {
          "id": "0414d56e-bb51-457a-9b1c-4d05e1bdb890",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "13cf64f9-291b-4a92-8ed1-8fe2e4b26bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872c1330-279a-438b-a542-84ced6479026",
        "cursor": {
          "ref": "3357dddf-af00-48db-9e71-6bec034b039f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f65e393b-738f-4ea2-a8eb-a77527248b97"
        },
        "item": {
          "id": "872c1330-279a-438b-a542-84ced6479026",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "323e256c-6da5-4bb4-b758-1804034d1a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c503e9-da19-4e5b-8208-b9e2647ed718",
        "cursor": {
          "ref": "c31eb991-9841-4ddd-8fa8-0ec45df1a9dd",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3953d4d6-0e5f-4b29-bf70-1c38d20d2edd"
        },
        "item": {
          "id": "a9c503e9-da19-4e5b-8208-b9e2647ed718",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b794e863-4bf9-46cc-b433-0ed8d2cb5a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84b7611-8b71-4729-9906-4df617a9710a",
        "cursor": {
          "ref": "9870cd75-546b-4ab3-b7eb-683b48e080fe",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "55f73796-90dc-4887-b4a9-78439458d89b"
        },
        "item": {
          "id": "d84b7611-8b71-4729-9906-4df617a9710a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6f0e7f55-2345-4f40-aad7-dadc6f863a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ad8b54-cc72-4c43-9cbd-e365fc21f59e",
        "cursor": {
          "ref": "0ff8c4ac-c239-4755-b93b-69aaf1ffdec4",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d565af43-8005-4b15-8737-a6e39cd6d1bc"
        },
        "item": {
          "id": "20ad8b54-cc72-4c43-9cbd-e365fc21f59e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eac848c2-2f38-46a0-95a6-5a432989c584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c01f0db-f7ef-489e-af52-aad0db096baf",
        "cursor": {
          "ref": "55d02f8c-3a77-48f2-a0ed-df177c665235",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f4b2ee36-4cc4-41d4-a2f5-3c2566839511"
        },
        "item": {
          "id": "2c01f0db-f7ef-489e-af52-aad0db096baf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0d244e18-b758-464a-895c-8f3d29733c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31be47c7-7bb6-43a9-9de2-0fbf291339b3",
        "cursor": {
          "ref": "07e58c41-60ec-482c-b531-25e9e8e8c8de",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "59902cae-907a-4529-b136-f0ca30224920"
        },
        "item": {
          "id": "31be47c7-7bb6-43a9-9de2-0fbf291339b3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c1af1c20-77a7-42af-aa0a-b4f64b9f8162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f447b833-6c54-4eeb-a327-17e1dfc0164b",
        "cursor": {
          "ref": "ebd6ca95-c73e-4177-beb9-b91f1badcddc",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "12ebe499-da0a-44e2-a744-4f60fb9e0308"
        },
        "item": {
          "id": "f447b833-6c54-4eeb-a327-17e1dfc0164b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d72f7c3c-10a0-45a8-958f-b8bc1496624d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43834ef-1954-4655-b332-880e7a22bf9d",
        "cursor": {
          "ref": "168a34cc-de27-4378-ba88-cb07c2dbe197",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5a33ac28-b59c-4f7a-9cbd-9aa9b881848e"
        },
        "item": {
          "id": "d43834ef-1954-4655-b332-880e7a22bf9d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7e680009-6f5a-471d-b64b-096e83024870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beeb5a6-ec5a-4587-803d-bd182e429ad7",
        "cursor": {
          "ref": "5babbb8d-c6df-4999-8ec3-016430cbf5f4",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9c70a452-a4c9-498c-80fe-9661b555f538"
        },
        "item": {
          "id": "7beeb5a6-ec5a-4587-803d-bd182e429ad7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d42001a4-a671-43ea-af8d-684d31601134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfd5dfa-708e-4354-b1a5-8aa8274173f4",
        "cursor": {
          "ref": "37fa4191-1595-4529-9898-525287ffcd45",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8ed6db0b-93e8-4ea6-881f-b9e49068a4eb"
        },
        "item": {
          "id": "ccfd5dfa-708e-4354-b1a5-8aa8274173f4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bf7a6b37-e813-48d5-bd31-4c17d5ceadc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e094f102-7dbc-444e-96ea-80284f3bcaf7",
        "cursor": {
          "ref": "dd76ee7a-2a85-4e56-839c-192847958012",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b859829e-1273-4b0c-8e0f-afb5440f1274"
        },
        "item": {
          "id": "e094f102-7dbc-444e-96ea-80284f3bcaf7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "caf57f2a-42c6-4894-8850-aa3ba26ae15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df285971-5e8b-4c6c-82e0-03475db243fb",
        "cursor": {
          "ref": "2a82c8b0-9ccf-4e2d-be6b-61c6f70a8c32",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "36ed219a-8876-4250-8e37-1f8d94e4f1b2"
        },
        "item": {
          "id": "df285971-5e8b-4c6c-82e0-03475db243fb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dc96d89d-8067-4913-9952-cece178a5bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa20ef8b-ca3f-4181-8c87-76b6dd27f546",
        "cursor": {
          "ref": "affde50a-835e-44ab-9477-b7a574cf01be",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1f36229b-e5b9-4e66-a1a0-cc3f62708f54"
        },
        "item": {
          "id": "fa20ef8b-ca3f-4181-8c87-76b6dd27f546",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9955c752-cd42-4dac-a067-0d6dd422902e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1f4794-438c-4ac7-98c5-c16d48f75185",
        "cursor": {
          "ref": "107faa1e-ca1d-408f-bca9-bc039567949c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "259c1360-dc4c-481a-930f-f05ca97f30a4"
        },
        "item": {
          "id": "3b1f4794-438c-4ac7-98c5-c16d48f75185",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a1ea0fdd-431e-4ca7-9aa4-9bbd884693a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b13160-a000-41a3-beb1-50d345d1b4ca",
        "cursor": {
          "ref": "a91687c5-1abc-4ea8-9c62-f858436ff81f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "37e7fa8e-116b-46c7-8c16-58d450e36222"
        },
        "item": {
          "id": "06b13160-a000-41a3-beb1-50d345d1b4ca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "86076802-b938-48ec-b6b9-a16bcbf6c750",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8764cae3-d88c-4309-8ec7-96be07722a5e",
        "cursor": {
          "ref": "553e89ac-ff09-42cb-926d-4693a09865b8",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ab66e272-49a3-45cf-9eca-87a35d9f1abf"
        },
        "item": {
          "id": "8764cae3-d88c-4309-8ec7-96be07722a5e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5a45e417-b98d-4832-8b3e-ec6b5d6dfd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533cc33f-6a14-4699-b5c4-e09f783c256e",
        "cursor": {
          "ref": "b7f3167b-8265-4e68-b9db-432663bde73f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0f4e1ba9-b8f7-4768-a8a3-7c8045db390d"
        },
        "item": {
          "id": "533cc33f-6a14-4699-b5c4-e09f783c256e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "22d6ef25-ce4a-4562-b894-a5c9bc357d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93c2f2b-6854-4cae-986a-992d6e13413d",
        "cursor": {
          "ref": "b926d006-349f-4e0a-873b-75281c696d49",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3b0b482c-e9af-412d-aa91-d4b67868e6e0"
        },
        "item": {
          "id": "f93c2f2b-6854-4cae-986a-992d6e13413d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0c995f73-4fa3-47d5-bc1a-f2a26aecf74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8450c18-29fb-480b-91e3-4f3581ba1a14",
        "cursor": {
          "ref": "332c2b4b-c682-4953-bbaa-7707e54bd9f5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47c6e3a0-fd74-4071-962c-1f8aa976accb"
        },
        "item": {
          "id": "e8450c18-29fb-480b-91e3-4f3581ba1a14",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc5b84e8-80f4-40b6-93f6-66d86accac4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c13a813-9a14-4be4-adfd-fbb949c16570",
        "cursor": {
          "ref": "343c57e7-a3ae-4805-b5d4-71a9546f03c9",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9b84bda7-c661-4247-af26-bdef9ff17eec"
        },
        "item": {
          "id": "0c13a813-9a14-4be4-adfd-fbb949c16570",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "10a6cb8a-013c-4c5f-8c1a-ed03902df781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40123264-92d8-452a-afe3-fa5aa5d19c37",
        "cursor": {
          "ref": "3e222679-0e0e-4dbb-bdcb-cee708f49948",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b538a2c2-30c8-47f9-aae2-5f45cd54d352"
        },
        "item": {
          "id": "40123264-92d8-452a-afe3-fa5aa5d19c37",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0c17467b-06d4-41cd-aaef-7368f883b5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ba8a80-6b48-41b0-9d20-b7807aabec35",
        "cursor": {
          "ref": "c25017d6-b4c2-436a-a1ee-d2399d961a30",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ec0bc880-96a1-44fd-b6fd-abab7edcd822"
        },
        "item": {
          "id": "73ba8a80-6b48-41b0-9d20-b7807aabec35",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cfe9a49b-1d38-43e5-b1f1-753592097870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e46eef-90f7-46b2-a769-61a7af3897ca",
        "cursor": {
          "ref": "8e50442c-cfc7-485a-ada3-d8fdc95518ef",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c368f220-b0c7-437b-af8e-88aa0f854010"
        },
        "item": {
          "id": "f6e46eef-90f7-46b2-a769-61a7af3897ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2d337af2-2800-4fa1-b1d3-efbacf556a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a893c1f-f203-49b2-a671-6bbca5d2a9a3",
        "cursor": {
          "ref": "2af47f4a-527d-44aa-bf2a-f5f97caae34c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4ece7630-27c9-44c0-8706-f738ce0d6ceb"
        },
        "item": {
          "id": "7a893c1f-f203-49b2-a671-6bbca5d2a9a3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "39ee6af8-5db8-40a2-bd9a-03c5ce881c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9867d791-1d5f-42d3-97f5-c5ed22218b20",
        "cursor": {
          "ref": "3c942d01-b68f-421c-830b-554629111516",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "82fae353-37c7-4089-8422-887760718331"
        },
        "item": {
          "id": "9867d791-1d5f-42d3-97f5-c5ed22218b20",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c15571aa-765d-4c24-923b-185832cbf22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9257b052-9f4a-4f9c-ac6c-0b853126b773",
        "cursor": {
          "ref": "128cb392-a4e3-40fd-9e39-5d6fe7b809f5",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4312e785-60cc-49c8-b724-a8968b1af97f"
        },
        "item": {
          "id": "9257b052-9f4a-4f9c-ac6c-0b853126b773",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6ef15bd2-3ae1-428b-9658-88133ab67361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541770a2-0b78-44cd-bc51-d7bf9d97a2ea",
        "cursor": {
          "ref": "e880a1e2-db89-4efa-b901-052a1bd41ea9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "22e11d21-f692-4662-8b07-2fdcef57d10b"
        },
        "item": {
          "id": "541770a2-0b78-44cd-bc51-d7bf9d97a2ea",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9addf724-3c94-49a8-8039-b3ac3267d8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb0b8b8-98dd-421d-acae-e057bee3b6e2",
        "cursor": {
          "ref": "0bbd4e73-a463-4f07-a9db-399b1409e90c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aea24c19-2a2b-47a2-9dcb-d8a4949398e8"
        },
        "item": {
          "id": "dcb0b8b8-98dd-421d-acae-e057bee3b6e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fb3596b6-63ae-483c-8a83-8acaf60a2c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c8dd79-7978-495c-9780-0d4205814ec4",
        "cursor": {
          "ref": "bde51779-2fc8-4a2d-bc23-289e6bf7e2fd",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2fd67562-c901-498d-ad9d-fdadbcc0f83e"
        },
        "item": {
          "id": "a4c8dd79-7978-495c-9780-0d4205814ec4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "10180803-480c-4115-b5bc-400e4f20114f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21eb7b08-ec10-461e-9d52-f9c843891a62",
        "cursor": {
          "ref": "5b048ccd-582f-451d-a927-da2473f9ecad",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "948d3c7d-975f-45e8-b205-8305039545f8"
        },
        "item": {
          "id": "21eb7b08-ec10-461e-9d52-f9c843891a62",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b79ea5e5-3af9-4990-b41e-735160980789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e6b412-e166-4146-b4e0-e890319e21ce",
        "cursor": {
          "ref": "8cfea2bc-fa85-4d1e-98d7-ecc9b6b4ea8c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f85f6572-b72d-4ef8-89bc-152bd7bb8340"
        },
        "item": {
          "id": "59e6b412-e166-4146-b4e0-e890319e21ce",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "91a63006-fcbe-4817-8655-0050bbf83b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff67403-0ea4-494a-83ae-fc6d6f98b4c7",
        "cursor": {
          "ref": "4600f081-aaed-4316-a8ae-4f4a455b3e73",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "466e0a2a-4789-4159-92b3-42cfe3b86b06"
        },
        "item": {
          "id": "bff67403-0ea4-494a-83ae-fc6d6f98b4c7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "872a4944-71c0-4a40-8f36-3863bde40f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242bf54b-eec6-49aa-a1fe-8b527ddafd3d",
        "cursor": {
          "ref": "9f871634-e392-47d4-95e6-46204ef48036",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f5f01109-4855-4961-b5a8-68a238763737"
        },
        "item": {
          "id": "242bf54b-eec6-49aa-a1fe-8b527ddafd3d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e878ebe0-188e-46e4-9d4a-98c6e6531338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b47d69f-f222-4419-9094-6c9565266acb",
        "cursor": {
          "ref": "044266a7-e55c-4348-aaa4-ac562d2e1e1f",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9119bc32-5bf7-4560-b02f-f2e02fa02f55"
        },
        "item": {
          "id": "4b47d69f-f222-4419-9094-6c9565266acb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "efc8f459-245e-4502-84b1-e548d5b7ab20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb54cdb5-8a95-43a1-b8ac-a3534f5895a4",
        "cursor": {
          "ref": "2a1be1fd-a462-423b-aa04-a9c8f5168671",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cb203bad-01a6-4312-9e71-a578c9371a53"
        },
        "item": {
          "id": "cb54cdb5-8a95-43a1-b8ac-a3534f5895a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7cbbf604-7af7-4c9b-8f1b-584cbac66eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5c14fd-0014-453f-b4a9-9781436d23c9",
        "cursor": {
          "ref": "c0838210-7852-4d8e-8ddc-5ac809bd7922",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6ad4044a-1fb7-4993-92f6-4c5625e4a6a8"
        },
        "item": {
          "id": "0a5c14fd-0014-453f-b4a9-9781436d23c9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "94135645-23ce-4ca6-b94f-a3944d349da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87e977b-9ba1-4837-bc63-e1e8eff67fbb",
        "cursor": {
          "ref": "d4e26b84-d7ad-49ad-b467-17a1bf63e9c7",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7fcb2897-29d7-4bb8-bfc5-85fa96f352c3"
        },
        "item": {
          "id": "b87e977b-9ba1-4837-bc63-e1e8eff67fbb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f489044f-0089-4a9e-9382-81565d035a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0280cc59-f725-4d36-959e-6faddd2e0303",
        "cursor": {
          "ref": "51a0ba4a-03e1-4e33-be7a-03f9a118fe29",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6ddaa392-dd23-48cf-93e5-a0ecd0b782e1"
        },
        "item": {
          "id": "0280cc59-f725-4d36-959e-6faddd2e0303",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bc249079-de2d-45fa-b5c4-29cbb34ecedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cfcdf5-75d7-4fd2-88d0-a0c8e0146b1e",
        "cursor": {
          "ref": "c53031bd-9aae-454f-a7fb-11fcdbf514ef",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9a44482b-0410-42f8-8a5a-ae15010c4a43"
        },
        "item": {
          "id": "d8cfcdf5-75d7-4fd2-88d0-a0c8e0146b1e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3e0acea0-334d-42b3-bba4-a8d030e6068c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fea4b6-3488-43bf-bfdd-b4eed168da65",
        "cursor": {
          "ref": "f2048978-444e-4bef-90c7-896c95396e96",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a15c657d-efc5-4f36-8ac1-0c6958aec3b5"
        },
        "item": {
          "id": "e1fea4b6-3488-43bf-bfdd-b4eed168da65",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "957c64e8-76fc-4662-a648-644abf6c80f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354d3635-c19c-4465-b684-b2a2186cd7f4",
        "cursor": {
          "ref": "7aff864e-5ee2-4268-b8a5-1e1bd8d9a36d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1549bfcd-fb47-4dad-82c6-2440ce4e4af1"
        },
        "item": {
          "id": "354d3635-c19c-4465-b684-b2a2186cd7f4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "436c0780-acfc-437a-87a0-3e0f4c22b73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bf9293-9ca7-4da4-9a6e-9e1a6225fbd4",
        "cursor": {
          "ref": "8ab20eb6-55f3-4488-8e70-536fa392e86e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e428c1fc-cfea-48ee-918b-c3cb7d299635"
        },
        "item": {
          "id": "31bf9293-9ca7-4da4-9a6e-9e1a6225fbd4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "72486f33-0a0c-4020-85d2-8290995a3538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd34848-b391-47a9-a22a-0192ca9da031",
        "cursor": {
          "ref": "d8750c8e-910e-411e-835e-7ca3d3775031",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fefbcfe6-1cfe-4846-b172-3df9bd556f60"
        },
        "item": {
          "id": "6fd34848-b391-47a9-a22a-0192ca9da031",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1ea3d7ab-6448-4332-94e4-cc77374408a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808aa19d-72b8-4b55-b9e7-429750c62cd9",
        "cursor": {
          "ref": "69be825f-df76-42dc-9fab-0f1df28e47a7",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3351e1e8-0a8e-48ef-b037-894f4f6b9cb2"
        },
        "item": {
          "id": "808aa19d-72b8-4b55-b9e7-429750c62cd9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "667ccb23-982c-4ac3-a130-b5b04a127e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4754e71-8a3a-473d-93dd-5c1a909b82cd",
        "cursor": {
          "ref": "2cd4ae06-7922-44cc-ba27-ce84dd2aef63",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3b2a2e29-8f32-4f94-b58f-618045103ff3"
        },
        "item": {
          "id": "c4754e71-8a3a-473d-93dd-5c1a909b82cd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "382e3eec-988c-4d1e-8f29-2f7e8bda066a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407caaba-610d-4562-ba36-2fb7ff46b9e8",
        "cursor": {
          "ref": "a48ad9f7-2b74-4f60-bd08-8450e22bb1aa",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "082aa6ac-aa75-470f-968c-6874a7189ae0"
        },
        "item": {
          "id": "407caaba-610d-4562-ba36-2fb7ff46b9e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "97a81f80-5f5b-4c40-b178-d879ea7c68bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e32f9e4-455b-4a43-bccd-731ab0b25dba",
        "cursor": {
          "ref": "eafcdfcf-9131-4c24-9060-e00e7d173752",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "be8222d4-93e5-4042-a27e-786bead1d03a"
        },
        "item": {
          "id": "9e32f9e4-455b-4a43-bccd-731ab0b25dba",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "83c15d84-b6c7-4647-8997-cd526655bfc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa906a1-9c71-4232-812b-e4df5fb59c4a",
        "cursor": {
          "ref": "eb3cb5fa-cdfc-459f-b2b1-50906c4f26df",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "beac5401-8dc6-417a-b5df-05cdd9dd06c8"
        },
        "item": {
          "id": "3aa906a1-9c71-4232-812b-e4df5fb59c4a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b0b70b4e-99bc-4bdc-a64d-b47d0a7982d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6299eb69-48ea-4d8c-a209-1a6799f0b562",
        "cursor": {
          "ref": "5935c911-aa05-49a9-8112-7a7fb0d3caeb",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "31431afa-e27f-4050-934c-f7ed438ad312"
        },
        "item": {
          "id": "6299eb69-48ea-4d8c-a209-1a6799f0b562",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c4cf21ee-9cf8-4361-bbe3-62b8e53cee80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c3b3b5-932a-4f87-8c83-5eb8c6901b29",
        "cursor": {
          "ref": "43c2d1c3-48f7-4125-9049-2784450cd6d5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bed60dfc-5e46-4210-a0f8-adc855aeb4fe"
        },
        "item": {
          "id": "b9c3b3b5-932a-4f87-8c83-5eb8c6901b29",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dd671b4e-f082-491b-8483-56b5ce17e1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd833d3-6f2c-4fb6-8bc9-fa180519a832",
        "cursor": {
          "ref": "bd8ae8dc-2658-4c20-839c-5ae691ba511e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "59cc2c0a-4298-4fc6-bf2f-fcdc2a863a74"
        },
        "item": {
          "id": "1bd833d3-6f2c-4fb6-8bc9-fa180519a832",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e0075530-3e49-444c-be89-2db3cafaaa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7b4dc0-8274-4337-8d96-939f367c39b5",
        "cursor": {
          "ref": "9b45c300-32ed-4b40-8080-e10586cb6d10",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "354a4e35-f673-4685-afd8-95e0a753d647"
        },
        "item": {
          "id": "aa7b4dc0-8274-4337-8d96-939f367c39b5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a89970c9-cc3b-4ae1-a23e-88dd1d872f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b290a06-d2c3-46bd-9ee9-4a536dd31ef8",
        "cursor": {
          "ref": "827e6562-945a-414d-be82-6163fa069ca7",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f40c1cb0-f4b2-4605-9867-120999d03624"
        },
        "item": {
          "id": "7b290a06-d2c3-46bd-9ee9-4a536dd31ef8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5db08560-70a8-4a04-a5d1-6cd3db69bd53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117114a3-091c-429f-9e80-b6c2c4f89051",
        "cursor": {
          "ref": "d4bd5c08-6a2a-41a9-8374-f86007e3922f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3eb259bc-2fdf-4359-b280-e5111e385d5f"
        },
        "item": {
          "id": "117114a3-091c-429f-9e80-b6c2c4f89051",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8c2bf8b1-0c50-427a-a3fa-950e91f0fc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8737c4b-1e12-402a-a494-904626a75af1",
        "cursor": {
          "ref": "08668e47-8d77-45cf-91e9-ac1839400650",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "273111e0-1ea5-49a0-9fac-da5d453eb241"
        },
        "item": {
          "id": "b8737c4b-1e12-402a-a494-904626a75af1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8f17e485-0dc6-4d0e-b756-701e97658b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839529a6-1032-463c-b381-1624c2eda838",
        "cursor": {
          "ref": "3a958bec-536d-497c-9a2a-7c0a5bd0a4f2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5e50fe85-e5d8-4ef1-bee1-7dae7aaca85e"
        },
        "item": {
          "id": "839529a6-1032-463c-b381-1624c2eda838",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8c42d14d-6815-488c-b557-cdd694e49cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd098a0c-9f9f-456f-ac8d-482978b643e6",
        "cursor": {
          "ref": "607365e7-6944-4f5f-99de-dbe4344c7804",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c29a2747-bd7f-4ca3-8cb7-e22e8d4c59d2"
        },
        "item": {
          "id": "cd098a0c-9f9f-456f-ac8d-482978b643e6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe07e3ed-869a-4581-9fcb-4d5d29655228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675a92eb-2f55-4e8e-8694-4dd446f9351b",
        "cursor": {
          "ref": "2583d69d-353b-40c8-8272-9f4b1f9cd7bd",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "28a61897-10d6-4441-ab4a-39a91f70ef7a"
        },
        "item": {
          "id": "675a92eb-2f55-4e8e-8694-4dd446f9351b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bb6b9436-7462-472b-8e6b-58ab0ff2b514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ff4f3e-2d67-44a1-922b-9abec3aecffc",
        "cursor": {
          "ref": "0cce199f-e6fc-40d9-94c6-53949d48e81d",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "24aafe09-1b71-47b5-9a30-74c436e60bce"
        },
        "item": {
          "id": "76ff4f3e-2d67-44a1-922b-9abec3aecffc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "380f1792-7ea8-41a7-8fd2-dafa837ed3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce83854a-4238-421f-ba82-1ef4fb165dfe",
        "cursor": {
          "ref": "dea14592-fb9b-46dc-b937-9c602fa87c52",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e64844c4-dfec-48f6-b1a0-c5dc7997001e"
        },
        "item": {
          "id": "ce83854a-4238-421f-ba82-1ef4fb165dfe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "80b05749-07c9-4344-9729-4f513cd730a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83e66f9-45ea-4623-80f2-94ceaaf04f52",
        "cursor": {
          "ref": "f8882ee0-290f-4ca7-86d9-16533020a06c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ed170d6f-18d2-487e-aaef-ebab10b128fc"
        },
        "item": {
          "id": "c83e66f9-45ea-4623-80f2-94ceaaf04f52",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7023ca55-123d-4083-be70-2009af4c5086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d876111-8471-42bb-9cf8-4902cd2f977a",
        "cursor": {
          "ref": "7f93c4a8-b358-4592-b133-c558dfb6bb31",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9a31babd-49a1-4f97-8df2-0d19ea6f0c11"
        },
        "item": {
          "id": "9d876111-8471-42bb-9cf8-4902cd2f977a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "38b11939-24eb-4a04-b63e-3fe2a43feea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b8956c-1b1d-4028-b4a0-11e35f59fa7a",
        "cursor": {
          "ref": "103e3694-cc3d-4164-a6da-d5c704bbfeb4",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "435f76a7-0f2d-4920-94d5-d912ec0a8965"
        },
        "item": {
          "id": "e3b8956c-1b1d-4028-b4a0-11e35f59fa7a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9c8976ec-13af-4a38-80f2-2e3fc5fff19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebce128-6f0f-4dd4-a547-4aa5f0cf4060",
        "cursor": {
          "ref": "517fcb10-b082-4be5-9d74-c7ca14ff701a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9026c413-21a9-4065-bdf5-5cb1189c8f08"
        },
        "item": {
          "id": "cebce128-6f0f-4dd4-a547-4aa5f0cf4060",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dbcd162e-6432-41ff-9f8a-eaff02a7b6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719ffdb2-0832-4a4e-9216-210d657e371b",
        "cursor": {
          "ref": "4c31bc78-e1f7-4523-bd20-937283d13175",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2a3404bc-4502-471e-a882-302286b654ac"
        },
        "item": {
          "id": "719ffdb2-0832-4a4e-9216-210d657e371b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bff66b2b-16a6-410f-af79-79761949b14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27a7560-5821-4050-93dd-ac7c00cd57df",
        "cursor": {
          "ref": "c77a226c-17d4-459b-b25f-d07a0ce70eda",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4fcdab6e-1b93-4e53-9603-09a141e73d68"
        },
        "item": {
          "id": "c27a7560-5821-4050-93dd-ac7c00cd57df",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "80eb6551-c0cd-45a6-848d-ea4e6d6e74a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6984639-13e8-4d5e-a9c9-e8d2f1157f42",
        "cursor": {
          "ref": "d826bc01-2612-4a05-8b55-27245ff6765f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "56e229fc-93b4-4478-87bb-17096203036a"
        },
        "item": {
          "id": "d6984639-13e8-4d5e-a9c9-e8d2f1157f42",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "69381303-a6ca-4bb2-a8ee-6a64add3a970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266ace7f-3bc6-4fab-a4f2-2a52dfc43324",
        "cursor": {
          "ref": "00051235-c806-4e03-b4dc-e50ae46d8d80",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "252c83bf-f389-411e-a5c1-3bb4fe0a8115"
        },
        "item": {
          "id": "266ace7f-3bc6-4fab-a4f2-2a52dfc43324",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ef623bd8-013b-41f9-bf93-273ce16c1ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb97285-3e89-4cd5-ae6e-f2ca1abf6394",
        "cursor": {
          "ref": "db6bbd25-64a4-42fe-b1c8-c1d74cbd6b64",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e1bc5313-a35d-4628-905e-6e9824276302"
        },
        "item": {
          "id": "4fb97285-3e89-4cd5-ae6e-f2ca1abf6394",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1a5c4da0-20a6-4d3a-b69b-e495995a9c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef56f03-5b39-40fb-a42c-335e9cc360c7",
        "cursor": {
          "ref": "c520ebef-139e-45d4-a6b5-647c27e156d9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "edca476e-69f2-4a24-9c49-17ca103bbf1c"
        },
        "item": {
          "id": "8ef56f03-5b39-40fb-a42c-335e9cc360c7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5e3ebc7e-3f3c-43de-a6e1-20db4bb6703e",
          "status": "OK",
          "code": 200,
          "responseTime": 315,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "370f3336-37cb-4f9d-92e6-d51f8b454bd5",
        "cursor": {
          "ref": "7635953c-815f-4cdb-a184-10015d0c8a0e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "aa825e7b-c878-428a-b5f4-c9a945003b4e"
        },
        "item": {
          "id": "370f3336-37cb-4f9d-92e6-d51f8b454bd5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "440b14e3-4f4c-4aa4-ae16-d71b3435cf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae2189e-7118-4a4c-99e4-40b8c16a21af",
        "cursor": {
          "ref": "d811dc98-389c-46e2-bae4-032c00bc090c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "187bdb06-2885-43ef-8318-c695aa91e7a2"
        },
        "item": {
          "id": "7ae2189e-7118-4a4c-99e4-40b8c16a21af",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9ed92d1e-289a-4e4a-bb3b-4dff32215c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32f6e17-0f08-4023-be25-52c616b842d7",
        "cursor": {
          "ref": "bec9a788-243c-4b51-a972-9849e2f60d3c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "947bd6c1-b68b-4e93-91df-0aed3530430d"
        },
        "item": {
          "id": "a32f6e17-0f08-4023-be25-52c616b842d7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f40037aa-4b94-4c76-8d25-d402a8a1ec13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a1bae7-5c40-4bda-af99-86bc744ce4d6",
        "cursor": {
          "ref": "49165b0e-917c-4c16-869b-4429e2afba2f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5fe28332-f258-480e-bb0e-916436ba636d"
        },
        "item": {
          "id": "45a1bae7-5c40-4bda-af99-86bc744ce4d6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "86232b90-97ee-4419-a8aa-8e1565787c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cb0ab7-978c-4e85-9bc5-4ed8afdeb2ef",
        "cursor": {
          "ref": "a962beba-0418-4ded-a9f6-ec6da9b1aeed",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9c39be83-a657-4903-bc68-dbf64302c94c"
        },
        "item": {
          "id": "d8cb0ab7-978c-4e85-9bc5-4ed8afdeb2ef",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "910c09ca-21b2-4ad6-a055-4cc965e7dd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b8b767-f1de-47fc-bd7b-81d71e33311f",
        "cursor": {
          "ref": "9ee0b12c-1358-41f8-8eaf-4c0978cc8d81",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "227bf672-4884-4fe5-b5c7-4ed8d868868a"
        },
        "item": {
          "id": "03b8b767-f1de-47fc-bd7b-81d71e33311f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8bc11b08-cbfb-4926-a552-eeca7e06a625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb368e6-b96e-431a-93e7-8e464f1bb4bc",
        "cursor": {
          "ref": "5f959eb9-4403-4125-8579-687a8e19cb6f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e7d1d3ab-f354-4300-8aff-d6a53ddcfd0c"
        },
        "item": {
          "id": "abb368e6-b96e-431a-93e7-8e464f1bb4bc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "824e72e0-c28a-484b-81d4-a1650601287f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3194435c-59f3-4c14-b6e1-7e3dfa02b7aa",
        "cursor": {
          "ref": "e7105c61-4098-4e7a-8cd5-00d0fd7c6913",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5185eeed-dfaf-4f92-8dc9-1911ad40ae38"
        },
        "item": {
          "id": "3194435c-59f3-4c14-b6e1-7e3dfa02b7aa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "29d79117-9637-4ff1-bb38-81bd15c2837b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429c4224-1891-4de3-aeb5-44a90df42a00",
        "cursor": {
          "ref": "a1c231c1-6275-4fed-bb5e-e55c09a7f54a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e523d234-9ee2-4baf-8426-fe9b8c3f42ef"
        },
        "item": {
          "id": "429c4224-1891-4de3-aeb5-44a90df42a00",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "26387b33-e9ce-4dff-a491-177ecda23812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49603c70-f4fc-4dbd-aad8-85b3a861ff33",
        "cursor": {
          "ref": "ddc3a3c1-49d3-41df-99d0-89937a24e0a3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e4a29f58-7bd0-401a-a8fc-99de985d16e4"
        },
        "item": {
          "id": "49603c70-f4fc-4dbd-aad8-85b3a861ff33",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "103a3133-27fc-4e80-9a71-589878c6d6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c579809d-dbc1-4b91-9738-afb25c19e4c3",
        "cursor": {
          "ref": "09264b43-bb0a-4e9a-84d9-ef47e26b7bcb",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9bb4e280-8e0e-4455-9094-a7b614a47dbd"
        },
        "item": {
          "id": "c579809d-dbc1-4b91-9738-afb25c19e4c3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f01bb294-7af7-4fb8-8081-8acba55af486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9cfe73-d319-41ff-a65d-962cc2de633c",
        "cursor": {
          "ref": "06cfdd18-a96a-4a7b-ba3f-5f67b7b61328",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "398c2772-e2c5-440a-aa58-898ca8f278cf"
        },
        "item": {
          "id": "6a9cfe73-d319-41ff-a65d-962cc2de633c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e27476cf-c21b-4055-8c34-0dc610593d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5e9376-7f6a-47b2-a6bd-000d8f34ad96",
        "cursor": {
          "ref": "68ab67aa-c3bf-4a89-8e78-0a820dde2d75",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c09fc08f-1b92-4c4d-9c3f-4217c37f49ea"
        },
        "item": {
          "id": "7e5e9376-7f6a-47b2-a6bd-000d8f34ad96",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1601f113-27d6-44e0-be28-886e502be7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a14548-e873-46f9-aade-d71549282168",
        "cursor": {
          "ref": "9b6f8f5c-d90c-470c-909d-84f7a995cbbd",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "78e9bd62-3dbb-4312-b3df-a4459a183e4b"
        },
        "item": {
          "id": "06a14548-e873-46f9-aade-d71549282168",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9dbde8ec-c2a5-4983-827c-557a82445fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd51c739-6288-4a58-85f5-8b4356242d5e",
        "cursor": {
          "ref": "fd2441e0-3b4f-4882-9714-9b5e0c837c8b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "86814b1b-deec-477c-a058-32b13834dc0e"
        },
        "item": {
          "id": "fd51c739-6288-4a58-85f5-8b4356242d5e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "91593c35-fc9f-441b-b2b5-a856d63ada4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd1d888-a0b8-4166-a437-58f030ac4a68",
        "cursor": {
          "ref": "eab0f577-59f4-406d-881c-f8ba80600a22",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8973613f-fbed-44fd-aa80-6efd643fd17d"
        },
        "item": {
          "id": "9cd1d888-a0b8-4166-a437-58f030ac4a68",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4193fab0-770a-463e-bee6-ad77d07fb5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c189a1-e2bb-45f0-a50e-4425119d4285",
        "cursor": {
          "ref": "5d40bfe1-f8b7-4b35-b2a4-e6b4ff288d1c",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fe1511c2-ce8e-4d20-8cc1-7bc71ba7a15e"
        },
        "item": {
          "id": "a0c189a1-e2bb-45f0-a50e-4425119d4285",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f0840dc6-80b0-40e0-866d-8fc2afb385a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb9f7a1-8a0f-4294-824b-e8357455c729",
        "cursor": {
          "ref": "012d71f0-6734-45f2-b252-6e7a00c493d1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bc53637a-b97d-407f-bcd4-a8e7b2dd746f"
        },
        "item": {
          "id": "0cb9f7a1-8a0f-4294-824b-e8357455c729",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "87184aac-99b0-436d-9fb2-c3588ab1e36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29edc6f8-7fab-4eae-a133-3178d90055f7",
        "cursor": {
          "ref": "0c7d5be3-70bd-415e-9137-ce846272e34c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ab714d25-43cf-41b6-95be-bb4312ed2625"
        },
        "item": {
          "id": "29edc6f8-7fab-4eae-a133-3178d90055f7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d3eeccc6-8374-49e3-865e-9a1e1dd9f421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c5d38f-386a-4e3c-b980-3e756f0e39f8",
        "cursor": {
          "ref": "338118e6-2b82-404a-bf2a-0e433a916714",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "622750c0-36be-46aa-a002-0e7979ea6651"
        },
        "item": {
          "id": "f0c5d38f-386a-4e3c-b980-3e756f0e39f8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a3b7efce-de34-4273-b8f9-fb04866b6595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e70a1bd-cb85-42e9-97a6-bde3290f4cce",
        "cursor": {
          "ref": "f2859cd3-9a18-4295-a0cc-658bd05236af",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f50b6815-264d-4769-982b-fecc85917d61"
        },
        "item": {
          "id": "5e70a1bd-cb85-42e9-97a6-bde3290f4cce",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c1638814-73d1-486f-b699-c68860b443e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1609c003-64c2-4ec3-98d1-39e2e180ee55",
        "cursor": {
          "ref": "0bdb70a2-ca04-4384-9ee2-9fdce363f3d9",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "da70f92f-279b-4967-b1ad-064c6caf933c"
        },
        "item": {
          "id": "1609c003-64c2-4ec3-98d1-39e2e180ee55",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c714f83c-75c3-43d5-8300-e7591babce1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ab400b-8ed7-42a0-bdb9-25254172784f",
        "cursor": {
          "ref": "c101d3ac-6967-44cb-94d9-fe61cfb22fcf",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3e4be5c8-d8af-4163-96d1-d8727f8e61e8"
        },
        "item": {
          "id": "59ab400b-8ed7-42a0-bdb9-25254172784f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "69965d8b-1c24-40ba-8f81-fa2d85b862d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e76e39-ea79-475a-8566-08bd06565266",
        "cursor": {
          "ref": "8c49a4c6-4084-426e-9c6f-5f46a18b1d13",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "158927a8-5657-40c8-80d8-baadcebb10f3"
        },
        "item": {
          "id": "18e76e39-ea79-475a-8566-08bd06565266",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e103bfe7-2436-4a94-b55b-ddfaad30b418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac04788-97fc-4a72-9dc5-b6978b8e1da5",
        "cursor": {
          "ref": "1c561882-a450-433a-9362-5b3f20c19ec4",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "94e731f2-93a8-43fd-8ac4-aa5ab382e68e"
        },
        "item": {
          "id": "6ac04788-97fc-4a72-9dc5-b6978b8e1da5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7cd06ff6-9498-418b-b74d-8245bb4fd760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373b01c0-b9a8-4250-bcd8-7d1a8f377d49",
        "cursor": {
          "ref": "ed590054-85d7-49fa-99da-78737a628299",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cbd79794-2595-4e7b-9be8-460d630f811d"
        },
        "item": {
          "id": "373b01c0-b9a8-4250-bcd8-7d1a8f377d49",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ec016ccf-5576-48b9-bbf8-46dcd5a06d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98e26e0-23d9-40c9-a44f-cdc1e52c9df8",
        "cursor": {
          "ref": "3871bad2-8ff2-4730-b910-d3565ccc7718",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3187e06d-4891-4d48-afd5-0c8ac47407aa"
        },
        "item": {
          "id": "c98e26e0-23d9-40c9-a44f-cdc1e52c9df8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "51bb73bd-fa5d-4b5c-b4bd-d713b227518b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7305194-0674-4d1c-ba1a-01904268756c",
        "cursor": {
          "ref": "12af45f7-112f-4ede-9ab6-ae98fca711a6",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "54be923e-5437-490d-a4e2-95f78edeca9b"
        },
        "item": {
          "id": "a7305194-0674-4d1c-ba1a-01904268756c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "00affb00-8dee-40b2-9ff1-974f7cefc531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c9565a-7c33-4f7b-a7d0-c08e242eaf95",
        "cursor": {
          "ref": "818ac4bf-f056-4ab1-b403-d56203fda967",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "193cab2d-66cc-4424-a57b-e5bda9bfa9ed"
        },
        "item": {
          "id": "88c9565a-7c33-4f7b-a7d0-c08e242eaf95",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "877079c9-c2a4-4a19-a4ae-fdee93d0be72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaeb1482-4e46-4e53-8bc1-39d17b3721f9",
        "cursor": {
          "ref": "dc4fffc8-f208-41e8-a83e-3e7b7f7a6dd5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "96023e35-4382-4f5e-892b-9f46d741c96c"
        },
        "item": {
          "id": "eaeb1482-4e46-4e53-8bc1-39d17b3721f9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f0991ddd-025a-4dab-a5ad-2b039d647d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6eee7fa-da56-48e3-9890-0fe92c1074e5",
        "cursor": {
          "ref": "93ed12ee-fa3c-4d98-9396-9191634ef299",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "07ce6908-bed5-4b20-9b20-aad2892be1e2"
        },
        "item": {
          "id": "e6eee7fa-da56-48e3-9890-0fe92c1074e5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f64e7345-6104-4327-8e87-24db2eedaf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c5f6c9-d0d7-4bf1-8977-c4de8d3de753",
        "cursor": {
          "ref": "5e7f1787-2735-4c23-ac97-a0fa6e56f224",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dafd4236-ae3f-4a8b-b8c9-750680b447db"
        },
        "item": {
          "id": "59c5f6c9-d0d7-4bf1-8977-c4de8d3de753",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "548914c9-05a1-4186-8980-faa5653232ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fba563-3e91-456e-af3c-dd8d55ca491b",
        "cursor": {
          "ref": "5b9ac3d7-590a-41e2-8ef7-16194268f3f9",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "82666e51-65c9-4a87-b332-5f56f942e7d4"
        },
        "item": {
          "id": "f7fba563-3e91-456e-af3c-dd8d55ca491b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7bb99149-f7e5-4a91-bbbc-5853e3626986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee81088b-c40d-4f6b-8bdf-f6438841e14c",
        "cursor": {
          "ref": "0a743836-7870-4676-9026-aa74d29e7ae2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9a4db524-d10c-4d77-9a20-a13bbcda8cca"
        },
        "item": {
          "id": "ee81088b-c40d-4f6b-8bdf-f6438841e14c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9d0b4844-3a81-488a-ae46-f717e457ce67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d274118-b429-4607-ab15-3a03402d4bb8",
        "cursor": {
          "ref": "a0ba8a49-fdff-4ad3-ae8c-8ed35c9fe7ca",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0ef31988-bbc3-44e3-af00-13da128ac025"
        },
        "item": {
          "id": "8d274118-b429-4607-ab15-3a03402d4bb8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c891a831-3aa9-4394-836b-93d6a40be5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd6b11c-0db1-4530-bf2a-8b0629d3e34d",
        "cursor": {
          "ref": "712cbdbb-70a4-4aa3-94b9-ed17810388d3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9cb0f42b-9b93-467a-8aeb-876766967aa7"
        },
        "item": {
          "id": "7dd6b11c-0db1-4530-bf2a-8b0629d3e34d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "020d750c-bf7c-4ec3-be1e-ee8acdd8387e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a192e38c-f593-419a-b12b-ff46270ed7c9",
        "cursor": {
          "ref": "26e0f3e1-4270-4eae-876f-8471231b1577",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a2891ccf-a934-4223-877a-ad3b5cbe32a9"
        },
        "item": {
          "id": "a192e38c-f593-419a-b12b-ff46270ed7c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "640b5b8f-6d20-4e97-8d77-846af3120eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912fc347-7fe0-4250-82df-03067c8b742a",
        "cursor": {
          "ref": "aa146515-bd8c-4843-9f3b-39ede03e1f59",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "890483c6-2eca-4e23-83a8-b603825dda97"
        },
        "item": {
          "id": "912fc347-7fe0-4250-82df-03067c8b742a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d5f616ab-aa97-425f-b4fc-cfd8ada645d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614b7db7-7d01-41ff-89a4-e50bdcd7385e",
        "cursor": {
          "ref": "1592a4e5-f23c-4791-8e5d-101d50cc92bc",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a48e820b-0260-4c44-9236-c5ae3941d650"
        },
        "item": {
          "id": "614b7db7-7d01-41ff-89a4-e50bdcd7385e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5beec043-ae9c-4283-a174-46c77a3232ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ea99d5-a5b6-4a42-945b-22edf2a6f90a",
        "cursor": {
          "ref": "585e10be-52c3-4b0d-ae8d-647e155d5a1b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "df58cf7c-998a-464e-86fb-6b6114afbf29"
        },
        "item": {
          "id": "d7ea99d5-a5b6-4a42-945b-22edf2a6f90a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4bc04cee-8714-4fba-a12b-e5a13ea2753b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99ae8e4-f01f-49a6-89b3-2b40bddc63f0",
        "cursor": {
          "ref": "51b0a2f7-5017-417c-a8ef-557f82363dab",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "73ca6645-d43b-48f2-a791-c56b4e9a0f90"
        },
        "item": {
          "id": "e99ae8e4-f01f-49a6-89b3-2b40bddc63f0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0e678ef9-d4ad-4fd5-8027-2fb65ac2b196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c15767-8cce-4a7d-92ea-da7ebc41e249",
        "cursor": {
          "ref": "85cf9ce6-c8bf-44b9-b2cf-e89e874c698e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d2acaadc-ab70-4b68-a656-f76b3a4f4dad"
        },
        "item": {
          "id": "11c15767-8cce-4a7d-92ea-da7ebc41e249",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "741d99b0-95f4-4bc3-8627-6d21a4183355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408c12f5-4be5-4aea-a273-466bc376280f",
        "cursor": {
          "ref": "bc825a1a-4372-4e14-8c72-0f12edd1421b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4dccc66a-9d90-46ec-b2ea-542a990a364f"
        },
        "item": {
          "id": "408c12f5-4be5-4aea-a273-466bc376280f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2e946fd7-f75f-487d-bdd8-13b026d3d595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bac939-dc03-4e07-8fc0-22323286a390",
        "cursor": {
          "ref": "319ccdbd-3cec-4d2c-a52e-4dea614fbe01",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "06ef3d28-f326-4a49-ac7c-32e426c1c4e2"
        },
        "item": {
          "id": "47bac939-dc03-4e07-8fc0-22323286a390",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "06fd7b66-ac0c-4767-875e-70eea0f8537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d3558f-b343-4698-a89d-aab09a21d598",
        "cursor": {
          "ref": "d72af301-e7e3-4d67-8e8a-2f5a83121d2d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7050b953-c8dd-4409-b73e-a8b34bf5d1bb"
        },
        "item": {
          "id": "b0d3558f-b343-4698-a89d-aab09a21d598",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "aabd8e48-32a0-4acf-9e70-59ce0c056867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a398b25-2a32-40bf-b347-d6b153c1a1bc",
        "cursor": {
          "ref": "16d814a4-1b75-44bd-9a9f-441c5192d513",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e419e96d-0312-4e7f-9e26-0b870a840b76"
        },
        "item": {
          "id": "8a398b25-2a32-40bf-b347-d6b153c1a1bc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f4b9c88f-ee8c-4c1e-9353-b3b4812141c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85724dc7-24af-40f0-8c16-f84b76334f08",
        "cursor": {
          "ref": "50fc47d9-c057-4655-8384-00c4c8198750",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "24ffb33f-1df0-4a2c-923b-adf52dba58fa"
        },
        "item": {
          "id": "85724dc7-24af-40f0-8c16-f84b76334f08",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0249b36c-b593-438a-9afd-0b6e14f26ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a92c6a1-a2b1-44aa-a3f5-79e9fdf14f60",
        "cursor": {
          "ref": "100e14ac-5ed6-4631-9cac-91b0ae8bdecc",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "21099c88-178e-4541-bc6f-3c694893934e"
        },
        "item": {
          "id": "7a92c6a1-a2b1-44aa-a3f5-79e9fdf14f60",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2d2f22ea-77a8-41ce-8d1b-3f7a4e21ce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c068b7-1298-4b3c-8411-527e9d47feb0",
        "cursor": {
          "ref": "b8999c7e-e146-417c-884b-66883fa89ccb",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ef450fe9-9320-41af-8f2d-c9e38c8e3118"
        },
        "item": {
          "id": "47c068b7-1298-4b3c-8411-527e9d47feb0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cfec866d-e74c-4b0c-b93e-dce63789fe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17097141-aaf6-46d5-9ab6-3f64f8a6e189",
        "cursor": {
          "ref": "7751e642-bd9b-4e66-95bc-0e4f627bc9eb",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4fa553ed-cc3c-4010-aa40-6cd9dcaa9afe"
        },
        "item": {
          "id": "17097141-aaf6-46d5-9ab6-3f64f8a6e189",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8daa3bc6-5efc-4759-98cd-3b18897a1992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01fbd00-9d95-496f-a07b-8f5d74c6f835",
        "cursor": {
          "ref": "ef5e8165-a1d5-4b37-9d91-b4b4286b89cb",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4efc4d76-2152-4c3c-a9e1-7ec475063e44"
        },
        "item": {
          "id": "c01fbd00-9d95-496f-a07b-8f5d74c6f835",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e20d459e-b97d-4385-a45f-b24c147b0612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1deff39-0f0a-4ad1-8d66-77180f22cffe",
        "cursor": {
          "ref": "ec485e2a-80d4-423b-b25b-b27bdedc56d0",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9c1ab6db-e6b3-40a4-8b05-f355db73773e"
        },
        "item": {
          "id": "c1deff39-0f0a-4ad1-8d66-77180f22cffe",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bf95055c-69a2-4cea-b63b-232d70d01aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290372af-d662-4fec-8a1d-364ef1fed9ba",
        "cursor": {
          "ref": "591b6ff4-9b6b-4242-b6f5-2e3cd5696570",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c84f01e6-90db-43ff-8758-2eeea2facc25"
        },
        "item": {
          "id": "290372af-d662-4fec-8a1d-364ef1fed9ba",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e44577b6-f1e2-4079-ae97-ef5e28fe6933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5aace29-6946-4995-9adf-07b5c0e414d2",
        "cursor": {
          "ref": "bd82b1e6-689a-4339-a454-682b92b32c15",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7302e8c8-8c49-4af8-ac31-179c41135da5"
        },
        "item": {
          "id": "b5aace29-6946-4995-9adf-07b5c0e414d2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dc11ae7d-3b6e-4f58-b883-5406d119377e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8028c4-02f5-4216-8320-0761b657af50",
        "cursor": {
          "ref": "618e2ec0-699e-4989-a45e-47892af158b6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "309d4e13-6bc1-4d70-9cd0-26c42b673435"
        },
        "item": {
          "id": "4a8028c4-02f5-4216-8320-0761b657af50",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5d09cfba-5d05-490c-8aaa-dc5ce7043bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aecdc8-dd1a-4127-a16e-07519a022659",
        "cursor": {
          "ref": "02b4a3ed-6279-4a6b-8df9-0c9073e3755e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6c0be823-4f94-4ecd-b3d5-014b6415ad52"
        },
        "item": {
          "id": "32aecdc8-dd1a-4127-a16e-07519a022659",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8d4f0d65-0abd-4da3-b56a-3969744bcd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f497c1-9ef6-4134-8276-4911c5749f1c",
        "cursor": {
          "ref": "d8aa52fe-8c28-4b99-8976-2b07c758daad",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ddd626d2-973d-4620-a940-c543e57ab463"
        },
        "item": {
          "id": "36f497c1-9ef6-4134-8276-4911c5749f1c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef0d90ac-7b15-4841-af1a-5681ce57e269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a920795-6c15-4358-9899-4f3dc2866d22",
        "cursor": {
          "ref": "71f3c253-1bdd-451c-8bc7-917491fcfe8d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cc67a4f4-52dd-4064-8604-4c0100aebce1"
        },
        "item": {
          "id": "4a920795-6c15-4358-9899-4f3dc2866d22",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7f1d72bd-dea8-4d90-ac0c-0403384f3ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7235c95b-5666-40ec-a7f5-6359b4e33099",
        "cursor": {
          "ref": "20dfd1cd-d359-48ff-b6db-8381deed20f0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a8c5d83b-8e8a-41de-a408-a6dfe129fe58"
        },
        "item": {
          "id": "7235c95b-5666-40ec-a7f5-6359b4e33099",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c39f9ef-b4ce-4f0b-95fa-5f9e7ad02b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1f4566-3622-41c3-885d-9354d21fe1cd",
        "cursor": {
          "ref": "1355d7f2-734c-4ef1-89b1-4ec66b5cae2f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "189496a6-483e-4f6d-8b0f-cc9594c0a58d"
        },
        "item": {
          "id": "fc1f4566-3622-41c3-885d-9354d21fe1cd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f83a2d19-17cc-471b-b5b6-a647a6d1c6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ccd036-6a0e-45d1-8b9f-2153e060e05a",
        "cursor": {
          "ref": "85a56d1e-cf95-415b-b3a4-dff004c7ccab",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c82f0710-f528-420c-997c-4adeee47c618"
        },
        "item": {
          "id": "34ccd036-6a0e-45d1-8b9f-2153e060e05a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6d323647-4333-46ea-b89d-ec08bfefad76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fb728a-29b3-486a-8d90-f5df12c9d9cb",
        "cursor": {
          "ref": "ad0a3de4-a914-4c75-b131-8a7a7acc60d8",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f4de78cb-89d6-48e0-81cc-925bf137bf47"
        },
        "item": {
          "id": "09fb728a-29b3-486a-8d90-f5df12c9d9cb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fffc74ff-7fa6-4cb2-a410-3c5b89c64c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6b942b-a2ea-4480-8861-e2a8aa05275f",
        "cursor": {
          "ref": "4d4c5c93-ba97-46ab-a305-1b07bc20dfbe",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "dda67c96-17a3-4534-a279-573b3cc2f462"
        },
        "item": {
          "id": "7f6b942b-a2ea-4480-8861-e2a8aa05275f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0bc075b7-9f24-41cd-97ce-b0aca87ce11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05917870-ac7d-4c7c-99fa-44223fbf5928",
        "cursor": {
          "ref": "3a316c8e-6c25-4b48-8992-f00802a9ad1e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b70ffc12-6866-4eb7-884b-360d80e0a70a"
        },
        "item": {
          "id": "05917870-ac7d-4c7c-99fa-44223fbf5928",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "33ce0408-b125-4cdc-859c-3e0185f4dfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e15348-8e68-4a0c-8e5d-dd8ce696cfbc",
        "cursor": {
          "ref": "0df4d8d2-3e91-402b-9b9b-c5969d5fd94c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0c91a704-9446-4bfd-ae61-b723e8eb92f9"
        },
        "item": {
          "id": "54e15348-8e68-4a0c-8e5d-dd8ce696cfbc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "acad3df6-8022-4779-8e7e-e1145cbac180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01e5b51-95d1-4e9b-bead-392ffb782eb6",
        "cursor": {
          "ref": "68bafd98-6093-4278-bcf7-78fa5551c490",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9bffc189-9f61-4831-97de-f944d3c7d93f"
        },
        "item": {
          "id": "c01e5b51-95d1-4e9b-bead-392ffb782eb6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "da52a5b0-15fc-48e8-ad19-2819808c3588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34600ed2-798a-40e2-aa14-70d3bebce021",
        "cursor": {
          "ref": "a711523a-4ff5-4712-b830-1f6f4ab043a0",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a9daaff9-7fa7-4906-81d4-3b2697317d1a"
        },
        "item": {
          "id": "34600ed2-798a-40e2-aa14-70d3bebce021",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "59372a94-1011-4de0-8cb9-18239caafe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb73c205-0768-4dd9-ab1b-ff173363b8aa",
        "cursor": {
          "ref": "be653a81-72c2-4772-8352-fd5a91a3d296",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ecbb4c41-d6ea-46ac-9bc5-8049177c3d46"
        },
        "item": {
          "id": "cb73c205-0768-4dd9-ab1b-ff173363b8aa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4ec27d92-065f-4f5e-af44-d4be01a83f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0ea75c-55c7-4df0-8026-e211a6bddde6",
        "cursor": {
          "ref": "bb4bbcc4-7c9c-4f7a-8bcb-d09cab0f6ecf",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "64354fa7-6025-4b5f-9fb2-84178237f9ee"
        },
        "item": {
          "id": "1f0ea75c-55c7-4df0-8026-e211a6bddde6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ae86d06d-b1ee-4c52-865b-4c0285a7deaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dac40ef-88dd-4942-a826-a6a10baa2b4a",
        "cursor": {
          "ref": "d790816e-a80d-477d-8c27-3020d39a115a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cbe0c4ce-d47b-4b8b-a6b3-254cbe97e98a"
        },
        "item": {
          "id": "9dac40ef-88dd-4942-a826-a6a10baa2b4a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ff5bbc17-f2ab-44a2-91fd-f729abd60159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee306a19-23d9-4b27-a734-03118028e333",
        "cursor": {
          "ref": "efb316ad-d3fb-4354-bbe5-563260eb39fb",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "83c2a026-4f89-4e82-8ca7-0534da2e6c2e"
        },
        "item": {
          "id": "ee306a19-23d9-4b27-a734-03118028e333",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eb6cf729-ff60-420f-95ab-85f80111a2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb498036-2955-4416-bf22-89a34eb871cc",
        "cursor": {
          "ref": "06a14511-6fc6-4c14-a910-a98866cf8e0d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "888ae743-6040-46a2-9e3a-6ebdd21a3436"
        },
        "item": {
          "id": "fb498036-2955-4416-bf22-89a34eb871cc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ac577ad8-d50f-4a20-8448-10a279f56a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732d071d-8432-48bd-a850-cb4c99e6f6bd",
        "cursor": {
          "ref": "11f0a777-9f67-4352-b604-7ec401fa5df0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "91781862-659c-476c-aa8f-048d04e81886"
        },
        "item": {
          "id": "732d071d-8432-48bd-a850-cb4c99e6f6bd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9fd78bc5-5571-4ce2-bf9c-6329d1a9600e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c09fa5d-5ce0-4493-9a89-6cd3620468d3",
        "cursor": {
          "ref": "ab35f774-5dc7-426e-b215-2810f088f71f",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ee265190-ea1f-45d8-9b1c-5614791063ec"
        },
        "item": {
          "id": "1c09fa5d-5ce0-4493-9a89-6cd3620468d3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "302562ca-848a-4b10-9547-dd6afd684636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beae9ca-d035-43a1-bcb4-05e87d8095d7",
        "cursor": {
          "ref": "cd0a147e-81aa-471c-aeed-397dfc4d7e81",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "be538828-c203-4dc0-bf36-0a6c2ee4ee06"
        },
        "item": {
          "id": "1beae9ca-d035-43a1-bcb4-05e87d8095d7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f94a8b35-b94f-439f-9a30-146f0914aaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420961d2-888b-4848-82da-737f5aa61756",
        "cursor": {
          "ref": "152462a5-a899-482a-9af8-e64c14d8f2e3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9e78bffc-ba84-446e-ae7d-5250fe482c16"
        },
        "item": {
          "id": "420961d2-888b-4848-82da-737f5aa61756",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "63b31ad2-9e79-485a-8401-9395548edef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f5791b-7bd2-4f4d-9d14-9ba303f7f55a",
        "cursor": {
          "ref": "38668b93-f61a-4d2b-9f88-32c383f5436b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c910612e-f8b9-42ef-8980-6387e5603cc4"
        },
        "item": {
          "id": "55f5791b-7bd2-4f4d-9d14-9ba303f7f55a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1b2caa2c-f9d0-457b-b500-a865c5ba4617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419c0c44-348a-4aa5-9eeb-d97b469cf52b",
        "cursor": {
          "ref": "5e73b6c7-b069-452e-8e4e-f4417cf0ec61",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "58f4f072-79ce-49c1-bd4f-a06d6731d199"
        },
        "item": {
          "id": "419c0c44-348a-4aa5-9eeb-d97b469cf52b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eaf1df82-3cb9-4c9c-837a-b21189f05ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e407d0-eb1e-4a4e-8865-9af303f1db8c",
        "cursor": {
          "ref": "8b5853ae-84aa-4b4b-9777-62de90e75b08",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b5520a44-0a94-4fa7-82bf-0a3fbc2f29fa"
        },
        "item": {
          "id": "33e407d0-eb1e-4a4e-8865-9af303f1db8c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d96ab30a-f262-4160-b436-578c14461336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce32c23e-e141-43d4-af03-f3832a1d97f3",
        "cursor": {
          "ref": "3f3aeae5-3d28-4a59-8776-86fa66856e2e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ee5b7dcc-de97-4ace-8e1c-72520964da14"
        },
        "item": {
          "id": "ce32c23e-e141-43d4-af03-f3832a1d97f3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c96e5e58-6978-4cd6-8f99-76b4950a1aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a777a7ff-5d03-4e2e-bdba-ce895b6969ee",
        "cursor": {
          "ref": "accaf446-6fd8-4864-b8a1-444582f2562b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bb54c08e-12a9-45d6-b22d-c50971c0dfc0"
        },
        "item": {
          "id": "a777a7ff-5d03-4e2e-bdba-ce895b6969ee",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "80c4b258-e4d2-4418-8787-348619b05d6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c60cbfa-f7d5-454a-b19a-86331603d7ec",
        "cursor": {
          "ref": "748b6525-c646-43d7-b1e9-75b37d5ffcd4",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f5cd09cf-0bde-40c6-a16a-779a986d4adb"
        },
        "item": {
          "id": "3c60cbfa-f7d5-454a-b19a-86331603d7ec",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c95f69c6-cd33-462e-a723-6a61a1e63fbf",
          "status": "OK",
          "code": 200,
          "responseTime": 293,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cba067-37ae-430a-9422-5572bdde1719",
        "cursor": {
          "ref": "a4818e4a-c3dc-4e3d-a09f-d846e8752687",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bcc1d908-9a91-44f2-abb7-27e463a9cdd9"
        },
        "item": {
          "id": "d2cba067-37ae-430a-9422-5572bdde1719",
          "name": "credentials_verify"
        },
        "response": {
          "id": "087f864f-49a9-47fe-964d-558324c61182",
          "status": "OK",
          "code": 200,
          "responseTime": 2718,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8859d28d-f6e9-4cdd-8a00-9155c937c891",
        "cursor": {
          "ref": "9d263d8e-caa4-49eb-9702-d3f502a259f1",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6a6d5498-406b-4868-825d-e0ba076c5f9d"
        },
        "item": {
          "id": "8859d28d-f6e9-4cdd-8a00-9155c937c891",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "89bf4796-316f-4c01-b74d-e8f522434181",
          "status": "OK",
          "code": 200,
          "responseTime": 2698,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ddaf52-3728-4c16-9ee3-61659b90f751",
        "cursor": {
          "ref": "7c07146f-3586-42a7-856f-423922fae19a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3823fc4f-1aa5-47a9-8717-1d81cce32849"
        },
        "item": {
          "id": "12ddaf52-3728-4c16-9ee3-61659b90f751",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec95df6b-c8fa-45a1-b441-7c2855543456",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ddaf52-3728-4c16-9ee3-61659b90f751",
        "cursor": {
          "ref": "7c07146f-3586-42a7-856f-423922fae19a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3823fc4f-1aa5-47a9-8717-1d81cce32849"
        },
        "item": {
          "id": "12ddaf52-3728-4c16-9ee3-61659b90f751",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec95df6b-c8fa-45a1-b441-7c2855543456",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcca4152-60a3-4c6e-b2b9-37ad1b07d904",
        "cursor": {
          "ref": "a03eff48-b898-45b1-9c44-b11f7d620f0d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "317795ad-cee4-4335-867d-f30bc28dd93d"
        },
        "item": {
          "id": "bcca4152-60a3-4c6e-b2b9-37ad1b07d904",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fa51aab7-210c-44fd-9c23-f5e2efe5727f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24e8e2d-5e3b-4c4b-bbff-097470c5549a",
        "cursor": {
          "ref": "bbef1f84-bb1d-4903-9199-76353431c488",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c26ff006-0d58-4bd9-ad33-b8a3dbe8e380"
        },
        "item": {
          "id": "b24e8e2d-5e3b-4c4b-bbff-097470c5549a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0e056d5f-671c-4b16-829c-65f968f4baff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}