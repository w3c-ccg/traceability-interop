{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3f90ab4e-36ce-48ff-9791-4d1bc9a3b9ca",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ddf4960e-e050-4aa3-9bf0-87309c7d90fa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "725dbff6-62f0-4fed-b69e-a59ce4b43f67",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "124a38c6-5080-434f-a0e1-95c991bf7f3c"
                }
              }
            ]
          },
          {
            "id": "a4d3f74b-b1ae-4c12-91af-05945a48bc9e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfc5765c-17da-4d8b-8f59-c16c38c30929",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a456615-728a-4396-8236-fec26a4c8208"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "558b3771-76a6-4a1e-b908-943e7a26d10f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a652a957-b1ff-48a6-82a3-e827237222da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a27e8aa-e4ab-40e9-ae85-2b8067d837d0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e50ad90c-fed5-46e7-9d90-c16fcc7229df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d64b43e-9952-4f07-8b04-519427621dd4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "422e7e43-a940-4748-82d2-99f94edacef5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9339087-30a9-4f94-ade1-57bef2a20165"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "12a82716-6579-4ccd-9920-47f5fec8ea83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f39a754-3ac1-438a-bb8a-e0e67416b1a9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c5ece84-d9c1-4313-83e9-d85bcf38b1c9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "943b9528-3820-460d-9cca-b134bc3af0c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "848d4dd4-f902-4c3f-becb-82c4a0502315",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d779d19-4311-47eb-ac5c-ce6a30801d8f"
            }
          }
        ]
      },
      {
        "id": "37046100-e72c-4d97-9ef0-5834d9d43b70",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f1c9b079-a879-49e8-9d86-652ba4104ceb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97b62397-d379-4474-9095-fb83f7fbe91e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1cd2ca4e-d10f-4621-9ace-c678848969a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70532fad-8e4d-4a5c-ac77-6ddad26613a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e893f3e-f249-4e13-b4ff-79e5ad4db56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8eb875-51c6-474d-81a1-4a84700faba5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ac6128-df5d-4a77-84dd-6b64d12ea8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58f795b7-562b-4284-b578-c89d742d1f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b291297-7a8e-4d25-b3f5-902f99a490a4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed220208-f72b-4c95-99f1-a02f6f0e5a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5365c5bb-36a7-4a51-8c45-50b2bac580cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0645e9f2-5690-4447-ba52-9d7a13e78d2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef725506-780a-4872-a1db-0001ae47dc6b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8f5258-ec09-4ff1-87c0-562f5d90a571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a2eaa92-6bb6-4222-8ca0-baa66d43186c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef78198-e6a9-4e45-81ee-b46a14b3ab21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5287a4d1-f969-492d-a6c2-b2249d409afc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b5614da-1eb3-4b7d-85a2-3ab0c800aa08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5341c65b-8cf3-45c4-b1ea-0200b6e50cff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7410c6e9-f04e-40dd-bb6d-ea43dbd58bcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "18ccafba-d9ab-4ba0-b1e2-f12394615ae7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95cc4c4c-663a-4bb3-8b8e-6cb2e90244ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6e62e5ce-798a-43f2-a9e9-128d5f0af22f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "962f2ba1-ed93-467f-855f-7ca07df9d3d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8a42b7e-38bc-447a-be36-4e387ced0cb5"
            }
          }
        ]
      },
      {
        "id": "ae6b38f2-c1e9-4cb3-9911-b722682c6ae4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "885a451e-a3fe-4737-af9b-41f4a2cc7ad0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79c7e7e9-8531-446a-b27f-8082b1e5dc8c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2cdd3b17-e19b-47a4-9f71-4131f2d7d535",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464bbd79-d294-434c-87e2-97503beab57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995cec7c-c7e2-4223-b0a3-18be622af3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df853607-efcd-4d49-bff8-293855920ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faa42e1b-8152-4bf7-9c98-74a776a5ea8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf1767e-45d2-40e8-9d13-14ac942393ee",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5590e1c9-441d-4908-9c62-14e5c16ec6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfed387-4773-42ec-bb9e-7860262ef788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bb4af9-f511-4a0e-aeba-52879acef759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c1fca30-29ec-4b71-a8d8-a4542e1ecfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505e07c8-ca27-4274-be33-5966cd65b10d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd43fd4-6a45-4fbc-9239-8e4850ebef7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fef04cb-f4be-44da-9523-91b85338cb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c1530e-1dd6-4f39-b481-3a5e89005a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97cd4ad4-61bc-45aa-838c-1e31f9ea5f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b17043-8dc5-48d5-9564-2901e8278610",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9230e726-cb92-48f6-9c31-300750f1d919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c880168e-0621-4578-a7f6-66c5b6e1c774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37b29f9-a958-482e-9e19-d5a4813b5a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "461464be-bbbe-46a2-a9e7-915028a08efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11502722-0f33-4052-8312-a7492db2d403",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973be602-3f46-44c9-8647-0209d09a6638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913ff395-71a8-4dc9-a545-680abdd72172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be9d677-7e81-46f4-8489-259e16bc9ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d20bccad-7ab9-447b-a267-64b1dc0d99f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cdb83e-cbd6-439a-9008-94cf28bd03d5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273d567a-108d-4c75-bae6-be807bca2872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d64498-56cc-4ab1-b09b-43689c9a68a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7196b85f-28c1-4a86-b8b6-caa9888e9d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "520d7a65-5143-4952-8135-14c60c08a558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d231ad-4ffd-4f45-8c76-a2139c75ad81",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d022f2f8-c950-42c8-ba93-20d1d8026d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69df4ab6-bf54-44d6-ae00-38852a48f36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f30fea8-9724-419f-86aa-111013e0793a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d35312b5-6afd-4499-9ab1-2ea7a43257d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396954b4-6820-41c9-927b-30ebfec75edc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf64cdf-45ee-4fa1-bfe4-cc7c9b85e682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e326665c-e9d4-4848-9738-ea59226fd645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9841384d-7d4d-49a8-a13e-5f363ff903ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "274d777d-d415-4c17-a49b-671a00198bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c750b-8714-46b2-a335-9fa8fd366ee0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6164b2-720b-4d43-92dc-645522a8259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb987452-0687-425b-bdcd-c6c90355abec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb40c963-5e63-4e9a-a374-381c2352486e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77a99494-ad7c-4911-9f3e-e81c7a937671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e54c6e-9e3b-4307-add1-5e106d00397e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b95cf-1d7c-4e72-9e2c-c4ef8a8e59fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85bd193-1ccf-41bb-baca-f1b1f1e17cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a94a557-9903-47db-bd79-4a1f11869624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32ea9080-be91-4f46-869d-6dc912ad0b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8c2e58-4d7f-4ecd-9cef-1ea7a955d6f9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9999426-2bf6-4f64-8950-f6bbb1dc0ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3dd676e-4f29-4f53-b8bb-2543d219c56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f666c3ed-bc5b-4d6a-9021-aa3613fe163a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "047d119d-b1e0-4e70-b25c-47a9f4b03010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecced02-651f-4335-aeb3-62eb3ebee8aa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a579852c-52c2-4de0-8aa2-325fac7f5ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d3d7a1-ccd8-4479-902f-9c468277d91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8a42a9-c2ff-49fc-9315-068102dc0ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81f51d5c-64d7-4991-8f85-b2535169c94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c56fa6-240e-4c16-adc9-fd134f63cc56",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2972f171-c42d-453f-a4cf-8311b4135af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10669b03-b982-4685-b806-a4a65cd8f87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b449e73-7346-452b-ac5a-3d9993973c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2ef564-3469-4f81-b786-786692719155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697e5d50-5ef8-415d-a576-cc7a644cb616",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2795b1c4-9da3-43db-b1df-a8be548a71d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522a7343-cdb6-499d-ac44-f33034efd227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fc99f8-c7e8-43e1-9398-750c690a69c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1556df0-6b5d-40a6-8efd-b3a29423d2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b722e0a7-d218-4fc4-98b3-09cf6a56a767",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d713878-42f2-4df3-9b4b-a2c04934a472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cf46ed-e628-4849-a1c8-af3018b4e4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c35f28f-f978-4738-bb35-9a599ca11090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6632b3a5-9daa-4d0a-b76d-64e6088da7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401bb174-d3c7-432a-ac87-c11a2ac13449",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d11ea15-3869-436a-b9b3-92cb43413149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af8f463-4fcc-4b7a-afe9-6d3868d2ef53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdebe8d5-379a-42f9-acd2-296af04046b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6678a34b-478e-4947-921a-5946a6697086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7bb159-77ac-4777-b340-002ce85cc017",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f92859-2072-4780-bc98-38ca3e09f34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d371f8-5efb-4c6e-891f-6b539e632201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c458202-01bc-4628-b7d2-f3db8c1dc698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aaccbe3-ee69-4c3d-9efb-70414b10b001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b889ac9-5578-49d6-8209-7e0749d51a84",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605d1a54-9307-4b4b-899a-43048b598990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802d5185-4084-4a09-8f1d-894f4f6e422c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81f3f9c-6bbb-4415-a9be-938774026c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b45fe3-d67e-47bf-9791-756028430d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be47a74-b52b-4a74-bb94-a10d4d3cd23c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58811b57-f783-4715-8435-b0174be7d5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba878cb-9a2b-4891-a889-02d5f2739730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0feef4f-70d2-42e2-84a9-5028982e5f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1db431-4a1c-4610-8364-4970f2990d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dad712-7b9b-4e1e-b521-6a57df493d37",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c4bd31-7dc2-4779-ad28-470d7c90ad53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11974eee-72f1-4450-b1c7-32219626f723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d35fdf-f947-4968-80b5-ef6d76783eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85418fd0-a55c-4316-9431-05b2bf79342c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dedad94-fb6c-4553-b79d-2c3de0ec6938",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f8ca6-c858-4135-941d-d81d46c34cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144c6ea1-2636-4627-ba8d-a3f1366664b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977cc6d8-9ec6-4294-b4f8-384f7711848a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7485f391-18f2-407d-b21b-6b076ef371ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75af35e-82f0-44c2-8215-3d15e5d59069",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2cbce4-891a-4f35-9b81-65bf6cd4e3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdb5b38-fe9f-4bb8-8f87-5b2d5744bf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9958c2d-8366-41f8-bd27-becd77e3ac5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58e8fc39-8370-485d-98a1-1d1635337bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949a398a-e709-4e69-9a50-b384a96b9a11",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4a2bed-6bcd-4cc0-9f12-eb1432d98a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4860ad7-467e-498f-bc5d-945d5a2673af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae5cf6-b210-4bf3-94a9-2eda5f1905d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5317e4af-ad45-43a3-83f3-650f83be35bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb4e964-fe48-4ea8-8df2-d627bca131e5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a633ae9-6420-4da4-8fc6-c21203f31a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88358462-33e7-4702-8506-18f1a1dcaef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd3f16a-4dda-450e-80b9-39e9ed77b04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3479dd-fe21-478a-b0d6-99883ad31c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c89a6b-1a2b-49e4-a7e3-212b45087774",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6844b6e5-25cf-408d-9d4e-34b17c33862b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1c3cc6-be45-46fd-b105-8f5656fc3a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4135462b-6c03-4d2b-9f25-e39140ebeffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d95c853-ce2b-4f7a-9ed1-36e24e5acadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873f99d9-2e05-4283-b19a-f7f7cea83a34",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b41d478-bd7b-4fb9-9d3c-8eb2f960446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9088f373-783e-4e60-b020-ba3c6b60cf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819b0429-a2d4-4cbd-8ca0-aee6fc286505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5748a7f5-b1eb-46b2-91a3-7305a592ebdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b84c2c-65db-45bc-b3b3-0e9a2a06304c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751f75a5-e6fa-4d08-9e49-0842c95b2458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb37e8e6-db2a-42e0-a7db-17d774629974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6089e20b-5607-4dd7-9c2b-adc03931d350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7922b040-09f2-404e-95c8-6eeba46a135e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761032b4-5c3b-4e64-b221-686324703a5e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9f279b-637e-4ceb-9274-6bf4ba18d617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4550b1a-8ecc-4741-b39f-7dfff7c2aca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448ead4c-7102-458c-bacb-b260f8190e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10ec6cfb-e260-4796-994d-6f908522ff18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875fb5c5-71dd-410e-a817-7c9d9f57904e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b92398-301a-4e7c-9408-64c21477aae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3776f730-3f80-4579-a6e9-6151f3d2c2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45f45d7-d021-4230-9dbc-84f2bccfa39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc196f15-01ab-4bc6-93c0-a82b73f1021c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a142988-a56f-470e-b009-c94af06dd987",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1f15fb-8e69-4cb2-b854-3d89b7c46214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680fa14e-8d85-4a2e-9e17-ea7c2a53254e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c44599c-5a2f-4ded-9ac4-c30958caca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7029988e-711a-48e1-9093-c84a4675522a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb271ad9-841e-47e1-b442-dab1a2d3c74f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403c490e-98a2-406f-8eaa-e82bce597fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe38a57-a268-4811-9645-58e65e00100f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10cedfb-c196-41d6-be15-4e53a0cc537a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbff86b3-6e0c-4711-b30f-706acb875173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9be3886-c9e7-4290-b0fd-2ff3fd5c3e41",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f8401f-6095-4744-aa25-833b0f85bb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e144d442-a1ac-4cbf-8d81-e2c99f37a156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf10010-a603-40ff-a1e3-0d1231b6c32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e63a0a13-bfbb-4a86-8683-b9deb155fe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c490c1-fc3a-41b3-b5bc-338021971053",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2dd8e5-e4cc-43b5-bbd0-bea05caf7b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf859c23-93d3-4809-aede-1cf982346907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928cc26c-7ac0-48df-a810-2a028b9184bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae6597c-76fd-4aca-88c7-ab149026c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0844cbe3-9d80-4cfc-bca4-2f5896b2107e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77b721b-52e8-4703-a474-154f132190e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597808a4-25c6-4578-bc96-8cf8e949d75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070dd9c8-e8e9-4ca0-b14a-b2046f4a488a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4994c50-7e18-43c5-94d9-159246e2f5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e92180-aa79-4bbc-8574-5a51fe8b44c5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1ad3c1-de54-4444-bf69-63e71800ec0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4d4d1c-ead2-45a5-ae6f-155d69df8cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f5564e-e604-4f3c-83e9-86d9e56493bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1559eeef-cc8a-4999-a7c4-c4c4106db167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ec41a9-f535-4c1a-8242-ede2e9a1bc2c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f65962-913b-4a06-a756-f3af85fcbadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f87acce-b8ef-4601-bf8a-1a2e6a5b2857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd67611-0a33-4066-9bf1-e4f5993f6c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a56a08-276d-45ae-ab88-bb7d3afd2919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f509cf7-2ebb-4fee-8f30-0ef7706c2d02",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bd62f1-5bd3-43ea-a95d-007c960402dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed51d0d-ef01-42aa-81e3-6f9cef4424bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef2880a-e7e6-4961-ad88-bbd29a0e1c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "034b3a38-59ed-4247-9997-d2d28311dcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d4b19-5625-434b-8d72-44655b4712c9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f965fa6-b71a-47a8-b479-57063b011bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4151319-6875-4fb0-8fba-bc87869b8e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627ea6e7-680a-4024-8277-69bec3889eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de030945-60f6-46f2-a633-079451fdbb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed63509-ac3a-44ef-a2a2-7ba4e41ce1c2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5408af84-7a48-426f-9f99-f32c98575a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3942ba-1119-4eb1-a3d2-a22700f4d390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ebb48b-e6e3-47b8-9ad2-11b442641eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ed8318-f828-4360-ad20-c4103ba1ffd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0215001-ccc0-4cff-a6da-a4d118c516e7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b715ec-7dce-4be3-acf7-3d367efae196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a611b3-0c90-4cd4-abe1-0bbca4cd6ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291a58e4-1995-4d94-a951-ba2cd9a7885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c85379c-9018-445d-a8ce-e2c8b0e770f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e420541f-788e-4aa3-aa98-a7a84926fdbc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f82140-9c75-4c41-878a-1eca43afc9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189c9da9-0c9e-44d0-8f35-5b7626edc3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c40361-bfb1-4d3d-bd39-75e0e68fd0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c134235-7e19-4da8-ae7b-f30287806194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7417a055-94de-430d-8652-0c438383852e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a988e5-af7b-47f9-bb4d-047c0d8c114d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3fa1ac-8be8-429c-b8d8-cc4f1b017cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815d31d6-9b82-46bf-97f0-e250ad48d77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9816fc93-6def-4ee6-a717-0e6f9e9131d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe67b3c-6ba9-4bdf-8f09-b74ca9a77437",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06386151-0b73-4b2e-92ed-b642aefc0f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06095471-3b31-4cda-97c1-b88a2a45df87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bd394b-3b18-43a2-83cd-33c79f09d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a688120e-8713-42bc-923a-6b0d45fe63d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceabbeed-3f45-48c0-971d-d1cc72b4e710",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1d9b6c-2d6a-420a-b49d-bc3bf0fa6ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bca570-c8e2-47b3-8629-6a1403f0390f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391d2afb-4e5b-4344-9956-b67e69ec91eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec29b92b-0426-4a6b-bef7-e4d50610d570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f2b53c-6583-4ecb-a708-103758958253",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcde7880-eb9f-443c-83b8-504d6ac08c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800f475b-074e-457c-93e5-1a7425b1b3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c9ac2f-eca3-47ef-8d9b-40438161c291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ff0f86-a80f-469e-a5ac-6a7606301698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0738f7b-454d-427f-b8ac-577b2e773b0e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9f315e-f5ef-4906-8583-4afdfee6bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a55fbe-a8a3-4a41-b6fb-5eef4e9b8f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4073c3c-3306-49e8-8886-e6f16edfc536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d182404-e98f-4266-a5c0-a1992c89b97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808631ed-5c9b-4488-9c3b-5c84bc2c205a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49237595-09d7-48c4-bd67-4f79938ccfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2d2807-389b-4370-8287-1c457ef521c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ba1a3e-5d87-4834-948e-ab63c9842180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6f9a8d-c20d-419e-a998-51d50ef12159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce64861b-5a32-4d1d-b1de-bf185e1171f2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfef0f1e-18a3-4ea3-882c-930ea93114f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8505637a-a628-413e-9f63-624218316e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478c4f78-7108-4440-9c89-b13e5288c078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db8da9c-c23a-479a-8da3-0fd4e558b4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84c76cb-ce68-4288-bf6a-48372bf08c76",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faf5389-9f03-46e1-9855-20810e1fdea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db91c3d2-4c88-40fb-9060-a008de13389b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb02962-689c-4a33-9646-b031441bb2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9584c4-aa7e-49d7-9e9e-d068ca2f2032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053def4f-7ddb-41c8-8241-e7a0fa92ae43",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b723a6-a6da-4d45-8580-c739ebb8d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d493f4-94d4-4202-a3ac-c3bfe8d41029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4c7212-756d-4a5f-82e2-a3645fd02caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1db97f79-586e-4dc3-a2aa-c462c9f5f6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc0aba0-2fb7-4866-9b1d-b2e4b210c1ee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a72928b-443a-4a57-915d-40c16d31d7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc47259c-b141-4e6f-b5a7-7114b015a938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feaebef-ae00-4bd2-bf99-31175cb75b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3d6b3b-be32-4206-a8d9-912faa6d1aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2a2673-0547-4331-819a-c72b1837e553",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf37173-5b52-4ed0-8019-b788f9d518b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9be8e15-2fac-474a-bf55-bf3ab783b442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dae4ad-40c7-4d7b-9993-b385f31a75f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23290d5-0b51-4f49-8a6e-64350803d861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4185635-1dfb-4397-97bc-c193a253d142",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69572835-2069-49c3-858e-5e1449d8dd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca18352-5119-43a2-9411-7d6d69cd7776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0434772d-fbc9-4bd8-b68f-4fd9b0c3d808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2454c99c-c3c0-4b5e-8f55-1964c6dd47c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939006de-ebdf-426f-a2b5-e482933f1ae2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1509e60c-3796-4c59-92ad-dc42f63443e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328e8b43-c1df-41fa-bc49-0858ea155be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab6e535-9231-40d4-a2f9-d8b64ef4703e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "719757ee-bb11-4a99-9779-19089385edd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107e2dd4-1021-4c80-9f75-550328336fa6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0934d655-361b-493b-abdf-179b5f9c4134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fd3379-b05e-4faf-a84e-d14e23152081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3a687b-d36b-429d-bc19-019c22b743a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0d9299-fb8f-4314-9021-f31813f5a6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4e960e-44ad-4733-a4b3-2998d8cd0874",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3edbdf9-7582-47a4-b2a4-f2d54b9b0160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcc5aa7-b5d1-48c8-93ea-2ad9e9284e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35aacc19-d424-4491-9e69-7cbd5d91ecb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa0b989-88da-4a63-9c31-2aa805ff9cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a7fdb8-6ea0-4654-8668-fd764c7e3413",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7617b66f-1b1b-4a73-aeaa-e17b5da5bacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3780937-1f8c-4242-b60a-cf12eafbfb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbdce4e-d904-45a8-8b73-6d183802cc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "07749021-43bb-4cf0-8139-28e3b98713b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67774f75-c0d2-43b9-bde9-87e9bfd03b65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a919a64-d59d-4196-9049-1a717418c4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489e5e5a-0164-4b4a-bbd2-1c84af8187a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2b5797-6cfc-4520-b68f-dd4416581cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27272cdd-7e89-4435-af17-34517d35f385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0344889-e7fa-4a3b-aaaf-9a6636376034",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1728cf94-9fb8-4253-91e5-54eb3942745f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f067e9-be7e-4ca0-a141-201f83efbb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a419c82e-ed84-4583-a7ee-ac37ea56c7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aee210f-195a-4e23-bb8b-f9ba1a130cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cca4f82-eb80-4fe0-a122-24f336e9a1aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0126b31-d606-4877-aaf2-4dfe18245d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3fe486-ba2b-44aa-8ee4-6add04584e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffce619-76b1-4e8c-9956-2df68a744f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d09d8696-4c36-4630-9b7f-4ca9c567e772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c486b6b-b784-4839-9be4-6a9e12515ba4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465b52c1-cfa8-4745-9ce8-1412cbda52ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30047975-5916-4a75-85e3-2bc3651b031d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a6d344-6d90-4b4b-9547-5d5aa42dd698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd72da52-7d95-41b7-bb54-fb3087bc53d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e9217d-8735-4b23-856d-c779f5eb7b33",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b41e1e-60f8-4f4f-b7df-93113904a9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248ad7b8-1f34-48ee-8060-0073cfc55b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233a3df5-0812-4b04-863e-8fc6b7089510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e653080-32b7-4881-a62e-00cff07417dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f63c8e3-c46d-435f-8253-b5d450815d4d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aee734a-aca6-4a59-a670-9c8d7e283f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa2e09d-f7e7-4d71-8be6-153972e1195d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa82a1fa-eb87-4190-abda-c73f61db059c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb6bfb7-33a5-4094-8ad1-8bda6eb51681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0425b4-34df-4597-8207-46caf6db6542",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65853027-72dd-451c-9b9c-26aa73e9c886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5d156e-64ac-4762-84be-0c030fd6bea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251b965b-9282-4b03-a192-88793feb108f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81d3468d-5124-44c0-a2ac-ee932e2bec53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8876b7-9b9a-4e47-81bc-15ec687355e0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afbb93-47e0-456d-80bd-aeebe4312b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bae316-5c32-4727-8aea-4727b461aaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec06092e-d687-436d-84c8-f2413c43a299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e3f965-93d2-4189-a5bf-4f8b308ab30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b184242-eca5-4aa4-869c-6bbbd915488a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d63e76d-5071-4156-8694-840cf48e8f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b4ef6d-b061-4e2b-8e52-ad01ffa3dfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c62508-6fa3-4271-b6ee-db78cdb812d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48397f70-af66-4cd3-b346-129a15329527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66375e37-b19b-4c1e-9325-c51dc5c0770f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291d008-5943-4b43-a418-0a8381108ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8146ef4-baaa-4a3f-aa75-5eaa3d8e0d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d027927-7329-41d3-98f7-5cb6fa66ce6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b682cb5-9ee3-436f-86fe-1f9d6762a603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb75196-e215-4878-b48e-1cf440be3167",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a4c731-da8c-4ad0-9174-5af40df6df99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e760471f-af43-4155-aa0f-4e53f12108d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656d2e02-e38d-4730-8eac-a1d697e5f2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3b3e24-14ff-4a9e-83b9-bd5bd1873bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aadb91-1a21-42bb-8c50-f827252bc123",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a123978-89e3-4f18-bd82-774d7034e97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d296a8-9867-4b80-abcb-ccd1247e21a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742dc8f0-bb73-4b0a-b650-f4ccd88cb004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "642f42dd-f1f5-4709-bdb6-27dc80173577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed09ba6-42b2-460f-9879-e996c707f62b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d593f71-a35b-42a7-8aa3-01c7b9b2a6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a637ae-f3e1-4141-a7da-071470fdff54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8668ccdc-12d4-4c0a-94ff-43a25aac9395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "688c0617-4902-424a-a8e1-78965787dbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bb79c5-5dde-46b0-8e9c-2d72398aee2b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5e8050-3673-4ba5-a440-da7cd7eb4296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d658e0f-39d2-4c9a-b889-86008affbf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a107b9b4-5fc2-40fa-8a05-0a4b48a856f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54bc2334-2d6e-4b22-851b-bf7a146971c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306892d5-992a-4c48-a66f-560cf22ab5d0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b18a635-154f-4944-bd57-efdcca0e82fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efe12f8-cfdb-412e-abc4-4fbbf034765c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e6ba0-21e1-4aad-99c1-725b0a9099ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49754653-e9ca-481d-8577-4e61302ed62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae592702-87ce-4a9d-a341-54fd2c6d6fe0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54f31d6-63d7-4383-a471-4987d77f6bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88faf8b0-9bab-4ede-8deb-735c64520440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58712648-6bc8-4a8e-b980-0ca3f430ef48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d11e1fc5-174d-401c-95bd-4545394cd89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6973412-1ccf-48c7-bf3e-c50d2c33ad05",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e7921b-73a1-44c0-bde4-974f9fca887f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2472b5-83a5-4047-b324-33a2d0a4dbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f487922-5c10-40cb-bfcb-41447d85053a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6098b79-8ca2-4408-84a6-c5d45b920584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71efb26a-cc26-4d9a-9eb5-748756e2d91c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e11cc99-b6e9-4f22-81a6-ea44703cf79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404494c0-71e4-471e-8857-db1331fb4fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6d2ded-ead7-4b72-84a6-bc7ec28f4256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbbdc83-9fd7-41ef-a17f-50fba48d404e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e80a175-dc84-4209-825e-090569d2c38f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d587f9-5e06-40b4-8a34-610c35ddf907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd97ef4f-9920-4714-b4bd-af4ce4b564b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30504670-4f4e-406f-8ddb-7cd95a12e1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b332456-0136-4bb8-981a-a4511378a6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c13d79-84a7-449c-be72-a5dc735c47f4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bf374b-3c41-40ba-8366-63053f1b022b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9067a071-aaa2-4b2a-9586-7e4195490adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52ea446-ab94-46c5-be87-2362bdbd32eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "842b5a24-3eda-43bd-b6f3-2431980c3847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d4ebdb-c54d-4120-b049-b8b097a0dad5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184f4e83-be06-4a0b-ade0-7e7aee891a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f4b4de-0a23-4462-82e0-ecacbab0a3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0846ed2e-8d35-43ba-8a6b-badeafcd423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e8c736-0910-4b1e-8fbc-19f2673d575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5230cb66-7353-496c-95b6-6fff48df3a66",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c2871f-43ef-42ca-b8b0-647dcb005dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda171f2-ba1d-4cb2-bc35-653ef28a2831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23df3abe-e902-4e9e-b93d-795a5030fbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1eb014-7a0f-4e16-826f-5513a397a07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d89fe3b-8e53-4818-a4f5-e665d5e58590",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e45843b-5c0f-4a6b-8994-2acae41d8535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bb6c2d-374f-4f27-a1b3-ea6c85e37ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7818ca7c-a986-4b23-90a7-d40d65eebc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "019acc55-bf68-4ede-a4f2-1a6eba43e780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07979d57-2799-4801-9f96-87d3e6232a8d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836a0232-0e54-475a-af35-8d5732c50f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac80e0f1-fe03-44dc-b739-142fd386947c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f47707f-4d36-4bbe-ae3f-93cb13bbf967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8877f9ae-5eb6-4f58-8f04-f88cd3902e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44744b8-e024-4aa5-9a83-8d29c54206a0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f4484f-d248-447b-966c-c4150d42b931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50bd4ec-a0ac-4bf5-acf3-cf2de1ca613a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397dc439-d270-48a0-8bf0-90ec95228e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c90d38-1bfa-4a07-b321-72a4cbf70093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a1fce9-960b-4267-8dbf-c99238f211e6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d18e2ef-b3d9-4c0f-a29f-406d6d457e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221e1aae-2cde-433c-9cd7-a317f347a369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adbedee-d65f-4b54-9e53-06eb8a905dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "891870f8-1a39-4ad3-b142-0e7d9c6dcd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed47ff6-7a07-44f9-b59d-691afad5d077",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2318cd-6467-4e46-b08d-d5a3adef4159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af39c46-949b-4900-bd92-6c6cb67c62b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdc1540-f305-4a15-9eff-f9f4ac7365ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c85fb4-9b0d-4c47-8b8f-8b2bf23c8bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937db173-c38b-4ebe-b829-3b12ee63eadf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffd0f31-64ee-43e9-9c2c-337f3722faa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea879920-2ff2-4ee3-bad0-36e0608e6fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7565f05-e74f-44f4-8ed5-dcc082a1d41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd54cd5-d931-4f41-85de-3ad49e2b1062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420aec81-07ec-452d-b58a-d9a181bf70a1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673edb3e-2c28-4acf-9977-d9e994d5020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb6f7c2-9dc2-41fc-a531-7c11c5f8ae8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0726688-2ff8-4cc4-944a-cdb284560130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8370a5a7-ff7f-45ae-895f-9bfeb079009a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f2d811-8148-470f-827a-f339d01800c7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557b7981-3066-4be7-8afc-5dca4ebc462f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4275c236-f4bd-4a9a-871b-2b680ef41cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78e7a38-9cab-4492-b668-a648a285f45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2477c39a-c689-4901-8696-16729fe854bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09514680-82bc-4ef8-8967-d15a6be7806b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89deb6e8-830d-4e0d-aa51-c8081647bff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779a97ec-0db2-4b1e-9192-01151cb32017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98f0c04-7252-4e5b-84e0-48306fe36904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f784e304-6536-4161-bb58-192941cfc9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e55823c-00df-4156-927f-7b9c7824f688",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6727bc-b843-4175-a1e9-16c33c4127b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51a476f-77bc-4d0b-91d1-efb27b70b34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d2cd6e-f1e2-4792-ac87-033571860bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cb095b-3cb5-46ee-bae7-48d5cf3cef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35ed11d-d9ed-4832-9134-40c3589a789a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826348c6-0330-4c9f-b35b-8367d44a7e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb305c6e-28c9-42c5-be2c-ee9fed493322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598d582f-e702-4fbc-908e-0e89e36fd6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8fd9f9-6c75-4c5e-9ef6-b1b8e94b6bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ff1df9-6c5c-487d-98e2-d7424f1e1c6c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f43d8c-bdb6-400e-9b0b-aec66594d7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f1924c-816d-4eee-b07e-410db3999e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbf9968-88a1-462f-81ab-f6d183e0ef9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee188d1-d706-4ea0-bbee-b93bf1e03966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b527bbf7-8c2e-4cbc-b1dc-04d6e38cee43",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa888d20-83d9-4a96-b70f-42ba4e167960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b7803a11-591d-4419-9a1c-de6ba4d5e2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076adc83-58d9-4756-8f62-23d21ebdb351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bda422-91e9-4e2e-994c-bd0ef76c0bad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4eb57990-0418-4c02-9fd8-ddd72d5410ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5edf0e7-a1d0-4885-bd2d-0e9bfb4a8ceb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e883021f-2ebd-4741-9aab-2c58c0bc7dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32680ba8-884f-400c-8ad7-0047fc11df49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896b2d3a-9a7a-493c-8714-cf852056ae2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "167666d2-6daa-40ab-8fd0-658d7569a7c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bc8f249-bc33-4ecd-b814-e7949cf34364",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c0d199a-3db7-4e03-b606-c4a5edad3c0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4ca145c-2c63-43c3-9483-3c28d866d614",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0e5a72d-7eeb-4b5c-9ba5-36b90d5d31ed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef254e99-9f44-4f1b-9b53-10439bb458f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "964f1aa6-5ec0-4916-bf8b-c4ffc9b63033"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea05366c-2410-4cd6-94a1-c4378da10895",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83e4baec-bcc4-4259-94c1-50cba798043a"
                }
              }
            ]
          },
          {
            "id": "beadafc2-96c8-4f7f-b434-1f5dfe7b6d02",
            "name": "Positive Testing",
            "item": [
              {
                "id": "297af169-fa45-4c28-87de-46ecd9138222",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf357cc-b151-471c-8a8d-537abf958904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "847213fe-b954-4176-b55d-2189d93fa613"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5d07c14-e823-4e6a-8232-eb7d35855cff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7a9f671-f19c-4af8-8e9f-c97139faf255"
                    }
                  }
                ]
              },
              {
                "id": "9a2c1430-105c-4e53-b354-ac7dac206616",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8462a09d-e374-4e77-8c99-9c8417242e35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78cd4fbe-83af-4a66-b473-52c395dfa7f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0806e653-e8ef-4f0f-9e2e-ff1d75d6608e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e18e9495-8b1e-43a0-aaa8-b2ac57b576ad"
                    }
                  }
                ]
              },
              {
                "id": "b05cdbb9-adf8-43ad-801f-0951c4972059",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "597cccf9-286b-4eca-9769-f83eed146009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "567f50e3-862f-4b3c-8fc6-04f972d9b1ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e9dddfb-8b77-46d8-8180-af9dfc3d5db0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f72e30c3-709d-4e02-8baf-0056332f9464"
                    }
                  }
                ]
              },
              {
                "id": "d3a66f20-c2cd-4960-8cb3-598d37b23916",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70bd43e0-1f28-4f54-bbc3-00f795ba3bf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acf70fa4-d240-4000-8d2d-875b44fef328"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c0b4a28-af1c-4a6e-949d-28cf4ec58a1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a1874458-0862-43bd-b397-ca14eaf596ea"
                    }
                  }
                ]
              },
              {
                "id": "2c5ff825-626a-48e4-b267-c52b8ae9790e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04e72fa2-7347-4013-a1b4-02a166a3a2a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ac03766-a835-44af-8523-668464388a48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f19c6ac-72b3-453c-ba5b-c2ab8cb91552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d51b35e8-8c03-41dd-9aea-49c9c8f6bc28"
                    }
                  }
                ]
              },
              {
                "id": "49e586ef-d039-4bd6-bc60-a658479daf4e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "249ddc74-a37c-4c42-a44d-4cf70e200394",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74c07999-fd18-4c4f-8823-17de4b399f1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9443354-4231-42a9-9ea9-735687a77070",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cfba04c-686b-4753-aa32-7128f8c0c254"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b42e61a-888f-45a4-b2cb-97a90e40004f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffa39a52-4c3f-41f7-be81-54b186004618"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3ca84d9-66fd-49ec-abb5-71eee17f3e28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f65bf1bc-072d-43f5-8882-5fd1c838f77d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fd5862d-a45a-48b4-a4e4-e86676ef2fe3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cb5bad39-344d-4b49-9bfe-663503a36396"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cce951a1-684f-42ab-adfe-47603f78aa25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b96c8f1d-1a0e-4a01-b65a-043d60734cd7"
            }
          }
        ]
      },
      {
        "id": "94a5d7ac-5d5a-43c2-8814-8a84da28f24d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "808217b2-d6d5-4e08-af99-5ffc58524962",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bb59de8-8afb-450e-92a6-130498ad69d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a586cfc6-13a1-4922-87df-1c4844406b06",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9b0456-842d-4aef-ac12-d8a627826916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0326cb4f-1fbc-4cce-a4bb-2b7fc3f432d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58297473-040e-4eaa-b247-c06860303864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e8482a-5563-489b-bf07-47f2b756b92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b6dd88-1a38-403e-8bfb-dc1c0b9b3041",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce13aeb4-c474-48e1-92d3-ea8f07c5c171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1a463d-2a5c-45a8-a3b3-2e34281ac221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0a6343-d104-42fc-901b-21c41443d988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e78a1a-0025-4785-8f44-1a05ae4c6cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0d2405-2540-4bd6-9657-e158936dc14a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82ff7c8-b9bc-4fb8-ac46-1496e54e082b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b8a779-1734-4488-a9f0-3052d7138c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3331b6f5-f14d-491a-aed9-6234f900748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e074dc8-3c75-4020-a603-f9c32be0c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1363343-c2d1-4898-b313-19c2fad8f399",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f04a96-3dcb-4a03-a2c0-727b39a5f627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8f15ec-292a-4702-98a3-da4acbbc85de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f3cd00-b26b-4ed2-8220-a14ca15e35d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "617b409c-5031-483c-aaa4-7d27ec163fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74789566-5bc3-4d39-bc82-a86b32486178",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f469017-fd1c-4131-9336-5dff1293f55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a09094-1efe-4d8d-b5c4-623e99a72d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e121ecfd-9705-4026-8fc2-17faf6f5042b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0715c1a-0c58-442a-acba-0701208dcf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcd7b4b-b5d8-4fe2-913d-d759cf59bca4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2794adeb-b6d2-40a9-8ba5-14da515787b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d54bad-e313-4cf3-9c33-2d773d99d2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f1bb2c-9b4b-474c-8af7-264fcb29e68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca416526-a0b5-4777-b246-e38bca288716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55d48c1-0ff2-430a-ba92-c8e164cfc745",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8302a07-014a-4cd4-91d0-a00ae56a7dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dd86ca-e530-4f26-83c1-d35a5c359d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08237a9d-3822-4b24-bfea-c7fcf44f9c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cd6355-ea2f-4b0f-9b5b-2cbf63dd29e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66db50-30a5-4336-b6c0-719023c56a06",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af8dedb-9e1c-43f5-8ad7-6f59c460762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e16ba22-b227-4bbb-b326-ca2b6c019c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21664d68-2853-4a4f-bb5a-ee44d41a6155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd52255-0191-4d14-ab15-4eca45f46766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d7c785-a9e2-4f5c-8ca1-fc39a44103ae",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7a05f3-1ebd-4d4d-84a6-0b1407ff87ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d84a17-3fc8-4e86-a0bd-4e076a595218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06da1a37-9142-4969-8fff-ec1fa4c799b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f15d4dcd-6704-41c9-8012-c1968cb8ca27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3ccdeb-6a3d-405b-bb36-cc74eb5651e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c360a7-dcad-4331-aa0c-916225f34851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cdddb0-140b-4fd5-8414-dbd0b886b2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e7ccc6-66f3-4913-b4a2-ccfb6d8d66f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8139fd95-d828-48ba-84d9-390d5df8607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903521e2-d04d-4280-829d-6e176221a956",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be854cf-7ce4-4117-808d-fac0b75a4029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f796b64e-1a31-4ed3-9023-01b4eb20f1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d2d9d4-1541-41d9-8028-ad226bff21fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3c82503d-0d91-4c8f-b1f0-fd64893968d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3918c931-5359-4d8b-a3e0-08e75597a0b7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da2fe7b-c2e5-4539-b6f4-9209f192884d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c4dd5b-0d60-4b3d-a7e6-68f632f9de06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e46448b-086d-40f0-bfc7-d97a36a4c2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b390fa2-6377-4fe6-a443-b12e6d08135e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353e55fe-b8b4-4972-8ac5-6cb857329caf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e159c1-3bec-4a8d-8ce0-78ecd5ada1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706d807e-c63a-4f96-8db1-9174d30811b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d809d72-b446-4f3f-b3ac-c2ede275d7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7298c58-593d-4cec-befa-1f2fb6dfef31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf195a7-d4da-4500-994e-e5d1d5f69a5b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5825bd-67f0-4f1d-8e45-71a177ac5d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc41877-79ce-46f7-9c9b-f016e282fc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b152002-c65d-4678-a531-5a3316e33e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0457f27e-1509-443b-b33c-8eb6413a9657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbc6797-7286-412b-b721-b1eeee30c639",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4d3910-e807-4999-be13-b746f4c0623e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e742e23e-0435-45b8-b920-0faf11d0eb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6193ba-22c8-4e4b-bf16-d6ae32dc10b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac11cef8-30f1-4fbf-a4af-b5e5080d76c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecc7036-1227-4217-83f1-ef3af976fbf9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cb4e60-dadc-40d1-a89b-6393317b6c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfdaa92-78ba-400f-b8e7-c8c3d613a1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b95516-b492-49a7-bdae-1d644fbc1196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed43c0c-5e29-4589-90a8-5941738949bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190cf983-dc66-42af-b90a-420ceaa11747",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd903bf6-769c-40da-8aad-9fa1d877fd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ac41af-4206-4017-88cb-213270a8b4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298a24f0-f660-41e0-83df-12dd104e6608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc39b4c-3c9b-444c-803a-587bce050f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5754983f-3f50-4acb-b42d-fd1172f54b50",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c558c989-4116-4cea-af99-731ae111cfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7304053b-34de-4a5d-8abb-11b39db6ff35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd64654-3dea-413c-b8f9-17a9b6d52e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e85893-d646-438b-9ac8-4cf18fcfaff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cac439-97ee-4077-bed9-03268097792c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59d8c49-c19a-41b0-ab1b-258a62d685cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b693535-ae64-475c-8923-6c9faf2ece67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb804ccf-d4f1-4926-98d9-fd2599c0fb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6a7a99-d9b2-4ce1-811d-9ce66383e6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb46cce-4bb7-4b4e-984b-51bf65c01539",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e0edfc-a02b-4ab2-8c46-67fba5c7c89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411ce3f4-db6d-4ee2-b311-81d64ed82e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af61b865-7be6-4b30-a0e3-be980bdae8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e28326f-6860-4b3f-a6ca-f7728be56a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd47000b-e90c-48bf-a1bc-02c9da6f5442",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3865f45d-df2c-4d3e-907f-03caf2659a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e092cdc8-c50c-43c4-a8df-cdeb6d734a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74234ee9-19c6-46ac-8cf1-1cde64a68bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9b6d6d-1e55-4213-b06b-41057a754fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5a8330-911c-43d7-8cb6-be8b3ab15502",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55ce4af-0bfc-437a-9fd7-8bb880917842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abb9766-394e-4cb7-99c4-6dd825400e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eb680c-2c11-4b8b-883e-021cd1ca933b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c80493b-06f4-46a8-a0cb-290865cc6afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d71ff82-c357-4e01-9d48-d8fa8ce95c9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825808e4-b64b-4ee8-a58c-4eb45dfd2962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce29d00-f1b5-43be-bd37-fdc7c4c4a289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1482b815-2ce7-4885-80e8-a076d469099e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "187a2c85-daad-4a97-86a5-6cc95f69c91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c761100-3594-4a19-9757-b33130a7dd9d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1ad55b-db42-484f-ae1d-63b18b383415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287b845f-0c79-4a24-b9b9-56081a071523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17871a4-1763-4d03-9716-60b0873d70d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f461c295-e8ca-4f2d-8920-693fa71930ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ad9b50-8a3b-43c9-b06b-834c9bd52235",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe7f477-329b-4cb7-962b-039368b3147d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4492cb1-8ce0-425c-811f-e9d1f66365f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956e24b8-0b61-463f-a33d-7be680e15dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9657e3c-4290-4129-969e-6fab2bd44c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6be79b-9ab6-423b-9b52-5b5144af7ce2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600b12ba-d046-46c9-98be-164e92b2e70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bcef0f-d64f-4bbd-88e8-cd024b45be6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78296b0d-489b-4848-938c-4340425c9965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "259da76d-0a59-4d76-b15b-69bc041dd0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4936ed-8cbc-40d0-aeee-b448d4234b20",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a51e30-bb76-45cc-99f6-dd7ca6f2c712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea13300-6d0c-44e4-8a81-eb9cc647d974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb12952-1460-4319-baf8-07aef3bff034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71ac955c-b095-4aa7-a9a3-b077a84fcb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f56b87b-1e52-4c69-b0d8-3c2c031f92e8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981d1a0f-06db-4b79-a050-2b4108e3edf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65210018-4c16-4bf8-a849-771b92c69559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48512f3a-648c-443b-a6ec-616396d07d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2006b48-828d-41b0-ba52-a07b358da82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07010169-8f0f-4202-ae5b-213f251ba2a3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99573e2e-e494-4c23-8833-130823705370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18785dfc-c034-49a1-9d36-86a0a216de40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b9e07b-1a93-4e78-9271-c03b32584993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "707aac6b-ecd6-496b-99f5-041b192011b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acdee7b-b618-4db3-ae16-a7be4da9e6e9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c2fea9-79f3-4180-bd8e-bbb1d8cf71a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e1413c-81aa-4081-95b2-fb5ae0e40d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c0d64d-be1b-4fa1-9316-dfb03cb551a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a64a58e-b827-4255-8499-381444577888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98008c31-c65e-4e2a-96ed-f1e9a6bbc7aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d565de-5b77-4d38-83a3-a3eec47a0ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71696379-9087-4ad9-948b-ba2d973937c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377e0e55-37e6-4bbb-b999-5c5360ad3511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d42643b2-5ea5-4257-ba8e-279c4d32c407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d6df72-a2ad-4249-98d1-427315fe89bd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216aeb09-f74f-4d72-8b93-89c1d8064d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80145d4-265f-4e89-b6d9-f68b9d898b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d928f157-1a5d-45e9-ade9-5ccc39403680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9670cd3-856f-4778-94fb-0718848f719d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4dc3a07e-59e4-41c4-a92e-a34383f89a6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebec0cb4-1396-4d72-95b8-f7cc0ba0a07b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4186e80-ab09-493e-8e90-85b9384cf977",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c4be28d1-1137-4121-815f-3e5120ed3adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a54655-1db2-4b61-b5b9-76771f6ca9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8be4d214-fec1-4064-a3e2-31a653d2680f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c664b481-aeb5-4881-829d-c1c793f4b367",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d1e5b96-670d-4434-8197-5be713ce5bcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0761688a-6afc-4006-8baa-7c8cde30ede2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cb77038-b69e-417c-a131-802b63c1da1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "715a9380-dba8-4409-91f1-01b2f1eb3fdd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01e53107-1f02-4de6-a018-378f2cbf25bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d85ba83b-2420-45ab-850a-e7eb2473e863",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73e57b5b-d9ef-4fad-a76b-2e906d75a8c2"
            }
          }
        ]
      },
      {
        "id": "73f0332c-3926-4886-8ece-3c0101c8b4da",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "84364c59-784b-4c8d-89c0-d3d69121296d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28f6bde1-13e2-4c6f-b3fd-28d4b6211ea6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fd53bef-daec-4207-b3c5-498e52d42543",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640e7005-5232-4a3d-9acd-d1b1d0d040b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cecbdb72-a969-4771-b880-23ee2e22bbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649c2b8d-c6dc-481b-9f77-f31a06bc92dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "289b685d-85fe-4b57-8936-c7aea7985237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dc6aae-3261-468b-a6c8-649c6c4ce966",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396047de-f761-48e8-9f4e-4597a1d16e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b09fe1b-852b-4567-b566-5bc976cd5ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45b8bab-b7bd-4ac3-aeb3-395d1d816fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "901a54e1-9c9b-4f25-86c7-1d67e013f6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70cd5ec-acd3-4505-95dc-362ff79281df",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0da79d-f482-4467-a543-c011dd9e4746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3efa4c3-f4c1-4c62-9b01-726bec0772c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7852a1d0-2235-49f7-add4-34beaa92ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebe3489-df7f-445d-b79f-79a4af8ef759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e622f865-4730-4273-8780-daa95a1198a0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab1854f-c0a6-4b36-a586-ed9be1dc63e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530d600e-3a6c-41a6-b367-1176332033f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a31ce1d-5f5f-401a-a243-766cbaab11c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "468c6c66-e6d1-49a0-b52e-487d34ef2108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b96b40-546f-467e-aa27-e0b75cbc3c6a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f7e964-bef7-4fb4-b089-cb8321bb6220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affef8c8-5bfd-45b0-a446-95a1d30f4a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f8d81d-41ce-44b9-b2a9-462869131c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a882d1-36a6-4898-9a19-770f94b7ab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861705a8-f2fd-4f31-8b8d-a9104ede7e17",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99aa452-06e0-4209-be53-12f958ec2938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b161afe-641a-48d4-9af9-92aa83c0ed2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8300b974-9746-41e3-bfd0-ce48d6ba73e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32098dd8-ecac-4ba0-a714-793ddd7f9b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456ae9f2-d6bc-4e0c-9ba5-15bbbef008d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73cc9ea-d80c-48aa-9eba-8a0f247f938f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc567a76-ab1c-4252-bdd0-2731e6f502dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32455e4b-3c1e-47e0-b227-06f2d10e86e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4881bacd-cb25-49cd-957d-e2b466f853c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fca3cac-feae-4cfc-90cd-175cf263632a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b001267-6f47-48fb-8892-786e00a23bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0049e5a-4d7b-4089-9d80-537844ca1c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889f41c2-3f3f-48da-bb57-19b5c6ad29d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95875167-8e4c-411a-8168-4a0dcf728986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb7c5e0-9153-427f-8c4e-10110502376d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9546fe-243f-4bfd-85eb-821f417fea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea741f5-91c2-45e3-97f7-450f38f33c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959d2c0f-ac18-4b33-8073-c259b8979bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d56f2c-89ae-428a-9d2f-031b03daa220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed494c9-90dc-40dc-a0d9-241db0056f61",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362a5874-5c70-4932-afb5-0cdf990d8c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d7587a-d2d4-462e-aa72-123f67f7f513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f5beec-2418-43c3-ac57-966980e77734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cea4472-1872-4122-87fc-9f589c88a589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284586b0-7da1-4dca-a821-58b87c22e490",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e1d73c-4d57-472c-a7a0-9efa0a44bc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f341fdf1-9777-4819-b149-084b3ebf5f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689754ba-a671-40be-9007-58b9eaff646d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1678c6-dcd2-4abf-97fa-5d01d4636363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39da31bb-26e7-4c08-b9b9-de5708ff69b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad98716-c3f0-44e2-9351-d89091a339a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7619e5d-b99f-491f-a2de-9f3fe4074fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb95be0a-6878-447d-8f36-16c1b49efac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e54db23-e2e5-49d6-b13c-df8f62ec479c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9890417d-109d-4882-a722-741aad7bebe0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681836f5-8236-462b-a429-2f61bd1ac95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3e4c5c-03b4-404d-afb7-0ff10bfd652e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f7173e-9d2a-4e6f-9352-31f17bc0b3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "edfdc084-4c91-4244-8c63-c4be94467000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4d85e8-f10a-4eb5-a695-212497a2147d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32795d01-b913-4a97-ac1c-fa9564758a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a287cb-747e-4699-a807-25ea87649555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55904140-11c4-4153-b4b2-1c43275c9419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f510f70-1173-48e5-80be-2aac6627f229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465cdefb-6280-4a7f-bf47-b8efa0dcc2c2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43c5062-1183-47ca-b1c9-9c7660b845f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45345772-8c3b-4528-a7b2-1f2f2aec5d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47591cbf-8b09-4705-9cd6-34639c0f2e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d002c98-da78-47bd-8859-d3c2b1ecdecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f51b18-0cf8-4df9-95c3-581543459646",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1257656f-c949-41b9-a279-f116814c7744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d568ba64-2ef6-4777-ba12-940666a91dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75353432-3ad5-4552-8d7d-38bb45ec8cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0912372-6379-4b39-a8bb-87dd97edbb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb2e146-57ab-40c4-b0a1-9af7d1ede65e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf2db51-e34f-4ae7-9d19-92dbdcc6d58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dc03f8-1374-4111-9799-648258427036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67547d4d-00c8-4644-a26e-413035e288cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "848f7d8b-34d1-4520-84e0-9acf5b94d7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4ccb9f-d28b-4dd9-834c-cca4888dd905",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfb7f64-1875-4c90-9b9c-6eb1e45e2628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d875d611-128b-48ab-ac0d-9e2d86703cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abcc22b-ae70-481d-86ef-452c509c0777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d40f3b4-45b3-44d0-a710-15be600b1b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657b5704-19f6-4542-b534-324ee4f9daff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ba8c7c-23eb-4e51-a2ab-cb661d68321c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d4ce58-6799-4740-962e-3106778512be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d8b8f3-a183-4fdf-b98a-7f4ede29eb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a76485b-ad40-4646-a6fc-886e9c2e63f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899d3678-0458-48cb-8646-fc873b0056a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0066764-1b5e-44ff-abd2-52e34a47873e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d25550-e0bd-4910-9d47-3fbca9320188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b70d0c1-4d8f-481c-b522-9d4ed2feff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0147aef1-122b-49f0-9aba-a7e53620c45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b48d66d-16ff-4fdd-8db1-1715512cb6e4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fb5b19-a966-4bad-9e03-877441d9116c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf22fb6-4779-46f4-8a62-a9322caa2bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a8317a-9d8c-4c42-a4b5-0bfaed9ad060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f74b59d-681a-4866-bbd0-3d0ccfceae64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3283265-57c9-49b2-8e59-34f32b17fcb3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5168678-2c80-4b8c-a4a1-a50d5e9d7115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a164c51-f60f-4b81-b132-f142bdb6f1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2d858f-3583-420b-a864-b1efb2a97365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0672fb86-00e7-4ece-955a-af19961d76ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2180e1-2629-4343-8aad-04bbb03467a7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb875b01-3de7-487b-a1c0-599dc894b92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf698d1-82d9-40c9-ad1f-8976c9ecab70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73862c5-d4e9-4899-91e0-e5dc0d0dde7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2612e37d-f0dc-4c3d-ba64-24e15ea0a151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99f640d-93cf-4730-b5b0-ad676b74ee76",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ad716d-e4f3-4b96-8c97-91cceb896eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576f3d1a-60ba-4d3a-b331-6e0c7b0861dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e5eed4-8a94-45e0-b3f9-242101646623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bc328a-8550-4e4f-977a-98c67d394fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16609fdc-e94d-4803-a530-8348286850f1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4b3c3b-c728-4adb-830d-457904249da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3b16e6-1f83-464b-aa60-b68a5e0ee08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adfbfa6-54c2-4a2e-a1f0-72bca914b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a9205f-8bf2-4be9-ad89-691bfaab4f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4d5c48-ebdc-4617-bf5f-2341faad329f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fa853c-da5d-46c5-91ec-c41accef507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac69d482-c8a3-44dd-8255-928b5d12d1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b5f9e2-2051-48f4-a33a-2f91a08a38fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d394e7-b970-4806-9898-c3fcdd4b3db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ab8f31-70fc-4d5d-ab8a-ad88cf84473f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b722ce28-05d6-4dbf-8f6c-f34380f80b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ebce2f-d01a-4ec4-9d2a-35f060cf4484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266fa514-8be4-4253-bb00-28f1bc6b844a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d29a64-8d4f-4936-873f-565e3cb877ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f352410-8331-4bb8-a934-a79a3bb9bc19",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0be5865-79a3-4f94-9916-42e2ff54498f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929f2f91-849a-4235-955a-3a22fe2615a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b60f949-1200-4dda-80b8-65dda86bbad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "948a2cc3-039a-438b-bc1e-b6e82287c6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c18042-12b5-401f-a11a-8b9387d33622",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cc0faa-a1a7-4968-8052-4353ce555257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753d300c-32d1-4f39-9f0f-86481728a7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce4490b-290b-430d-808c-7de2acd51855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e600a02-63cb-405d-8ca0-3e2bdde353fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9040d4-d6f8-4ccd-bb03-13162d56db89",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc54f71e-31ad-4d11-853a-beeb73128d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c445140-943a-4686-beb8-8416fd59c4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d26ff0-0896-4979-8923-8d0945fd615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f7a625-5b90-4631-b373-9bd6a6146e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c0b7f3-d9d0-4f26-996f-f71fc5171404",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3948c948-7ea2-41f8-a1c8-d51cca7207d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772a1da3-6b95-42bf-9ddf-3dc3de834921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f6cf14-1ac5-47f6-8e66-119b3ee4ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f26a98-ed63-485a-843b-0ddc31136ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb183f85-8e6e-4b5f-b858-1d36faca77cf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f4f57-182f-4c1f-b39e-9d6ab8bb9ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ad1a8d-a2b0-48d5-bce5-7deb344f359f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f62594-dac2-49f1-a1a3-883dac0d8959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1dcb81-bb90-4b8e-b9e3-868d7de3568f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a6a870-ffb6-49f7-80a9-7456e6df0870",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ef221c-8952-4eea-bcc8-b9b5a3f1c598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c3876e-3064-4eb7-b7ae-74e0a969dddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f7e44b-997e-4f4b-a564-528143ebe30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d8a330-8e63-4fd2-9425-2a393f8e2b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4b7d87-78f0-4bd0-a160-92951dfd9aed",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248584c8-6cb3-4a5a-84bc-2ebbe66e8be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c147cf-8f6b-43ab-a0c7-00f3a3a2c55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36025b24-7422-4610-a81e-38d4d2386f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8500ae-8119-4576-8bbc-47f4caf4a9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f9a56b-58c5-406a-b779-a16666a246ad",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956ab5a9-4da5-41d7-b59d-a1f9b87e4c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222f4e3d-d6a4-48f9-9f26-2b0f94dd867a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0139034d-9481-4f68-a08b-b6e4f37da06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f6418d-909e-4512-b919-8728a967b6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9edcb3-47e2-4e13-8dd0-79ba02a92425",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e72dc0-4da9-483f-8f94-1a2f4a546a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b0991e-d860-41b1-8f2b-3b251dfe0e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff01546-3619-4d0b-b71d-a5fa772b87d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e4f68b-b7f1-49f6-b108-da13b07f815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28a4bb3-89dd-4ac0-933c-b6a27ecc59d4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fadc23-5e18-4edf-9eb4-09c25a606da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f40dbb-b6a0-4bfa-8b58-719325c1933e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7926b81d-e18f-4a48-b19a-b0c66d6c2da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cac406d-24d9-4b06-9be7-203f7d2b1f42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86235d6a-73ed-4aa1-b9f4-09cc4e7bd332",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fcbb8cd-9210-4878-8908-d7b1239ad2d6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1935783d-0b4e-4d52-9c48-c8e076907a48",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a77dbaf7-4fed-46af-aab5-0ec0466984b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f85117f-c851-4c9b-afeb-526d41f4cb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcd8a9ac-299e-406c-83d8-9c3d9ee0aa7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3e1c585-b0e9-44f6-aa44-4bba67464cc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e6e0a65-a66d-46e4-9326-5643b77bddb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80361a3d-55a0-4288-bea4-33f6bb12d9d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "377037fb-7363-4bb9-8365-88b8257461df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e977d901-e26e-434d-a851-a88a55080d64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9569b04b-9134-40e0-8770-51a2780b9c3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb4fc661-5e25-4634-adbd-ef25f9d09d2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc1012b3-9b63-479c-9d74-878fdd1bde59"
            }
          }
        ]
      },
      {
        "id": "97e7f4a7-4286-4bdd-a18b-db9f696ee025",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "40ceb222-337e-4e2d-9cea-0db19e457549",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9df38dc3-7a7a-4b00-9234-12a63eb60654",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8af0acb-96b7-4d34-b598-9ed74277c881",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b750c76-1c45-42ab-9b3d-5037a67d960e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9789d5f-e9ea-4695-af89-f093a0ac796d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9c4b35-342a-42f9-ab37-6e71dcdf47b4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01335f89-96ec-419d-af27-e68ac6664a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204010e8-411e-44e2-8164-bf3dac56f15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d161f0df-fdea-4d52-a5de-c9780846a447",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e0f9a5-cc40-4e9f-9104-404f0c631a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b6fde4-52a4-4720-9c20-5ee7444a2247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06536b81-261a-40c0-b5eb-478cea65b92b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4a89d7-b909-4e53-a488-a7cb30c86af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2aeee5f-1bf6-477f-b921-13fa4a86ab3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b19cc71-2d50-41dc-865d-3f5085eb1e93",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce84e212-0e13-40ea-a8c3-57bf7e04ef62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ff8ddb-f8f0-4b1e-be95-54dbcc46ab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0986dc93-db36-468e-922b-fee0fc00b80c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089075fd-e1bf-4da9-b431-f21d670f35f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52308604-d3a6-4c6a-b48c-cab78415ce25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d29032-30ad-4337-84f9-d0253e5267af",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2720d649-df8b-4245-ac39-11ae477b1dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20732be1-677f-49ae-8ed8-b29726fe3da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bb17f4-2a59-47bb-b7a1-06b6403ab257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ed6e65-abf9-44d2-8a6b-38278a1ed7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0177a61-c530-4950-b622-f86404ee9aff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7bd24f-ba26-43f9-9069-ca8e31b43f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873e52a8-f5a0-4ea5-bf56-87369113542d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9805877-2d90-447a-ad33-ced0f2215f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733c8aa0-c0b8-438a-96e3-03e0fa8a6f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea57684-3400-4a4a-98dd-7a682692c5cc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5219e95c-6e0f-46c6-8737-4db17af873c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec83f9f-7c2e-4865-84e2-0786f933c0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d70ecb-38f3-4e45-80eb-cee2048ecb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c9bfa5-3901-4340-b5d2-d1676d266b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4877c049-dffc-4723-a3f5-4c7b10dacbdd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce53b8b-9ede-4d96-8a06-40524ca7082b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f40ef5-1465-4499-9944-617aaf55c7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4e2978-a03b-497e-84d5-9159ef6ad3bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283e8002-c923-4d2d-955e-d64108f9a734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fda18a9-39ce-4e58-bda8-85c3b9af7018",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e69b2c3-4f3e-4f8a-80a0-ab5ada792b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173970c6-d644-4d08-acc2-23fb4ed767ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3810d138-13e2-4690-bf0d-ef1d5240f307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d9ca8d-9bd8-4d98-94ab-2bc238b07282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54500f60-ca55-4c33-923a-8036e4a907bf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377b015c-86c5-4b6c-9f91-0cfaba34960a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63deadb-e826-443c-abbe-8711cd728550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40750c25-a8df-42d3-a746-1aafdeac8adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795526c5-831b-4c45-b48e-f3db4ac7266c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6098a14-f34d-4e05-ae16-cbd2e87e2df5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef1d51d-afa2-4919-88e9-f1f747e4f434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a365eb8-7a60-49f4-bb89-00f26a554b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a7d6c9-f085-4da4-a0ce-caf4c1a74c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426c0175-950c-48cd-9144-3b81277630e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6775f13b-a58c-40f9-9bbb-f500760fb9a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9676a5f-ce94-424d-9976-04bdd7df35e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3bb4651-3e15-43b7-8b18-37072fc54337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8056cb9-0f8d-42d5-8b7a-8f6430f361bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b543047b-f146-4864-97f1-32a30cf6a7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b785af-2501-4b42-86e8-0f339c2f0e89",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb58184-b6a2-4a67-b9b3-1590ea15238d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e5d4620-7fe6-481f-979b-9aa426fcfe18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7cc83c-7fc9-4ada-b49e-aa5449282a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a8431d-bb64-448a-8158-62e99819f47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17549bbc-457b-44e9-96a7-b032ed00a5e9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de649299-95c5-4041-8b47-40f316514802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b0287f-81f5-4bad-93e1-bbe9676187fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128ad1de-4b1f-4f28-920e-97a0b07758e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74f2961-1538-40cf-bbb5-23000ce083f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5fa602-377c-418d-a890-9ca158df685c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532c01e2-dfd7-43f4-b371-d697626174a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f132e066-8767-44a0-a59a-497b20fe68ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fe2993-9328-40f3-a852-989c1d7e6c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e3475b-a596-4963-b28d-5685470ac02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa793cc-9002-4ba2-b941-396854e30d11",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9927d7e5-b8a9-4893-b7e3-60e1bc7b8d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efce157f-785b-4595-bc31-43c421754e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3284ff-17ca-4a44-b4ee-b206bd7fbedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cc58ef-2789-48f6-a6ca-7cd60e2a31d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9e6763-6af8-475e-a21f-8a5e801e77fe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebe767f-41b5-452f-af78-7bdcb52a6d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccde7ad-0874-4929-b4b3-3b6a1c6b65d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0550ca5e-6ef2-4ade-946c-f7d8b175d968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f090add-9a1d-4faf-ad09-53499f8674bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97af693f-5a4c-4e30-8cc5-d23fae5717ea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3a20ab-e277-4c14-b893-a825cc210173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21244404-ba10-4b00-924c-1307ad5b207c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228ffc90-7b0b-467f-9d46-e803a6876f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911d9985-4cc0-4b33-8c20-a134ccc2e762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740bbf64-be65-4f5f-b4b0-509bac038e46",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecfa6a1-17de-48e5-9d1a-0313a45b6949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b50223-058b-4e45-9ac7-4de5601c42c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6be855-987a-4192-9ba9-aee1e6a0b5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6dd3de-7b70-4f42-ab87-0bcf2dfb1639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a85702-f587-47e9-b617-b9a516a34f5d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b56217-2708-4af7-b1c5-df01e1a71e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f20daab-f42e-43f6-b28f-4fdc766b5f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbbbb64-302b-46c5-99a8-d375a28beb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bb9d82-a3f2-40f3-922a-a0405a2bad58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0695cbf6-5d74-4085-bdb6-9268df68e522",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8078d5-1ead-4193-a975-7bb6b56d58fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbc109c-1cf1-4f04-b88f-87dfcae49c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6415e4e1-302a-4a34-93cd-ee9854edfbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ba163b-9edb-4f0d-a798-b71dd0de0668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bbddf9-22d4-463e-bca7-741d687fe8eb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfe3ee1-e30c-4c64-8f13-480c405092ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c24b7d-0e11-41f9-9520-68fc95724268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9481544-23a7-4e9f-a798-9d0e7b46cd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f3c7f7-d920-4a4d-b113-8702ff7c34fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618a3711-0a04-44a8-a751-bc7141c0b5cb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e886dbd3-2ff1-4a46-8db6-9840791f515e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf82427-d506-491f-8505-fceac45219f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f657947-720e-4021-95cd-f7836e31368e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78439e3e-1e5c-4c29-b02c-976831abc09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a0b30b-aac6-4f3a-b403-3b55c75b469c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df36b824-04bc-4978-884b-c704015fda74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda3910b-8423-4894-ab1f-1848a5609980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763dab83-8323-4c2a-a2ca-378fa7f4ac70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ed64fb-744a-4ae0-a892-344705f7d758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f54362-5056-4c8c-8ac9-eccb45371b69",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd931666-4f3f-48c5-846c-7a46b171759c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93755ac2-3d3f-45d2-88d8-aabdb024bbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddea817f-bd48-48e8-b417-9c29706d0d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ba76d4-d571-4088-81c6-ff15be287679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e994682-2bb9-42e6-b3ce-94e2e646e572",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcae104-a6be-49c1-b881-dd0f9c34a6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992fe22b-4778-45f4-8153-acd8bd357a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7111f69-b556-4822-9d8c-425d86e41c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0beb3ca-67c9-4162-b444-8cd0a974c9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d9dd58-78e8-471b-a272-f051611e1219",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260c2eb7-b6d7-4776-9098-54006fe8794d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c261a065-b042-4897-ba5a-4f14f25c00fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa02033-a638-455c-90f9-a081324d5042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c51e251-3c02-4771-89f3-39b221a35c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe02667-dc85-4c6f-bcff-7076fe06d2cb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8425a56d-0591-4bba-b8cb-1c35a54ce11e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808dc91e-da94-469c-b6f2-82155d69c2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d37a912-80e7-407a-b028-a21fdea1bd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d9f12c-de46-48ea-a3eb-71aa53fa5463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9e24c4-8bcd-43ab-aa64-c92eb7b7ece2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e043c08e-edd7-42ec-83a5-8b2755130db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "111101c0-df64-433a-8185-9d4358b37276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643f3d12-e064-45a6-9364-a4db65661f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42f05fc-587c-4069-85df-aa5ec690048b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbf0160-aa44-4164-88d8-ea5a42427f6a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84453f1-2195-4526-a526-36813616ebf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1f5020-3f26-4c70-a8c8-2862e2811653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545767d9-397d-4f3e-b7c3-7a4494fa0e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd2eb78-5f2d-43f7-9b48-eb6200f8c28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609baae1-893f-42f5-a112-33267776d4cb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c60b19-3ed4-4fd9-a48d-044723e0f507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be878aac-89b8-4242-bfa3-21e99710b0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a75b94b-50f7-4cd0-8209-cbf0d94aea99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b77b0d-6cd5-49ed-882f-4f8618a7ef24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dceaac-13bd-4c56-80b6-22666eba293a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa34e815-5798-431f-a442-60854d95cdea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "029ef651-1184-45cb-bac2-4f520bc6f1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68122aa1-bca9-4b69-bc2e-7b26751a66d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d9f9f9-799d-40f2-8893-073edd7aff60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3c67b0-0c2e-4a45-96f9-da22cabeda80",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8014e3-e3c6-4b6d-93ce-977900b58bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b74c77-4771-40ce-8acf-731f6e7ae09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951145f4-9881-450b-aa9f-eedde80540b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0911507-1534-47b2-a03c-6bbe8f09d51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091e710e-7cad-48aa-8488-58d0d1b7f4e9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3dcd45-d2da-44d3-b7e6-d9f382a08dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45ed92e-e4f3-4907-a4da-4a331fa6816e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94d671e-6965-4a33-888c-de7f4eac68f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb0dfe0-afd4-43e1-ad38-838d560a4755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9912c8b2-6618-4c82-8cdf-07afbdeb3699",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fca805-2888-4186-8599-8e5000f58d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15db904-19bd-41d1-a02e-f5f708aebd22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd322910-5728-4830-90a6-f2164cd5f30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdfeaa9-344e-4115-9ff1-70b8cd38924f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d779fb6-6936-44c3-83a7-eab6c3bcf077",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec281fb-645f-47a6-97fc-3b48afed30e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad83893-9aae-4068-af63-2646b259347c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e54a891-3bd6-4210-853c-76b55209e5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cccd54-f58e-4b25-98fa-3858be26c587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c956be0c-46ec-4ea6-8435-892841ec60bb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d149178c-d5be-4477-9452-8a7ecd23a3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccfc299-79b8-4688-b361-a7ee2de7cb3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8177972-566e-4d2b-9255-a5181311143e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14406ed2-e686-4478-9e7c-f28ed763f739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69660f1c-bab7-4c2b-99f2-dd99460a918d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262563e2-23ec-4aae-bc28-4f4fca180ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fdcd8b-b17a-4c0c-b599-547eeaa753f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb80b9f-1ca9-4e38-b22c-16e842584685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152e73cb-605f-4ad9-930b-4944049898c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8386d4bd-579c-4515-8948-56582fa42c82",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2de35d-09c3-4aef-b844-d77a3237c1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1423cb8-462e-41e7-9f1b-71252ea3a4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2930ba6-2a79-4a2a-8383-06e15ab7021a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21724223-e6e0-4722-ae73-9b93c0b96a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d3cde3-0612-4d4b-83e2-c5e1124f05a4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b7f197-7bd8-4c7f-bdd0-bb40a25216ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82404982-ba63-49c6-b79d-4dcb1805a9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6412d23d-2169-4bde-86d0-475e3ad78781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b845035b-27b3-4c92-87f0-af7a7ed28255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5cb7e5-e227-41ab-b9a4-9fc477818a30",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17095b2-4330-48c1-a38e-c6bab0b19d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1da1267-26f8-461f-b891-12e7cc7f5197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56ba79d-ba09-4e07-8018-807424964360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245f21f2-4f56-486e-8e95-aaa5c73c44ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df49a2b-d355-46bc-b12b-6bd96b008864",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f5f2ef-c5f6-41eb-a19e-5e57ae724a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f0d4e6-51af-4cb9-8b76-e55b9c487256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea0aff8-f0ab-4282-a0a0-bf606ae32335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e59e46b-f3f9-496b-a1df-2a152c999e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a5025e-aecc-4a92-9a5b-1f17a74a165d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97bc44c-e4cc-420d-b330-d42528779800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ad3fd9-7ef7-495b-95ff-c495f563ac20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dacd1d1-7846-4297-aa8a-8a2cb9e5982f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4909860-f660-46c7-a12d-f84c261c0ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080cf9c2-a190-4c3c-882a-850675eac251",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef1ce32-a011-409e-b306-3d02fcc4d382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789f9c12-0d89-4bac-bd48-e6b3972c3dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5eba00-ee19-436b-857f-282539387029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2ca2fb-1007-463b-8738-638bef4b78d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259dacf4-9b77-4acd-b3e9-f1d49911f507",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59976525-af97-46c1-b6fe-4cdb8d7834e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8a2700-3136-452b-9d47-6c428dbe5acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a00149-18c1-4093-9e8f-900c9340a34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d008780-ce3d-4c33-a087-256c223756d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604635c0-af66-416b-888f-9cc6497f01dd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3bb25e-c11d-48b8-b80d-f2bf72a1726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241722c5-6e4d-4640-8969-9bd944a551c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416ff433-c276-4c19-9dea-5c75de9e29db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9380782-8385-47d6-a569-8776c06f06fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9804b77-9e68-4228-a1bb-01be3e433b8d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d44241-9a1a-43f5-8a71-a083b0206b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015c3022-97d3-4bed-95a8-481d8f242c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ea8be5-ee8a-4225-9f03-a3e6ce906ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb5aa45-f278-4d4a-a8ec-b5dcefd03418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec66827d-8e0f-4396-a08a-cea3bd6687fc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e133f530-5797-4f2d-a61c-f58e0a3bc42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdca5034-6a96-4293-ab89-4b3acd8a8755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7776b0f-8af2-403c-90bc-2a9724197a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c55fe7-2d22-42b9-a72b-a89e9839bf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8377826-8187-4fc9-97af-8fb57d4bb712",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eede9d-e76c-451a-87ba-7fa10cc7a45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514f151d-b7d2-4412-89d4-67ff2895054a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4773e9-2455-419b-8f66-09eead17e58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e47dadc-e8eb-4cbc-a264-56bc97b8b97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bab6fe-9705-4d83-8453-f41bf3ecfb68",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfc95ef-5e4f-4e03-92e6-5d9f793cfa68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e30a988-5c99-4f00-b324-b4012657c350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e75984-c50f-48e9-88be-627b53c6da82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a02efa2-7fe8-4aef-8c89-9f00eb2a1a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d744dc45-a9ae-40a3-a33f-9f2cf3408bef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa7508d-629a-4a96-a346-3d3293757ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f333a6a-5881-4dc9-af91-ef0bd9d69f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5d572c-c437-414c-bb2e-1a9494c7bb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e4ca12-d4f1-4c75-a0c2-5e1141359ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d3defc-75fb-4870-bc91-365d5a23abd5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91162ef-ad77-4792-92f6-153c489dc1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20c7da0-50c8-4f7c-a1fe-03be4c60b40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d56ad3a-16c2-455f-abee-141b403afe9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60bd614-fe6d-48f8-8a2a-b96dbcf34476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2134a012-f039-4394-a0d2-e438d11018ff",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658f38fe-1932-4b30-8e89-fc3b1419ee2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6eaf1a4-8a71-4650-9afb-cffa8182312d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44677aa-9da3-425d-b5ef-1fce5bc2f5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44be9cad-8377-4c9b-9935-4f494ddb77fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6561cda-299b-4292-a468-ab399aeedfe1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a247909-0b0b-48b7-b4fb-fcf1e29e187d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b58813-c4d1-4685-bfc8-1a4ac7e72406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d193338-8d8d-49ea-9868-996a971d927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49112abf-d528-4459-bbd3-b7ff75f2dca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64399b0a-408f-4e14-a62d-42674a19b236",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1ffcdc-8bdd-4bd5-916a-7235b78287a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ec9c79-3901-4d1a-987f-482ca842cebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70b106a-9502-420b-b273-f7a9bfcaac94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45deea73-b77a-4496-87fa-27d9eb214419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c18849-1efa-47dc-8667-40375549da51",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a9d192-6763-4861-aaa6-f0f7bbdc536d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a3684f-2430-417e-a6cd-8d1911f15c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7a18a8-d566-4e71-8e38-6a96e7558db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccada24f-2cd9-4db6-bc2f-40d9e3d4ecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51607d7b-112f-4bf8-a164-df1919ea546c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca5a716-426e-4d1a-92ca-c3cffb0e9af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa2e8bd-db64-4a93-8c26-b8ddf439074f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e948d344-cc00-4e51-aeba-f12d0290219b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1509859-22e1-4bce-b514-53cdb95eddcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a080b397-5bce-434c-8674-fbd8c176582b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387cffe4-752d-49f1-bb0d-8ba94421bfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a8fdd1-19ae-4d85-86bc-85817bd338dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ee3013-e003-4364-bf2a-c3de8aab68a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ffd69e-c9eb-4f2b-851a-bdec2ca85aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ca13c7-9415-48af-b74a-cc4647a2b744",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13069b13-7d59-41df-9a60-2b93c027c26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec845d9a-be0c-4d11-85ea-efd65e592fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c5c652-c364-43db-a9bd-63fe570c16ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c0403a-a248-427a-96a0-f035a9169f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1721cdc9-2d9b-41f3-b723-fa940f4abb81",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5402faa-c5a8-4ac5-92e8-32df4cf30858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ed9fb2-6064-4a3f-8611-18973f4b31e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3e1a96-f334-478a-a760-6450cf49d24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784a14f9-dfe0-4076-a96d-a8c2b7076393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d5bac5-3c95-4563-b424-91d04199119a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4037c9f-3b1a-47d2-b118-75b0fdbdf493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d179d20-7839-4e53-8321-be1450d47e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270efd94-3023-468c-99e0-0310399d907a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09ecdbb-47bb-4784-8512-0036ddac5b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c32a8a1-a1a0-4723-816e-b64022d129f9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c527129-8963-47b8-b2b9-2b05a3c1df4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33aa4db9-0796-4015-8998-d703dbd76e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db2e839-1dfe-4868-aa0f-ec846865abe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430d7953-744e-4b3f-ad69-f53a3e9f8e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c62baa-91c7-432a-b002-91b68676cb8d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd8e977-ae36-44f8-a363-6d550494fcf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37615147-2e39-4cbd-bb82-203efafedace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb51d11-554c-46c8-8bbd-331eafd52b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842f8fc5-edad-4522-9849-ece40b49ae8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc00017a-5317-4df6-9769-2d0e5611134e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1a84bf-2f7c-43d2-9c66-b01d5ac43668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae02dc17-0706-48a9-aff5-4e4aeba728b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f137271-61e5-4b24-ac27-b47d8ecb0592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9ffd44-a3f9-49db-a899-a4583bbfc09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f2de58-ed7f-4a0c-a554-2dc1d52f1625",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476d4e23-74b7-4ccb-ae8e-db1ad15a844b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b6680b-1558-4dda-bded-745e568e7ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79223629-4c8b-4b6b-a705-7c99a2422f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50b1b1d-de2c-4b14-9707-1080835fabcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc4b8c3-3016-4687-9890-1bb59d7966cf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2445e9a6-d67e-4041-a1ae-a1ed4647bf29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6423a1e7-509c-4c3f-88b6-aeee17c8264b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e164957-adc9-4697-bdfb-86a33f722271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6354dba-dd5d-4175-9d67-657b364f7288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4540e56a-a5ae-48d2-9c15-6b92d4a36155",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d8cb89-d3d6-4651-bc29-b3b9c2e8a11e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6619bdfa-a784-4a92-b95f-406f80f23a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e71fd8-cc56-443a-abcf-c906c1ea0620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d5bded-ffd5-4457-999a-52da41896005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec758daa-6974-44ac-bcff-5579422fefb5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864d1be3-a0df-4efb-b246-7b44bc794cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dbce693-6b4a-4d50-a376-7fe1f3c496c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ccd9d8-8cfc-4466-a925-d6d0a4ef1a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff89eea0-74ab-47f4-bac5-e312c06af989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176be495-7c80-4f70-ab29-f83353000f0b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3240935d-2e5d-4460-a217-85722188f4ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ebf6dfb-8a03-4d97-a96a-9c20dcda8689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b471f74-e43c-4a39-a577-0cb75c26fcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562a2cc3-c46a-49a6-af3a-ed6685f9e178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023cd1ca-a4d1-4470-81b3-fc2c161af93b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da328abd-b799-48a0-b2ec-08f58ea83574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8de602-11fc-48ff-9712-6db8eb3b1d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0306ca50-eb51-4c56-a589-f587cf822818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cae3796-1c82-49fe-932a-017ad3db07a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb562c4-883a-4af4-bf05-c4707a15d3dc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d3ab7-0d0b-4d6c-87d6-9e26b2e235c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa6d0cb-3c2e-4570-8708-1d643ab74336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ee4878-230a-417a-af21-142c215e073a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2c2fb7-548e-4b0b-869d-d8f7061f94fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c969a08-6e57-49fa-bba1-55319f5f6c2f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b908b8-a5d8-4c03-9eef-1b9860f7bc34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea78546-b95e-4fb5-8e39-8709bd48966c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d04d94f-c7ef-488e-b641-0dea4acc78ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e78605a-b873-4b8c-b52a-068ffa74b117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3947f57a-e19a-4d01-bd80-7341478f93da",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f74abd-488b-415a-9b79-9741eae683af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b2cc2c1-6b52-4383-beec-d9f96a8318b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfd0c0d-ced3-4bc8-a8e8-52ddd5f5aedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5192f2-387e-462b-bdcf-6927bbaa1e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e105866-7dd4-4298-b358-1326d244e24b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4515b45-6f02-4593-b3e5-193fce29f12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3cf6623-cef0-40fe-bd4c-228e5f30b84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d568ebe0-657b-4cb6-95a0-df13cb611ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d16d34-7bbb-4586-9861-d57919f718f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb05ce3e-de1e-4691-9c87-da7ebfe6e96c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d263d6c0-f2af-43a3-a569-853fa2c274f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b797e74-796a-4235-9f90-759eeef5fc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b557491c-c0d5-41d6-b8ad-2aebdcda2140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf128c2-365e-4873-a385-5e97227a46dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dedf4c5-6886-4de5-84b0-fc13a37191ba",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be30887d-db32-4864-924a-0088c1f1ad45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2798b4d0-4455-432b-b9a0-0ab955c544d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab8a07b-aa2f-4e53-9a69-413ec2abb0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999a2361-b9d8-49b7-ae84-740cc636fdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4314d9dd-2677-4ec8-9980-ab015d6d7c02",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9438fa0-5226-48aa-b3f3-0dab32359981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e6da5e8-af00-4c0d-8bcd-f6493b29ae00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048fe3de-6e06-4152-bac4-6bddfd5f471a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfc31a5-4297-4c9e-9b3f-fb446e05d68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea511e6-c27d-4631-b129-68b6ca6e9323",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1916cacb-eceb-409a-9bc0-8bc329e849bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b861045-639e-43e0-9c83-e96ac77f319b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1605360-4f13-4e12-b62b-875d02df0b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596fb04f-66c7-473e-b66b-5bc6a362b455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42943077-aa29-418a-ab8e-600ce7961264",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b6af87-0763-40e9-a342-aa4213cec901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76859f88-b022-422b-89e1-54da42953a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092a1923-d121-4e92-abf5-a522db29807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e7a3b1-5612-48d8-aec7-e9dcf151e797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4a6e3f-4f75-47db-800a-aa219036b56d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd6394e-7eb5-48d8-84b0-47dcf2fc5599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e259928a-1caa-44a9-8ff1-7fa392312671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e454e-6ca5-4c56-a3b2-e5f074e383a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f517706a-6a85-4302-b9f6-76cb69de429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe81b01-3eba-423b-97cd-f4a2d9b4a364",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de459d96-6262-437b-a7e9-c6dd4eae070a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e013baf-6998-4a85-9532-793a5e0ba046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464fbd13-02f2-45a5-9ead-156a68ba2d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf105fff-2c69-41ae-a158-31969dad4924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fd0202-185c-478c-8fc4-28c17858d9d4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414a06b8-75f6-46d5-9001-a34b696c8186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca0ca24-b488-4480-a14d-565b34bc88ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dc5d13-9260-4039-a8b9-4a67a9aba460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a38743-3648-4356-8086-ee03a329cb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1450e454-7240-42ff-8b1a-0b264fb34b44",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16871d8-2ddd-48d4-bab9-c82fb9048a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c44af5-416c-4914-9f7e-b96473453580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f6958a-6091-40b1-b1e6-a613c88dbc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bff7387-12a5-4655-9e80-f57c325beced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97be209-0833-43d4-b918-ffb0c3d315b0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a775a865-6199-4841-9318-24989bc2485c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e7f8df-0538-4719-b6ba-2ecfd96e38b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8ea9a7-5246-4b75-8f91-6d01c690fba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e64aee-1774-42c6-b476-cfa2d521f62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2f9a4a-0f6d-4f5b-b638-4ab9e448219f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13654429-225c-4de7-9dc1-ab35a7464a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca799ff-e6ee-406c-9275-93d4f6ca0efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fd1ddb-0c70-4c38-bdb8-e5aa37018e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef589961-3920-4085-920f-abbe9bc69bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14305696-0534-4fa1-bdde-bebe9f9d7f8f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75831c5-3746-4072-b37b-29580623c154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa28450-2673-40fa-97e5-1ec89b89922d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba286e1-dd5d-4a01-b0b9-02b6d6e934a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8552d552-7846-4666-8aef-3378a9376309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98fae65-56af-4c65-9c2c-337b81124ba5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30745027-d83a-4f3b-93f7-b5330f176771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a9b372-24bd-41a2-a713-5b58ac7cf4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41da653-6234-434c-a5a6-c68ad49fa012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ad856d-81dc-4d84-b1f0-f564c4ab1c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fdd380-6250-47d4-946f-8f8fe6de84de",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadd079d-47c7-4d1f-b5de-131745a55e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1ae998-fa7f-4b4c-9b2b-3c73967b1b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fef9ed5-fec5-41a6-9252-2ceb4dd7c727",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb0ff7a-d069-4d70-bd1c-e3bf06c55edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c84610d-2938-4da1-99b2-2d7404b0d0af",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8de01f9-5dd0-4667-a0a3-405c954be48a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced16473-7c53-4aec-9ff9-88aa0ec72e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8b45d0-e7b7-446f-bc2d-1549421242f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b6086c-cae3-40ac-b46b-0efb1427ca96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63041804-10dd-427c-a83e-67c7684b75e0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2703cd-a26a-41f9-aff9-4259b644bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79e6d1b8-8a3b-43da-a3db-73b7434b2cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a687abc2-abac-4233-95e7-66b99ce77885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46dae753-4e16-4219-9d9f-895f371c042f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73347ee-145c-4d52-8fdd-63a67eb46723",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35c308a-a5c5-4c52-8564-0a5716cc7471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a46e467-957a-4489-ad8d-42b04e68dfbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e3b80-6f64-4a51-9d07-c2286040c90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b162c075-3374-411e-973a-3cc89ceb5940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b760fc24-86fb-401f-8354-c3ae45b67ee0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf62fa3-2572-438d-9200-984697a1b6ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27809dfd-fa80-4d9e-9bab-526309fd4b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c960e81d-19f1-407e-a80a-1ea29c133a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86886d11-6227-458d-a567-2a74631f2384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db51eba-6c52-46f6-b1b1-fd13a1fbc664",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4149b24-1b8a-4f4e-b0da-f70349857768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4725a903-bacb-4f9a-9408-0244e143a59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dab555-d516-48b6-83c4-a91133bab7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bec3176-3a5b-41e4-bd83-83fba4191645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3cb249-3d63-44e1-bdf8-b797fa4649ef",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb5a601-8da3-47fe-8f68-045b1faa9364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d9d76c-f35e-42eb-abe2-d6b5f930f930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbddb000-1e6c-4dd5-be90-b0970be66170",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4178b7-3e51-4ae8-ba49-fe3f2611a86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a65d80-5c4c-4d57-8611-784508a8c7e9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a5bd6d-732c-45ee-9132-28d773f9ff63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71eeef94-63e3-4535-8b13-c5371d57501c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4138ed65-1f1c-41bd-a4c2-f3b187063f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0cc99a-3558-4581-98e3-dab61cf45d7d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a2f8041-0a40-4351-b67e-6b6dce89d2b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51ecf5a9-6330-474f-9c56-85351e914e69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fd3299b-041b-42e0-826d-217bacc29229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a1023ba-c301-4e7f-8d8b-ba9d7264d0aa"
                    }
                  }
                ]
              },
              {
                "id": "c3f301b3-3836-4d38-a314-6a9a17703a18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eec9f9fd-8ee5-4823-bf1b-849f6ca8a62f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ee62dc-5b79-46e5-adc8-ae97d65e4a3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4e14bb84-6d2a-4b21-a9c0-dbc7dc43ce99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad48355b-2789-4dec-835d-a9e83ee89c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d649e97-b16b-4f40-ac76-3355fa45dc20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3a0d76d-f052-4dcc-85ab-61dd1f9e3cfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "303cdeab-95bb-4f10-930d-1d2ccd6b899e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab7b0eb3-648f-4d0f-8006-347dae6bdd16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cb7c489-a125-458e-83bc-2cbcd4e64a1d"
                    }
                  }
                ]
              },
              {
                "id": "12b472ca-fbe1-4882-b795-764c0c3ab6ca",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e17078ad-712f-4ca7-8341-db0a830e458a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c02053-abf7-41b3-84f6-60580362dcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "11fcdc14-b9f9-45a7-bd53-be3de5d4f7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4d3627-8136-41b1-9ace-42b6725623e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d236f099-64e7-4d67-8b64-10376a1a66c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "062c8635-b0b4-419d-9bc2-0e43f8db789e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e52270b-5bee-4d8e-88f9-f48656e4c2c1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "132364dc-0c0b-49f6-97f8-18c96beb4430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4e988003-f576-45bc-9916-1bc3f7e936a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2446a75-51a6-4ccf-84de-1eaf1cc19820",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "554b4c7c-1537-4f59-a18f-7c2096e8d03e"
                    }
                  }
                ]
              },
              {
                "id": "3dc93dcf-7531-48bf-997f-c239c5d5b072",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ed821f6-a2f4-4ff3-bed4-9158ff0084c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aa5cd178-5e00-47a1-a8aa-d047f63ec00b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5329599c-e3b9-4cc7-8af6-f51ca52203a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "502af20d-e893-4bcc-8a22-166545b32da5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b32287e-11c9-4108-b181-03b410a63a1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "496e9533-2158-447d-841a-229964203cbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d774231f-9428-46b5-b44c-7e730d70a2cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a5ff0ea-990b-4161-ac72-3ff40922c8fc"
            }
          }
        ]
      },
      {
        "id": "82e6962b-ac7e-4366-bfdc-3a45ee901a66",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3b45f844-1d33-493d-9bc3-8af9cb74916d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9bc17d7-dd23-48f7-8e16-2a924876fcef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a031cbcc-335c-4744-beee-d25103a3db5a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d71e356-ec56-4307-bbbf-78ecebf9e935",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b4973d03-3fc6-4092-93ca-4bb4bf6a05bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2bffe4-d209-4a30-854f-eba3cf2f5af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b405d8d9-6a3f-473e-9d23-52edf2c4f800"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0f307fc-e6b7-4da4-88ab-7caca61d3183",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f935430b-7647-481e-a6c3-d3820858fe13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63dadf28-8486-426a-89ef-cdb71bf56a84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f388572-7238-490f-a077-77abec739c08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0a20d99-6870-4c54-8e23-1612f186e5ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "147d3b3a-e792-4ad2-b432-651aa2b2424b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "777880a8-c566-4670-bd09-65b54febeee8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0289b810-7e3a-43f3-af01-2100598b1c97"
            }
          }
        ]
      },
      {
        "id": "b4984892-7137-4045-9371-6d18b16e30ef",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eae68744-2aa9-4f64-9c15-cad51e4ca2c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "360e0f04-a571-46f4-8d07-a0287cf28e78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73417540-12ae-414a-a305-2b6903398f84",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e371d558-3022-4937-adc6-4d7e0549aa2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0ca8d3a-9398-4e31-8177-058cfc2c6610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951e61a1-52d6-4d37-967b-e0f8fe62bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88a52bf4-19c4-4e39-a8f8-723c95092513"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad83d4e8-363c-4691-a880-47edd9664f29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc14abf0-ee46-4de8-b886-7120da434aac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8299ed5e-7a76-465a-aa23-a4fef2246ad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "713ee748-0cf3-473b-abb8-f9dbc065c735"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b31b9db2-80b7-45ce-b562-858163c9224e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41c4e247-b570-40ad-9049-7d37c02c01d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd1ff5f5-d850-480c-8578-eb31ced92dcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f59ae441-1a16-447c-b3fa-2926aeddbd67"
            }
          }
        ]
      },
      {
        "id": "456089c7-9d70-4968-8483-d66cf454226b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1f84991e-3ff2-4776-81ed-0d6f94d62eb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4590d6fd-08ad-4483-85cc-accdfc5d8d62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27631703-ac48-43a7-ba66-d35c46f93907",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe1cbc0-2c96-4457-9360-08ca85fe5fae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "553bbf79-dfa2-4ceb-abcf-729c4a04562e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18977e84-94e9-40d1-8592-bafdb6efddae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bee9d15a-1192-40c3-9d56-362327a0bc2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80065d5f-5fc3-4e09-8097-f5479e4eac69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b106abc-3882-44e0-943b-3a8bb4ee5d49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f2581ba-c50f-49bc-865b-c8059d22d790",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bfedc63-5aaa-4ffa-86b7-07aad9cf31e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f475ad24-63f2-4176-adb2-55f9768958ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db7e8d39-4190-4216-b218-70a3ed5e7517"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7887a4cf-ccff-4582-8cbf-22590546deb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0629d70-743e-4297-a4f8-7ba7272b8522"
            }
          }
        ]
      },
      {
        "id": "e61fa9ed-58cf-4068-adb0-00e97984c106",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cffbae21-b9da-4087-96c4-72a5cb53af7a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85ae084b-ab1c-4d20-96ae-89a0b2809b26",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "95ce554a-1418-4295-9076-5ae46c61b0f5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a9fd73c-e980-4b39-8c6e-e11b681eb20e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02d24ccf-2421-4c8b-8c0a-edc27de205fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 262.7957746478874,
      "responseMin": 7,
      "responseMax": 7853,
      "responseSd": 496.4180149994045,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690764161539,
      "completed": 1690764251913
    },
    "executions": [
      {
        "id": "ddf4960e-e050-4aa3-9bf0-87309c7d90fa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d06b4120-5bf5-4063-94d8-c925881f90f6",
          "httpRequestId": "e90b7be4-b663-4d8a-a149-7228c96c4bc3"
        },
        "item": {
          "id": "ddf4960e-e050-4aa3-9bf0-87309c7d90fa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9aee9a5b-f50a-41df-9822-358b5a592d1d",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "a4d3f74b-b1ae-4c12-91af-05945a48bc9e",
        "cursor": {
          "ref": "2d3ac2f1-62f2-47a0-9d57-1f5d3f9483e1",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "102bb835-154d-4cab-b978-5df896c604fb"
        },
        "item": {
          "id": "a4d3f74b-b1ae-4c12-91af-05945a48bc9e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d6c1bba1-fc09-4805-a5c1-f567651acefc",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7a27e8aa-e4ab-40e9-ae85-2b8067d837d0",
        "cursor": {
          "ref": "849cfac0-8548-4c63-aaaf-101fe35e9802",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2a7c7723-51af-43db-b7e6-15387d742e26"
        },
        "item": {
          "id": "7a27e8aa-e4ab-40e9-ae85-2b8067d837d0",
          "name": "did_json"
        },
        "response": {
          "id": "f638dfb8-431f-47a8-9c87-62e564dc0cc0",
          "status": "OK",
          "code": 200,
          "responseTime": 1895,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd2ca4e-d10f-4621-9ace-c678848969a3",
        "cursor": {
          "ref": "d922ee8b-8523-48d3-8e45-97e709a86065",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "afda1a8f-6dc2-4fbc-b282-0d2a89bc201e"
        },
        "item": {
          "id": "1cd2ca4e-d10f-4621-9ace-c678848969a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "9f46d24c-ef12-4177-bd6e-4fad9eb83288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd2ca4e-d10f-4621-9ace-c678848969a3",
        "cursor": {
          "ref": "d922ee8b-8523-48d3-8e45-97e709a86065",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "afda1a8f-6dc2-4fbc-b282-0d2a89bc201e"
        },
        "item": {
          "id": "1cd2ca4e-d10f-4621-9ace-c678848969a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "9f46d24c-ef12-4177-bd6e-4fad9eb83288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8eb875-51c6-474d-81a1-4a84700faba5",
        "cursor": {
          "ref": "08c991f5-f13f-466d-aee1-66026d359209",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ed790aca-706f-4f43-bf4c-451ca1ffa187"
        },
        "item": {
          "id": "7b8eb875-51c6-474d-81a1-4a84700faba5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3b6c5f1b-26ae-4e80-bf3a-aad95a99444d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 417,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b291297-7a8e-4d25-b3f5-902f99a490a4",
        "cursor": {
          "ref": "9af2918e-ae6a-4dc4-a19c-f4ee3d386278",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "81997b1a-2b0e-42d9-8630-39a8b841c305"
        },
        "item": {
          "id": "3b291297-7a8e-4d25-b3f5-902f99a490a4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6ce26ef7-0a01-418f-8c05-abcbaf6cb702",
          "status": "Not Found",
          "code": 404,
          "responseTime": 284,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef725506-780a-4872-a1db-0001ae47dc6b",
        "cursor": {
          "ref": "ca9d9da0-9574-4fee-a0e0-f25634eb9d1e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3b953660-03ff-4686-8922-15a71059ce32"
        },
        "item": {
          "id": "ef725506-780a-4872-a1db-0001ae47dc6b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "265bb1d2-c4ca-4f38-a6ce-57de2bec0b44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5341c65b-8cf3-45c4-b1ea-0200b6e50cff",
        "cursor": {
          "ref": "28b96c4f-b073-4fe0-9562-e573ba8b806f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1d3f1808-74b0-4ca4-8648-8b2dffb03cc0"
        },
        "item": {
          "id": "5341c65b-8cf3-45c4-b1ea-0200b6e50cff",
          "name": "identifiers"
        },
        "response": {
          "id": "6939d8c5-9e6d-4858-b927-e3cddafeaf22",
          "status": "OK",
          "code": 200,
          "responseTime": 1359,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdd3b17-e19b-47a4-9f71-4131f2d7d535",
        "cursor": {
          "ref": "5dbe4f74-68b6-47a9-8635-f661015de2c8",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e0af54d4-6733-4dc5-a623-d3bde07b4921"
        },
        "item": {
          "id": "2cdd3b17-e19b-47a4-9f71-4131f2d7d535",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ca67de91-91ed-4e4d-a834-a203c6625f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf1767e-45d2-40e8-9d13-14ac942393ee",
        "cursor": {
          "ref": "30318723-45a2-46c9-96a3-11cc26bbb5d3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dfb25c3a-232b-4335-a33f-d9fd5b5343cc"
        },
        "item": {
          "id": "ccf1767e-45d2-40e8-9d13-14ac942393ee",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2c79ca73-ba80-4ac5-b8c5-42cec1aea42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505e07c8-ca27-4274-be33-5966cd65b10d",
        "cursor": {
          "ref": "1f7f2a76-722a-4161-be69-b40dcd3be607",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "34c6b7b9-ba0e-46d3-8cd4-59de74fac971"
        },
        "item": {
          "id": "505e07c8-ca27-4274-be33-5966cd65b10d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "413b7d64-879b-4043-a60b-132eed873465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b17043-8dc5-48d5-9564-2901e8278610",
        "cursor": {
          "ref": "ebb6c2d8-cab1-48bc-a12d-47421f1d976d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5aa6ce28-84db-43e4-ba2b-49f9375abeef"
        },
        "item": {
          "id": "a7b17043-8dc5-48d5-9564-2901e8278610",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1330a34b-4ef0-4e1b-a509-a3cc7d32b64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11502722-0f33-4052-8312-a7492db2d403",
        "cursor": {
          "ref": "55aed0e6-711b-4d1c-8dbf-04f32b0fe4d4",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1633d222-1b70-4137-89d4-2b9c2bc1a1ec"
        },
        "item": {
          "id": "11502722-0f33-4052-8312-a7492db2d403",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9361fbb0-609c-464e-a0e7-77eb507e4597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cdb83e-cbd6-439a-9008-94cf28bd03d5",
        "cursor": {
          "ref": "ea4e69d3-dafc-4f22-be63-d0e18aeefb32",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "45824b09-d27f-41c0-b127-573ca1cd095b"
        },
        "item": {
          "id": "49cdb83e-cbd6-439a-9008-94cf28bd03d5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "503b4d64-9a1b-4e93-922f-da5915b74198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d231ad-4ffd-4f45-8c76-a2139c75ad81",
        "cursor": {
          "ref": "de1509e5-1a30-4e55-ad8e-e555754ab71a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "87d48182-8e94-4d2e-80b9-062a0f862743"
        },
        "item": {
          "id": "54d231ad-4ffd-4f45-8c76-a2139c75ad81",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "052f2127-b1ff-44d0-984b-8e4a10708887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396954b4-6820-41c9-927b-30ebfec75edc",
        "cursor": {
          "ref": "b4dab0a4-5c4b-4a6c-9ac3-6d86bd7c71cd",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "39db971f-f090-4c0d-a34f-00df0278c07e"
        },
        "item": {
          "id": "396954b4-6820-41c9-927b-30ebfec75edc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "61f72583-bbbb-435a-8826-2fe4a59a331f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c750b-8714-46b2-a335-9fa8fd366ee0",
        "cursor": {
          "ref": "ef5c771c-7c9f-4610-a247-6324d68e1fa2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "571d9042-697c-4ff2-975a-67cbacbbfe50"
        },
        "item": {
          "id": "bf6c750b-8714-46b2-a335-9fa8fd366ee0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "470d31b4-4590-4d75-9ebf-608f8dc40a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e54c6e-9e3b-4307-add1-5e106d00397e",
        "cursor": {
          "ref": "90078d01-d580-4639-9647-32594a209177",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "31f22988-7a31-413e-aafc-68ed68302b79"
        },
        "item": {
          "id": "63e54c6e-9e3b-4307-add1-5e106d00397e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "364106ff-8077-42c2-8004-7b4736da66e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8c2e58-4d7f-4ecd-9cef-1ea7a955d6f9",
        "cursor": {
          "ref": "0878d94c-0588-4f3a-b80c-d00075a1915b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b3a0fc84-927c-43d5-96f9-3dca7da0cdc0"
        },
        "item": {
          "id": "ce8c2e58-4d7f-4ecd-9cef-1ea7a955d6f9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e2d35a41-df31-4ec4-b18b-e8720533675d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecced02-651f-4335-aeb3-62eb3ebee8aa",
        "cursor": {
          "ref": "81d5e0ac-d759-457d-8ea7-ffaddbe7bc03",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0e64c245-80ec-4986-8d3b-fb43260cf12a"
        },
        "item": {
          "id": "9ecced02-651f-4335-aeb3-62eb3ebee8aa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0b1b8c5b-db3d-4776-8482-5650d15f8f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c56fa6-240e-4c16-adc9-fd134f63cc56",
        "cursor": {
          "ref": "adfaa3b9-68cd-4fc3-9148-2efdb1339f93",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "52cc211d-e65e-43b8-a231-79fad402d5d9"
        },
        "item": {
          "id": "73c56fa6-240e-4c16-adc9-fd134f63cc56",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1b3c8682-bc00-4d62-a155-db38f387fb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697e5d50-5ef8-415d-a576-cc7a644cb616",
        "cursor": {
          "ref": "0325d216-8bb8-4f34-b141-c6a0c47e73fd",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1675cc9e-bb07-4141-acaa-307c85b1d3e5"
        },
        "item": {
          "id": "697e5d50-5ef8-415d-a576-cc7a644cb616",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "259783ee-84fe-489b-b696-2c08ea1c5473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b722e0a7-d218-4fc4-98b3-09cf6a56a767",
        "cursor": {
          "ref": "5b7083be-b269-4c41-ac31-f44651eb14f2",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d4a2bb04-772e-4bcd-ac12-83e78616f8c2"
        },
        "item": {
          "id": "b722e0a7-d218-4fc4-98b3-09cf6a56a767",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d40445f0-df39-4a16-9046-ade1af47feea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401bb174-d3c7-432a-ac87-c11a2ac13449",
        "cursor": {
          "ref": "1cdb79ba-71a3-4129-83a8-2cbd3989be88",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a00d1e52-ec5b-407b-b512-e8b89566d6c2"
        },
        "item": {
          "id": "401bb174-d3c7-432a-ac87-c11a2ac13449",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8c0ea943-6f21-4097-b68d-6d9caba8a4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7bb159-77ac-4777-b340-002ce85cc017",
        "cursor": {
          "ref": "1d435b12-c3ef-4ab2-9d41-ba11efbfa100",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "05988d53-eed8-4f50-b018-474adc7a2c54"
        },
        "item": {
          "id": "3f7bb159-77ac-4777-b340-002ce85cc017",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "45d11221-71d8-4f4c-9c72-793f530747b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b889ac9-5578-49d6-8209-7e0749d51a84",
        "cursor": {
          "ref": "1472933f-7546-465d-be93-5a61c31d1006",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "83457a84-e226-489c-b578-f60b299b1954"
        },
        "item": {
          "id": "8b889ac9-5578-49d6-8209-7e0749d51a84",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5e7c30c7-23e3-4ed8-abb9-97285dcd0e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be47a74-b52b-4a74-bb94-a10d4d3cd23c",
        "cursor": {
          "ref": "c8ed3dd6-461c-4ba9-b4a3-89de68a1b779",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7aa8d291-2a8c-4879-8f0a-d5e4cf0d3a4d"
        },
        "item": {
          "id": "8be47a74-b52b-4a74-bb94-a10d4d3cd23c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c0fbd6dc-a406-4fdf-8980-2adb67ff6536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dad712-7b9b-4e1e-b521-6a57df493d37",
        "cursor": {
          "ref": "7f4cf08f-1ea2-4416-82aa-089bdb549604",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2dfe268d-1b1b-4fc2-af3f-522b6a01d4f9"
        },
        "item": {
          "id": "a4dad712-7b9b-4e1e-b521-6a57df493d37",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fda95659-0be7-4571-9bcc-ae9db3e533cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dedad94-fb6c-4553-b79d-2c3de0ec6938",
        "cursor": {
          "ref": "a7aaad91-f349-47fa-a726-b98926165473",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8b2e7814-39cd-43d5-93fe-63eaa0c84fb3"
        },
        "item": {
          "id": "0dedad94-fb6c-4553-b79d-2c3de0ec6938",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e47ab0df-e464-4064-9a1e-00d21327eb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75af35e-82f0-44c2-8215-3d15e5d59069",
        "cursor": {
          "ref": "4ea34330-1267-4d6b-a7bc-d9b2625f0de4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "632e5524-954c-4a4a-97d5-1a4306c97e7f"
        },
        "item": {
          "id": "b75af35e-82f0-44c2-8215-3d15e5d59069",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7507709b-9922-4fd4-8552-8abeff52c68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949a398a-e709-4e69-9a50-b384a96b9a11",
        "cursor": {
          "ref": "377bc0bb-a432-40d8-b0e7-ab9e99fac05f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a581e7c3-3448-42e0-a757-508ea80f642e"
        },
        "item": {
          "id": "949a398a-e709-4e69-9a50-b384a96b9a11",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bd68e3ba-77bb-4d24-9be5-6a58fe8e867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb4e964-fe48-4ea8-8df2-d627bca131e5",
        "cursor": {
          "ref": "55f9e40a-7d92-4b35-9383-67f4db59bdfc",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "883faf16-077b-4e20-abec-4ce1bd7e0b2f"
        },
        "item": {
          "id": "cbb4e964-fe48-4ea8-8df2-d627bca131e5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "74058ef9-107b-4092-a5eb-5e80e4f799f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c89a6b-1a2b-49e4-a7e3-212b45087774",
        "cursor": {
          "ref": "258e22a0-b962-4e13-90d6-6dc2996e6cb4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "db404b26-2469-4027-9de9-af8f09a8ba71"
        },
        "item": {
          "id": "b8c89a6b-1a2b-49e4-a7e3-212b45087774",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fdd4d01b-b160-483f-a963-b91ab2b261b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873f99d9-2e05-4283-b19a-f7f7cea83a34",
        "cursor": {
          "ref": "e3c6d8aa-a153-4753-bd19-cc58e54ff70c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0865dcbf-8acf-4d5c-83f9-504f31a42e8e"
        },
        "item": {
          "id": "873f99d9-2e05-4283-b19a-f7f7cea83a34",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a335e1bb-84e1-409d-9433-5e634e0734c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b84c2c-65db-45bc-b3b3-0e9a2a06304c",
        "cursor": {
          "ref": "a126800c-eaed-45b7-a489-b8635865d01c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b627f62-ca02-4cef-9b74-2e7a01f6ecbf"
        },
        "item": {
          "id": "74b84c2c-65db-45bc-b3b3-0e9a2a06304c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7a679843-bc7f-4cc2-8ec7-97dc2a7342e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761032b4-5c3b-4e64-b221-686324703a5e",
        "cursor": {
          "ref": "9477f51e-6b22-4c5c-a9ed-895a0cb9a680",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "50331461-4c7d-4027-b2eb-7e6efcc6af4f"
        },
        "item": {
          "id": "761032b4-5c3b-4e64-b221-686324703a5e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2c705ad5-f6af-436f-a54a-b8db3bca7c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875fb5c5-71dd-410e-a817-7c9d9f57904e",
        "cursor": {
          "ref": "853c22fb-d540-43ca-97dc-fda9e83ad1d3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d963f5bf-b8cb-4731-b3fc-4a9699e6bd4a"
        },
        "item": {
          "id": "875fb5c5-71dd-410e-a817-7c9d9f57904e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "68300811-d5f1-4be3-903a-2fe0a4f9b8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a142988-a56f-470e-b009-c94af06dd987",
        "cursor": {
          "ref": "d2aa9950-1d0c-4639-8ddf-74e1e1d66666",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7afd22d7-23bb-475e-b1e4-8981ba4d0adb"
        },
        "item": {
          "id": "3a142988-a56f-470e-b009-c94af06dd987",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a70c52dd-4b35-4659-b3ee-242473c3e2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb271ad9-841e-47e1-b442-dab1a2d3c74f",
        "cursor": {
          "ref": "85ab32bd-6d6d-4fd7-a09a-884b5c08165f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ea144b86-c210-4ca4-abf5-b4f5a185afd4"
        },
        "item": {
          "id": "bb271ad9-841e-47e1-b442-dab1a2d3c74f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe2a1ae8-b5b5-479f-b90a-90eced3a4dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9be3886-c9e7-4290-b0fd-2ff3fd5c3e41",
        "cursor": {
          "ref": "b60161c3-935d-45d6-908f-21919edfd423",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f5f2dcfc-b4ac-4836-a187-68fcf505c8e1"
        },
        "item": {
          "id": "f9be3886-c9e7-4290-b0fd-2ff3fd5c3e41",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7af6b15e-13fc-4c3b-9b8f-a7220d37f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c490c1-fc3a-41b3-b5bc-338021971053",
        "cursor": {
          "ref": "5fd08e33-c51a-41fc-952a-83dcf4528253",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a510b12c-0c35-4ea7-a605-77db6cc3d1cf"
        },
        "item": {
          "id": "28c490c1-fc3a-41b3-b5bc-338021971053",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "23a0995b-a3d3-4772-adfb-c89b5699e15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0844cbe3-9d80-4cfc-bca4-2f5896b2107e",
        "cursor": {
          "ref": "883ee1bc-5485-46d9-8b3d-08611cb6285b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8fde5d64-2215-455f-a2bb-7ced67cd2ed4"
        },
        "item": {
          "id": "0844cbe3-9d80-4cfc-bca4-2f5896b2107e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2a3d60b5-98b5-44fb-9fe9-70a35067acde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e92180-aa79-4bbc-8574-5a51fe8b44c5",
        "cursor": {
          "ref": "4552b935-bde9-47e8-bcba-a82745ecfa86",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6f04f9e4-531d-4202-8c6f-0802ecc3ec6d"
        },
        "item": {
          "id": "d2e92180-aa79-4bbc-8574-5a51fe8b44c5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "373b047f-9ca3-42cc-bebf-801c852fe328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ec41a9-f535-4c1a-8242-ede2e9a1bc2c",
        "cursor": {
          "ref": "ebc6a0c4-3847-49ee-9035-69305c2d1239",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "07546418-d434-4745-ab47-51e9a168cc06"
        },
        "item": {
          "id": "f6ec41a9-f535-4c1a-8242-ede2e9a1bc2c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "81ec71e2-cbf3-49d4-85fe-93ddee2cf028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f509cf7-2ebb-4fee-8f30-0ef7706c2d02",
        "cursor": {
          "ref": "7c8caa99-bcc7-414d-84c2-883b03a9de22",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "73366446-e0a0-459c-a0fa-fd6df74bf474"
        },
        "item": {
          "id": "1f509cf7-2ebb-4fee-8f30-0ef7706c2d02",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0fc120e2-716f-49cc-91d8-5c02349102e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d4b19-5625-434b-8d72-44655b4712c9",
        "cursor": {
          "ref": "8dd2ce4a-9074-4189-9146-98e5a39c0c95",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6c771cf7-88d0-4f3b-8148-5ad834f8b3ac"
        },
        "item": {
          "id": "619d4b19-5625-434b-8d72-44655b4712c9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d3d7a551-0611-4cf6-8a39-397e9d5b5fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed63509-ac3a-44ef-a2a2-7ba4e41ce1c2",
        "cursor": {
          "ref": "e916605a-840d-4023-9edf-102fc68f5a3f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "21bb29d3-20a5-465b-8add-e1999a9ec448"
        },
        "item": {
          "id": "2ed63509-ac3a-44ef-a2a2-7ba4e41ce1c2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cedd97b5-5df7-4f9c-aa0a-4d4ac46da0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0215001-ccc0-4cff-a6da-a4d118c516e7",
        "cursor": {
          "ref": "5daefbaf-24b6-4c27-857e-fe9dbedae146",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ab7e8b1b-b1f9-4c8a-9bc9-fd68335fb793"
        },
        "item": {
          "id": "e0215001-ccc0-4cff-a6da-a4d118c516e7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2c14c61c-1274-4689-9759-1775d13046a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e420541f-788e-4aa3-aa98-a7a84926fdbc",
        "cursor": {
          "ref": "5a0e940c-8f91-4520-a17f-fd0771cdf933",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f9a3a6c4-2c47-478e-8f02-477309018516"
        },
        "item": {
          "id": "e420541f-788e-4aa3-aa98-a7a84926fdbc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "305eefae-27b1-46fd-80b6-2f0c7e2cc6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7417a055-94de-430d-8652-0c438383852e",
        "cursor": {
          "ref": "828f0ef8-632b-4a68-8223-176ebee3b6b7",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e3f57eec-8975-42fe-aef9-40df5ca0b811"
        },
        "item": {
          "id": "7417a055-94de-430d-8652-0c438383852e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5aa40689-6503-4663-b582-b05a0939d29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe67b3c-6ba9-4bdf-8f09-b74ca9a77437",
        "cursor": {
          "ref": "c7ed7051-10c9-45c2-a2a3-eaa9778e04cf",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0161553b-b011-4904-b565-6eb52ea0aac2"
        },
        "item": {
          "id": "5fe67b3c-6ba9-4bdf-8f09-b74ca9a77437",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0c8f7a2a-8e1c-47cb-87ee-65d1e412c709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceabbeed-3f45-48c0-971d-d1cc72b4e710",
        "cursor": {
          "ref": "5df95c5d-14c2-416c-9a6b-75fa2ab289e9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f96117f6-94d6-40b6-9914-0cd6099fc5ab"
        },
        "item": {
          "id": "ceabbeed-3f45-48c0-971d-d1cc72b4e710",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d722861e-e10b-427c-a832-9aca798239c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f2b53c-6583-4ecb-a708-103758958253",
        "cursor": {
          "ref": "07652eff-c480-473b-a341-cd0b00d49b31",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "82a402e6-bc55-4beb-a6e6-77b624902ab5"
        },
        "item": {
          "id": "c4f2b53c-6583-4ecb-a708-103758958253",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e35e1e52-68ad-46c0-a29f-b5e28a33a03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0738f7b-454d-427f-b8ac-577b2e773b0e",
        "cursor": {
          "ref": "95ab3566-6660-44ad-988b-6c219395d7db",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "51721438-ee50-4baa-b902-76e09178091a"
        },
        "item": {
          "id": "a0738f7b-454d-427f-b8ac-577b2e773b0e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e70af144-5de1-49d2-af66-a949dda524bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808631ed-5c9b-4488-9c3b-5c84bc2c205a",
        "cursor": {
          "ref": "9ac265cc-f4a1-439e-b92f-70f3480bd963",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9268bf53-dd29-41d4-b322-c54fcb1c02ea"
        },
        "item": {
          "id": "808631ed-5c9b-4488-9c3b-5c84bc2c205a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9bc80f67-7e19-4220-8e57-12e4e07abb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce64861b-5a32-4d1d-b1de-bf185e1171f2",
        "cursor": {
          "ref": "7c0e8c9a-d4c5-4362-92d2-8ca9f7363ebf",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7aa4eee3-a547-46f1-aba9-1d859abbf975"
        },
        "item": {
          "id": "ce64861b-5a32-4d1d-b1de-bf185e1171f2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d725bbf1-3cde-4a76-add5-aaf98613bbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84c76cb-ce68-4288-bf6a-48372bf08c76",
        "cursor": {
          "ref": "a694fcba-e91e-4004-b982-e391a6c82453",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "08070bb7-1724-43fc-8b8e-1b22b3ade712"
        },
        "item": {
          "id": "b84c76cb-ce68-4288-bf6a-48372bf08c76",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ddee7680-4788-4a90-b06f-60da0fc473fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053def4f-7ddb-41c8-8241-e7a0fa92ae43",
        "cursor": {
          "ref": "599e5b83-e302-44e7-9783-ce3e561f49ae",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "870e67db-d14f-438b-a09f-b9da9a7820b7"
        },
        "item": {
          "id": "053def4f-7ddb-41c8-8241-e7a0fa92ae43",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "42eb4e3c-015d-4d12-a968-9d150339a642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc0aba0-2fb7-4866-9b1d-b2e4b210c1ee",
        "cursor": {
          "ref": "f72cf84e-e59e-43c1-9698-8ac59e65cbb4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "12cefab0-fef0-4eb9-8185-dae0cf2709c7"
        },
        "item": {
          "id": "4fc0aba0-2fb7-4866-9b1d-b2e4b210c1ee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c559ed32-1c87-4c61-b6fa-900c87b9920a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2a2673-0547-4331-819a-c72b1837e553",
        "cursor": {
          "ref": "945ac5a8-ae6c-4df5-a461-1871ea8b9db9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "10072b4b-c6c2-42e2-be5e-da2c22bc69bf"
        },
        "item": {
          "id": "3f2a2673-0547-4331-819a-c72b1837e553",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "64a83d23-7f4f-4f6b-973f-05df572cfa26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4185635-1dfb-4397-97bc-c193a253d142",
        "cursor": {
          "ref": "6469d448-2e3c-4108-9429-1c93126f71ed",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6a5da2ec-c43b-4240-baae-d5db0fcdb0ac"
        },
        "item": {
          "id": "e4185635-1dfb-4397-97bc-c193a253d142",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "40406633-5340-4ce1-b2b1-fae97938296a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939006de-ebdf-426f-a2b5-e482933f1ae2",
        "cursor": {
          "ref": "a33bc6d3-9ff4-48f6-85cc-dfc7389da22d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eef8cfb3-9aec-472c-8b5f-41be45a52cfc"
        },
        "item": {
          "id": "939006de-ebdf-426f-a2b5-e482933f1ae2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "889f4bbc-323a-4abd-b089-14bcfe2c48a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107e2dd4-1021-4c80-9f75-550328336fa6",
        "cursor": {
          "ref": "6a6e2e55-6215-458e-a9db-031bc5828971",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "aaf908ed-cda0-433d-9d87-a771f8286162"
        },
        "item": {
          "id": "107e2dd4-1021-4c80-9f75-550328336fa6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b257f15e-09c8-41aa-a683-25c0f2088a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4e960e-44ad-4733-a4b3-2998d8cd0874",
        "cursor": {
          "ref": "b4a4fdc4-cb30-47dd-adfd-86a35b5f7543",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "00579939-dc3d-46b5-813b-b51b2674de73"
        },
        "item": {
          "id": "4b4e960e-44ad-4733-a4b3-2998d8cd0874",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "adc0bbae-86ec-4b38-a6b1-8c0f06371735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a7fdb8-6ea0-4654-8668-fd764c7e3413",
        "cursor": {
          "ref": "94bf2614-3175-422b-86d0-3383c74e5619",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e2a3b31b-2a5f-465b-912d-5389f9ddb0d2"
        },
        "item": {
          "id": "52a7fdb8-6ea0-4654-8668-fd764c7e3413",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b1c02eb3-a885-4e9d-80a8-70584c5a21b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67774f75-c0d2-43b9-bde9-87e9bfd03b65",
        "cursor": {
          "ref": "f261d6c9-004d-4fbe-b442-05b8d6be41e2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "95e155ac-2169-4c71-ac8a-0e0078997350"
        },
        "item": {
          "id": "67774f75-c0d2-43b9-bde9-87e9bfd03b65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c118304f-7f24-4a02-a224-062d5e22f533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0344889-e7fa-4a3b-aaaf-9a6636376034",
        "cursor": {
          "ref": "248e04bd-68f0-4e51-94e3-ce35f519adb3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6076b130-134a-4632-b4f3-fe0c30e9710e"
        },
        "item": {
          "id": "c0344889-e7fa-4a3b-aaaf-9a6636376034",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a062566b-ee46-4090-8b9f-b766464406a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cca4f82-eb80-4fe0-a122-24f336e9a1aa",
        "cursor": {
          "ref": "d77aa558-65d0-4fe3-a630-36fdd0ea1c9f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e2041d2a-cc25-4089-97bb-c566b292fd10"
        },
        "item": {
          "id": "9cca4f82-eb80-4fe0-a122-24f336e9a1aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f2650d87-c64f-4d41-bfca-4cedccf57ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c486b6b-b784-4839-9be4-6a9e12515ba4",
        "cursor": {
          "ref": "0acef2f1-7e30-4ccb-a23d-82f7cf8bccfe",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df49adf2-6015-4522-886d-19b66715a8dc"
        },
        "item": {
          "id": "4c486b6b-b784-4839-9be4-6a9e12515ba4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b5360140-fd57-4daf-8a36-c5bbf5bba94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e9217d-8735-4b23-856d-c779f5eb7b33",
        "cursor": {
          "ref": "99cf92f1-b5e3-4a32-bd89-e7642f2a4c18",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c259eb4b-1cde-4db6-8a5d-296508fe6c2d"
        },
        "item": {
          "id": "03e9217d-8735-4b23-856d-c779f5eb7b33",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a7ad1757-bdd4-47a0-8cc4-32ade0a207d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f63c8e3-c46d-435f-8253-b5d450815d4d",
        "cursor": {
          "ref": "e6985b10-ee8d-45c4-a0a0-ca687684d9b1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ff8a7ab9-82cb-4e32-84ca-313ca1ee12c6"
        },
        "item": {
          "id": "9f63c8e3-c46d-435f-8253-b5d450815d4d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "82089dba-c2b2-4edd-8417-ef96397f11f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0425b4-34df-4597-8207-46caf6db6542",
        "cursor": {
          "ref": "6ab7d19d-5442-4977-b967-6b95f3542856",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2139aab1-eac6-4d8c-b07e-104b89607df8"
        },
        "item": {
          "id": "9b0425b4-34df-4597-8207-46caf6db6542",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8831e258-7b1e-416e-90b4-c31db2022fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8876b7-9b9a-4e47-81bc-15ec687355e0",
        "cursor": {
          "ref": "c00292a9-c384-41f9-b018-ed2429bd8a01",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3afa6a23-b937-43f0-8274-f582d40b39bc"
        },
        "item": {
          "id": "0f8876b7-9b9a-4e47-81bc-15ec687355e0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c765ec03-28ad-4eb9-bbca-d82b1e566753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b184242-eca5-4aa4-869c-6bbbd915488a",
        "cursor": {
          "ref": "a4d384a4-f860-40c1-9e9b-58cb73e85ce9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "16e3f74a-eda5-4ac7-8246-5c955a160624"
        },
        "item": {
          "id": "0b184242-eca5-4aa4-869c-6bbbd915488a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b1041a1-706d-45f0-9cb2-55d41ff72969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66375e37-b19b-4c1e-9325-c51dc5c0770f",
        "cursor": {
          "ref": "d0bc977b-045f-46d5-8639-012161b6a986",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "22cbb152-708c-474d-8aab-85ca5772833c"
        },
        "item": {
          "id": "66375e37-b19b-4c1e-9325-c51dc5c0770f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a8952338-23c5-475c-9780-986c360c6f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb75196-e215-4878-b48e-1cf440be3167",
        "cursor": {
          "ref": "6fa0f227-59b5-4dde-814c-09a1e980f7b1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e919f32d-4715-4b67-ac34-f37df9911b6d"
        },
        "item": {
          "id": "4fb75196-e215-4878-b48e-1cf440be3167",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3a3f0b4c-bac7-46a2-867e-f12b1beab3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aadb91-1a21-42bb-8c50-f827252bc123",
        "cursor": {
          "ref": "0e0cb56f-6fcc-4c84-bd7c-787955f8ea55",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3d61da5a-f0a9-4cd2-98ee-603eab7bb60e"
        },
        "item": {
          "id": "d9aadb91-1a21-42bb-8c50-f827252bc123",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c39ddb4f-23b5-4d58-aa89-d9c7810118d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed09ba6-42b2-460f-9879-e996c707f62b",
        "cursor": {
          "ref": "c347cc4c-7b2b-4378-aa0d-c81611ac7149",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "918b968c-4e06-42bf-ac2b-b2e6957a5ae1"
        },
        "item": {
          "id": "fed09ba6-42b2-460f-9879-e996c707f62b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d76ae0d5-064b-4573-a040-726475716f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bb79c5-5dde-46b0-8e9c-2d72398aee2b",
        "cursor": {
          "ref": "a5978bed-b7c6-45d0-9329-14d922a3eec3",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "05314b44-63af-4691-bee1-30e8736b325c"
        },
        "item": {
          "id": "80bb79c5-5dde-46b0-8e9c-2d72398aee2b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "86d5f3f6-7569-439a-8a7d-b0f2535cd16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306892d5-992a-4c48-a66f-560cf22ab5d0",
        "cursor": {
          "ref": "252dba15-3cdd-4c77-8b97-89c21b754ea0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "da9b044c-1248-4dbc-a942-2138d9cb2240"
        },
        "item": {
          "id": "306892d5-992a-4c48-a66f-560cf22ab5d0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b955ccc7-ffef-4ff3-a0b0-d18f4858d896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae592702-87ce-4a9d-a341-54fd2c6d6fe0",
        "cursor": {
          "ref": "00be833f-1576-40b0-9521-14548c012350",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8807c0c0-fa9b-4a70-99e4-32673460b54a"
        },
        "item": {
          "id": "ae592702-87ce-4a9d-a341-54fd2c6d6fe0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6eecf73e-bfed-4fc9-b15a-a473f3c07073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6973412-1ccf-48c7-bf3e-c50d2c33ad05",
        "cursor": {
          "ref": "4e35f92b-80c8-4ee7-b0b6-37f34ee244cb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7807dc13-bee8-4a5f-82bb-b015b3841f40"
        },
        "item": {
          "id": "c6973412-1ccf-48c7-bf3e-c50d2c33ad05",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "34cca2bf-09c8-43fb-b394-b90f6266b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71efb26a-cc26-4d9a-9eb5-748756e2d91c",
        "cursor": {
          "ref": "a7fa2520-47ae-43d2-8ff9-a11356734f7d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f6076d8a-f429-4c20-a380-b9cd5e3f8f8d"
        },
        "item": {
          "id": "71efb26a-cc26-4d9a-9eb5-748756e2d91c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f96f9891-56a6-4981-b01e-54c184b8a3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e80a175-dc84-4209-825e-090569d2c38f",
        "cursor": {
          "ref": "c88a3f9f-73fd-4a2e-b600-5cfc431a1e7e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5d20572f-ab3b-42c5-a6a7-2edc54d5b643"
        },
        "item": {
          "id": "8e80a175-dc84-4209-825e-090569d2c38f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e46c36db-ee98-49ee-8926-3ad481515c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c13d79-84a7-449c-be72-a5dc735c47f4",
        "cursor": {
          "ref": "842287ca-fda9-4bfb-b95d-864b962995ef",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "51e41fb7-94b2-45fd-ba30-ed8a488b4844"
        },
        "item": {
          "id": "16c13d79-84a7-449c-be72-a5dc735c47f4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e49fe5f3-cfca-46d3-86b8-2836f2dc7f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d4ebdb-c54d-4120-b049-b8b097a0dad5",
        "cursor": {
          "ref": "e90043cc-44c0-41f8-b533-236f188e802a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f6987ef7-2573-4a06-9a73-d70547302847"
        },
        "item": {
          "id": "05d4ebdb-c54d-4120-b049-b8b097a0dad5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "024c5c57-ebd3-4616-aa46-01fb83c8e688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5230cb66-7353-496c-95b6-6fff48df3a66",
        "cursor": {
          "ref": "9c4be520-dabc-405a-8299-669bd670e5d1",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "00fdef29-aa4f-4e5d-844c-d1119b722d49"
        },
        "item": {
          "id": "5230cb66-7353-496c-95b6-6fff48df3a66",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "22523b8a-a521-4c4b-b079-6567fc8ff8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d89fe3b-8e53-4818-a4f5-e665d5e58590",
        "cursor": {
          "ref": "faf7ef8b-4817-4289-a63e-5bffa5f96018",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a2edfd6a-416c-4491-814d-b4a046fa9fba"
        },
        "item": {
          "id": "9d89fe3b-8e53-4818-a4f5-e665d5e58590",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ba568587-d41c-41c2-afa0-1a9ecf7a9b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07979d57-2799-4801-9f96-87d3e6232a8d",
        "cursor": {
          "ref": "e11c1c0c-492d-4015-8e5f-ed4d55edb030",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8391c4c5-a3b8-450a-b756-89b2274031a2"
        },
        "item": {
          "id": "07979d57-2799-4801-9f96-87d3e6232a8d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f3193984-0529-4e90-8173-d279ce0bf029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44744b8-e024-4aa5-9a83-8d29c54206a0",
        "cursor": {
          "ref": "cf5e5505-7764-49cc-89e5-a73eedd1c441",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "32bb3dd7-03bb-411b-aaad-365961897ae6"
        },
        "item": {
          "id": "a44744b8-e024-4aa5-9a83-8d29c54206a0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4f33e7aa-59d4-4617-b43d-1ece69dde09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a1fce9-960b-4267-8dbf-c99238f211e6",
        "cursor": {
          "ref": "581c541a-f5de-413d-94fe-a7f21d98598b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ae154201-7313-457c-8098-c43ea07d70ce"
        },
        "item": {
          "id": "c3a1fce9-960b-4267-8dbf-c99238f211e6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dc74957e-aaf2-4615-b240-b0e291fa97e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed47ff6-7a07-44f9-b59d-691afad5d077",
        "cursor": {
          "ref": "7af6c9fc-3eb0-4f5e-8fef-daffe07bf420",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "65c270a7-f3b8-44e1-ac6d-ff81cd23ad11"
        },
        "item": {
          "id": "1ed47ff6-7a07-44f9-b59d-691afad5d077",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "864f39cd-ad3c-48f1-82bf-c8ce68e4c2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937db173-c38b-4ebe-b829-3b12ee63eadf",
        "cursor": {
          "ref": "05af003b-033f-4482-af8c-a151bf9bd791",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3f645640-1240-4c47-bd59-c2f6b980152d"
        },
        "item": {
          "id": "937db173-c38b-4ebe-b829-3b12ee63eadf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3baf51d4-7107-4261-b32c-90b40476909c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420aec81-07ec-452d-b58a-d9a181bf70a1",
        "cursor": {
          "ref": "a8bda3e4-7ea2-4164-b5c8-04997b964f62",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "476fc08d-1ab5-4714-81f5-a655fd425443"
        },
        "item": {
          "id": "420aec81-07ec-452d-b58a-d9a181bf70a1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "427a577f-50a6-40a9-af25-1f3d33cd15fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f2d811-8148-470f-827a-f339d01800c7",
        "cursor": {
          "ref": "5ff7df0c-bddd-4dbe-be4c-10273690a153",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d73afef8-2a78-48a3-a466-8b5be3351ab1"
        },
        "item": {
          "id": "e8f2d811-8148-470f-827a-f339d01800c7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2509c118-1d49-43c0-b210-e39e975426b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09514680-82bc-4ef8-8967-d15a6be7806b",
        "cursor": {
          "ref": "274313bf-e1ce-49e3-b295-2a4310448ddc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f0f3a6d0-bcea-498e-888d-f409394ab576"
        },
        "item": {
          "id": "09514680-82bc-4ef8-8967-d15a6be7806b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4b89af0e-df8d-41d8-b968-36c94b0290ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e55823c-00df-4156-927f-7b9c7824f688",
        "cursor": {
          "ref": "65f39bf7-35eb-4245-9ec5-5231b9cdda8b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "87eb6ef9-6af2-4d9d-ab32-3c4b50384d42"
        },
        "item": {
          "id": "7e55823c-00df-4156-927f-7b9c7824f688",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cecbf8e6-5fdc-4378-b70b-fa8db8c26f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35ed11d-d9ed-4832-9134-40c3589a789a",
        "cursor": {
          "ref": "4c6270ae-76c9-43ed-87b2-86602bd40b41",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d9f23a05-0845-4d92-85ce-c0ace96fdc94"
        },
        "item": {
          "id": "c35ed11d-d9ed-4832-9134-40c3589a789a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0a085e46-d09a-4993-a5a2-4c650add05ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ff1df9-6c5c-487d-98e2-d7424f1e1c6c",
        "cursor": {
          "ref": "67697af4-e719-4bfe-9eff-3572d6900d1d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8eac00cd-f188-4894-a2f1-03ee95420039"
        },
        "item": {
          "id": "e7ff1df9-6c5c-487d-98e2-d7424f1e1c6c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bbdedadf-870b-475a-b807-50e1796160c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b527bbf7-8c2e-4cbc-b1dc-04d6e38cee43",
        "cursor": {
          "ref": "eb1d406e-150a-4456-b93b-54e25b1a5373",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6a62bee3-1331-46b3-bacd-fdaa11b756f2"
        },
        "item": {
          "id": "b527bbf7-8c2e-4cbc-b1dc-04d6e38cee43",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c82dfcf9-e316-4ae9-816e-c6d10e50c00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5edf0e7-a1d0-4885-bd2d-0e9bfb4a8ceb",
        "cursor": {
          "ref": "02fb0ce6-bea8-4a62-b0ac-4ed4822c1e98",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "56c3262c-78cd-4054-95cb-cbe83c0f2f2b"
        },
        "item": {
          "id": "c5edf0e7-a1d0-4885-bd2d-0e9bfb4a8ceb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "03c4b0cd-4dc0-4a0e-9737-8dec058d01fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297af169-fa45-4c28-87de-46ecd9138222",
        "cursor": {
          "ref": "fbbac0bd-f798-4ef6-b422-9b1c56a4daf2",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9f81679a-5170-48e4-9e86-6f3e63dad212"
        },
        "item": {
          "id": "297af169-fa45-4c28-87de-46ecd9138222",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4400ee22-40d3-43cd-9df9-2a3b569a6be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "9a2c1430-105c-4e53-b354-ac7dac206616",
        "cursor": {
          "ref": "458e7f4c-8758-45fa-83ea-d699ffe3cd08",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "acee7c7f-5ed6-4e32-aa02-47851cc82956"
        },
        "item": {
          "id": "9a2c1430-105c-4e53-b354-ac7dac206616",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bb0f54ca-b469-454d-af65-cc8e652edaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "b05cdbb9-adf8-43ad-801f-0951c4972059",
        "cursor": {
          "ref": "29707dac-07f0-46a0-b6eb-cde0426f9489",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3c3ad57d-bb21-4edb-9591-a4c958d85ba4"
        },
        "item": {
          "id": "b05cdbb9-adf8-43ad-801f-0951c4972059",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5c0a16d5-1e37-4bb1-a6b7-3958a6fdfa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d3a66f20-c2cd-4960-8cb3-598d37b23916",
        "cursor": {
          "ref": "7d95741a-931c-4edb-9558-3e686015d9fa",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0474c971-9acf-40a0-8588-0a2f8563dbea"
        },
        "item": {
          "id": "d3a66f20-c2cd-4960-8cb3-598d37b23916",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1b71716a-beae-4b2c-8647-b59e6c821a80",
          "status": "Created",
          "code": 201,
          "responseTime": 7853,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ff825-626a-48e4-b267-c52b8ae9790e",
        "cursor": {
          "ref": "1bea63db-ae6d-48a1-9810-67410a146aeb",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a976b470-3d9e-4c05-9b55-0a59443e4dcf"
        },
        "item": {
          "id": "2c5ff825-626a-48e4-b267-c52b8ae9790e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "177435b1-17b4-4b30-8eb7-c74f89193872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "49e586ef-d039-4bd6-bc60-a658479daf4e",
        "cursor": {
          "ref": "2682211b-2438-426d-9a28-9a4e7ce8d030",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3a893c7e-c0bb-4487-997e-6fb862226ef4"
        },
        "item": {
          "id": "49e586ef-d039-4bd6-bc60-a658479daf4e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2b10f7f9-c20f-4ed0-b42f-6b85afbf4f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a586cfc6-13a1-4922-87df-1c4844406b06",
        "cursor": {
          "ref": "1aa0b106-70d6-4214-9b03-075765f5cc79",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ddbced9a-a762-45f8-a07a-3192e536c111"
        },
        "item": {
          "id": "a586cfc6-13a1-4922-87df-1c4844406b06",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "de285a8d-f521-4c49-82eb-42e2a270869d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b6dd88-1a38-403e-8bfb-dc1c0b9b3041",
        "cursor": {
          "ref": "613a8c93-fa4a-4d7c-8b90-aa735a5ea9f9",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6eb6afe7-fa4d-419e-86e4-9c463b9ee607"
        },
        "item": {
          "id": "57b6dd88-1a38-403e-8bfb-dc1c0b9b3041",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "264a0ef8-e0e0-4d46-8ed5-6e6cd02a2479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0d2405-2540-4bd6-9657-e158936dc14a",
        "cursor": {
          "ref": "a48085e6-7d5b-4ae1-b418-602e4aa7dfab",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a1c08fe3-556e-4ff8-929c-a4be1c0dfc9c"
        },
        "item": {
          "id": "4c0d2405-2540-4bd6-9657-e158936dc14a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cf48d935-8fa5-4794-be26-b6ca7192ab52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1363343-c2d1-4898-b313-19c2fad8f399",
        "cursor": {
          "ref": "2273dc5d-0d10-455a-aab7-1dfe49b8a689",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c885a18d-af38-4748-8746-36ea53dfb776"
        },
        "item": {
          "id": "a1363343-c2d1-4898-b313-19c2fad8f399",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fa4f9478-1b9e-4ecc-9e14-a41eef3e6518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74789566-5bc3-4d39-bc82-a86b32486178",
        "cursor": {
          "ref": "6f3325cd-0eda-4724-b17f-89e48e0140d6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f8534b66-bd61-4ecd-8c0f-a7d9307b7fb9"
        },
        "item": {
          "id": "74789566-5bc3-4d39-bc82-a86b32486178",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a6b450f1-7534-4bc5-a201-73ddb05eb497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcd7b4b-b5d8-4fe2-913d-d759cf59bca4",
        "cursor": {
          "ref": "8737f836-40b9-47b1-a6d7-c600b93cb8d3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f9aa28a2-619d-4017-a6bf-8ff53111a843"
        },
        "item": {
          "id": "bdcd7b4b-b5d8-4fe2-913d-d759cf59bca4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "92f0e8a5-d4e7-4d10-b48f-eedcc0ca6f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55d48c1-0ff2-430a-ba92-c8e164cfc745",
        "cursor": {
          "ref": "c9c8fa6c-2f93-4606-ae4b-5b6626de6db6",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "10d28a01-9ee5-46d6-b9eb-330e8f2297d3"
        },
        "item": {
          "id": "f55d48c1-0ff2-430a-ba92-c8e164cfc745",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e70b46c-865e-4e00-9975-ebe3ca663ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66db50-30a5-4336-b6c0-719023c56a06",
        "cursor": {
          "ref": "6ca3a046-8035-46ae-93a7-167f3ef5b8ae",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "48b9038f-0d03-42e3-990b-ec489831d35c"
        },
        "item": {
          "id": "4a66db50-30a5-4336-b6c0-719023c56a06",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b06a36f0-bb8f-42cf-9e26-9745ff6d6070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d7c785-a9e2-4f5c-8ca1-fc39a44103ae",
        "cursor": {
          "ref": "5f37bc6d-f93c-4563-bbad-a78930afdb65",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7e7db4e8-f91b-45b1-ae74-c62c7e112cf9"
        },
        "item": {
          "id": "b2d7c785-a9e2-4f5c-8ca1-fc39a44103ae",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b56afe1c-5374-401e-873d-a1bf638b7fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3ccdeb-6a3d-405b-bb36-cc74eb5651e3",
        "cursor": {
          "ref": "3a10c864-df96-4f37-bc6f-903ae351e57f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "448c4830-d365-4a0f-aa46-743c0694b171"
        },
        "item": {
          "id": "8d3ccdeb-6a3d-405b-bb36-cc74eb5651e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "457882f7-8e69-422d-ab77-9a541f2ebb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903521e2-d04d-4280-829d-6e176221a956",
        "cursor": {
          "ref": "4808b0d5-03c3-4a01-80da-5b3544cdec9f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "972d60f4-0b1b-45ab-838c-89d9a19b99d7"
        },
        "item": {
          "id": "903521e2-d04d-4280-829d-6e176221a956",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "52473d68-6c20-4c82-a94d-a1bf925be0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3918c931-5359-4d8b-a3e0-08e75597a0b7",
        "cursor": {
          "ref": "e8cee71e-5f82-4a14-be4f-6bf2d673ecfa",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "afd6c3b4-4ed1-4b0f-ad9c-9d6d0419e692"
        },
        "item": {
          "id": "3918c931-5359-4d8b-a3e0-08e75597a0b7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ad46fbfc-6121-4b3a-82a7-542f01e58eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353e55fe-b8b4-4972-8ac5-6cb857329caf",
        "cursor": {
          "ref": "2f818d78-7571-49a6-ac2c-6258c9eda002",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "59b79a63-09ef-4e50-9db9-2e21d8a4df50"
        },
        "item": {
          "id": "353e55fe-b8b4-4972-8ac5-6cb857329caf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8552b92f-c95c-467d-830c-5b969c86907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf195a7-d4da-4500-994e-e5d1d5f69a5b",
        "cursor": {
          "ref": "7dd45354-ab6b-4fda-b990-6ccea93c243e",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1b264776-a6fa-421e-b8a5-3cfeca7f7307"
        },
        "item": {
          "id": "2bf195a7-d4da-4500-994e-e5d1d5f69a5b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e435e208-874a-444a-be81-73b6039ded3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbc6797-7286-412b-b721-b1eeee30c639",
        "cursor": {
          "ref": "f95b8324-1290-43c9-b788-44768af8a9a2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "12a75967-20ea-41de-848b-c59328c57c30"
        },
        "item": {
          "id": "4dbc6797-7286-412b-b721-b1eeee30c639",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cf053813-de6b-4328-979b-3ffcca58586f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecc7036-1227-4217-83f1-ef3af976fbf9",
        "cursor": {
          "ref": "a0efbb95-9d0b-452b-b0e1-1aaca0dda491",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "08d3ccb3-c96e-4eff-8335-dd22628e412a"
        },
        "item": {
          "id": "7ecc7036-1227-4217-83f1-ef3af976fbf9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f5f9d831-3720-469e-bffa-f479583a29f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190cf983-dc66-42af-b90a-420ceaa11747",
        "cursor": {
          "ref": "2343d93b-4537-4d42-8a77-f8eae9131977",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "96097aec-ecfd-4ccc-8b09-9cc04e92f645"
        },
        "item": {
          "id": "190cf983-dc66-42af-b90a-420ceaa11747",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d62ae1c6-a310-4717-9501-9bb477a7fb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5754983f-3f50-4acb-b42d-fd1172f54b50",
        "cursor": {
          "ref": "aa46a713-49c3-441a-b780-820b339b1eee",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1e8aac7a-8edf-414b-8e4d-bfb9458190e5"
        },
        "item": {
          "id": "5754983f-3f50-4acb-b42d-fd1172f54b50",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "047dd925-e218-445e-862b-12eea47a18dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cac439-97ee-4077-bed9-03268097792c",
        "cursor": {
          "ref": "a6b28c99-2280-46dc-8c91-6c9ab9447f52",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b57c729a-9d44-441c-a4ba-6856dcbed916"
        },
        "item": {
          "id": "12cac439-97ee-4077-bed9-03268097792c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "505fcc55-1c4d-47d0-a218-117ddd7db174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb46cce-4bb7-4b4e-984b-51bf65c01539",
        "cursor": {
          "ref": "95c282d7-4740-49d7-aaf0-55bfb254e766",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0d790ca7-af57-4246-b7c6-6bc4a6a4d0f4"
        },
        "item": {
          "id": "0eb46cce-4bb7-4b4e-984b-51bf65c01539",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eb0eea5e-ec4a-4ec0-9917-9005b0e1a0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd47000b-e90c-48bf-a1bc-02c9da6f5442",
        "cursor": {
          "ref": "77d863ae-fb1e-4e36-ac52-7f15690b5844",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fb167040-476c-450c-84e9-7efddc0d70cc"
        },
        "item": {
          "id": "bd47000b-e90c-48bf-a1bc-02c9da6f5442",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0237db63-4fc5-459a-a57f-010d571e8ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5a8330-911c-43d7-8cb6-be8b3ab15502",
        "cursor": {
          "ref": "f6408ada-ca02-44d3-bc8e-67e5d839a441",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "032d6fbb-ce6f-44fe-9e51-2559735145da"
        },
        "item": {
          "id": "db5a8330-911c-43d7-8cb6-be8b3ab15502",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e72dab0e-d725-41f3-bea4-3eac20a1299d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d71ff82-c357-4e01-9d48-d8fa8ce95c9d",
        "cursor": {
          "ref": "d96b705f-ec83-4bd7-841b-ac8ab7e8b93c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "706be2c6-7d62-45be-b4f3-163c35b90b24"
        },
        "item": {
          "id": "7d71ff82-c357-4e01-9d48-d8fa8ce95c9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b071436f-bc28-487f-9b85-b07405243a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c761100-3594-4a19-9757-b33130a7dd9d",
        "cursor": {
          "ref": "84bded49-8a40-4865-b871-b16b7de6439e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9c2e5368-d1c2-444c-a820-6359b2660f26"
        },
        "item": {
          "id": "6c761100-3594-4a19-9757-b33130a7dd9d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9b6e47ac-f5bc-449e-a6c3-e3234462ea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ad9b50-8a3b-43c9-b06b-834c9bd52235",
        "cursor": {
          "ref": "1cc2af9c-347d-4745-b9b8-e7bfdb75e00e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d686f53d-7e75-492a-abc9-8512e7ecf73b"
        },
        "item": {
          "id": "42ad9b50-8a3b-43c9-b06b-834c9bd52235",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ab44007c-f48d-4099-9cf1-9a1574ecaff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6be79b-9ab6-423b-9b52-5b5144af7ce2",
        "cursor": {
          "ref": "afabae7c-e657-4f2c-b53a-37b5d1307858",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "582f47cb-f4e9-4980-9be7-2fb9aeb2f9d7"
        },
        "item": {
          "id": "cc6be79b-9ab6-423b-9b52-5b5144af7ce2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1b485d8f-c2aa-454d-95a2-a69b91c39419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4936ed-8cbc-40d0-aeee-b448d4234b20",
        "cursor": {
          "ref": "74e05df9-a250-4f81-a1db-3d2818afab7c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2abd854f-7b5e-43e1-8e27-49ee14ac81ec"
        },
        "item": {
          "id": "fe4936ed-8cbc-40d0-aeee-b448d4234b20",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a14218ae-64d2-42b1-a8ee-ce0e296bad1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f56b87b-1e52-4c69-b0d8-3c2c031f92e8",
        "cursor": {
          "ref": "a8442228-c64e-4638-a57f-184091392a5d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "08034931-be44-496a-a8b8-fb54a1c075cd"
        },
        "item": {
          "id": "1f56b87b-1e52-4c69-b0d8-3c2c031f92e8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0bedfeef-d007-44d4-be7b-70c5f4163163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07010169-8f0f-4202-ae5b-213f251ba2a3",
        "cursor": {
          "ref": "1c599c05-b93a-43b0-8d5a-b3a523aff4c8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2e5ee075-fd80-44f4-bc24-db1929685053"
        },
        "item": {
          "id": "07010169-8f0f-4202-ae5b-213f251ba2a3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7eaef0c7-db17-4fae-a948-61c23a626dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acdee7b-b618-4db3-ae16-a7be4da9e6e9",
        "cursor": {
          "ref": "31b1d1ae-c840-467c-b98d-a5ae4ad64eb6",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1f892224-d4f6-495e-bc3d-3aa9d33cdb8a"
        },
        "item": {
          "id": "9acdee7b-b618-4db3-ae16-a7be4da9e6e9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "04d849ad-8b6a-4dd8-94d8-4f00e6bf8a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98008c31-c65e-4e2a-96ed-f1e9a6bbc7aa",
        "cursor": {
          "ref": "025ca44b-3926-4db1-a47f-45ef1e7112f2",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1842eab2-3355-46d5-9822-d79430ba1b78"
        },
        "item": {
          "id": "98008c31-c65e-4e2a-96ed-f1e9a6bbc7aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e8f60e5-6a0d-49e3-9cc3-0b92e1d88e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d6df72-a2ad-4249-98d1-427315fe89bd",
        "cursor": {
          "ref": "89862c13-ea59-4668-a607-ae9e8cda2365",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d87804fe-6fc2-4a9f-80e9-561e2ce278ef"
        },
        "item": {
          "id": "28d6df72-a2ad-4249-98d1-427315fe89bd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "10bd9c24-295c-495c-aa9c-0366fdddb399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebec0cb4-1396-4d72-95b8-f7cc0ba0a07b",
        "cursor": {
          "ref": "474968f0-954d-4538-8b4c-f7ad4d5f1f19",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4e5fa643-29d5-47c0-8b21-6e4d620d7f18"
        },
        "item": {
          "id": "ebec0cb4-1396-4d72-95b8-f7cc0ba0a07b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a4d24545-cf81-4f2d-a013-5d802b1fe336",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd53bef-daec-4207-b3c5-498e52d42543",
        "cursor": {
          "ref": "18831fa1-b56f-409d-a87d-22a279e2a2de",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6eb8a929-1ac8-4f91-ba8e-8afa80a67dac"
        },
        "item": {
          "id": "6fd53bef-daec-4207-b3c5-498e52d42543",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "79ccba72-abca-411e-b756-83ce9e6d58f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dc6aae-3261-468b-a6c8-649c6c4ce966",
        "cursor": {
          "ref": "83b269a1-0f51-4c8f-8b69-12bcd4045de3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9f82bded-85b9-4477-903e-fd66965e9a32"
        },
        "item": {
          "id": "e8dc6aae-3261-468b-a6c8-649c6c4ce966",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a32ab431-cd7d-4bfc-a274-2696d648d01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70cd5ec-acd3-4505-95dc-362ff79281df",
        "cursor": {
          "ref": "e6e86d39-22e7-44b2-847f-73f7ce4c4862",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d040cb84-626c-463f-b587-8966d850f632"
        },
        "item": {
          "id": "c70cd5ec-acd3-4505-95dc-362ff79281df",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0ec5ce68-42e5-405f-ac9d-21290750edd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e622f865-4730-4273-8780-daa95a1198a0",
        "cursor": {
          "ref": "cb72b8be-244a-485f-bc78-7760f234b04b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a2520200-4230-44fc-811d-ac6bcd2b591e"
        },
        "item": {
          "id": "e622f865-4730-4273-8780-daa95a1198a0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "83c9a639-a458-4fa9-af3b-65d4c839f984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b96b40-546f-467e-aa27-e0b75cbc3c6a",
        "cursor": {
          "ref": "7e65ae95-906a-42e4-874d-d837268bf328",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b4394fd6-99fd-40d0-9933-3e2fdc873f5a"
        },
        "item": {
          "id": "12b96b40-546f-467e-aa27-e0b75cbc3c6a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5b98fce8-2f34-4bc9-a724-0744afb45887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861705a8-f2fd-4f31-8b8d-a9104ede7e17",
        "cursor": {
          "ref": "d975f77b-7848-414a-a536-feaa64efec1c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "558462b6-a029-4467-b180-fd23947e2331"
        },
        "item": {
          "id": "861705a8-f2fd-4f31-8b8d-a9104ede7e17",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d717a71-f925-4f2e-a4d8-f93995081383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456ae9f2-d6bc-4e0c-9ba5-15bbbef008d4",
        "cursor": {
          "ref": "10388a4c-2bda-43ed-bc6b-5d6cc824e8a8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d3830930-c3e0-4219-9514-deb80ecf7c1d"
        },
        "item": {
          "id": "456ae9f2-d6bc-4e0c-9ba5-15bbbef008d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b944e069-150c-493c-b169-45a0dd08e68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fca3cac-feae-4cfc-90cd-175cf263632a",
        "cursor": {
          "ref": "b1657770-46f6-43f1-8095-96afd857a651",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dcdca59f-c615-45f2-8621-ba6f237a7140"
        },
        "item": {
          "id": "0fca3cac-feae-4cfc-90cd-175cf263632a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "42736ced-63b9-483a-84fb-8697799a96c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb7c5e0-9153-427f-8c4e-10110502376d",
        "cursor": {
          "ref": "2fa10b0b-d599-43b5-bbd1-2fe0bbc8acaf",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4ee2e972-4b2e-48ee-846c-4537e38e9ca3"
        },
        "item": {
          "id": "6bb7c5e0-9153-427f-8c4e-10110502376d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3802164e-9a36-4874-b951-c624692159c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed494c9-90dc-40dc-a0d9-241db0056f61",
        "cursor": {
          "ref": "363e4081-cb2a-466e-8c27-7c68f1021ebf",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "11ecdadb-46d3-4e5f-a31e-ee907326a78b"
        },
        "item": {
          "id": "9ed494c9-90dc-40dc-a0d9-241db0056f61",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "85c636c7-c532-4936-89bc-421a9ae2008a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284586b0-7da1-4dca-a821-58b87c22e490",
        "cursor": {
          "ref": "f231a23a-c2cb-4b90-83eb-f3784a7c9e19",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f7b5026e-a500-41f0-ac80-134191804577"
        },
        "item": {
          "id": "284586b0-7da1-4dca-a821-58b87c22e490",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3d2ba681-0541-455e-841b-433f3c89d807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39da31bb-26e7-4c08-b9b9-de5708ff69b1",
        "cursor": {
          "ref": "56c1d2c6-bfb7-4238-a82b-04fce91b814a",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3371fb08-8016-4eba-a37a-599977c3db88"
        },
        "item": {
          "id": "39da31bb-26e7-4c08-b9b9-de5708ff69b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c3c4f46-2682-4737-b60c-910e2093b8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9890417d-109d-4882-a722-741aad7bebe0",
        "cursor": {
          "ref": "040257d0-3e15-4b49-a1fa-e462bbf7ea91",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "25c8dac1-1cee-4abd-b4eb-a7b4dbcface4"
        },
        "item": {
          "id": "9890417d-109d-4882-a722-741aad7bebe0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9791bf02-55ec-4930-98a6-3dc843784b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4d85e8-f10a-4eb5-a695-212497a2147d",
        "cursor": {
          "ref": "28337faf-4436-44c0-9503-7edc3f8fea50",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "70951bde-0119-41d1-932a-069c80607b0b"
        },
        "item": {
          "id": "2f4d85e8-f10a-4eb5-a695-212497a2147d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7e354c4e-ca3e-49f9-915a-472fd7f0eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465cdefb-6280-4a7f-bf47-b8efa0dcc2c2",
        "cursor": {
          "ref": "eda73a11-af29-4752-a573-96a5fb801c99",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cdca1b19-e59c-4a5a-b59a-ed914b1d4652"
        },
        "item": {
          "id": "465cdefb-6280-4a7f-bf47-b8efa0dcc2c2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "191fe11c-95e0-42d3-85b4-78c5c602123a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f51b18-0cf8-4df9-95c3-581543459646",
        "cursor": {
          "ref": "0716cfa7-814b-4a93-a942-feab1ce2a97f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "51b8acf1-ed24-472e-a195-8f8a4c96b24c"
        },
        "item": {
          "id": "68f51b18-0cf8-4df9-95c3-581543459646",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1be5a08b-8fab-4239-8b49-f0721a61344e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb2e146-57ab-40c4-b0a1-9af7d1ede65e",
        "cursor": {
          "ref": "9db01377-bc81-4b2a-96fc-8d316f560d9f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3fd9d44e-5f74-4f48-bd4d-6f2e956a448e"
        },
        "item": {
          "id": "2fb2e146-57ab-40c4-b0a1-9af7d1ede65e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "65536144-e649-4cf7-ae35-4be1cafad888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4ccb9f-d28b-4dd9-834c-cca4888dd905",
        "cursor": {
          "ref": "77af2c20-1603-4321-a267-ab02b1c82905",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fd82044c-1afd-4364-8121-5cedb47c2d13"
        },
        "item": {
          "id": "3f4ccb9f-d28b-4dd9-834c-cca4888dd905",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1a4d9c84-334f-4701-bebf-66bc692afd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657b5704-19f6-4542-b534-324ee4f9daff",
        "cursor": {
          "ref": "a4367c89-ce4e-4cea-83cb-335e1ea30348",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "96886617-388b-4b4b-bf8a-10a511dafb9e"
        },
        "item": {
          "id": "657b5704-19f6-4542-b534-324ee4f9daff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4fe4a591-9135-4b9d-84ae-100f78443928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899d3678-0458-48cb-8646-fc873b0056a7",
        "cursor": {
          "ref": "7bf5fa8e-d5a8-4556-96a2-ce676be826d5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3cfbb655-8cfb-4c9e-9c7c-eb6b87aa04d2"
        },
        "item": {
          "id": "899d3678-0458-48cb-8646-fc873b0056a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0c67c3b9-f15b-4b85-9b2c-24ec8053872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b48d66d-16ff-4fdd-8db1-1715512cb6e4",
        "cursor": {
          "ref": "32174ebc-2af8-45b4-8aca-f03546c7c7a9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "096f349d-9cff-4e35-bfca-d55ce6b61e38"
        },
        "item": {
          "id": "4b48d66d-16ff-4fdd-8db1-1715512cb6e4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "79d93958-d567-4485-ab0f-1b358b852131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3283265-57c9-49b2-8e59-34f32b17fcb3",
        "cursor": {
          "ref": "b40f2bda-c0f7-403a-9693-b61b05764a99",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fec915b6-57fb-4ad5-a93a-fc6761a5eb18"
        },
        "item": {
          "id": "e3283265-57c9-49b2-8e59-34f32b17fcb3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0a24ddce-1b36-4028-96ac-cc1d39d021a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2180e1-2629-4343-8aad-04bbb03467a7",
        "cursor": {
          "ref": "7026a788-beb2-4d1a-b664-1e958fc203e1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2e0c8f62-a9df-4a0a-91ab-3ff3bbedaf9d"
        },
        "item": {
          "id": "0d2180e1-2629-4343-8aad-04bbb03467a7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8221e4d4-5469-4bf9-a1a0-1a23e974e64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99f640d-93cf-4730-b5b0-ad676b74ee76",
        "cursor": {
          "ref": "5f61ed82-31ea-42a7-a601-ba994b0113c8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "81b335a7-0bd6-4b8a-8f8b-2c0f77026c6e"
        },
        "item": {
          "id": "d99f640d-93cf-4730-b5b0-ad676b74ee76",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "77830fbe-ea4c-4c93-bada-ec2f031c559a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16609fdc-e94d-4803-a530-8348286850f1",
        "cursor": {
          "ref": "52f1e621-5526-4a93-810e-57d4177df819",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bcf82a71-22d7-49c2-a724-2a14784420ac"
        },
        "item": {
          "id": "16609fdc-e94d-4803-a530-8348286850f1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41e5bfd9-56e8-4592-a7ac-36a98001d1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4d5c48-ebdc-4617-bf5f-2341faad329f",
        "cursor": {
          "ref": "469975fe-e635-46d4-971b-ecb67f629e17",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "43d4e141-672d-459e-9930-2930352d709c"
        },
        "item": {
          "id": "fc4d5c48-ebdc-4617-bf5f-2341faad329f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "167fbb19-1c80-4470-a6c5-3d966dc64aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ab8f31-70fc-4d5d-ab8a-ad88cf84473f",
        "cursor": {
          "ref": "add8ddcb-67fd-417d-9fee-721af27aaeac",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b3d3ae43-bab6-436d-9dad-a0a4f7087bac"
        },
        "item": {
          "id": "e0ab8f31-70fc-4d5d-ab8a-ad88cf84473f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cd0ba2e5-cadc-48c0-9781-d4a6d2af9a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f352410-8331-4bb8-a934-a79a3bb9bc19",
        "cursor": {
          "ref": "16527fe4-24ff-4c0e-9c46-b780ad60bbbd",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f8c6a108-9a90-4df4-bf41-adb6bad6cb82"
        },
        "item": {
          "id": "0f352410-8331-4bb8-a934-a79a3bb9bc19",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4c90709d-6bac-4cfa-ac1b-5b9377f3c602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c18042-12b5-401f-a11a-8b9387d33622",
        "cursor": {
          "ref": "b91a1da5-3f60-4ce5-ae21-c01a81edaca4",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cee01101-5382-4040-8482-f2b04a72d127"
        },
        "item": {
          "id": "b8c18042-12b5-401f-a11a-8b9387d33622",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e4ee1b5-bc45-4132-9674-944f1a48b525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9040d4-d6f8-4ccd-bb03-13162d56db89",
        "cursor": {
          "ref": "28a9c593-c126-4e83-a1b2-920d5e1621c9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6687a780-372d-4a00-8b17-54bab99d4a5e"
        },
        "item": {
          "id": "5e9040d4-d6f8-4ccd-bb03-13162d56db89",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2e1da858-9a46-4131-b9e2-813200dda237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c0b7f3-d9d0-4f26-996f-f71fc5171404",
        "cursor": {
          "ref": "1ddafe58-8ea7-4b83-84b4-6690a8363957",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2fc6b343-6e11-461c-8606-4a8c6884a973"
        },
        "item": {
          "id": "e7c0b7f3-d9d0-4f26-996f-f71fc5171404",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "29d2b301-3be1-43ad-81d4-9a0de6c83675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb183f85-8e6e-4b5f-b858-1d36faca77cf",
        "cursor": {
          "ref": "650c51e2-4e9f-48f4-9e96-68e4d26b6323",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8bb3c834-83da-46e0-89c1-73442fab8e3d"
        },
        "item": {
          "id": "fb183f85-8e6e-4b5f-b858-1d36faca77cf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f72610a5-b01e-4abd-9fa9-8f0e12ed092a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a6a870-ffb6-49f7-80a9-7456e6df0870",
        "cursor": {
          "ref": "86e38543-8b23-4ef3-a9a9-06eec5a5e97f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d12648c1-94a0-4b18-8d10-fa86bbe964db"
        },
        "item": {
          "id": "66a6a870-ffb6-49f7-80a9-7456e6df0870",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "39fd22f6-9372-4389-af83-7506f3d61f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4b7d87-78f0-4bd0-a160-92951dfd9aed",
        "cursor": {
          "ref": "beccaf8b-2348-4b29-baca-fb7c8df58e35",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4fbeeebc-eb0a-4106-8012-f42d7c39d57d"
        },
        "item": {
          "id": "ff4b7d87-78f0-4bd0-a160-92951dfd9aed",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3336ed7b-3f8d-45e8-bfe5-baccff70199e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f9a56b-58c5-406a-b779-a16666a246ad",
        "cursor": {
          "ref": "4ebf52ac-7e5b-4d2f-ab81-46954a93e6f2",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f67d6ee1-bc13-4b52-a073-df1395978fc5"
        },
        "item": {
          "id": "e8f9a56b-58c5-406a-b779-a16666a246ad",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "39aa8b5a-a9ce-49e8-a867-ac90b34cef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9edcb3-47e2-4e13-8dd0-79ba02a92425",
        "cursor": {
          "ref": "ca78a122-f683-4462-a1c0-8c13fdd2b289",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b533ded3-d339-48c0-8d7c-4998af0a3a20"
        },
        "item": {
          "id": "6a9edcb3-47e2-4e13-8dd0-79ba02a92425",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f96bd264-06a5-42c3-83b5-ddc182c039c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28a4bb3-89dd-4ac0-933c-b6a27ecc59d4",
        "cursor": {
          "ref": "be46037c-b85c-435d-819c-bf5a622b70a3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a99c7746-3bf4-41dd-9fb4-8012d5516a14"
        },
        "item": {
          "id": "d28a4bb3-89dd-4ac0-933c-b6a27ecc59d4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f5fd2fbd-3ce9-49b2-8997-81619d3e96f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcbb8cd-9210-4878-8908-d7b1239ad2d6",
        "cursor": {
          "ref": "aabd6cc8-59af-42df-a9ea-69ff0b65b02d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "84c8d29d-9603-4125-8ae2-cb87832b65e5"
        },
        "item": {
          "id": "0fcbb8cd-9210-4878-8908-d7b1239ad2d6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "76537c97-c3d6-40ec-8c52-70fbae86246a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8af0acb-96b7-4d34-b598-9ed74277c881",
        "cursor": {
          "ref": "439ee78d-d4c3-4634-bbaa-a72fe8f94999",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "27e769b0-7f9f-4d05-ba9e-555c3688c9fc"
        },
        "item": {
          "id": "d8af0acb-96b7-4d34-b598-9ed74277c881",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "61abc582-3d03-4845-99e2-a5412d24bba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9c4b35-342a-42f9-ab37-6e71dcdf47b4",
        "cursor": {
          "ref": "5bf55e74-e820-43be-9b22-be5043206424",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dc0eff34-36d1-45a4-8123-c2026785bd54"
        },
        "item": {
          "id": "0b9c4b35-342a-42f9-ab37-6e71dcdf47b4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0c369a1e-3492-4904-a7c6-cc182719962e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d161f0df-fdea-4d52-a5de-c9780846a447",
        "cursor": {
          "ref": "0effd930-0cb3-46e1-9dad-3c42ee27f1a6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eb5e67e7-2616-4620-b4bf-9a61f8aa5188"
        },
        "item": {
          "id": "d161f0df-fdea-4d52-a5de-c9780846a447",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "48cbc367-eb63-4a6e-8ac6-910909b8898e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06536b81-261a-40c0-b5eb-478cea65b92b",
        "cursor": {
          "ref": "b254418a-45f3-4bf6-bdc0-fb8b9c3e4234",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ffc31db1-a969-468e-9d79-34d0d75c6b1f"
        },
        "item": {
          "id": "06536b81-261a-40c0-b5eb-478cea65b92b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e13a2fff-708b-46ec-aa77-843dda291e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b19cc71-2d50-41dc-865d-3f5085eb1e93",
        "cursor": {
          "ref": "516e5373-497b-472d-8cb0-c208a57889ab",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1e295cde-321a-4fdd-ad60-b46cc0fd3bd8"
        },
        "item": {
          "id": "0b19cc71-2d50-41dc-865d-3f5085eb1e93",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "09a5ad2d-44e6-498e-a2ba-5d9b21d08117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0986dc93-db36-468e-922b-fee0fc00b80c",
        "cursor": {
          "ref": "01e13cdb-8e7c-4dc4-9fe7-b7af53a79ca1",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a79f7a5-d15f-43ba-b21c-87abff8a1b80"
        },
        "item": {
          "id": "0986dc93-db36-468e-922b-fee0fc00b80c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e3e8d25b-13c0-4406-9cd5-fd2448ddfa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d29032-30ad-4337-84f9-d0253e5267af",
        "cursor": {
          "ref": "0a238622-5543-44b2-80c3-f564f1929126",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2d9a7955-4803-4f30-9732-2ad39d2d3e79"
        },
        "item": {
          "id": "c1d29032-30ad-4337-84f9-d0253e5267af",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1e1a9a68-e547-4d2d-b8f1-4c2ae142e3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0177a61-c530-4950-b622-f86404ee9aff",
        "cursor": {
          "ref": "0e7208a7-5237-4d55-9348-a97239875bd2",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "78997534-f95a-4151-8add-1f6d123de076"
        },
        "item": {
          "id": "f0177a61-c530-4950-b622-f86404ee9aff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b41e6af6-174a-4a5c-851c-eeacafba3ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea57684-3400-4a4a-98dd-7a682692c5cc",
        "cursor": {
          "ref": "063afac1-6fea-4316-92a8-dd721e02c2fb",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "35625c09-92ae-47d8-9950-d53ec3826221"
        },
        "item": {
          "id": "1ea57684-3400-4a4a-98dd-7a682692c5cc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e6b9e845-05ce-4836-a67c-33baf4f82655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4877c049-dffc-4723-a3f5-4c7b10dacbdd",
        "cursor": {
          "ref": "3d40b4cf-c9bf-44ee-aab0-3016f3e0cec2",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6c4cd8c2-2bf1-4a62-971d-85aab5078b32"
        },
        "item": {
          "id": "4877c049-dffc-4723-a3f5-4c7b10dacbdd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "558f784c-0f8d-496e-b0b5-0e3453ebe356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fda18a9-39ce-4e58-bda8-85c3b9af7018",
        "cursor": {
          "ref": "3b51ee44-e22f-41f7-8ba2-a608e5e78a84",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "574a11f5-397c-4369-9f8b-3ccebb246b13"
        },
        "item": {
          "id": "5fda18a9-39ce-4e58-bda8-85c3b9af7018",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f776e7c7-90b3-4fc4-8db3-2796f3415f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54500f60-ca55-4c33-923a-8036e4a907bf",
        "cursor": {
          "ref": "90fa8392-9220-4905-9375-40f978fe4636",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "acd0d943-c402-473f-af7a-20c131d38937"
        },
        "item": {
          "id": "54500f60-ca55-4c33-923a-8036e4a907bf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4104dba6-034d-47ed-bde3-55da00cf6245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6098a14-f34d-4e05-ae16-cbd2e87e2df5",
        "cursor": {
          "ref": "36ad96b1-d533-4ee5-8bd7-25c9024bca67",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "131daafd-1242-4c55-aa85-252b0763a18f"
        },
        "item": {
          "id": "a6098a14-f34d-4e05-ae16-cbd2e87e2df5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a6e697d4-5a30-4ca4-8272-a08f1776deb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6775f13b-a58c-40f9-9bbb-f500760fb9a2",
        "cursor": {
          "ref": "fae0aef2-2221-49cf-80c0-7364da926d59",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c79744b6-f259-43a5-9d1b-d366afc0ed0a"
        },
        "item": {
          "id": "6775f13b-a58c-40f9-9bbb-f500760fb9a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3a2a8e1b-c7d9-427d-aa01-09fa6e095977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b785af-2501-4b42-86e8-0f339c2f0e89",
        "cursor": {
          "ref": "1aa16fb1-eacf-42f1-9e93-2199b31cac8b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "44fb93ac-7f47-424c-811c-d00eb844f24f"
        },
        "item": {
          "id": "03b785af-2501-4b42-86e8-0f339c2f0e89",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4b29c015-c595-42f6-9887-c221c1d207f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17549bbc-457b-44e9-96a7-b032ed00a5e9",
        "cursor": {
          "ref": "22a77f4a-d5d5-4691-a958-6522840236c7",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a454b307-d32a-4ccc-804a-bca2993b40f1"
        },
        "item": {
          "id": "17549bbc-457b-44e9-96a7-b032ed00a5e9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0bcedcff-ab91-49ab-9658-ac22f9270931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5fa602-377c-418d-a890-9ca158df685c",
        "cursor": {
          "ref": "4763f0c6-9dcb-4d9c-9d78-273eb7ef58c9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ad57c08a-2900-4f6d-bfaa-c34446750af8"
        },
        "item": {
          "id": "df5fa602-377c-418d-a890-9ca158df685c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3f6c3804-48a0-4fc3-b765-fa919fb2e580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa793cc-9002-4ba2-b941-396854e30d11",
        "cursor": {
          "ref": "d0114574-cdf0-4844-a5bc-97ab084cade8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b13bc960-2867-4cdb-9bcd-7bfb4034b027"
        },
        "item": {
          "id": "2fa793cc-9002-4ba2-b941-396854e30d11",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8a498fc1-d30b-4d18-bb59-9583dc4bf380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9e6763-6af8-475e-a21f-8a5e801e77fe",
        "cursor": {
          "ref": "066b66fa-eccd-4993-ae29-9eafa31664ba",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "339f0e0c-7a7a-4a3b-ab74-ffa8b3cadaa4"
        },
        "item": {
          "id": "ed9e6763-6af8-475e-a21f-8a5e801e77fe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fd33fd9c-76fa-4d76-b7cf-5b95bc49349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97af693f-5a4c-4e30-8cc5-d23fae5717ea",
        "cursor": {
          "ref": "86188582-d013-4be7-b0e2-d6b42da7c2fc",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1192939c-e013-4453-af47-40b7584397cd"
        },
        "item": {
          "id": "97af693f-5a4c-4e30-8cc5-d23fae5717ea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e7d458ab-8d1a-48c6-a3e5-4f4f658689b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740bbf64-be65-4f5f-b4b0-509bac038e46",
        "cursor": {
          "ref": "d958629d-1b89-4b72-87fc-2937afcb11a7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "71e8ced1-75e8-45eb-bce0-08dd46eb9a32"
        },
        "item": {
          "id": "740bbf64-be65-4f5f-b4b0-509bac038e46",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "16b7909b-6b54-41ef-8dca-9b662a9ea9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a85702-f587-47e9-b617-b9a516a34f5d",
        "cursor": {
          "ref": "9a7d4fbb-5027-4605-99a1-dad2d8cac40a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2a6ad6bb-320b-4bf8-9544-b37264f201e5"
        },
        "item": {
          "id": "d5a85702-f587-47e9-b617-b9a516a34f5d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "df573ea4-b38d-46f4-80b4-87def45de863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0695cbf6-5d74-4085-bdb6-9268df68e522",
        "cursor": {
          "ref": "1c0dce25-5874-4c94-a806-832d9d0748f4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fbe93503-1cef-45cd-9c37-5e3f3c03fbfa"
        },
        "item": {
          "id": "0695cbf6-5d74-4085-bdb6-9268df68e522",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8e30ad6d-9dbe-481f-a637-2c321ef75159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bbddf9-22d4-463e-bca7-741d687fe8eb",
        "cursor": {
          "ref": "327d3898-80df-4177-b1b3-e3041f1eda5b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0b9a7b05-6146-49d6-b3b8-c399aeaae306"
        },
        "item": {
          "id": "44bbddf9-22d4-463e-bca7-741d687fe8eb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f32aa2cf-fdce-42e4-9e8d-373e66102209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618a3711-0a04-44a8-a751-bc7141c0b5cb",
        "cursor": {
          "ref": "746761ee-91b4-4e1a-b2ab-9e22e2793792",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ea5f4c4b-a78e-494c-8900-b1f797767926"
        },
        "item": {
          "id": "618a3711-0a04-44a8-a751-bc7141c0b5cb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "48b85736-342a-4b10-87a7-4dbb740f2ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a0b30b-aac6-4f3a-b403-3b55c75b469c",
        "cursor": {
          "ref": "26dcb791-fc7f-4e1f-ba4a-c3a818de0e92",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d0f1becb-35ef-4f18-b4c4-23d7aabd0615"
        },
        "item": {
          "id": "14a0b30b-aac6-4f3a-b403-3b55c75b469c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "53281e9d-78dd-4cc4-96e1-be2a8a1c2039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f54362-5056-4c8c-8ac9-eccb45371b69",
        "cursor": {
          "ref": "da54bfee-6a31-4576-aafa-895955154e44",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fb26e48a-cce9-4994-8e43-9a083e0179b3"
        },
        "item": {
          "id": "c7f54362-5056-4c8c-8ac9-eccb45371b69",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8b154978-d305-4277-81b8-7036b50a963d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e994682-2bb9-42e6-b3ce-94e2e646e572",
        "cursor": {
          "ref": "8a52ca8d-2256-4f29-874b-0294239924c3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9c75a330-b39f-4420-a1e3-2635afcdc631"
        },
        "item": {
          "id": "1e994682-2bb9-42e6-b3ce-94e2e646e572",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5b147c6f-86a1-4f62-ba41-9d05d099cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d9dd58-78e8-471b-a272-f051611e1219",
        "cursor": {
          "ref": "6892f46b-6d64-471f-ab10-8a1460d16899",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d0d101b4-fa81-49c2-9705-96df7d2c6b2a"
        },
        "item": {
          "id": "30d9dd58-78e8-471b-a272-f051611e1219",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "af5a97fb-02c5-40e8-9aa5-c26d046a7887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe02667-dc85-4c6f-bcff-7076fe06d2cb",
        "cursor": {
          "ref": "addad2bb-75e0-4386-bd90-3bba3acf76d7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a92623b3-4f48-439b-bae1-b598f4c821b7"
        },
        "item": {
          "id": "bfe02667-dc85-4c6f-bcff-7076fe06d2cb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "899cdb4c-cab5-4748-8b73-012d06a48b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9e24c4-8bcd-43ab-aa64-c92eb7b7ece2",
        "cursor": {
          "ref": "2e492634-9368-4d9b-9b5c-39b379e95b96",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e9194a57-990d-4f5a-a912-974e598442f7"
        },
        "item": {
          "id": "1c9e24c4-8bcd-43ab-aa64-c92eb7b7ece2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "24196e1c-77a2-457e-85e3-fa92a3810ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbf0160-aa44-4164-88d8-ea5a42427f6a",
        "cursor": {
          "ref": "dfd7d53b-7adf-47f1-ba6c-157fb38cb338",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8783f295-69b7-4d9a-bac2-8fe3a19f556a"
        },
        "item": {
          "id": "8cbf0160-aa44-4164-88d8-ea5a42427f6a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9bb74549-4344-4512-9fa5-de3587d74d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609baae1-893f-42f5-a112-33267776d4cb",
        "cursor": {
          "ref": "b8f6139a-d125-41ab-915d-71a2af85ea7a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dddbbf99-d603-4ba2-b2a1-dba191c7c22c"
        },
        "item": {
          "id": "609baae1-893f-42f5-a112-33267776d4cb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a3794547-1f2e-4d9a-a446-a9dc841ed266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dceaac-13bd-4c56-80b6-22666eba293a",
        "cursor": {
          "ref": "0bfff19a-7a19-4e54-9704-4a4bdc198029",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4c787ee3-d24d-4b7e-8ee9-0479b2512656"
        },
        "item": {
          "id": "a9dceaac-13bd-4c56-80b6-22666eba293a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d4a318c1-ac37-49e2-a6af-089cfbf7f043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3c67b0-0c2e-4a45-96f9-da22cabeda80",
        "cursor": {
          "ref": "29df8acf-fb31-4b5e-96c0-10963b000713",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7c6165e5-f7b5-4a06-9500-1f5738c4d090"
        },
        "item": {
          "id": "9e3c67b0-0c2e-4a45-96f9-da22cabeda80",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2f9a1856-e75b-4344-836f-97b8b4c7ff04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091e710e-7cad-48aa-8488-58d0d1b7f4e9",
        "cursor": {
          "ref": "421dfa81-cfc9-4c37-8776-05d2f394a602",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5c72866a-c5c3-4ab5-9784-5636e342ee0c"
        },
        "item": {
          "id": "091e710e-7cad-48aa-8488-58d0d1b7f4e9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7e4e3a23-c1a8-42cc-9cbd-01cb7d131c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9912c8b2-6618-4c82-8cdf-07afbdeb3699",
        "cursor": {
          "ref": "ba7ffda1-418a-4cdd-8d0d-e0cf65f1fc0c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "903cb275-e0b4-4247-ad82-9cc755408dbf"
        },
        "item": {
          "id": "9912c8b2-6618-4c82-8cdf-07afbdeb3699",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4d633db1-b7bc-4cbf-a81d-02da74362400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d779fb6-6936-44c3-83a7-eab6c3bcf077",
        "cursor": {
          "ref": "f84c96d2-fcad-45a0-aeb4-bd5178d8e4f8",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3d82f264-bf35-4d72-b273-3d9295ee415c"
        },
        "item": {
          "id": "9d779fb6-6936-44c3-83a7-eab6c3bcf077",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1519ccff-39d9-4d91-bb73-5d8d250a8347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c956be0c-46ec-4ea6-8435-892841ec60bb",
        "cursor": {
          "ref": "7eb25c4b-bccc-4cde-93ab-671d9edd2403",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "72fdc8be-3974-4ff7-ac70-6e6b12bfb53a"
        },
        "item": {
          "id": "c956be0c-46ec-4ea6-8435-892841ec60bb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f2d886c4-4e25-42d8-a61f-7d8d0a0231cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69660f1c-bab7-4c2b-99f2-dd99460a918d",
        "cursor": {
          "ref": "99b86948-d409-4b41-9504-ae3520bc7e3c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4fef7d1a-da46-42ea-9c23-6c6b5f6ae703"
        },
        "item": {
          "id": "69660f1c-bab7-4c2b-99f2-dd99460a918d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b6dce8ce-ad96-4668-811f-ec69388fde4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8386d4bd-579c-4515-8948-56582fa42c82",
        "cursor": {
          "ref": "db2b8a8c-10d7-444c-8c18-7d20645d1e8b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cb0e8c67-2986-4a2b-9940-33047f811a6b"
        },
        "item": {
          "id": "8386d4bd-579c-4515-8948-56582fa42c82",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b08280c9-6950-4a9b-b665-a95d6de4d4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d3cde3-0612-4d4b-83e2-c5e1124f05a4",
        "cursor": {
          "ref": "d18928f3-4c2e-4d4c-a4d4-0db37574c369",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "17d9a1c6-0a0c-4320-9b9f-09ac14536f25"
        },
        "item": {
          "id": "91d3cde3-0612-4d4b-83e2-c5e1124f05a4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4a1a23d5-741b-4a6d-98e0-1c279cbb1ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5cb7e5-e227-41ab-b9a4-9fc477818a30",
        "cursor": {
          "ref": "1346133e-05a3-4f45-b24a-4b5beeeafd3b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "aa0a482d-e78a-45cf-a482-6dc2826b0da0"
        },
        "item": {
          "id": "ba5cb7e5-e227-41ab-b9a4-9fc477818a30",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "185f3a66-735a-43a1-aaed-b77e8f5a90a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df49a2b-d355-46bc-b12b-6bd96b008864",
        "cursor": {
          "ref": "8a89d86e-ccea-453a-920f-75c0fe17bc6e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "86c2cf72-2cfd-40dc-ac04-9d9252c16bee"
        },
        "item": {
          "id": "3df49a2b-d355-46bc-b12b-6bd96b008864",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eff35e87-d8e1-4a7d-a6dc-ec706df27482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a5025e-aecc-4a92-9a5b-1f17a74a165d",
        "cursor": {
          "ref": "f6732df2-0450-4113-8d56-97e55dee88fd",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3ac8e70e-7ce4-44ce-8f25-d7ed95fae9f0"
        },
        "item": {
          "id": "28a5025e-aecc-4a92-9a5b-1f17a74a165d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5bb4aea8-72f2-4c21-864c-f019c9dd3c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080cf9c2-a190-4c3c-882a-850675eac251",
        "cursor": {
          "ref": "63a426ee-4d49-4390-93ba-eb43d4044955",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7013cac1-f211-4a2c-bc40-fd94a2f97abc"
        },
        "item": {
          "id": "080cf9c2-a190-4c3c-882a-850675eac251",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4a1ad9cc-58b8-46ab-b964-13852ead5c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259dacf4-9b77-4acd-b3e9-f1d49911f507",
        "cursor": {
          "ref": "b87718ab-e051-4bc1-93cd-cc5fc841d181",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6b3f8b12-267a-4871-afd8-1160952719de"
        },
        "item": {
          "id": "259dacf4-9b77-4acd-b3e9-f1d49911f507",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6721ecc1-7026-4ea8-b32a-03b6f3b76746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604635c0-af66-416b-888f-9cc6497f01dd",
        "cursor": {
          "ref": "ed493212-3ee6-46dd-90ef-ed5ac22a3808",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "160ef99d-7c0e-4660-a0a2-d237f5a8b5df"
        },
        "item": {
          "id": "604635c0-af66-416b-888f-9cc6497f01dd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fe76ba7a-d56e-479e-8c8f-fb22e00105f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9804b77-9e68-4228-a1bb-01be3e433b8d",
        "cursor": {
          "ref": "d14e4198-7406-4c52-9c5d-47a661683f6d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e2ad621a-24f1-41f6-9c6c-6d48e5f55fe3"
        },
        "item": {
          "id": "c9804b77-9e68-4228-a1bb-01be3e433b8d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "10cae9e9-455a-4b58-a3ca-6f482502d9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec66827d-8e0f-4396-a08a-cea3bd6687fc",
        "cursor": {
          "ref": "17b27e7a-02cf-409d-8eee-ac8db9c3402e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7816f776-d9e7-4051-a0c8-3e512274e502"
        },
        "item": {
          "id": "ec66827d-8e0f-4396-a08a-cea3bd6687fc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "682a7b1b-cd02-4d6b-a3f4-ec692cf25c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8377826-8187-4fc9-97af-8fb57d4bb712",
        "cursor": {
          "ref": "d5dc8d66-01e9-448f-8488-37eeb38158de",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a71ed14f-e288-4409-bebd-c26fbbc0c98e"
        },
        "item": {
          "id": "f8377826-8187-4fc9-97af-8fb57d4bb712",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5e2ecce0-78ff-414b-84d9-2dd57aa1d085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bab6fe-9705-4d83-8453-f41bf3ecfb68",
        "cursor": {
          "ref": "cd13d6c6-0a59-49a7-be3a-f4b65398d997",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "30fd5cc3-74ab-4de9-aaaa-b9829c35d79b"
        },
        "item": {
          "id": "21bab6fe-9705-4d83-8453-f41bf3ecfb68",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3e1dccf5-fd14-40ee-b558-3349f1b3f838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d744dc45-a9ae-40a3-a33f-9f2cf3408bef",
        "cursor": {
          "ref": "08024ab8-3af2-4356-96dd-f92b2f01f268",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5ba3d075-dbe6-40cc-ad87-f4ee390f4cfe"
        },
        "item": {
          "id": "d744dc45-a9ae-40a3-a33f-9f2cf3408bef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "20f38dd5-0ccf-4c28-91b6-f1515998cfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d3defc-75fb-4870-bc91-365d5a23abd5",
        "cursor": {
          "ref": "00fed077-10a3-42a5-bc2a-0a117f5a1bbb",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "76a86483-7ab0-4c24-aa9c-0a7fa98ad3c8"
        },
        "item": {
          "id": "e2d3defc-75fb-4870-bc91-365d5a23abd5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b4fe9c45-15bf-438b-aff1-fb32537e072f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2134a012-f039-4394-a0d2-e438d11018ff",
        "cursor": {
          "ref": "8231ef6f-e81c-4029-8f4b-11df9c118472",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c6954790-c28c-4f22-973f-21a67fe47dff"
        },
        "item": {
          "id": "2134a012-f039-4394-a0d2-e438d11018ff",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6af7487d-7e63-40ef-91b6-c025e6368d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6561cda-299b-4292-a468-ab399aeedfe1",
        "cursor": {
          "ref": "970641ad-3020-4afc-85fe-f55aa862a151",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c5b893b9-a9fa-43dd-9af5-342dda33a445"
        },
        "item": {
          "id": "f6561cda-299b-4292-a468-ab399aeedfe1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cf5df91d-c11b-4e56-a969-0230ea9ca0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64399b0a-408f-4e14-a62d-42674a19b236",
        "cursor": {
          "ref": "5c1ba3e9-e940-4d59-af13-f9d836b17662",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1c250f16-c677-4518-bbb3-5049f5d22178"
        },
        "item": {
          "id": "64399b0a-408f-4e14-a62d-42674a19b236",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7091d678-77e7-4452-93fa-191333c1de39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c18849-1efa-47dc-8667-40375549da51",
        "cursor": {
          "ref": "c425d8a4-26d4-486c-a38c-c9589bf5084e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "de7f01af-788e-440f-97aa-98a1ca8872f0"
        },
        "item": {
          "id": "e9c18849-1efa-47dc-8667-40375549da51",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e91d7c2e-764f-4977-91be-02d52033872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51607d7b-112f-4bf8-a164-df1919ea546c",
        "cursor": {
          "ref": "578008c5-4ad7-402d-9d6e-4054abd8e0e4",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "570522ed-907d-466e-9a6b-c84d7dc2b54c"
        },
        "item": {
          "id": "51607d7b-112f-4bf8-a164-df1919ea546c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0be6fedb-8fa1-4225-9f85-44ea23b1d7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a080b397-5bce-434c-8674-fbd8c176582b",
        "cursor": {
          "ref": "6b80249c-5e69-4222-864d-819168432372",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9715d3f8-7e58-4a98-835c-71c4c3e492d7"
        },
        "item": {
          "id": "a080b397-5bce-434c-8674-fbd8c176582b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0e7e5059-8d10-4521-bcc4-542f5928066c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ca13c7-9415-48af-b74a-cc4647a2b744",
        "cursor": {
          "ref": "af555b4a-3c72-4915-87bc-452ffb88c5b5",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "30b7a528-c08f-4bc8-b3a3-92e9c1ed0ad0"
        },
        "item": {
          "id": "d5ca13c7-9415-48af-b74a-cc4647a2b744",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1abee9f6-a9c5-4821-b4e6-3815c5202a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1721cdc9-2d9b-41f3-b723-fa940f4abb81",
        "cursor": {
          "ref": "293b417e-6321-45d9-986d-c937a1c454ac",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b744c1ba-42a5-4e6e-96a1-568f714bcb8f"
        },
        "item": {
          "id": "1721cdc9-2d9b-41f3-b723-fa940f4abb81",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6c121beb-4c32-4f65-9303-fbfb82a1b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d5bac5-3c95-4563-b424-91d04199119a",
        "cursor": {
          "ref": "4a111ed4-2011-47e7-82ac-60897c580492",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "499cbb62-35ad-406a-bca5-2668f1e7be28"
        },
        "item": {
          "id": "87d5bac5-3c95-4563-b424-91d04199119a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d7874eed-f433-4ead-86c9-ed443a489913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c32a8a1-a1a0-4723-816e-b64022d129f9",
        "cursor": {
          "ref": "a78854d5-736f-4072-a66f-6302ca81112f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5507dd2a-e04f-41bc-9352-6d1fe474154c"
        },
        "item": {
          "id": "3c32a8a1-a1a0-4723-816e-b64022d129f9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7551b90d-1fd2-4796-8a30-0ad1b7ea4e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c62baa-91c7-432a-b002-91b68676cb8d",
        "cursor": {
          "ref": "1755a4bb-cc9a-4d98-b42e-92209083045b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "68316389-f776-49ed-9079-fd37d8c383a5"
        },
        "item": {
          "id": "14c62baa-91c7-432a-b002-91b68676cb8d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "78f77ba3-5cff-43d7-a7bb-d4d11429d556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc00017a-5317-4df6-9769-2d0e5611134e",
        "cursor": {
          "ref": "992c9b61-b03a-422e-b5d9-c160c4e4daa2",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2eab6107-c485-4360-a4f9-8bbb910e69a6"
        },
        "item": {
          "id": "cc00017a-5317-4df6-9769-2d0e5611134e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8efb3e3b-8032-48b1-ae3c-d16243ba7c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f2de58-ed7f-4a0c-a554-2dc1d52f1625",
        "cursor": {
          "ref": "d524c857-f12c-46fb-937c-273fce559f86",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6bd9a1e1-ec63-4bf3-b3d8-00f7beb369b6"
        },
        "item": {
          "id": "51f2de58-ed7f-4a0c-a554-2dc1d52f1625",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7afcd035-7e34-447c-bb9b-fa6028ed1bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc4b8c3-3016-4687-9890-1bb59d7966cf",
        "cursor": {
          "ref": "09e1f2f1-90b1-48fd-9679-5b89d146dda1",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4f047a7c-4c18-4f1d-ac81-5a34d36b26a4"
        },
        "item": {
          "id": "6fc4b8c3-3016-4687-9890-1bb59d7966cf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9b291cf1-d289-4f28-b31f-986cb8fb73b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4540e56a-a5ae-48d2-9c15-6b92d4a36155",
        "cursor": {
          "ref": "e3a28ec9-28c3-4b29-9870-1d57309d8bc2",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d5bc5f88-6d9a-48c8-acad-93c971845e51"
        },
        "item": {
          "id": "4540e56a-a5ae-48d2-9c15-6b92d4a36155",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a2cf1f41-3cf7-48e9-a366-f490b17fc2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec758daa-6974-44ac-bcff-5579422fefb5",
        "cursor": {
          "ref": "4cbf320c-9e52-4435-925d-066437b6be75",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "95de2996-cf89-418d-8bc1-ff7a5e3ac324"
        },
        "item": {
          "id": "ec758daa-6974-44ac-bcff-5579422fefb5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "56f41034-6a30-40dc-ac54-eded77360acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176be495-7c80-4f70-ab29-f83353000f0b",
        "cursor": {
          "ref": "7c191b4b-0575-41fc-bc45-71161c8d9f8b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "97853dac-6266-46b3-97fe-808f63bac36f"
        },
        "item": {
          "id": "176be495-7c80-4f70-ab29-f83353000f0b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "545f0520-f0a8-4695-adfe-ba6806f7efa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023cd1ca-a4d1-4470-81b3-fc2c161af93b",
        "cursor": {
          "ref": "d0caec2d-c8ef-45e0-8f14-da807fa6e04f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1128a0bb-04b4-4608-ac78-4fe06f811814"
        },
        "item": {
          "id": "023cd1ca-a4d1-4470-81b3-fc2c161af93b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e98c69d1-c8b7-4364-b260-faa90abf42d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb562c4-883a-4af4-bf05-c4707a15d3dc",
        "cursor": {
          "ref": "8b22d5ce-a93c-4450-8057-9e0c953ad59f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "034c9190-224c-4a7e-8373-8645c58ea3d7"
        },
        "item": {
          "id": "ecb562c4-883a-4af4-bf05-c4707a15d3dc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a284e672-5ea8-47af-bb22-f9bdd09e649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c969a08-6e57-49fa-bba1-55319f5f6c2f",
        "cursor": {
          "ref": "5d1307db-b596-442b-8963-1499260df22d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7f6614ad-82bf-465b-b153-67cb54869e4a"
        },
        "item": {
          "id": "0c969a08-6e57-49fa-bba1-55319f5f6c2f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8eead30f-ef3b-4b7b-9fcd-160fea559a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3947f57a-e19a-4d01-bd80-7341478f93da",
        "cursor": {
          "ref": "924e1563-cc26-46b6-89de-87ea84699dff",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f3b7b5de-e35a-4958-bddc-947c02ee4caa"
        },
        "item": {
          "id": "3947f57a-e19a-4d01-bd80-7341478f93da",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ea53b489-03b7-4217-9791-29b0f29b6072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e105866-7dd4-4298-b358-1326d244e24b",
        "cursor": {
          "ref": "35aab615-d240-4cde-98a7-1ce1241ffbfb",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5ab8efb9-57b2-4f4c-b50c-586bf383dc5d"
        },
        "item": {
          "id": "8e105866-7dd4-4298-b358-1326d244e24b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1bf4fc0a-44dc-455c-b8ae-004fff43fdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb05ce3e-de1e-4691-9c87-da7ebfe6e96c",
        "cursor": {
          "ref": "99c34310-3373-44a0-bda4-5bc570691c61",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d3348446-3d64-40b4-bd87-2598bf7bdd94"
        },
        "item": {
          "id": "fb05ce3e-de1e-4691-9c87-da7ebfe6e96c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "be2b32a8-342b-4bb6-83c8-6a65043fb249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dedf4c5-6886-4de5-84b0-fc13a37191ba",
        "cursor": {
          "ref": "939261d9-92b7-4cea-8045-4cf9d0f4d34f",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "228f7044-2af4-4344-bbfc-3c309a083d4f"
        },
        "item": {
          "id": "2dedf4c5-6886-4de5-84b0-fc13a37191ba",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "85c3cf84-c26f-4fcf-bf85-cd31f4cb7675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4314d9dd-2677-4ec8-9980-ab015d6d7c02",
        "cursor": {
          "ref": "9014a18f-874b-4c71-9669-f87da789b978",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "da140faf-07c5-4f64-a215-540f136cda00"
        },
        "item": {
          "id": "4314d9dd-2677-4ec8-9980-ab015d6d7c02",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6bc4649e-4f3a-4ce2-8399-e5c6d5629a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea511e6-c27d-4631-b129-68b6ca6e9323",
        "cursor": {
          "ref": "16f2c84c-a552-42f8-b994-671cc719f10e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3ce56cb4-5e70-42fe-9d40-35c65d7350f1"
        },
        "item": {
          "id": "dea511e6-c27d-4631-b129-68b6ca6e9323",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "78a9171d-4e42-42b7-8bba-b4324caa0029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42943077-aa29-418a-ab8e-600ce7961264",
        "cursor": {
          "ref": "08921155-c791-4b01-b26e-3e53a306f6a9",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6e78368b-8ea7-4702-843b-3f5e40aa5700"
        },
        "item": {
          "id": "42943077-aa29-418a-ab8e-600ce7961264",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e27af72f-f364-4c87-898a-75184a6306f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4a6e3f-4f75-47db-800a-aa219036b56d",
        "cursor": {
          "ref": "940ba521-71a6-45fc-ad47-c2e43e9017cb",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "575d9387-cbe9-4773-b851-52be8cc4381c"
        },
        "item": {
          "id": "2f4a6e3f-4f75-47db-800a-aa219036b56d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a6e89eaf-4e8a-49ed-b1e7-9f829e16fce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe81b01-3eba-423b-97cd-f4a2d9b4a364",
        "cursor": {
          "ref": "bba57526-1f80-4642-b89f-cdc4cf578b46",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "de43aefd-682d-4bf5-90b4-7439154b181c"
        },
        "item": {
          "id": "cbe81b01-3eba-423b-97cd-f4a2d9b4a364",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9fc2a61e-ddaf-4704-b06a-3931661dc59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fd0202-185c-478c-8fc4-28c17858d9d4",
        "cursor": {
          "ref": "1e077465-740b-4e0a-80db-c239ecd696db",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "75bb72da-dd36-46c0-990f-8f06ff6dd0f1"
        },
        "item": {
          "id": "a1fd0202-185c-478c-8fc4-28c17858d9d4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "92458bf7-7479-415c-96e3-dc4b47fc8874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1450e454-7240-42ff-8b1a-0b264fb34b44",
        "cursor": {
          "ref": "d2600d81-f5fc-4f15-868a-19223baa6f32",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0f966779-ad33-4ce0-a7f9-741832b81f45"
        },
        "item": {
          "id": "1450e454-7240-42ff-8b1a-0b264fb34b44",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "27bbe79f-d87e-45c3-b711-249d76602190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97be209-0833-43d4-b918-ffb0c3d315b0",
        "cursor": {
          "ref": "31e763f3-2105-494c-8f10-4cd6b80c18e2",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0b4c7dd2-cbfb-4a1a-8e45-7f3f0fed886f"
        },
        "item": {
          "id": "c97be209-0833-43d4-b918-ffb0c3d315b0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9261a5ce-1d4e-4fb4-9f9d-e7a9ef620d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2f9a4a-0f6d-4f5b-b638-4ab9e448219f",
        "cursor": {
          "ref": "965cd0d7-5c57-438c-af24-e91178bfc436",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3b0bc178-f8e0-48c8-855f-2efaf30cb00b"
        },
        "item": {
          "id": "bb2f9a4a-0f6d-4f5b-b638-4ab9e448219f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2bbf241b-a79b-4d76-a248-177a42a1f8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14305696-0534-4fa1-bdde-bebe9f9d7f8f",
        "cursor": {
          "ref": "e6ed9a32-5303-46cc-91ea-907fe1869dd7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "eac26a19-882c-4adb-be63-23d27bbe6562"
        },
        "item": {
          "id": "14305696-0534-4fa1-bdde-bebe9f9d7f8f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a519838e-14b4-46c3-978e-47caf3040e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98fae65-56af-4c65-9c2c-337b81124ba5",
        "cursor": {
          "ref": "847b0ab5-a9dc-4819-afb4-a44cbad482ba",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "66ae3be6-83c7-4fad-9379-07555e4fa083"
        },
        "item": {
          "id": "a98fae65-56af-4c65-9c2c-337b81124ba5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6452c38c-2bf2-4e0b-815c-149eed35d5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fdd380-6250-47d4-946f-8f8fe6de84de",
        "cursor": {
          "ref": "50a7ac68-f266-4d30-8d8f-1268a380fee9",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c18e10eb-4eb2-417d-812d-0ddba5af0cc9"
        },
        "item": {
          "id": "c2fdd380-6250-47d4-946f-8f8fe6de84de",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6bad80a8-e276-4d6a-bbf3-e80af804878f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c84610d-2938-4da1-99b2-2d7404b0d0af",
        "cursor": {
          "ref": "64eb1577-f649-454a-887d-39214f149705",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a467b06b-3b06-4497-838d-125e0e9526e7"
        },
        "item": {
          "id": "9c84610d-2938-4da1-99b2-2d7404b0d0af",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "69d4b1b7-4bcf-419e-8f41-9bcce8096cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63041804-10dd-427c-a83e-67c7684b75e0",
        "cursor": {
          "ref": "4745a199-bdc1-4e8a-aa1d-6abf04ba3ecf",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9b3c7dc9-a661-4f00-96e9-de40113885c7"
        },
        "item": {
          "id": "63041804-10dd-427c-a83e-67c7684b75e0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c017236e-8292-4a74-98aa-85aac1e7f7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73347ee-145c-4d52-8fdd-63a67eb46723",
        "cursor": {
          "ref": "7168d2dd-5478-417a-99ca-98c47ac3c8c5",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "02e98cd1-5f6f-4764-a3d3-0393e22f2d52"
        },
        "item": {
          "id": "c73347ee-145c-4d52-8fdd-63a67eb46723",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e6fb8ce9-dccf-40e8-a534-d01649b62d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b760fc24-86fb-401f-8354-c3ae45b67ee0",
        "cursor": {
          "ref": "f3bad844-c00f-4757-9eda-aa69b60c0d85",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "29f89357-2b17-4888-929d-66b15375d181"
        },
        "item": {
          "id": "b760fc24-86fb-401f-8354-c3ae45b67ee0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f12c7170-45e1-4c2f-a4ef-e902d0e8e34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db51eba-6c52-46f6-b1b1-fd13a1fbc664",
        "cursor": {
          "ref": "98097504-0f26-40a0-89b2-f76be5c540d8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7cc1662f-07b3-48de-b474-f3bc3f6b4415"
        },
        "item": {
          "id": "5db51eba-6c52-46f6-b1b1-fd13a1fbc664",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "aea1ac1f-0414-45d1-8e35-19b4b0a04cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3cb249-3d63-44e1-bdf8-b797fa4649ef",
        "cursor": {
          "ref": "ad323ec2-95bc-4ac2-bcb0-7823b96af578",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "34337568-6a6d-4d2e-b7b1-9b03b0a27290"
        },
        "item": {
          "id": "7f3cb249-3d63-44e1-bdf8-b797fa4649ef",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7ed6dd84-6019-4a3a-90b4-e2951a165177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a65d80-5c4c-4d57-8611-784508a8c7e9",
        "cursor": {
          "ref": "55e3fe85-7f32-46d0-a05a-7c9e8e607796",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "47124b32-2811-49ed-8639-62413004b1b2"
        },
        "item": {
          "id": "c3a65d80-5c4c-4d57-8611-784508a8c7e9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a41df5c9-88d9-430d-b00d-06f42d0249a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec9f9fd-8ee5-4823-bf1b-849f6ca8a62f",
        "cursor": {
          "ref": "2ec9d917-c106-45dc-bf2c-2402a53e5c86",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "acf51481-4ce3-4333-8966-ffe2af89b706"
        },
        "item": {
          "id": "eec9f9fd-8ee5-4823-bf1b-849f6ca8a62f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "17d8b4d7-42c1-4d48-a681-f64112b288d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 89,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17078ad-712f-4ca7-8341-db0a830e458a",
        "cursor": {
          "ref": "2ff7c5b7-dd22-4c80-bd84-e4db8179cb6a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "abaec3b0-92c4-4da6-b39e-08b43fd99dd7"
        },
        "item": {
          "id": "e17078ad-712f-4ca7-8341-db0a830e458a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cc042305-52f1-4f8e-a966-f049519a9187",
          "status": "OK",
          "code": 200,
          "responseTime": 182,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e52270b-5bee-4d8e-88f9-f48656e4c2c1",
        "cursor": {
          "ref": "d05d663f-cb15-45fe-9436-f6b1c9ab1385",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d6f9a96e-f122-4b63-a612-5a8e526db372"
        },
        "item": {
          "id": "9e52270b-5bee-4d8e-88f9-f48656e4c2c1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "73b0bafc-40ff-44e3-a215-73f3830cac73",
          "status": "OK",
          "code": 200,
          "responseTime": 1839,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc93dcf-7531-48bf-997f-c239c5d5b072",
        "cursor": {
          "ref": "29f5b6c4-86bf-4503-a909-19733bea7cb9",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c3a1ff2a-0a62-4acb-8f09-7609a3b787aa"
        },
        "item": {
          "id": "3dc93dcf-7531-48bf-997f-c239c5d5b072",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "85ef1e46-04b9-4da2-844d-fb78c3f00ae1",
          "status": "OK",
          "code": 200,
          "responseTime": 1317,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a031cbcc-335c-4744-beee-d25103a3db5a",
        "cursor": {
          "ref": "bacaa990-5e46-4096-b8c3-391383086467",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e8a1f4e6-0680-4c12-8f5a-4026028ba861"
        },
        "item": {
          "id": "a031cbcc-335c-4744-beee-d25103a3db5a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6959e7e-cea1-4a39-8d88-f43a29b94ff2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a031cbcc-335c-4744-beee-d25103a3db5a",
        "cursor": {
          "ref": "bacaa990-5e46-4096-b8c3-391383086467",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e8a1f4e6-0680-4c12-8f5a-4026028ba861"
        },
        "item": {
          "id": "a031cbcc-335c-4744-beee-d25103a3db5a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6959e7e-cea1-4a39-8d88-f43a29b94ff2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73417540-12ae-414a-a305-2b6903398f84",
        "cursor": {
          "ref": "cda65321-3812-4ef9-8567-73b9dd3f9f1e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0cb7539b-81f8-482d-963f-85a46183e6a0"
        },
        "item": {
          "id": "73417540-12ae-414a-a305-2b6903398f84",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "282cce2f-3a4d-4224-9e59-da686088675d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27631703-ac48-43a7-ba66-d35c46f93907",
        "cursor": {
          "ref": "39d4e1ff-4a1e-484f-92ce-c2aa7572960a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "92912974-335d-43e0-abcd-5bf73c0b772b"
        },
        "item": {
          "id": "27631703-ac48-43a7-ba66-d35c46f93907",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9441ce36-582d-4731-a4a2-8d573ef17c85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}