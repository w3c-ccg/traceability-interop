{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5e24f6fc-7ca4-41a1-aac4-d0b3ab1dbf7a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "55de33c3-c881-4e8a-8ed2-311279572e02",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15f3156e-1063-4a70-a832-435b247cac14",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "35184178-6594-442c-9053-dd53c994a428"
                }
              }
            ]
          },
          {
            "id": "4f1a82b7-ef4d-44b9-aa0f-ad7c706605fe",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d40d0eff-7f5a-43a2-99f7-daff4045a82a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "17997703-f30a-4a48-8f36-e41d9e6056e5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e2778c86-51af-465d-a954-da8a444742c6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ead845f8-7013-44bf-b7f5-0262ab96bf2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f70ffbb-28c7-43ca-961f-7e4b65cb4702",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0719e03a-c660-4036-a981-6602948d050d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26a46646-d17a-4e7a-8fd2-980b9d09f4f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "759bb8b0-e722-401a-9d28-78c3c320ab7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01e2b7f8-0727-4cce-aacf-a2d70b3c694d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f818b58e-52d8-4613-ad7e-d593ab32f553",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdfd3466-a906-4ce2-96b2-a5c4e3fca49b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f0b2d57-30c9-4d83-8e79-bb45a45e67be",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ef1c7b39-40db-4133-87d7-edb39ba700bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5266e381-7e03-4a82-9bfe-759a3f025067",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd6ca78c-b1ff-4d31-a84e-cff245163eb2"
            }
          }
        ]
      },
      {
        "id": "75e57a97-7182-4166-b521-33e270b8a741",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e1263e2d-f28b-49d6-a815-9b8a20ca386f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c01f96e-dc20-47ab-8b5e-facbd6b61d48",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c35d74e-9412-431d-9c56-69a306f56a07",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91373507-b6a3-42c5-b54a-29f5a4a030c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f46c8a71-80e7-468e-8d1b-182ef4c6e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca96be79-bc1b-4536-98e6-a17c44d5daff",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7002812-315d-47db-af94-d40b18c47837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d25b3078-3e5d-4c54-8e92-9e29de627cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2db64c1-d632-4e76-a886-d99d694cac86",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb4874a-672f-4ad6-affb-4e57e577d39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "562ff4bd-a1ab-44d5-87bd-89e071a3b87e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a36687a8-0f2d-491c-8263-93ce7d511b46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59fab850-de88-4631-a3ad-8c2996881faa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19aaec30-0198-4dd3-85ac-96bb0c5e3b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03d3a27d-eff8-4f62-aa32-416e04e149ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855f2ad2-e9b1-40e9-9ff1-fdf6e6befd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a971231-8559-4dc6-aa41-0854ea3c54fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "def36a1e-cd6f-4e5a-9cf0-e4f603c7adf4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c61c721-f82c-4d4e-a0c2-4ff093cbbcad",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "823b820f-cf6c-4f15-b266-1a59a544b46a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8eac8be2-7979-4241-bfff-4d8734a89588"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ef09c00-9141-40ff-a71f-4afb179b468c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "04558787-7e67-4fb9-ad40-e1312f5fac9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce1543f7-8608-4a7a-8307-a10f7fd5313c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "258c3ec4-8ac1-41a9-9ee6-604ce1c76e93"
            }
          }
        ]
      },
      {
        "id": "ebbc122f-fe9e-4634-b004-91606b2fa2b0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7f72a62b-be15-422f-9343-af5891a4d9f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30829922-75b9-404f-be46-c709942b1480",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d895f78f-5c6b-4e06-aa7e-c83c9a00346f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0f4adc-50da-48eb-b69a-f62bcd4973ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ce613b-c109-4e1d-b6e3-b73c13940180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf0592b-ea4a-4159-83fb-dbbc0904144a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7085c8e8-976f-4f5c-8d6f-1f838d0b1a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643640fc-7187-404e-80ea-71f2869c2fcd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06edbb09-f6cb-4202-8836-38bba407b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fe9d6e-4b88-4b8f-8ad7-fd06e6cde231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dab6303-13f3-483f-aeb4-15986c2acc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d9eadbd-02f8-4bf1-a78b-21280bb8476d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51795805-529f-42c6-be1b-068f98c93e91",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f6f637-79a8-4284-969f-02815d2d3740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc08e8c5-4509-44c4-90d2-56f3fb504493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119eac99-4f11-4af2-b384-ddb035ab7f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03ed840e-6ea9-4597-80fd-1bc4dc600933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af6e119-5547-4d57-87e3-519975552617",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97626d4a-2516-4f52-acc3-47bed18338c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40e9716-4ef6-448d-a82c-da359880b33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31200b2c-f2ea-42ae-85ae-63e04996c5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79526b78-bab1-464b-819f-a2517e4dc77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc0debf-2284-4583-a4fa-20fd2b41d60a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8f37e5-7168-44e9-b8df-d5648dff0e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4c8e6c-091c-42de-a0a5-2baedbc2c62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6593cb9e-909a-43cf-bdbd-43204b0c2df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b118c83-2768-471a-9b1e-6db13420358b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8844ce22-9e46-448c-a7c2-c2a0e8cec424",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff31748b-b2e2-4be6-961f-7f59203bdb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1206f91b-ba89-428d-9ca7-0c5fd7a1d297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d8ccdc-6ad2-4f35-bf77-02fed0dbf452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e39a98eb-21d7-4cc6-be10-e88fca5d9fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d596abc2-9b36-4c9f-bb23-7fb375122d00",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d95779-c9ce-4a4b-9d1c-ff2f9034e420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8754738-b106-4c25-8f8c-dc5b2cf1b70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60a605b-e287-4def-bbfa-97c790b3c05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cb40243-ef47-498b-badf-f21e267091d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf8a323-26ff-4060-83d7-3d5a5e4b8045",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523e32d2-4e32-4ca3-94f9-c6f7fa2e84b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbf71a0-fd06-4d57-8adb-d6bef4125096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0551385a-91bb-46bf-b30c-3831bd104f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b31c35f0-dc55-4721-bf3b-254c47ef60c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3573604-d7ae-4f50-8c27-b119a505a844",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a040a6e-e5a2-43c6-b171-200c86a67fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42dba17a-6838-4b3d-9142-10b596266bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfe14a4-2955-46d4-af02-fce94abbe7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "808737b6-ce16-4777-b5f3-5f44cc9b6751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9ad6f6-b08d-47ad-ae66-7661b5ba7387",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6feeb22-2317-4995-9b7d-4a58c62c8e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb73665f-1f1e-49ec-b612-ab1ca9a4b3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bffd9a-732f-4d4e-9c94-894607e393f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a326ed2-7607-4fb7-8f11-57006cae5255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0e2300-e4f0-46f5-82f6-01ea68600835",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729dd3e7-e623-4d03-b35c-0a111792953d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfb3943-4170-4313-939f-7f869f10ad27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571cd50e-1660-41ea-91ec-9f354a390dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6aa467ca-f9ac-42b2-a64c-d123a32d68c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7871622-0086-4070-baa5-48c6196cd2a8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22875616-a65c-48c6-814a-12ed3fd9138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1645de-4df7-4cef-a3c8-781177d880f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03387aa5-51bb-426b-ba12-ad21f7466078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f19d1c1b-7192-4e7f-99d7-18cf58278dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f35a06-e135-4700-9fc7-38dfd66e1841",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494e0ab9-470c-4549-b809-eac165e703fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a53db2-7b7b-47c2-b1f0-823ad3f18947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3354fd3b-4665-4b5f-9306-0ab68e95daf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7792d75-30dd-4b68-82ca-3dc51193e0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b799462-921c-4119-b462-9c9ddd166a30",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6798b3cd-79d6-4d3c-b9ab-80fa4bc9934a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba8397d-0e90-4047-b8ee-85d14ba40d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fea54f-f061-4bbe-8c61-deb48b3101c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1eb4f224-ec47-4740-ad66-0c769bd9bf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a452eb57-f4bd-4637-b9a7-fb9c05049d5a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6356234-dd9e-4f59-87ea-6747588262cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f524ad8c-e211-4e90-bbc0-e44e1bc75910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6beec8-cfd5-433f-91ef-bba67d82c371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0259ddbf-ce9d-4068-93dc-a7116ccc3a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ec4581-a977-4af4-a615-aee4156991b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60892a65-51aa-45fb-bed0-646710e4b66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588eee23-e97e-40e7-be2b-25fa794a26ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac039b86-ef07-4e0d-b2e7-47a9cc6cb840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56b919a6-0acb-4fb0-b696-0dfd16e591f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10719704-344a-469a-8208-37296ad9519d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f398bf-f4ed-4229-b890-4dc14e3d632a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fadacf1-8cef-46e6-a7f2-860f0bf7cf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e74281-acea-44ae-ab97-8b37ef767e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "532c478b-eecd-4257-9772-2f7261ab08d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5104a599-fd3d-491e-9b4b-3ee02c8d8fed",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ebd9da-f837-4f76-b4d3-0a5e399eecbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d49b3a7-33c6-47fe-88a0-ab480ab4a99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349e2d2a-5702-483a-80d8-bd83ead25b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "855d6976-18ee-4f44-bbe6-ef8715a58c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f0d0b1-3093-47b5-b964-19a289624b35",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6d3b99-198b-49dc-a7c5-a547b6b21868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b1d3f3-b671-4ae9-a861-ca8e6988f54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babec754-5aa2-4608-87be-bbaa73aae4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c147cc1a-fcad-4333-86cf-f02499d73d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fc72e7-fc84-46d4-a7b1-ec80f627f89c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d542322-916d-4d6d-b2de-2aa426ceb7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73da1aa0-3ae9-4637-9c6e-96f4b6d42ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd6f5fe-630a-49d9-b0ff-2c8288a9d516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03c7e96-28f0-4f2c-8d0c-400e9ac0e7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f8cd2-168e-493b-8eba-eb6055bb0d15",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff30f00e-e97c-4739-98d0-f39be8023302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e61c43f-b64f-47b3-9a55-312992d8f965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313f8df2-2fe6-4e40-a403-1ffb4dadd6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e23766-e26a-407f-920b-452e92650b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b9e578-f738-412d-a456-e20da0ff8b5a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc916888-f853-4e7f-83f5-8afb65298402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f362b3-975c-4fcb-be7e-8302338118b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3002f4e4-25c7-4ebe-9533-071569c6f3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15c79f62-c1cf-4d03-9dd0-2c1b39e1796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20439f7-5617-4769-a566-b1b9a3f98aad",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73557090-cc6e-4d25-9da2-f821d11e8bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c6e20c-e490-48ab-9953-2a9e714ff284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7dad6b-78af-4ff1-beec-8447efa26a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dde33ed-5451-47f9-838d-adfb79f053d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ffad1f-0f8a-4baa-ad8d-7f870d0382f0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672c42d8-42c5-42c7-bc2c-9dccf34a143a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9fd13c-fa8d-4e74-aa38-25839583834f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637b3f83-e960-4aea-9c19-f0bfa051cf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e15fea2-886e-4676-ae16-62c7f37df54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc21348-697b-447d-be8d-c8c0ea0c7bfb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac07296-1121-46b9-98ef-afb153677059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377c3901-6720-4503-978e-d535da5e3938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d834e666-86bf-4d8b-8ce3-4096da4468b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3313a3-eb61-431c-95bf-389a21c13502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330425e8-8343-463d-9d84-03bc37d2c342",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef664dc-0ef0-4de6-a9cf-397ab1757863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e060cd5-fda2-42be-8bb7-93c65303a4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ea88ba-2e2d-4dfd-9dcb-caf0c627d90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce750944-3857-4e50-8e18-4fa2187f4288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fb9f50-2db6-4a01-889e-66a4c6ee18a9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f99d61d-c7e8-4af5-b76b-754bdfaa4f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b572f129-d5f2-4106-9a44-1463fa8bf8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04559868-0183-4d5d-a3fc-2b7b35b04f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e87f46-076f-4e1c-aa43-0f226d60aa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e39a5fd-5468-42c0-8228-59c5df156390",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e068a59-ef7c-477f-b0de-7766753d15bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e64ed78-5cdb-4d73-9c9c-05afd79e4d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cc813f-ccf7-4975-95b5-2994b2e972a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66341287-40f6-4e76-9b6f-3c77f338e2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60192cad-105e-4554-bf7a-a1aaea306a2b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991c57ec-3438-4c1c-8bc6-522682412b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b431cfb6-3746-4e1a-834d-66f99722a996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a93e54-576b-4970-887a-dc64e7698957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "045a70fd-8c61-41aa-bfe4-83bf2d076676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b1524-169c-40dc-93c0-89b28a303969",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4786251a-ba46-4dce-b297-9bed7a2c5b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b34c03b-a177-44b0-8a80-91bcd73d718f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e041f69-2c31-4dce-a6cf-644b4f5ee527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "beaf2d46-12c9-4caa-975c-8c9bd6f85e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c68e19a-7e45-4266-8b58-e15aab9c78d9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297c7b47-6325-462f-8616-81ee39fe2b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f3f15f-5592-40ee-ba73-71ff2e40689a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fb51e1-313f-45c2-ac11-f68035629fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa20c60-8adc-42d3-9980-2b03e69469b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f62e8a-8b10-40a7-b2e8-9e0ba8f1387b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327cff38-6f44-4fcf-b735-4724869e96c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425edbef-d556-4352-b43f-fa3a1b13bbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5178d595-ec21-44e5-a521-7d5b9685831a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5488d1c1-ae9d-4017-9a16-2ae244698fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749c12d7-7dc0-45a6-84b9-5af730c9a09b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e858a7-86f9-44a1-8376-69c6051a9339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2c14be-63a0-4237-a7e6-3c621caf99c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e2cac7-b54f-4c5e-b8dc-019623770eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bd66ed-b371-4663-940c-f5e333d2ccf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98669922-68b5-4da1-8dcd-01720cff15aa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a66cd7-9ad3-4bef-82e7-03616b51acc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e736d9-a713-4d5c-bf68-25effa72c0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0418d20-2417-47be-841d-96fd2f48abcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af8eb78-1f65-4c9f-9a8c-64ca516dd2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba27f52d-a90a-4363-87ab-4cce860ec0d0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8552f5-c269-4c3c-94b6-fc72cdd56d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50050299-2faa-4c00-b6da-6dc8a57c36b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a43815-ba17-4ef4-8031-954fc10c38a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "021b36fd-6941-4533-9831-2cd8c3067372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ab3889-a718-4c11-b26b-a71dfa4f41b9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e439f949-c8ec-45f0-95a7-227e1a0e583e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba550dd6-f939-4335-af0e-f1992e8df575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fef1bfe-5dbe-4317-8c88-74ae7f3834ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a44c3af-3c80-4d5e-b7a0-2948f55a072d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a69c3ac-e36b-407f-b06f-31d2653a4d7b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7b1ffb-59cb-4899-b7d8-ab0fec9a07d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a93a6b-4452-4210-9031-6db0575e5968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e3f5f2-0c54-4df5-8da9-be1349822f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2d29f9-c585-4efc-b1ef-e2e81f92e67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b0f079-d3f5-4704-b6b0-123e5e7b2520",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e4dc4-b175-4e32-9bc8-76da27cb7505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7a26ff-4cb7-405f-9a6d-952192319fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3034a1-6e35-4ba1-af24-867e7854cc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82ae6639-8386-455e-82e3-7a364297042c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa5a15b-9797-4a1d-9553-59697e8368b7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9157cf6-693e-4b5f-a436-658f48cfa8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b483aad-051c-4e9a-8942-9d3fc129f5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d9fab6-2f6f-4984-b6b3-0f50cae65242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fa534e-7f1d-4d71-97a8-01cc293db56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4276f8b5-5321-4fe1-93b7-f92430e7b0ab",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaff628-3bbe-4539-9c84-46013ec10e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9f8206-5a2e-47de-93d2-bf33ca80e089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7e02dd-d508-41d9-b0bc-47408abbd0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3871b6dc-a94a-40df-9f3d-36b70bf61cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356e1044-7d4e-41c3-bc07-05742385e0d6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c8b893-9095-484a-8a8d-620357878134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7b0304-2df9-42bd-bdc1-978ef749f4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2197f77a-57c7-4d54-bb13-8434dcba4bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84f9a282-6fbd-4c90-9a35-a8811592495e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cb3dc8-9291-444c-a82f-2b9e95229cd1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6f1fde-e67a-4882-97ba-150a5f7db046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5184b73a-2f4f-428f-9493-b6852ec65a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b983c036-b196-4be8-99b5-e162dc783c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dab239-7a72-4ddf-b659-22eafaa9727a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9ff7ae-09c1-4b31-a3fb-de2fd8ea6b2c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a46a2b0-5471-4324-adb5-9ffb69d0a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7602b0b5-8177-46eb-87fc-8bedc08b44e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d04d28-69bd-4241-a37a-4029323e2a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75c940f4-f552-4930-a55e-8afcbfe38d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d07d329-a95c-426c-a0b7-d0ee79470287",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869d0580-2625-4972-9df0-44e69d4f1ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e56d11-3855-48f1-af27-6d02088a848b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f324c57-3b4d-4c26-85d9-c473822b911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe9bd6e-95a7-4fd7-930c-dd6e6ec53835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6f7579-ccba-4a23-8ec5-ea5b0aa41a2f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ec9892-28de-4fec-80d2-cca1bb73c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048d630e-4aa3-4c79-a976-84088c568762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01aadb9c-2e01-48fd-b3a5-75ba9046f2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd5888e-b1ef-408c-88a9-592f5779fa36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55078768-cfcf-4246-8fea-33cfee8a38dd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caa7a89-0abb-4223-978f-dc84791e7eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca8717d-d88d-4562-9563-dd45c2b99ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa5f3c-c415-4c3f-bf16-a9c523bb9ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c15d43-f04b-46fc-94d0-6bdb07e64a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474dc13a-7adb-4bc1-9f40-1a8ed70be66e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dae2c1-cddf-4a98-a293-8c946047f5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28323220-e4e1-473e-8448-efc56acce611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b693a9-5871-43e9-bc7c-c86fc2b65fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e7309f-16f5-496d-b279-6c4e0e39fee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba16502c-50bf-428c-8c59-6f4071fb149a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c2d50f-efe3-446d-9a84-7b01e0eae878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e323e7db-195d-4134-a81e-bec87f1d0982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799f02af-419f-4797-a3c6-12570e1c8d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4f1b86-ab0d-4bba-bb34-9d41a14c6e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36ff731-c76c-46b8-bfdb-e5c11cdafb68",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bbe4c5-b44d-4157-b9bd-ca2bb2754abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59603b7a-cf5e-4a31-a8b3-784f0db6eecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6150cba-3493-4e9f-bad1-bb719ff2de56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4ad56f-9845-4bc0-bef4-81e05f1a515f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307ae32c-4f95-4367-8810-8bdcda1ca18b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ec131f-4d52-4b80-a24f-2ff8148fe153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7f253d-eb1a-4d64-b451-7f371afed15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077be5fc-e450-4f13-a6b2-73b6ceb323f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c24c1671-274a-453b-9267-bd351701977e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e158c78-461d-4a2c-8c60-02fd0f5ef0d2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b13309d-eaf1-416d-b1f1-d4a87878da4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f366f426-c4a6-47ca-af51-3b224607bd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc2349e-2591-4863-b5a8-54c1d2e1e5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed9ef1f-e00d-4a39-8fdb-3d8c44df0442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f84eddb-ea2c-4e59-90b9-400566802ca7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48985bf4-a642-48cb-85f2-342004e56ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2acf6e0-d1a3-4968-8e86-70946af66913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0339e6dd-84a4-474b-88d3-6bf4df4a6613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4593f97c-27a6-4b39-8cc8-460bf0720409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bca55e8-3002-4223-bc92-e874dcb16319",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc332d4-f7f2-47b1-8259-053a3e91d7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2f884e-7024-4d54-849f-c5b1e2280258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55766818-329d-4d06-86d8-320d15cc4ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cef13af-e2f8-4d00-8121-73aa8839af73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148aef8f-1c26-4ef5-8f7f-971cd57853d0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdff6e6-a8e5-43b2-8d03-5a853f164979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a29b18-f717-45b8-b99c-a0a6169d3948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0f98de-dd15-4900-b5b0-ca70d8fbba04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe7987f-fda2-412f-9db2-1507eb6fa200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49fb9d4-80c3-45cc-a68a-fd126ac755f6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18275e1-f717-4047-9b29-d619a904c6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5524974d-0e4d-4556-b8cd-7ed3bf84612a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3389dfda-2f3c-4dd8-a4ac-104c1852cbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15fdea5d-e3f3-4306-a983-1ec675edad1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b02e02-cc47-4164-bbe4-bada841f900a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2950c9be-6eba-4022-b740-c24c47794a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a86ec9-9323-4e64-9b65-a701e7ab7113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f1b2ce-9083-4ba8-90cc-5c928312bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8162cc-d4ab-41f7-ba12-a067f5fc0ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e67cad4-d4de-474c-aba5-02bad5097939",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b41f0ca-7100-48a1-a343-e2ea48f6dc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54feb8a-58d9-445a-9f12-04edeb21b138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88108a41-5234-437b-8dcf-5fc88e6e5629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b659529b-5b06-4d76-9873-65bd9b24f803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185786b2-9010-43b1-b164-8bfce6a317ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677e4d2a-296f-4ec7-9ae9-2cf317663c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb7e4c1-80aa-4c36-a392-1495c5a962bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b0442c-ab59-43fd-8f3e-c67b1ebdd6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "699c8697-4001-4ae2-9c93-ac34a787b197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac04954e-2728-4692-ba96-f66b887d2e68",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1cbd45-0044-4e94-9ab3-995c72d20206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d876f68b-86c5-418b-89fc-69088d0495eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8971b9-3898-47a0-9931-b72c3bb1c89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3e3855-3bed-4df9-bdee-405d30acf852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63af85b9-0d38-46a9-b707-cc40add461ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97d999b-4978-42aa-8d3d-071fe9b691c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a1b58c-43e1-4ea7-bdc3-b7fa047f6bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c803c6a6-4511-4abc-9d66-d84e9031821f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "399aae12-3223-4017-8088-2f0203231690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63121e0c-74fb-4ff7-b239-bd63fd7aa43c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4718f0ae-e621-4f92-9661-5ea5c6ad7d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16a97d0-3196-48d1-affb-4bce6d0848d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e7ae05-fab3-4d0e-a28f-366638a8a672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c895c83d-8c78-4a19-9e26-e95e78a0ca60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acfc9b8-32c5-4f19-b932-17e2cc8345ca",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a790acf8-643e-48b2-9eb5-8d965f981f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617de9c9-7d49-4adc-a7c1-15f93a74af9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9178c410-c8d7-4e87-9a01-bf35f8e7ba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb8f8b8-3cd7-446c-8321-8b9b3be178e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b18d3d-add3-4918-a5bb-7198e44ebc8c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0eee11-0032-443e-a1f5-12f6fe6b19b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe51d711-52b5-434f-8bc5-caf33e9d7be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1b2ce3-d232-4ef5-a35a-1ac8aee80f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81a1c73-0239-4a72-8d76-da139084c561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c480a4-e638-4096-88d5-48c65029e04d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18360fe-401d-4b3f-a0d4-0f1e173ae882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c06643-980b-4eaf-9797-53e4f670d313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8b5a45-c5c1-4e2b-8aa0-b8cda1294f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e89bdda-0e6a-4540-b7e4-7b23d0681f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc1a88b-db29-4278-9245-e526ab07fff9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4356ed-4e36-4b67-a62a-a9bd073d8e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f35f02-c9e0-4633-b372-c615f4241697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e8425d-19a5-41bb-9b7d-3ca223c4c494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b495fe87-f7e1-453b-84f5-dfac371b6512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7aaec62-5b5f-4462-af58-8f353413b15c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f3e041-2532-4e67-8d88-cb88b652c85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a3dac0-3a72-477b-b532-bfb4796327e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ce666e-5593-40dd-94fd-69f3d28fc454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dffec9d4-e220-41d3-ac7b-d4e228aeab04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0921e5-7bbd-4e9e-a770-70f7fed3166a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e8c53e-8381-49b9-990a-a97f72693f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a29c894-8262-49a7-aea7-113324c5262b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679c5a72-07af-497a-b0e8-c1256bf81fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f69e5ed8-62f3-46bb-834b-2f5d6f468f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e72ffa-f1ad-4871-8d11-83f4670ddf85",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6fe3d7-d390-43b4-be19-862f9d59d513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b771370-7b10-4cc3-80b5-90288d60076e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccff4ce-c601-4724-a96c-caadbd40c103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f87f9a81-6ea4-4e23-be1f-a48a81892cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0c4c84-dbc0-4e62-ae49-02cee12dbd59",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c91cbc-c8f8-453e-b312-c50557c32403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f482fb1-0fc1-4e0a-8b5b-b4389626eab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e084a549-6e82-4ba8-bba4-e5f591fa0a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d1884f-0644-4d7c-b380-f6ec2e0d2e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71341cb-5cd2-4880-90a9-8373ff6174c4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d15552-1916-4f38-80a2-fc39e4b8e176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e1eab9-85d7-4b8d-99ef-c71f04c5ac57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6911d76c-b6ea-4410-bebc-9d37c7c549e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8439a86b-401b-45f1-8001-1b6593d3ef3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae5cc76-1533-4e6d-ab75-f39eedbe4a69",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c04957-b405-4c8c-89b5-03aef6a6a110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdab9d86-ebfd-4c32-a120-e43c4edcd5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0735554-e259-41dd-a092-653609f34179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa07942-4ee5-4066-bd4a-411c2a6be8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d23ff3-da41-4f5f-b351-59986ff7104d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1758814c-9637-4ba8-b65e-1db2a119fc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d705ed65-a173-4332-a9c3-16fb7460e970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cefc6d0-32c7-4c42-9481-8c8c6fd3c28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10fd2cc-9914-4a9f-bf90-692161713647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83bd3de-730e-4afd-93fe-d9ac21b33af8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4d5ce5-70db-428b-b6f8-3b6a53ac675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9d1da2-5edd-4046-adcf-85c6e4f655a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857f9ace-2c79-42f5-99bc-b57901e77b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c045a9f7-a1b4-4df0-a05b-5f23b54fa6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ea178e-18ab-403d-8aaf-70220c505a22",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38a3235-d3ec-4d71-8913-cb8cadffc4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30f62ff-bc55-4ac7-a6fd-ccf152f32029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773d7414-a87d-40e0-b075-01a4a08575ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d813505-bedd-44c4-ae1b-c14cadad3075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a33e25-e8a9-4546-b226-ed9ff2fe12f5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ade0c5d-73a9-4a2d-9b59-fff74cefa4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a2f65e-c137-478f-8272-9f8ea27dd7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bace8b-cd6f-41d5-83eb-87a99bbf5a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e360de8-73d8-4bb3-8a3e-3c953afbeb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ecc4ec-5a77-47fc-8973-7f63fc431c30",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fe0a9e-b55f-4b8a-8bff-e36a7157eef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765088bc-ed4b-4610-a240-7c0a2d9bfd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b620cfe-beb2-4fec-b7b2-7f922278605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eecbbdbc-80d0-4bd0-9999-f4ddded6c171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b39455-2683-459f-9426-c64292ee4cbe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1ff905-8be9-4b00-8eed-6215c960280b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94c076d-eb44-4c06-852e-9581a0f9ec67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d6dd68-6e01-4e91-bc3d-570d218029fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ecec2a-7bbc-44f4-87cc-482f5c5c42e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32504599-e302-48bf-ae8c-e57057b7e9bc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d1636c-2cff-427d-adbd-a078bdb212eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf59890-8569-42ec-bc31-3338a0d6cc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3dc257-4e8b-4bfa-b6b5-988057d1bf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d772bf-3652-4965-8c49-a3d55392a9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59362f92-7e50-4b66-8d39-aceba7c1852a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef3b278-f9e1-4568-8920-23f73335051d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0a086b-28dc-415c-8eb0-bcc4e84593ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8134b3b-15dc-4955-93fa-f1a33769d946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b04dcb-7404-4ced-9a92-3aa4ce4fad9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d7722f-382f-444f-a82c-662bf2bf8a84",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cc6c6d-2741-4292-be51-ab087d69e881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadcafed-2646-4a90-87a4-80b5c0390254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35305f5c-4700-49a7-ac85-d488c828923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "050cf297-bb5c-4ad1-9de5-68a0614f8e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea43590-18d1-40e3-a5d0-d10018513a85",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c593554-1dc3-4f1b-b56a-5999f3862120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7c8d82-135a-41a3-bb33-e3c5d1859c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f8316e-d3ed-4e27-9693-652067f53b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d8c75c-9957-444f-9fae-a9be41f5ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352c296d-c19f-4af4-a8e5-09f2b007c428",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3688f3-5318-4b24-933d-af705cf6df61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b909b2ca-762c-4c12-b4e3-bda3181a6e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b7e6fd-b178-4446-b7f9-32eb14f23fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8576f114-8385-4b24-9fac-f4027b02ca04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d53854-b278-4c99-86d4-6ae034afc8a3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ace6d7-0826-4811-b27e-757d8b1e1cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21cb87f-b2b5-442b-8056-1756b9617655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321be509-8deb-4607-8080-9fc3736ce46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4e721e-6f11-4af3-9751-3a45ec0e5888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c45af2-dfb9-4903-b793-4a4721495333",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1b252e-a1c6-4218-8494-d4e06040da28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8088a9-0542-455e-a89c-554987562d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e65746-a53a-4501-8463-42ccb877ebee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dace9adc-95f0-4274-a3a6-2fa3be233b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce55e0a-ca0a-4325-ac4f-59ba60d52d05",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bc57d9-2773-4d66-b5c3-9a72df8c8adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8bbe91-41ec-4e4a-85cd-02f8e9321fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58728528-ae46-413f-96f4-9d2d35959e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dece34fc-f415-4abe-8a7f-e404336c36d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6a2350-14e1-4399-adc6-d50be4042d63",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e62f12-ca5e-4e89-8904-7b48c99347c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e70e597-5272-4d88-b74b-b1b4f80d98e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5212845-2dab-465e-a90e-7b786f015d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df744783-304e-4e56-9f14-c86f099fc1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba20faf5-6179-4527-843b-b1d3a0585053",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5947be-9995-4938-9a7f-93a9e6b7b247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b200845a-fb63-4c00-8366-0aac360a3819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98d2b4a-8473-476e-beff-b20f75696d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0c6e3b-8b77-4bf7-a63c-9f0e99788568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef92529-20ef-4fd9-9c54-f03fcfd34949",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e968981-1d60-4e56-a14e-fff95bb35b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96888dec-8ede-44eb-8f87-a4bf7f0183f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25a793e-7798-4573-8e5a-1f3966052915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad2228b-409a-48c7-9317-14a9737c09f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ff0137-3bef-41b6-9d26-d085e86cc8ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dea9336-c22e-418a-8a2c-f47980891a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b80ba37-90dd-4fea-8315-698119ab86b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201dfce7-a761-4af1-bdf2-5465e9d28719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0279a58a-8df8-40f7-8cee-7817ed91a67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d8e051-2246-4a35-8983-1ce39d280848",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48af7c1d-bf19-4fc4-9d2c-dfe9b660d624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000ff05a-456c-4d9a-919a-7e5edcf2fa06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625a4522-46cf-4064-8bb4-59ddef16b6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fee32dc-2f5d-42e8-aa8e-61cd052f6e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa84607-d1a5-471f-8aaa-cd915235d04a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f966962-5300-4e9b-b83d-d582b0eadf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1766ced-801e-4bf8-aeca-90a04f74acdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c844ad11-9fa5-4c03-ae0d-ad269f7e80ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e2f185-f92e-4194-88b6-ede5c46d57e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b139f8b-6a5c-475c-8cd9-e05154dbc412",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32111fd-8eea-4ec1-829b-fa0ddbc27ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9804f534-7091-41bd-a4ce-8d6d161e493a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a9f8a6-072d-4992-933e-46cf400f10ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2035bab7-6515-47bd-b0f5-dd0cbebae900"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2ea41c3-88e6-4e9e-a93e-de3042766a6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "931a7c50-77f9-44ae-b4e7-3a9e9a4533a5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885e69c1-f364-4fbd-83da-51e325f8c91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e8e2867-5ffc-4783-b132-fbd1360c6adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ef8274-e173-4137-973d-ea75c2672f6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "612f5be8-28c9-4761-81bd-6934cc1eddfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "286a38fc-01b3-4466-b217-5a9ddc9e130c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ed68fc9-a8e3-49e1-b8e7-cd682377c7bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "021cff87-8061-48d4-a424-a84df934d79d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d42b028c-aa71-4765-8c3f-23c8c51b9903"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "feb0f520-bf82-46bd-9468-159a335889ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b95ef05-75c9-4564-9ae7-b66ce580e1e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1659115a-6b99-423a-bb2c-d11a67ec3caf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e82f26f-4257-400a-b300-5df69ff5db3e"
                }
              }
            ]
          },
          {
            "id": "81e61d63-cae0-4282-a426-b7cd7b16f769",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3878abea-289c-4312-abc9-2436e7710c6f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3593431d-3c5d-41fe-8022-ff8c8add62e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af2d3df4-f725-4b29-a147-b17ba9c07f01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99fc4c98-42e7-4dbf-a5c9-8e4df51eb218",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8b42914-4891-4fe2-a58f-2bd61cb5908d"
                    }
                  }
                ]
              },
              {
                "id": "2e392dd1-4c49-4095-8821-335a6d8d04aa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20fb4330-8435-406e-bc12-4e34db41f443",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44a21e6c-ee54-41b0-8294-f90e29dd6689"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8050c2b9-1949-4f9f-99df-f99522a8182f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8fddf385-10c4-4b28-96d9-852bad14332d"
                    }
                  }
                ]
              },
              {
                "id": "8e907d48-4c9f-4ad6-959c-871b778070d0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a9ea5d7-0758-4b08-8db7-9aa6cf1e7af7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0743b358-acac-45f2-a794-4cf75c028c98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b22ca9f-095d-4673-b070-89b30728d0d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "836c6842-6a27-4265-b411-9b9cd65afa66"
                    }
                  }
                ]
              },
              {
                "id": "995f8534-d697-4b74-a33a-1a27975b7153",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "458fcf7b-2986-447c-b319-a167cbb640ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2239295e-aaff-46f8-8d4f-6c643b2afabd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ced4221e-a3ac-4c4a-b847-c587dcb75b1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7bddcaa3-b5fd-4029-bf1f-5597ce52ec3f"
                    }
                  }
                ]
              },
              {
                "id": "a1cb58cb-2346-4181-a441-db3c7aaa1a63",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d84e05-ec8e-4f80-b931-c803f0cc093b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25480612-85f8-4714-bea3-e67e21c167f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79f9ec87-08d7-401b-928f-4a6a186cb32b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "df02ae4b-181d-4f79-8952-c2c4ee3b52c6"
                    }
                  }
                ]
              },
              {
                "id": "babba880-a73d-4a38-8dd2-39a817ebf116",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77dae761-4ec7-4d3b-b98e-fc158b37423a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3ac7c11-5285-4974-806e-abeab3aa2ff2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bee0c3d6-7efa-402a-a7e2-35a71453d958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f917906c-31be-4854-892c-8bdbae55a5fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aeb3d950-4cf4-4d05-a216-fc5d2847ddaa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c878858-5718-4f17-9bfa-2c1031619e99"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8dd4ef22-4456-4e88-bbb9-994c3ce67857",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e20a38b-fadc-472b-b175-9e33009a80b0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3e31591-fdef-4638-96bb-3086b450076d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b65af727-9380-4e09-8d47-9ea08dd33759"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "743c60fe-f03a-42ea-a32a-43f0f56501a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "073759f4-cc2d-4fda-97ca-a9e05f969b98"
            }
          }
        ]
      },
      {
        "id": "316f4045-2c15-4ef5-84fe-78e564fb7ed0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8707a847-8537-4f1d-aebb-c56cb680145e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29967461-f63c-4925-8ee7-eac6f8e16f2e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3332072c-1b7a-439c-b64b-ccb9f0e6fbb8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b56a15-6c43-4a5c-8b53-4faac0a75119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f1a3dc-22b0-4333-8450-31afaa6b5ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cfb7be-c29b-422a-86fd-20b7c908644e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6ee192-0b70-465e-937c-3848ff9c9716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4368a26-313f-4a20-9b1f-80bfe156f0bf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d620144-8116-4c21-b862-652640fb1d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e278e980-bb83-4430-abcc-adf7ba604483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6590f4-ac50-42ec-9c5b-6f655921164b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63687fb7-ab06-44b0-ada0-3a9762beae1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba1a416-15e4-4970-bc7d-c60cf8be34c5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e004c76a-3afd-43dc-bd11-ab51ff71715e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3942a766-1cb3-4577-bfca-4cd34e6a1e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb4f839-4882-4d53-9730-220f5a7b7716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12da89eb-8d54-4d73-9a7b-38b36d72c086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0a7e6b-11d7-4ce0-9388-20a395e760ce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5429e7e9-5537-4aa4-8c3c-a733d1e522e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39b2e8c-0ce1-4a89-9af4-e7606f19c460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c3b581-ecb3-419d-bad0-9ff8859ded2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf6856a-906d-40e3-8a1f-992c8599333d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b766c6-6290-4b87-8a00-0a8a26371536",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbdf9c7-6393-4c4c-bcb3-6368a7bbbbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7466ef2-183e-4dae-983d-ba2373e75f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48db792-443e-41f6-968e-6141c7a4854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d56991c-418c-4684-b1d0-dada8b3d17a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3ad137-3bd3-4c69-9e8a-c053811ac439",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb6adb0-6b41-4208-b26d-d7ad14d998aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f1a75d-db71-444e-9d7c-3f08a8b66795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ff743d-7ab4-43b7-9a19-1199f2271f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13c8c8ef-5606-45f3-bafa-ad19922cad5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b12ffb6-7741-42fb-a50d-db62ce0c05f7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fcd2f5-c846-401b-a1ee-9b652e169783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4b35e0-36f3-4b13-9ebe-bb7e18bd4d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac95fa9-70d4-4ee1-be69-272d4a4c565b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d6bd6d-050e-48a5-a7f0-9b07a3e1c5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf021c8-3c43-4dcb-b6ca-40b4ccd1643d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59873fcf-39a8-4c3e-b7ea-c2e37cc30cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532e4454-a55f-4fee-aacb-aacea59032f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6c6514-b787-462a-abbe-6fc73bbf1ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36cc3042-b320-4522-86e2-ada603f08236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9ea1ed-1c35-4c76-b534-d79e196db846",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24a3db2-09a5-4313-bfa7-fb970cbbf838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81c92e2-f295-4dd8-8401-a6e7bb570fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfc25f3-4744-4579-83ce-ffe06db6febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "111a35a1-9029-43c7-9cc5-b55736d0a19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8055cea6-58cf-4309-a38e-9c5d28741f79",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614c8496-c21a-4da1-be7c-8c73ba49f470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ae6848-3d21-4b2e-8dcf-362881219e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596b8225-9b24-4683-be98-bda5a92a5452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfdb7f3-37aa-41b2-bd25-e862ca862315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7a9311-7674-43a3-9c4e-2124b8316bee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8b13d0-49ab-4ad3-9d04-3455b1f74ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b10e9e0-b98b-4076-9cdd-4232d1f057ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a46d885-6fb5-4fa6-83c2-6b638313e73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cf57a019-3fb4-4c4f-be55-4289780878d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3929418f-615a-4f0f-9862-3291ada2a375",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64068426-2978-4883-b89b-4f15bfb27eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c3822f-b876-4142-87d9-c65254a607ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66bd856-3763-419e-89ce-37430cb62135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6afea005-efab-4ba0-b674-96590456e47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bbcb56-fc31-417a-aa16-dd1910423f7f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096d902e-9b68-42ae-9b96-8d86b6494a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f658b8-f8fb-40e1-b4a7-b20de056d83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e0e848-53b3-43eb-ba74-d4146f998aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b68d7400-f5f7-4ef7-9e3d-cf055b948b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4f2b3e-c7e6-4783-bc92-9cf949c27042",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16643c7-ef2c-4be5-8255-c7de875ab786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdff8f2b-3fbf-4e02-a620-b053302f1e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7f69a0-09b5-4dcd-8ed2-142d65ff9035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7eea8d-0f94-472b-a501-c4e0372c6c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d77c0d-8cf3-4c6f-bf17-f55c92019eb8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0584cc7b-1398-45c8-a572-757e95625ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f60a86-2e2a-4988-ac06-3a24143549db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee645a1-d0e6-4fd1-8863-4764de06a374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e3a1cb-ada2-4a6e-bdfe-01044ea147a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2171d829-603d-49f6-9e7b-65e4d61b9cce",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347a1e34-feb0-404c-b485-224c3768caee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15573570-b4b0-4197-895d-a79fcd9a93ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fede04-d4db-4352-8c35-abf9d8cf02d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c86b89-ff42-43c1-b886-b2728d64385b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac64bd5a-38c4-43da-ae95-88bc0148917c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32581616-45be-438c-859b-ce8529c39ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0e04d5-9a14-467a-9e0f-ccd4f9627206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96af00c2-f3db-47a9-9e72-356147ace18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b20e93-3669-49e1-8dcb-126833c634bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e8b8de-a6b0-48bb-a773-a7dbbd6c8bbf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60e0a4f-ab7f-4ec6-9932-fb79a13c0723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f780a8-49fe-423a-9847-0628c29beb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6108a627-3001-4f5a-9c52-2ddb929080ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c25f137-6f05-407b-b5c0-7d9da870c2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d7ac71-9ad1-4975-86a2-102cecc20e6b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dd9c57-584b-44ab-a696-04f8a4ba618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34690d17-f922-4e29-8db7-8613470cd3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adedce65-8651-49af-89c9-1a15a0ff8dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7408001c-7f54-445d-bade-b60543ccefbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c40e3b-48a4-4a75-882d-a52c1b35dd7e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf78aeb-c596-42e2-82ca-73d3ad793550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbaca90-f068-4670-8b94-cb48b0a9db07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c010898-d6fe-456b-b423-61e3a34f452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f97ac519-4b64-49f3-ae0d-6a9807824d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2ef84d-96db-4e7a-829b-7320cdfb0604",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070956cc-c3e2-49c1-8868-4da63a437590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac360ae-04d6-44f0-addd-68dea10d7e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc71ba1-7191-4da7-a2f6-698cfe99f2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff02bd8e-ba63-41b0-af97-29fedc2cf73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e1846e-be94-4f13-b813-63033f7bcc50",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ec65f5-1793-4b95-a483-ca1891b7395b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8089a412-9d44-4f82-8105-d6c2cf9a16a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bdad7e-ff85-4f97-be9a-043c79dac6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a86c902-b935-462a-a272-ea89096ba253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48306934-b6ee-40a5-8b15-60f45a495f25",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1821f4-e747-434e-8a3b-1f11fef78e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3d117c-7e9f-4866-9abf-c368f4df888d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42159ff-3c21-4670-bcb3-45bba94fef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c734ea-f852-4401-abc7-faab6f9c02cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db0ea64-2463-493d-b861-4b480b9f0ed5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaf6e35-adb6-45a8-8ee4-7d47e29a4ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e493101c-dcad-4f89-af45-d22f5511db28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5a0bff-016d-41e6-95c4-dba7b9a1c14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b9aeff-62fc-4240-b5f1-b5d1c06ae911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce002427-0824-4986-9327-3657cb2a99ee",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab6c962-79c3-4b88-85b7-4b61e8091db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43af3219-7c16-4d1a-86dd-6df4f21dfdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b8e1e3-cf36-46fc-ac67-9240da339d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c59848b-c35a-4dd5-922a-ee6acc993344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ccac68-956e-43e4-bbde-29589fb7da13",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ac9735-4b65-4d20-a6c8-25e5bd421207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5b7f7e-d16b-4c1a-8dd2-a73d2debd71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a625ce-ebe9-49ac-9a5c-15cd4f3ca619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e66a495a-dbad-4b35-b931-c772d44f25a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf410c23-0c0d-4cd9-b10d-a4c501ed0b5a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65c224b-1c18-4cd7-97aa-3145a733cfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4398e14-4535-4b78-a742-e96f2eed3fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d1c68a-150d-4b5a-b3b0-d61a5e180385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecee4475-dcc0-483a-887b-d01eb19b54da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552f5a39-8794-4f85-917b-160da107238f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965c1f16-4e7e-4c17-b607-3d37e125dc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c104d6dc-ad57-4841-8b8b-b9d379980b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fcc01f-0921-466f-bde6-63b2d31f92e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "832664b5-9aae-4031-9840-9429ddadaac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295e8aaf-97aa-4a41-8742-0c524e29fd78",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d80f45-fb9a-4dc6-a59e-41e168a08b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87671c6-8abe-4527-b1bc-8f23ef0068b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1d0739-9d36-4ab0-a48e-4297fa44206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8d9b6b-b5c2-4ecf-be82-0ebaffa84b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2271845-bf51-4a4d-b245-2b262e621dec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e025ba78-249e-4060-92de-0c08f4fca6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2062e202-0910-481a-969a-7ef8b1b212cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8badb9-db4e-4498-8989-84ffa47351f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab29692-ff7f-4416-945a-b27f2f808cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21fc818-0f30-47b0-8067-7107d29b82dd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56ea22f-714e-43df-8f1a-d74436490207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6690063c-f07c-4675-ae7e-5dd044c5c413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c533709f-1403-484a-964b-e11200834d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c215b2cf-fbad-4950-995a-eb8e6053a01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f69c362-ad05-43a4-96a1-b9b062b69b97",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0d1aaf-b8aa-4802-935b-13558cd5fab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51af18ed-fe37-4212-b492-db7f7acf238c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df0d2a9-9343-4dc4-b82d-79209fb1a62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94219a1-688a-4368-b3e1-2548ddfce7c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "234440c7-5ad3-47a8-94c4-83acbc062053",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ea9ba4b-09a5-4290-903c-e15aa25c84d5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8effd4-3824-4f51-b33f-2f8faa1a5204",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9d3420-b86e-46a3-a851-f2d5793c088f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad8ad0d-aca4-496d-bd58-d01ae9a17ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0010e8f4-b517-4113-9197-92218a245c46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5474e594-8d6d-4a55-8370-429e84ce6204",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "372c8287-a4a6-4893-b4a5-c59e0d3ccd5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "800f852c-777b-4a4c-8ad7-099e1f59e088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b121c27-e8c1-45b5-a47f-3265a8336eea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f1f90dd-8060-4720-a5bc-e37b2496cc20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f936c17-cc04-406a-8225-ce9a0f065e1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b9b6fea-28dd-4639-a84c-6956b206193e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6def3de-1351-441f-8cf8-1a1476c52a83"
            }
          }
        ]
      },
      {
        "id": "6010ab56-8b0b-48d0-8f32-ca111b30d085",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8fe35552-debc-4dff-acce-e5b96e78f0e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa800089-a1b8-411a-9ede-6de63959681f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8353e4cd-34b3-4957-8d10-a1865969f4d0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea6cae7-a7b2-4367-a4fc-b5298dc495b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea3be0b-b1ad-4e6d-8271-92ca197c7f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e277a4-be26-45b4-8969-09b8378915d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e87e5f-2b12-45dd-bae4-bdc9a8aae10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d875030a-8343-413f-82a5-e6debdd52027",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc0fb83-bb31-4560-827f-ec669e82fb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4282096b-1907-4e3f-8488-a8475519e62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4971dd50-d7f1-4e6d-8155-248f187c26c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e84e1a7-544c-43de-a896-ddb8e9339c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac314e9-e333-4337-b131-6da29d2bb8f0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4a9876-6891-4448-af99-7cac44a24c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ca2202-a0f8-4ce3-bd10-34c9b60718a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac018c-ef5c-4dd7-baf1-3da805b62a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1dfd5b-fdfb-4e82-9c94-1c376fb7ecbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9acc8cb-5110-4a9a-a4c3-574974f62e2a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81614d28-4322-4caf-9de8-bb2689f45c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34babae4-aeb6-4bd0-a453-ceedafafb262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015d11db-bef8-444a-af9c-613854a65dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "663156cc-0568-4f09-bb56-2630e7f5718f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba98b84b-657b-4060-89be-3bceabbdb9e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d74b73-24bc-4ab7-81f9-f27aaf3fc98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d42c67-6194-440a-9e56-34fe9da36c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aac7ea8-5241-4061-9b76-1e00c25e01e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f05c4d-1152-4164-8106-f741b5cd9cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aee4e0e-409a-4cad-984f-28456a6e7beb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c61873a-c0fa-4818-b9c5-484fcf264700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d94e1e-4465-412c-967b-37eff5f5afff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2be4e3-06db-49d0-8ad8-250f6e1b5eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "537e4450-5e46-4c42-b751-845f3b7def2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0276c4c8-1c32-4bc7-960c-7469da744926",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa4af1f-2311-4762-b8cb-5cfe68227377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c3c26a-39e3-4a70-bf58-7e62ca1c70ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f1585d-c83a-476f-a649-203fbbe37c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b9f5fb-6ca7-46eb-9b8c-129bb199c3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339d7602-86f3-43e3-946a-57be26756718",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01736f3-a0d9-4f04-a764-dcd41a165113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51321962-1fb4-4d71-8e32-9e1ce30d98ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf02373-de92-412f-b2e1-6bf2c8540fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8735fe89-ba38-4ac1-ae50-2bfe43194180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0d62c3-998a-4416-b756-15d525856d8f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51dc37b-20b5-43c6-9b45-61d83ae9bc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdca2b6-9586-462c-8f16-cc8712034d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99375c7b-69f3-48c8-8098-84459fc9ac63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "205e70a1-3aae-4d72-ba22-6d86b39edfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a637f67d-93cf-4a9d-a974-5f387001941f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4b2a7b-8eb8-42fa-866c-e7ef4b346624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4feb86ad-947e-4b25-ab16-b4dd0f906190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac1126a-37f6-4955-9d44-2f01ba7114cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "597361cb-8905-4c77-bf49-d6d27e2994c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d3a9a1-7ddf-43cb-8c1d-77a13dcc59b3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9897f291-6152-4a4b-99da-3654c310cc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71123b5e-b41a-46ed-826e-90fd0c5e9172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a096e9b4-7789-42f4-8093-a9ccd6829075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c79ea4d7-81b2-4666-9392-aebba52fbebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c24a71-7c98-4cf7-b186-91ee23fa3b32",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15897e14-4baa-40b3-9554-a07baab9c32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ee10ee-d669-4000-a83d-de3a96583ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449a2fdd-138d-4129-bcf0-7d416e6a9fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccfdbd3-7dfd-422f-94d7-ac8ceeeea52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d6d7a6-a088-4899-9cf9-f690072a21b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89c2f31-8d33-49c4-969c-6bbc57c5e0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63521d5-a24e-4be1-8f48-7ba04df60cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4358c9-2831-47b0-90c2-fa61c03a9cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7632c020-c9ef-4c5f-ab36-9421c23e97c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58571bb3-7d9e-4304-8161-e0a63bdd9718",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f34340-4c1d-456e-b785-122e0cf0c795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8aea241-2e62-4e89-a638-1a4ac85a90ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ee069c-30a1-47b5-9208-8aedaf6e222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd4dfe6-539f-402d-8a02-c1d0acfe8060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2768c94-8f5e-42f9-aae0-f7fdacce0e16",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502731c1-11c0-464b-a3cd-9f2d1a33ba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0330af-0e04-4bab-a219-b386227d1a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52cfda5-dedd-4c42-8842-3acb1beb3472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4504a976-885d-4553-951e-921e5c8cfa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347e7daf-3dfc-4731-91d9-67d3ec841c1f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943a1dc2-9439-433f-9c61-fc2cdedb1ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93b91f2-d0f0-4b69-8616-212ab9051dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05e7179-04a0-4b8c-a791-e714a05d09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "998fa318-4ee6-4aca-9ab2-aebc1fc20c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d1114a-3138-4d7e-bfd4-b023788bee07",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb6ac78-be3d-4152-9e7a-be9a33262a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218ac53f-c89f-43bd-be6a-8f295fb94b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418bfc20-a5c5-4d64-9a51-0f303059f3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "250234d8-f384-4607-b62b-c14f3e50166c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5de70e-8fb0-4c55-8674-f9902834f56b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42922f5b-46a8-43ee-a8eb-96da85653716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f500e2d8-a076-4558-bb1b-1f72639b4c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a6683c-f020-41f0-840f-42ef0eba96c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcc610f-4c3b-4e63-b99c-877a0a9fac6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78f90f4-4644-4e67-800a-549e2aae17e2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a426576-75fe-4b97-9123-c0734b26fc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8897d3e6-5974-4042-bc76-c2a41c4b1285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524e294e-f8ed-49ab-aabd-9532700b660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b44c0e-cc3c-44a3-80da-b0cb8cb51028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d584532-72d1-4132-9cea-e0fa5b6fe4e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b40f42-ddd3-4769-b78c-0e574070ad0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2ad85f-cd93-4a13-9ee5-bbdae5a7cdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aae3301-a975-4e71-9327-f527599d8594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d01c2ef-0516-43c6-ad6f-0653db7fc841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5d4f0e-1ffd-42de-8e86-9abb12f2172b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4468e427-7acc-42d1-81b3-4e5bef6a60a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d17ce36-969b-4905-9496-8c72c1ad42cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2977c011-44c3-4c43-bbbf-dc0ecd060a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa898b7-fd4e-4a76-8aef-5480b3d862d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e370b7c2-1b5a-44c2-a25a-530f34e18c27",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414ebad1-a50c-4267-91e7-4a42c36869f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbaeb51-863e-4923-ac8b-47609e1f725d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d3fce1-7fee-4853-a884-126e966ae9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6547961-3750-452f-9dd6-63240fccec72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d895656-8187-47a3-9f44-00839fe24cf2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe03cd1-8c94-4040-b884-8fb4af0a4b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3dde12-06c5-4828-aa2a-384b1e4e3951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1f1d1d-9409-4efb-b50a-8c8fd630e9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6067c4ef-d15e-4aa7-8307-ae6a89985996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbf045e-a68d-4cf6-a7f0-ce42dde1df74",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc9c564-b4e7-4f61-a739-db8ccfa4b23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c746de-c8d3-4dc1-a92d-935b586dc351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056ad607-13c2-4d56-a637-51e35517f158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b853bb23-c892-497a-9795-9c75cecf9466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da47761-cc4d-4795-acb4-219b997ae59b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b42c0a-3eb0-470e-b777-9a43739ab560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f38e989-d788-4424-811c-66be744fbc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85a5c39-e69e-41db-9f86-e30c44d50987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b8558d-f3a5-4c62-ad71-1a7eabb95853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1067c0-d745-4743-8b1e-4809794a1946",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92599ec8-a115-440d-8fa1-ff138140b7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060320b1-16b7-4f70-a97c-ffb25594f6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8995b9-a81f-47fe-b1a7-e05f2104297c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "927eb569-7939-4de6-a4fe-0c5ee34d27ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e276a11-7dbc-4597-94cc-4193dab2efb4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a853f1a2-550d-4df8-a24b-93ef8b57dfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401552ac-f9ba-424f-a9d0-c89e3f36baac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202b6534-595e-4c73-ad6f-2660e04ce2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12fcdb3-5dfa-430f-92b7-4c6b82667621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfd2d86-5163-4c36-9086-1bc7beb16c1e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2468ec3c-5e66-465d-a30c-d0d065c0002d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc761df-81e2-4420-a0ce-8b75d5e72ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c59097-fcfc-43da-b0d4-db798b5ab841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b32c5fff-3b63-4e26-9305-b90202c8140d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713cf417-ed33-4adc-bd3f-f8a2befc6f15",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36461318-f878-4987-b019-fd0e07dbdb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a07559-cc8e-4125-80ea-99ae2ace73a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50874f3a-4319-45f3-9454-4eb8efaed0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2131aaeb-5dc0-42ea-bbf7-6fd3b5b31b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2454af7d-7499-4a1d-9552-31a437bb8ac8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a416aac7-d429-4cb8-8b82-7b607f6836fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c42b571-3426-4173-8f39-e7bacc8c266a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ab6f8c-4d9e-47f3-a26c-cad5766921a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "958719dd-2c89-4a0c-9dbc-66438ab5725a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd489c6e-61a8-4d7f-a02c-e75dd0d00857",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cde805-d61b-4aa6-a192-46e357f1edf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc9e754-45b9-4c1d-b896-4d470e579dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aa3983-77b4-42ba-921d-9113f26865b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9444b6b4-f48b-4a1d-95b4-0e9159796f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c457c24d-e5d0-4920-828b-81dfddd0e1b5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71120f36-63f6-48f3-a438-d21b776080f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53979a84-1bd7-4c27-8206-c6708492973c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35300a7-9ae2-4a06-816c-e9e7d9cb1c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa10a243-75aa-42fc-9428-4a8c61e3cf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a2c0ec-00e4-4e4c-baa8-550920023b99",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d7012-bd5c-4d2e-9b73-4b81e1fcd9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e874084-64e4-4293-aefc-0081e4ed2d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572d21d3-2301-48f9-ad5b-e86174af08ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7429bbc2-62d6-425c-9da9-ac06facbd936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067a036a-5d44-4169-ba46-73e0726c2f19",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea34cd40-e217-4f98-b8f5-23542ca87565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473e783c-61eb-4c26-b248-bad18505dd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9b8b0e-fb05-4ff4-9077-a28437361076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17cc24ed-fde3-42be-baf6-10a65ba82329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283b85f5-cded-45b9-8012-9955f7df053a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e537d2e3-a828-46da-acf3-99573830bd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dabbe6-f05c-4919-aec1-2fe941eecd1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe68bd5-3a2b-4246-93cc-5b8b816691f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae3b09a-34b1-43ea-80f1-7f155693d746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b93990-b12f-440d-9583-6bc4c3b15936",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04be5d26-6c2b-44fe-bb83-1633e864f1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ab3db1-ef08-42ea-bbd1-3d79ce45ff46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f0748c-3eb7-472b-9f6d-bafcf4d7dced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5e3988-046b-4609-a95e-21502f05007b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc461b01-c537-4242-afe6-f31ea7bf7b96",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2105b4-6d98-4d04-8227-102b96dcaef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267bb1ec-f3f5-434b-83e7-a69c87419cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c950d30f-51ae-4910-b075-59a2d2bce106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "575aa1c4-701c-441f-a54f-286cbe428327"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be9ccefa-31bc-4f24-9bf1-3de445e2c967",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e61d341-1247-440a-9c3f-fd353d18f2f4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7eab4b-df88-4a59-becd-c053253b561e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1af71d9-a0f7-4c82-a2a2-e008ae0f0321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9859f856-e90e-4e1f-b810-b7feef0d4439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4faa5dd-a050-41c6-afb6-938091514aa5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8049a4a-9380-4947-9864-d3a6a1bdf81d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "992104e9-a5b3-4e00-a74e-95d2b1b46afc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58190bf5-707c-482c-b274-b2986a4e997a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7197f12a-851e-49eb-852f-153be8f05860"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d87f6bf-02ca-447e-982b-8e78a4d03aa7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ebfb0597-542b-4c12-afc2-07e3c52d8067"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9ff80b0-4bd6-400e-9a79-e6f7af2d0ba6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0c7c5c4-cdab-4aba-9bdd-a225e499a1fc"
            }
          }
        ]
      },
      {
        "id": "94497b4c-73b8-48be-9b70-b94651910a86",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f568502e-f6ee-4811-b60f-5027d0741d66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14857e5b-7145-4625-b039-49004167a336",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "77aabd4f-f97b-4492-8de8-89be7aa93244",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab2ebab-4c4b-4c21-8291-ec9aee74480f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0564feaa-841c-4fe2-8467-6660afeea1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fec2a1-df76-4400-ae48-896d6df2bcbb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22166711-51fc-4d2b-9310-c9b8d791f432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f83b1e1-dec3-4e8c-9538-b6112ec2bd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2585fd0f-fc29-4b7f-88a2-85825b701018",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738cc6df-8c4d-4edb-92ef-9eb0d0923f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92aecc67-6711-4f32-a596-7ce9879e01ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03f1ddc-a98e-43c0-b821-b093d1032b2d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0bbdf9-0b25-4593-8258-d94c2fc893c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3078274b-75ac-42fc-b1d0-680e9cee8f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba39245a-8589-4640-97af-e136797ba569",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a42c9b8-fa1d-40f9-a63f-1aba772c4373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa264ded-f7fb-4344-8a65-d326c4d07e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec74e0c-fb02-4ee5-8e24-9beb8c90e9ee",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbc1981-7a37-419d-8439-496eef291672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff40fba7-bb9f-4456-9dc3-5e4eba1b74cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b322be1-763b-4171-803b-1b166e5cd048",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc58bbf8-9136-49bf-b09d-9ba2da1dafc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40487468-5547-4c1f-add3-bbf21eb12d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c035190d-0e1d-431d-a000-802af541bfab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97017891-f35d-474e-a677-4fb1a9f39144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ece984-462f-4796-96d5-435852153f3d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c76842e-0850-4d14-aa8e-49e475362520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6b5c01-6dff-4282-bb23-968a108e5fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21ae870-a90a-40f6-aece-ca319c396043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98d3213-3f4d-437b-9d9e-e7dbe5884cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9662e09f-c42a-4b92-878e-e4cc3451fb90",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd1f1df-5a91-49b9-873b-0491afdbff5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7a5d00-1fd5-4716-a5e8-cfa968705d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94690f0-4335-47b8-babf-0e6533de3d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c89af3-8549-4994-9a17-eb5777c7a167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f004b6-cf46-4f96-8656-f9ae52780a52",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a791ca-4a2c-47e7-b8fc-28698e37658d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20c6184-3d2d-4de2-a614-0ba10a8262a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89501c1-399b-4852-981f-302d345deaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1bab29-7513-473c-8528-b3ec635be664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6983757a-5b7b-4d10-8bdd-17d4e50301c1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fe306a-ce45-4efd-a084-8f9f78daf0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763dc963-ecbf-45f4-9e3a-3ab0cefe4884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1286e45-e9c4-43d8-af32-39281c97fd50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c501be87-6c59-41a8-b32a-b04a9da85a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9573b314-e369-48ef-ae43-cab62605dcbf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e119387b-63b0-41f6-8ac3-25e35970f7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4779c7e-ad7b-4050-8e3c-012c6ecb5ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3493c7-b81f-4ee0-a114-96ee71da5a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28015f4e-cfb3-4d55-bc32-b57c58409601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676a83f5-e30b-4431-9d56-42993c9aa4a1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca20e7d-65b9-4e6d-af8d-c711b5824d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b3035d-0853-42d6-ac5f-e92f84257f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e2bfc1-00b9-4102-98c1-a2fb5b83c82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e45fa1-956d-432a-b7c7-b20fd1243806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0718a60-1d9e-47fa-ad7b-991d3bdea0d3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268a2448-3542-4dae-a7d6-f00f78b4efac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d384e8e-232a-49b9-a6f7-bc556028a371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a866aa3c-e489-497b-9bce-a82433453e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc4f0ca-d294-40ce-b67a-897f92d4e36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202513d9-6b79-4e57-806c-cb0355d36772",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb8e727-7734-4c8f-a405-f0874e21a501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b578c7da-a9de-446e-a304-23aa415e5de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f76cb3-93b8-456d-aeb0-afe85bf01614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615c7704-f97a-4569-b56d-6c2f011c1cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872bd2fe-3019-4212-aabd-ff76456cfb80",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29a450c-77e9-44ae-819b-09db06bb7bfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f4be3a-4e31-4822-adfe-6ba4c79a02c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cdf570-5cae-4d18-be2c-dbf8850404a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba32b70-9995-4f0d-94b2-ceacc10cc4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb94d43-9bf1-4792-8630-e81feb378bca",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076034a4-0dd9-41c7-b353-a410cd906e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad170299-60c7-4b74-be88-aa1c4484874e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65ea1f0-5327-406c-811f-35f5b705a604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923fa8c8-5914-47be-925f-03754ff7af69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850b160b-44db-46e3-8fc5-d94fda02c6b3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1498a886-7ecf-49a1-be05-20335c392dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5610e1a3-943a-4c0a-a23c-2c64dd0dbda0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad191b1c-3bbc-4ec9-a18e-69e8eac0e898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71da9ca-b71a-4603-827f-c16c0f5c63ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83789f15-4c05-4516-a287-86dea0c64f6f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9122a87-d0c9-4897-82b0-76af8e9506b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13f96b4-24cb-45ab-af8b-302bc131db85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3368bf62-1f35-45b8-bdc9-f0312a3a7250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190d638a-bb44-49a7-9064-0c3c3e7146df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac30496-13ea-4137-83ec-4de63486a120",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721d0fa7-b7d2-4998-a017-5d03cac83e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210889e7-f821-49bb-8eb0-0856170619cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17de755e-d456-4678-ae5c-5d502f8ad765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b90b38-7246-4a42-81ce-10ea7f2e3e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7013a023-337d-487e-9548-0c2e81465aac",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b979d5-94d4-4a76-a1df-e354a624d4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce0d7c5-e2b7-4b32-8943-379489672797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5092d02-eff9-4039-a57b-421de8c76050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e477c01a-adf5-4920-92bd-86a16daf9677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba88aa5-5904-4c16-b8a8-313c80b468c4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba4c92e-1d4d-45dd-ae9a-861c49883e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdd0748-cb97-4a8b-aa85-d0aa40af51c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bcdf7f-ac3b-4342-bc44-27429b2b14ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7dd9028-58f5-46e7-be9f-375ddfb6636d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf903ce-614b-434a-b002-79a69aca07aa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b913a725-f56e-4c2e-b223-e5ae112b0d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68fc4e6-898d-4865-8f8c-c60edfe7166a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60635feb-0449-4590-a0a1-32d0193310b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77564521-9b03-41f7-8c62-9c3dd2dc0aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e97092-2486-487c-b5d5-6ec0f53ca705",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d549b18e-c83a-427f-a75e-2abc1aeecc3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ddd269e-c402-4d3c-a65a-40ea5cfb0419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95855461-94e5-4d48-ad68-42481e9c918a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dee1df9-fe1d-4cb7-b9d3-a29740e692ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8e3e18-98e2-44ae-a2bd-34f6fb401394",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4d28c9-46f8-44cb-9b4a-78e086f1707c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fe08600-48da-480b-bd5b-0b871e635e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d272557-9354-4823-95eb-263202ee2d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d6c883-f9e7-49d9-82f8-7576ccd60d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4e4414-020a-4091-9e64-c565c9827e90",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00de40ac-831b-4191-9db1-67c17847ff35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b00a1e38-c663-4d10-864e-371670ff3524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab4cf73-a03c-4e98-897e-7e35d3f9f443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2318fde2-44d5-4574-8a99-77a359e1e44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e298ba4d-4c93-4886-85a3-d61a55f542b3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b5d00c-b32d-4b5f-b805-ce18b563dfe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c15814-ecb7-46f6-bffc-baac3f2bc081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e10b6ea-a873-48cc-a1df-35fbcb25d868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016c473d-6df1-481d-ada6-f168049373f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9b3331-4129-4fe2-b219-7f8ec998bbf4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456fa018-8034-4d97-a11e-91e86fc1d51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98aa983-6b26-4c44-9661-8c501b2b0ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0f854f-c597-40f6-b33c-2051f9f855a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555c898a-eb34-4b23-b871-3b931d1bc9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db19208f-6b11-4ce0-92ff-7a5c990f7353",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad38ec8b-eb94-43d5-896b-d89357a761d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0171e89b-12f3-4f5f-9369-fe7d79882ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb1506b-6700-4667-8b45-2b9b3fead58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8394c4-d1e2-4696-99e9-981d222f06fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b4aec6-1999-412a-9a2c-b78a65ee701f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af8bd8d-d11f-4b7f-8302-27ec93e553a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43db1860-acaf-4910-a4a8-a8f9fd560015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f3e1d6-434e-43aa-941e-14dcd46401be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09c5cd7-cf5f-4084-9028-e10732285905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dac2d5-d308-411f-8a07-7f262bd216cb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2def9e1-3b0b-4681-8e9b-1ee082690e82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf111575-d59a-493c-ad1b-8f801a28f713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38205dba-91cd-44ab-84da-326d9f4dd587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247dd506-95ad-4d29-b240-b245bdf8dc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bc79a9-6bb0-4849-ad30-f83c8b93b75b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8807c7c3-8bce-4a49-ae2a-dfa9b74398cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541fcb9e-dce7-4d22-913e-af4a95996c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaf9047-f2c8-4b3f-8958-25be8984acc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c612dc8-70ee-429b-a1fe-b38de40934f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da91b334-fceb-4575-b3eb-187d26f309ff",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0771a1bc-d2a3-4af9-b828-9b911e32160f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5013ea-3a46-4fcd-bf7a-9ebc3f2a6cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b274e85-ad67-4370-8c49-59f73fa2a65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3a41bd-a465-4b31-9cf6-da5a3544227a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70bac4e-b860-4538-a9ea-5bc9a233c399",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b876eb4b-6f4b-4650-92cd-28414236e65b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f976dcfd-a4c3-4945-a9e4-33859bee004b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7beff308-4b25-4df3-a5ef-077007514260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e7214b-312b-4ccf-b264-9747eab6e2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904740ab-f6f9-4738-84f6-6d64cdb08a21",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a43a0b-ef95-40a7-8e5f-214c054b9f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147e3349-8185-479c-93a3-c84de3e674d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38ddffd-fad6-46b4-9ed8-9adcc68ee284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8702791-cd4f-4d16-afbb-ae26cb183d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef93158-910f-4dd6-81f1-c99888909180",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e360882-afed-439a-9dff-e56d0e2b08d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6510727c-8981-4cd8-ac78-36df5c8a2bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8be07f-5ab9-4127-9cbc-3e3d9edf5bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa96a3ff-5ba1-4447-a4fc-def92a653c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb45ae8-c97c-4f5a-ad88-4fb3c31790cc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ad1075-d768-4d77-a693-959bfbbcbbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f379ccf-07d8-44a5-9817-6aaae2305a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01862d44-a926-4754-9d01-7b572916e9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85fdcbc-2d24-4752-a033-d4b24c057a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f78af32-f4dd-481b-8c47-8d1e8974d395",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6deb6cf-3cdd-4f8f-a580-ba02ada1366d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb8453b-cf76-44c9-8086-da1afcc28e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef68869e-106e-4ecd-84ed-a9302cec86cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8adf3f-8f3a-4df2-829c-d6a0b81a6550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e309ff5-436b-499d-aed2-e34a70d254f2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908aac94-b6f3-43c1-88f5-bf03c17b147c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7f85a0-6351-4c7f-9c5a-8d02745c7a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499a3786-321b-41ab-8660-77adc9a70a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caca7b98-f845-4c7a-85c3-f1f836856977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b05aed-cd75-4bb0-b3a7-ab5c6a78981b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780d2e8d-1ff8-4230-a204-2bd920f2098f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e415590a-e121-4e8a-b2b0-1a37438399ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3681ea-bbc5-47b2-b042-e7368d6701f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0adac7-7d54-4a8b-958b-eb88d6f0374b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc22af09-d91e-42c3-89a0-f20a11ffce05",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919d4e1d-1e27-454f-96c6-9fc678928de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d6f0c8-aa19-4e61-9349-e3f6dd8aa880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3125f4-3bf1-4130-bd93-7ee0cc8512af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11761b86-33a9-4a02-b356-3eafd10a2a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92fa8ef-d763-40c2-ade3-0b865cef65ba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90778ff-19b8-4c9e-a873-17207f2240e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cd2cdf-efbf-40a4-853b-dccdde94bba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8744b14-4eca-4f5e-b0b0-403bdeb9ee5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38fa4ae-2261-442b-8232-c0929918c9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049b056b-67e5-4ebc-b42d-7f37b9210e07",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e4ca9a-0ef9-4a55-8178-fcd39e8ee5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c63e8a-269a-4961-aab0-d2feecdbe323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5894b321-e894-4c0d-bd9f-1a9e8bad4737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290b3fac-add8-4daf-ab44-5c92e1e38d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6827b-c829-4e77-8059-9de2563ec963",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80c14c6-b73b-4bb9-9436-7890eb1409d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd923d8-3b2d-402f-b7c7-1f21a39a5f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f18d6c9-8436-4363-bed3-d018534c8b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819312c0-00bf-4a6d-9d57-daa9cddcdea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e23842-1e12-4fd3-ac8a-dcad8dce6c51",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92b871d-15ea-4662-a116-e286af989c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debbf012-233a-4c9a-9702-ad7a98f880dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc0638f-0d91-4474-9fb5-23e3bddf8ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c814388-25c9-4f7f-b1b6-44fa9f7f9058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f99879f-95a2-446c-9915-b0fdfa7da1d1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a28e38-d62c-4a4b-bb88-e62734fddcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2892e9-2f56-4ee7-9f0f-dbbffc73dc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0fe728-4fbe-4408-b857-3467ca7a6ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff14ab4-751c-41d7-9d8b-984f30f1c58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbf7677-8d59-4a99-8317-4ebceb0d1fa9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2fa471-0264-4a97-935d-dde9a1241f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe76d150-fa69-45e0-bc35-fe73da99a740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f663bf4-8e8a-4f21-a285-512ea77216d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f8764c-5811-4622-8349-537ab8939ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5af4e6-97aa-455b-92fb-5f4d5ea25fb5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcdb52f-189e-4059-b3e2-8c8043ae7c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c28162-e171-4f96-a308-ec021ff360b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f640f2-e50f-4693-a5dd-87dedc9f7c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4304de-c974-4a04-8b5f-91a17b4f1e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b5410e-f360-444c-a4e5-7a3aaff4d6ac",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0c035-093d-40a4-9af8-ed2c3d56bc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dce138-6ba7-4ba3-8c0a-d8450171a366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e1a6d3-2f95-445e-9671-bf9f7ed9000c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30f58e5-db14-4fa6-be42-c28d4182c716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfbb2a7-eb36-4b32-b6ae-a751cbc5047d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcc1703-fa57-4903-ae50-aa124227f4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c75241-0f81-4b8a-9c55-cacf7256996b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a113194f-d373-405c-84aa-12e5ac711e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea21c08-794e-4eeb-be35-64fcfa6ac1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a9c171-f723-4a65-89eb-6a3de7ca54d6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c629ef1a-0e01-477b-ac52-81b28366ac8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb65289d-e48b-4f40-b720-dab0fd6289a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11dda05-7c55-4aca-9686-b7d7f19b9612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5626bdda-a344-4809-9ea7-aadfc9a7c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc2236a-1d68-492b-832e-b19db57a75b0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4519a5ab-31cf-4c18-bcdc-c55bcd26153f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce05c056-6dff-42ab-83f2-a7e353a0f17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a76bed4-d34a-4a83-b2a3-48fbdeee862c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6767e6d9-3c3f-4598-a0f9-ab211602b452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372956d9-2ea0-4d4d-bd0d-1e43aec26887",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53313d5f-6033-45bc-8c8c-4e0dd351fb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60348ee0-95b3-41bc-8fc5-9459c58efc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d34d1b-0d67-415a-8aff-648eeb32427a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae35f09-4264-4502-a7ab-8b34eef17493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f5f433-1926-4fdc-841c-7b830090258a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421061d9-0954-436a-8433-880e560596cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4608b95a-1bb4-4b21-9ae6-393201e03e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced7af53-529f-463f-a0d6-b7006c2236f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df2ae92-96a0-4e89-9fa0-63a23964290c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792390df-4045-4ef4-85a9-83cb99f1451d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac36e33a-3445-4ab8-8eed-14bf8b5f29cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22973c5-3b28-44ee-8d82-2769d0d27341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e250539-bc18-4c40-96bf-cf2781cba8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d74df2-9914-4747-b6a1-a82d37a4607b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2c93df-b307-4c85-b20e-fb2a30950102",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7bc976-5841-4e62-890c-4576bca75ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb609262-f16a-4ec9-9e5f-605a34742225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53f768a-8037-4ced-9809-4b1b56070ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192a5177-81e6-415f-bf0a-55edaa50d7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fb2a7e-89f9-4e6a-ba42-99facf9b0254",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdbbba9-d6ba-4c42-afca-e3c5db519dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606c96e6-f7a5-403c-8eff-a12db49f9984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768a1031-1ac9-4013-ba6a-803ba1b74915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147628ec-df1e-4eb4-a5a4-01cd9e71f4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6defbc73-4266-46d9-a514-06d9c78f633b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669cfe11-d457-43f4-bf23-1da93c264f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0702c348-c9b5-4a8e-812e-cd4da130c950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d775be-6f13-4c22-808a-bde6f38268e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cee4159-dca4-49af-acca-d7da6f6dfa12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fdc22a-cc91-478f-8427-4c59c157c273",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f7d04b-5e20-47b1-9a3a-41898408c61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cba2784-b9c7-4968-a426-04b3eccb7a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8419046-fcbb-4a50-be72-7b9cebcd9039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecea622b-a338-4606-a1f0-37502b72d3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9297a034-fcfe-4ffd-9d0a-4b0f97797ce9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02e48d9-580b-46a2-8fba-9bebe6b2070c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c0eef7-06c9-4c94-bae2-3e9dd36699c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d02c7f-6b72-480e-baf7-759948e2687d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2334c20-5f43-4bf8-8df8-5cfb56b16d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6b2c49-0c99-48a7-ae7d-4c3eb2413fc0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc66b46-d5a8-4906-aace-6ecbcc98bb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f4abb5-de5a-4e33-babd-8d980808d67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73a8124-f1b4-4456-8be6-a767f0a8ae6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3b8da3-2e06-473b-8b10-1b53493cefea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815aeb32-d7cc-4c37-becb-702fbafb1a44",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69108054-872a-44dc-a1a7-f08cb088a98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084cf6a7-dbfd-424e-ac1f-ba87cb142fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b227f74-3b23-4ad8-a28b-0af36e7735ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f89ced5-33c3-44b7-8584-66d8c266fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3a5a89-3272-4107-a49b-4222e9185272",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72570bb-87b8-41e2-a3fc-760f43451af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfe43bc-7e69-4456-8849-7995f2bb70c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d913374-3e03-4bae-9cb5-bfe1156b4803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f978b2-1b99-4ed7-9625-2a89098b66e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8f151c-dedf-4166-895f-de08be0f471c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f0ab2a-e6ee-4f58-adad-dcd895ed87b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c930d0-38e7-4eb9-837b-b84bee1f0dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5d3156-db36-4efb-a074-f204e2d0c53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836ad5a4-25b0-4e03-99ed-3f4a4b954120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d839ac31-785f-48ba-af8f-9593f9b05b1e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f9bd8e-6416-425c-b7d9-641b8b61c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2fdc997-ef9d-4d83-a0af-2f95d266472a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0935d49e-a9b8-4483-9f40-d5966e13a5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58164841-a655-4d7a-bead-28d7bb76f2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a60584-d34c-47a2-962e-5eccb5321508",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b3ee84-f9e9-4a66-a2e8-9d5dd380ec90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa861761-1918-484d-95bd-5b474afe35d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bdcbbc-dc91-4350-b24f-ac73285c6cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fdae32-7497-43d3-a329-2d4085943d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe68599-686b-434d-acfc-340c17d467df",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f759a562-beac-4a7f-bb6d-a60770e84329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529ceb29-1237-44e7-af03-0bff62071984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22581f96-e938-4990-83df-07d07faa9733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a2e4c4-9f1e-4d2c-bdd2-bb07107fa372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f74bcbb-7f6f-4dd8-bbbc-6cf7be92e7be",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21c8ef3-ffb3-4a3c-9fb2-181311b3ffe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5371eba0-8dea-41d1-93f5-90e006b38e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08db2538-ed71-40d6-939d-1e533094708b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c2089d-ceb2-4d40-81ef-425242097a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389bdb3c-8f4f-49ec-96d5-ece3eb733b81",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefcf696-13e4-4baa-809f-6b8bed3f3f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e35268-7cec-46f2-8663-b91a5fc2ad69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122fa8e1-2e74-4a1d-a75a-d5ad5c07d461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32751002-7326-4e37-848e-1c2d1a4a6129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a874ef-ec58-45a0-ab97-9240a77b62ab",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4553fc-f95f-4639-8b6a-5d357d5b85f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a7b746c-94a4-4ee0-a4ff-ace1a3456501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1041be61-6997-49fe-968c-7f2b17e4f3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff66e05-9713-4600-a98c-713c4ccdec4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43a67e2-4ab2-4e59-8ab8-ddf5e0e3660d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19628f6f-2360-4535-8a1f-1d68ba16efec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb45877f-65e2-4903-9722-1803a892f02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992a3428-ec9e-420b-acce-891a425b2f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240e5fae-dfac-4751-ba0d-adb843ea423c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02d3007-9928-4f6c-85f6-399c16808071",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3f1fa5-497e-4f9b-bb50-ca928322a950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6579f2e-66a4-441c-8adf-c2cd1351b4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b37dfa-bfd0-48bc-8539-75bffca7997a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5914620e-28b6-4b5b-8f7b-3566752e7e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b94838-420a-4384-8fd8-bee3b17a02c7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2482069e-1cc0-46d0-a71b-8ad59e9268bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4e204cd-672d-4207-95fe-c6a94f06e73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d137232-54ba-411d-9bd6-3f5a8f2f99dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064ccd69-2872-4c2a-93a2-8f37d4bfac77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834054bf-7fd7-48cc-b120-4111d45462a4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c30057-8576-47a1-9aa3-34e0c5820bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8585e076-99b2-457f-a577-5226cd47c2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5e6fe3-01e7-46a8-a281-075850e180e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5792e29-c4d8-44cd-89dc-91d3072f588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43571765-4f64-4eb7-9212-b2ca407c9534",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aa0c9c-436a-4edb-b1bf-46446d730cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e72f49-0996-4787-b7eb-5c379e8011a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdc3466-a147-4239-b313-293b261edaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c9e49c-8143-4b0e-8286-b79fb70fd672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd78f37f-8149-459c-a594-a32240a194c8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401e0d10-a85c-417b-b5aa-ab68305ebd5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850b78c9-168d-4711-bc71-3db514468551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8e6511-b52b-4110-a12d-48c18fb69edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ad387f-96fa-4b82-8e47-69643cbe29bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0124e5a-6603-4e58-991d-7ae89c4fd1a3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96fe631-256a-40c9-9564-2053600968e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bdc5ab4-4521-49a6-b998-58dd872c614f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72029406-f139-4f87-abf5-6b94a6ce6ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6eafd6-c603-4c09-98d3-d40647b2fbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe8bb32-183e-4943-be51-aff5bbcee7f5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875a71ef-c769-47f9-b66c-a884493ae25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a25d016e-7d29-4b88-976b-8dc650b7b672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5fae6e-3e0b-4df4-9770-ffd1c6e54304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92caa44a-3289-4986-b39b-a41beb20b710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b457fa6c-200f-4224-9255-e2114aa459c3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61104eb2-8d0a-4d3b-91de-6d5a819941f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e687d0b-3037-4c0d-9973-c23d50039634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8274e2-d768-4bd3-8554-740efce257ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7747af8a-f3e2-4c43-8412-5b907009fd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43331dc1-6874-433c-990a-42297b56534c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f927ea-3bc9-42a2-b78a-23ec74283dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd53ca30-0098-4377-99d7-21fa6abaeb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74519641-0142-45dd-a23d-227010091464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cbeb32-742d-4e68-a4f6-73837073b4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089020aa-d0ec-4cf2-9f19-62005b61aa50",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61be7b23-d493-4b7e-86ea-f12860485382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a50109-97b4-4db2-8b27-a755de7d7f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a3e50a-6046-4c4c-8cfe-579802d0f2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63051b90-863b-4f6f-b0d3-7dc35ab1d356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85db229d-291d-40ef-870a-0a15544b3acf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4b4384-bb99-4eb6-ba1f-681990ad9fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e09fa8-1b9c-41cc-904c-01d115fec184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0998e1f1-fea8-4873-96fc-85dcd1225e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cfdb6d-f3c0-4689-a0b9-1974cac6c5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84871b84-306f-4d07-adf1-c347a120f4b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b47fe16-106b-4315-8ca5-44e72f2b6157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d2fb05-0bda-4496-ab4b-ac7cc3d3c682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ac1782-583a-4df4-9617-0f89977056a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28eae153-8b24-47a6-b1c9-9e45180ad382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8ce45a-ee82-4894-b728-d55772710861",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0012fde5-e822-401b-8c8b-d9eb945ba770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00024b2e-ea36-444d-89d6-8e6a6b655bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0ad7fe-4d9e-4e6d-b268-7582bf5b221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c243270-023d-4068-866b-6737dab8d079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8925438-1677-4b13-8a75-156ddab39d52",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb796376-1cda-4460-9bbe-351506a692e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14bf3e81-638c-4c47-afa5-276302f585d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a2e519-7ba1-4a98-bd22-172bb39b4b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3d15d6-4812-45fa-83f9-fe2209526c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b73956-537e-411b-b142-556d69bf773e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdc90e9-5afd-4561-bbe4-5c38c740606e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd7c7ed-23b5-45fb-acbc-415892559884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f747971e-8cbd-4df2-8754-36141aed9416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac4658d-35a3-443f-832b-02f80b0db9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44484804-dbeb-4301-b6b9-34ae0ebbc6be",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9064c12a-4378-4e16-9731-d6bf36d89c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa852554-df9e-4d95-bfc1-18f8ff5edc21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fa9500-f3bd-4eeb-8144-d9e449e6a28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54dcf25-b382-46df-8d87-7a9b95a8ce76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa142b5-8f28-48b7-92e7-b6df1abc80f1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bccc4bf-43c8-4a5c-8b0d-60b65eb5225b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc30dd88-20c6-43b3-b1e0-c5b6cad9f977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d08fec0-9788-44a1-aa45-aa4b50f4c1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0242c2e-153e-4702-a57f-decaf442eae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a83604f-43a4-46ac-9cc0-86b56a48d36a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13b1d41-2298-42f2-ac23-8d05287eab4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45cff9de-5d41-49b7-99f2-590b699bd104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e13f688-1eb2-40d3-96f4-f06766538686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b30634-8d63-4fc9-992c-869c567a8b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65947f01-02fb-4323-a03d-b86a25daee5b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9172d4a4-c044-4410-b7a4-81feda14c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c7804f-83b1-4bdd-9de9-da1cbe936aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bf8b66-2836-4b2e-8e43-eea67d656aac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0038ac-4d11-480a-9246-7b7db5efc314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4329b822-3567-4e18-b1e9-56233267cd6f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28561731-5e63-453e-86b1-2ba9c296c760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cef89fa-334e-4720-99c3-a471d6ff072a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311c20dd-3332-4a4b-912e-2f57f9a9f4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2910375f-3c6e-41ec-9067-589b9468a21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50379870-e1fa-46d7-a7ac-c4e01d750441",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225fd190-ca79-4f28-80d2-f8417c207193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5465a28-06cb-4ee7-af6d-2d19639f1530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7224ac29-1b81-47b1-9124-b1687d7e390d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb7daac-4651-4022-9266-a3a38bd0170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0eefd3-c17e-47dd-933c-c53411c1f256",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7069c7d-af87-47c4-9d33-14cc88357790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e99ada-633d-41a2-b121-f4ba9bb4234c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c8a5b3-626e-4636-8705-f16cc0b2072f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff993dd-85d8-4530-a94d-ff81addcd729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b06022-e5a7-4a6f-953d-b206a1317880",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b6179e-ea0c-46b6-bf10-a6056d090f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60cd52b2-fed2-4243-b52a-02953710e776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1390f33-bd06-4abe-b02b-ed06d72cd421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476a94d1-4617-4d7a-a4c1-bf61f28210a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86003f72-9b0f-4679-ba99-95d5f7c1664a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1609e932-cebf-4c9d-a597-445e79aa25e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c14f735-da43-4566-8e2e-41a32dba7da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f1290b-4b12-4f15-85fb-87982205e508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d07e20e-2339-4a5a-850d-c5d01d367c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a8ab12-5bd1-4c93-9ea2-17c30b364f30",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f12be8-c592-40d6-9272-d1bdd76d8ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af28683-2a04-4486-8e2a-618f29593d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cec04c5-df4c-49cb-b7a0-1c002a0f514f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd48606-6d68-477a-8397-1155dab5a43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ba5cd0-2301-417c-9ff0-b027b68c00c6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbad5db7-caeb-4146-a9e9-64e48c081d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0afc3c5e-a4d2-4bab-ba7d-79cc5b881568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf3bd87-5811-460a-880a-da0f685a194b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecb6316-3c63-49f6-a668-bbb235c3ef56"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b8adf3b-8705-4887-8360-a2d2baf61282",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "533d89fc-8a7c-454f-9378-13dde755126f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c9733fb-d335-45c0-8ffd-75668adb75cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63042ea6-7e00-4df5-b4da-aa56b6d85e42"
                    }
                  }
                ]
              },
              {
                "id": "8ac9c517-04f7-4f0f-94a7-6ada0dae727e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8af6d4b0-76ce-4e87-8aa1-3d8316ce859c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49d747d-7091-4d4b-ba41-6b8cb7200f34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30195f83-121e-4ba6-aea6-5a6fc3eb1d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756bacc9-fe3c-494b-b3fe-558325223f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3edefe60-cec2-4c85-849e-e2a931c79072"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b72a698-f60d-4d57-a42b-de3e2e4c6b19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1c59b3c-8415-43af-a1ac-95a830c1cc65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efc6bee7-17fc-45f9-b4f4-a97eba69e663",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49b28686-a19a-4da5-8635-8692c14befa4"
                    }
                  }
                ]
              },
              {
                "id": "1cca41c4-0cce-4556-ad7e-d8703330f62a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8f88ea91-a434-4abf-8646-bb9d747131f5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc619a9-cd7b-4f56-a29f-09066673d389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e0d8f13b-53fb-4d35-a105-1d8ae8db6846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fcd564-8c0d-4375-8183-8199d14be213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c2b913-4bf5-4f05-9356-c1a47e48155f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "095ef5cb-6d4b-46e3-bee5-6d06bfe7306e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b64729e0-5187-4900-8e77-4ea65ba1f3f4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c19a1bd5-dcdc-4a3f-879b-873aaaa95307",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4c5ae2f0-42e4-47ec-8c75-fe4b7b25f0f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e169dc9-8e4a-4a64-89e4-4cba25da0eda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e0cb489-1225-4441-a79a-00c07bf3351a"
                    }
                  }
                ]
              },
              {
                "id": "b244bbea-c4b9-4327-bb09-ae0713ee07b4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2915bf92-6796-4681-b699-31609cd95dee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "567ed76c-cb6b-48c8-9bba-e430085e9606"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eba97ac3-0780-42de-9653-a890ebdeec40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "696c3904-8584-491b-b37a-5eeaed91aeac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4459f8a6-4b95-4592-9005-d4e7db3367ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e2e85dec-988b-4cb2-9471-b08f9f6c4881"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f96f762a-45b4-42cc-84c1-55af5c8e65bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "407b5c06-5c05-4ab8-a1c9-216e31a65444"
            }
          }
        ]
      },
      {
        "id": "ae8fe70c-b6ed-4f7c-8d9e-4776d956b43d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0aed6446-484a-4283-a475-c74fedf98677",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f889c38-035e-4fe7-b9d7-3b90419dff15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d711f13-8453-462e-92a2-2b9ccbd196b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca2c56e-dc9f-4fd0-ae14-f9fe02111e7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "91215bfd-ddc5-4640-8807-3f8036076615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdf10c4-fc6b-42f1-adaf-684ee820c98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f8e4440-9403-4c95-a554-15167360b895"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "281b248d-0c89-468d-8408-8c23c8bfd776",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02b0ab8c-22e6-4db9-b294-1a4a74105134"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1166409-2b44-4ee8-8538-196cc9512c5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9185dbb-759f-407a-91fc-82ad5e6dca27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59fb498d-2fa3-43fd-ba12-fbd288ec6c25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b0dab7c5-6084-460d-93cb-79ba187651d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8200ab8a-07f2-484b-b22f-d6057ced9bfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b83eb69-41b2-4dd7-bac0-98984b50b257"
            }
          }
        ]
      },
      {
        "id": "0156876f-80fa-4864-a5b9-309005a72903",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9baa762d-723c-453e-805c-03bc9fe79cbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de236856-b7b8-4ec4-924e-1d4ceaf3c20c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16dea28d-0455-483a-9882-44c2f4d3a5e5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5d7dff-b327-4b7f-a143-2571f118911a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b00763f-185a-4923-a590-ab2d308e8170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc06c6c7-de27-42d5-b729-f44b9d44dd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86813c9a-2da1-434f-b0ef-a690e39ceadd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a0f603d-9b8c-438d-8565-55e78336b41f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a65a3e6b-c6e1-44ba-9c25-a39b4d5d4ee3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b7c50d0-6cce-4902-bcba-b4f185b9d528",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cb1e589-952d-44f8-9be7-316e1a279b76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f414387-7bb3-43e5-ac3f-f702c3607e31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d7255f9-16f2-4a08-b537-6e54b290cf33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1568ccda-9dae-4b23-aa53-4c8d9e2df01c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef32ab55-3e7e-4a8b-8c81-60423354c3f4"
            }
          }
        ]
      },
      {
        "id": "f6c131ff-2842-4005-afd7-d5b86368e1b1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0680d730-acbb-410b-85f6-0c8a2a9d2c66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb7d4071-01e4-43fa-96d1-9af9c082bf8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1048c53c-fb4b-4857-999c-4b64e39ea21f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b15f036-d839-42b5-bfd4-b7b479f729f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93e5b55c-ee0f-4a5c-a83e-ac6bd585a377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fc0c93-a4cb-41ac-9101-a3883705226e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28e6d602-1f05-45f2-bd9d-819dcc61a5e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e84021bc-c7dc-419c-a267-c50903e5a779",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2947c39d-e484-466a-8c30-64105dbf10b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b363e07-609f-4c04-98b3-8d607e7e7ef3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a4f7b73-f29d-4276-adb4-77057a8464a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28dd9687-83c1-4740-ba67-e76a651e615d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "47447bde-f90c-4b82-854e-49dacff8c7c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f07d82d6-cd42-403d-acf6-ca7850bbd07f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb3a38fe-ca93-4711-aa6e-c5df4966e79e"
            }
          }
        ]
      },
      {
        "id": "90fcfb32-9ff2-4ac9-b1de-fd985456ebe4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fea27d93-07ef-4319-b472-03c47c72236c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "320cd305-e769-4e20-b49d-e103a16c9de2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2e6be213-e98a-400d-82ea-ce71c738a5e7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12c887c9-6983-45b0-a4d4-5a4c530bee86",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a59ca94-d9a0-40ee-bdc9-b3b37d1249ff",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 84.53169014084507,
      "responseMin": 11,
      "responseMax": 5027,
      "responseSd": 459.78179421494013,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692837097538,
      "completed": 1692837133196
    },
    "executions": [
      {
        "id": "55de33c3-c881-4e8a-8ed2-311279572e02",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bfcc1050-7d88-4a43-b87a-a46fcf553710",
          "httpRequestId": "99c955ab-26c7-42d2-8567-99e3df95401d"
        },
        "item": {
          "id": "55de33c3-c881-4e8a-8ed2-311279572e02",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b9e0c2a0-debd-4d4d-af67-1e423b2bb7b3",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 0
        }
      },
      {
        "id": "4f1a82b7-ef4d-44b9-aa0f-ad7c706605fe",
        "cursor": {
          "ref": "7abdafd5-07b7-4fa2-8519-ea26d2a9b3c9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3ab6e7d1-2abc-484c-925b-a6d9abd26629"
        },
        "item": {
          "id": "4f1a82b7-ef4d-44b9-aa0f-ad7c706605fe",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "89fbc7e1-9fcc-4532-bde6-6eae29a7a8e0",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 0
        }
      },
      {
        "id": "4f70ffbb-28c7-43ca-961f-7e4b65cb4702",
        "cursor": {
          "ref": "8039d8fa-fd14-42da-8a3e-c5837c38c66f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "260b4627-74e4-4299-b084-a00799ad9893"
        },
        "item": {
          "id": "4f70ffbb-28c7-43ca-961f-7e4b65cb4702",
          "name": "did_json"
        },
        "response": {
          "id": "10fefe55-db0a-4299-a719-c3fa277c22c7",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c35d74e-9412-431d-9c56-69a306f56a07",
        "cursor": {
          "ref": "df108c01-2653-4082-a5f8-bcf4eec04059",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "23e58ca2-59f3-418c-a680-8bed933e71d5"
        },
        "item": {
          "id": "3c35d74e-9412-431d-9c56-69a306f56a07",
          "name": "did:invalid"
        },
        "response": {
          "id": "93ef8779-c006-4d66-b66b-62d57e69818b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 988,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c35d74e-9412-431d-9c56-69a306f56a07",
        "cursor": {
          "ref": "df108c01-2653-4082-a5f8-bcf4eec04059",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "23e58ca2-59f3-418c-a680-8bed933e71d5"
        },
        "item": {
          "id": "3c35d74e-9412-431d-9c56-69a306f56a07",
          "name": "did:invalid"
        },
        "response": {
          "id": "93ef8779-c006-4d66-b66b-62d57e69818b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 988,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca96be79-bc1b-4536-98e6-a17c44d5daff",
        "cursor": {
          "ref": "93ad9bec-af89-480b-a660-e3d719985c0e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cb6b496a-4376-4ceb-9ba1-f2333491a268"
        },
        "item": {
          "id": "ca96be79-bc1b-4536-98e6-a17c44d5daff",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e9db5794-f642-41e8-8168-971f38c8e076",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2db64c1-d632-4e76-a886-d99d694cac86",
        "cursor": {
          "ref": "89145c98-e878-4783-ac75-153355c285dd",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "999057c7-3284-4f57-b9c4-e9b40eb32d55"
        },
        "item": {
          "id": "b2db64c1-d632-4e76-a886-d99d694cac86",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "de2d82e3-42e2-4a63-9cbf-e8c5202b7c1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fab850-de88-4631-a3ad-8c2996881faa",
        "cursor": {
          "ref": "edcba24a-7e8a-4328-9a1c-f5d2554fc28a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "864d4500-d420-4475-9fed-a876abab21a1"
        },
        "item": {
          "id": "59fab850-de88-4631-a3ad-8c2996881faa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e103ff4d-80aa-46d6-9f18-08b7c96df40b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c61c721-f82c-4d4e-a0c2-4ff093cbbcad",
        "cursor": {
          "ref": "0a0b777f-9f5b-43ab-bb82-537fd7486627",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8ad5b470-d99e-4407-87e7-83c16d7ac562"
        },
        "item": {
          "id": "0c61c721-f82c-4d4e-a0c2-4ff093cbbcad",
          "name": "identifiers"
        },
        "response": {
          "id": "6f3e27b4-f5a1-41e8-b138-ca94d4c1a1cd",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d895f78f-5c6b-4e06-aa7e-c83c9a00346f",
        "cursor": {
          "ref": "7c64f194-fca4-45ef-87d4-5290609b42bf",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ad3aa824-8796-4f99-aa2d-fd42d424bc0d"
        },
        "item": {
          "id": "d895f78f-5c6b-4e06-aa7e-c83c9a00346f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f634f786-e1d6-4d1d-b537-33c58f570956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643640fc-7187-404e-80ea-71f2869c2fcd",
        "cursor": {
          "ref": "309a30b7-2672-4fde-acc8-aecceaa696a3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "61aa9c7e-5695-4db3-b1f5-1960663e05bc"
        },
        "item": {
          "id": "643640fc-7187-404e-80ea-71f2869c2fcd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "15c93459-093c-4805-9f96-26b76648a637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51795805-529f-42c6-be1b-068f98c93e91",
        "cursor": {
          "ref": "e6e30b77-fbd6-473a-a8b0-99bd2d038c53",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ff81b725-fcfa-498c-a984-5dd0573e3716"
        },
        "item": {
          "id": "51795805-529f-42c6-be1b-068f98c93e91",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8c7c17de-b837-4e94-a852-cb6215a5111b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af6e119-5547-4d57-87e3-519975552617",
        "cursor": {
          "ref": "4fa2af85-7c5f-4b80-8e20-ea22041194b0",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c0f661e9-d4f4-4a52-85c6-14f23d720322"
        },
        "item": {
          "id": "0af6e119-5547-4d57-87e3-519975552617",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e4e85a4e-b0b4-49e7-b88c-838a2a142c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc0debf-2284-4583-a4fa-20fd2b41d60a",
        "cursor": {
          "ref": "a9d55b2c-b24d-430e-a855-8137e854123c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ca68b869-b1cb-438d-a575-734cade1803d"
        },
        "item": {
          "id": "5dc0debf-2284-4583-a4fa-20fd2b41d60a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "276a1ae1-379f-41b1-a52b-fce1e1bc9779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8844ce22-9e46-448c-a7c2-c2a0e8cec424",
        "cursor": {
          "ref": "4af1d193-e035-46f6-90ca-348b0c94ae7d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a15d391f-055e-45e8-bfda-393097aaf501"
        },
        "item": {
          "id": "8844ce22-9e46-448c-a7c2-c2a0e8cec424",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0c901044-13a0-42a1-b482-e3f6df918568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d596abc2-9b36-4c9f-bb23-7fb375122d00",
        "cursor": {
          "ref": "033a8dcb-5194-4cdd-b1d4-d3365b9f3585",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3583a2d5-0f22-4eb2-ba7f-f32631b13b1e"
        },
        "item": {
          "id": "d596abc2-9b36-4c9f-bb23-7fb375122d00",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "81b32a43-1972-4f81-a762-748328589e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf8a323-26ff-4060-83d7-3d5a5e4b8045",
        "cursor": {
          "ref": "54d86e2b-b692-4a9f-b14f-d8276bcfd595",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6be026eb-f171-411d-8779-cebec80754dc"
        },
        "item": {
          "id": "aaf8a323-26ff-4060-83d7-3d5a5e4b8045",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "61f6e614-3a09-44c0-a4d5-7716b1ab69f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3573604-d7ae-4f50-8c27-b119a505a844",
        "cursor": {
          "ref": "699c43d3-172a-48f5-a939-0802a5fb0cbc",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dafef709-6f36-4d46-8d8a-6aee9588de2d"
        },
        "item": {
          "id": "f3573604-d7ae-4f50-8c27-b119a505a844",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "032745cd-08a0-4132-b155-e428c252a61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9ad6f6-b08d-47ad-ae66-7661b5ba7387",
        "cursor": {
          "ref": "f3cd4956-c7d0-49b6-88ee-654f329c5875",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f142623d-30a3-4d8d-8082-bb699827b1b4"
        },
        "item": {
          "id": "ad9ad6f6-b08d-47ad-ae66-7661b5ba7387",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b233e1f5-9e9b-4ab0-8d74-d53ebd902535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0e2300-e4f0-46f5-82f6-01ea68600835",
        "cursor": {
          "ref": "34e0c8ec-b73d-4f7b-aafc-ca0941fdf5e0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aecfa38e-29b8-41fe-af7c-6af3bd75c06e"
        },
        "item": {
          "id": "ca0e2300-e4f0-46f5-82f6-01ea68600835",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7f8f1508-e7fa-46ce-bcf2-182585c204e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7871622-0086-4070-baa5-48c6196cd2a8",
        "cursor": {
          "ref": "e942b569-d937-46cc-bc6f-c03eb325bf2f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "31db4897-9439-4257-86d0-54db27d6efdb"
        },
        "item": {
          "id": "f7871622-0086-4070-baa5-48c6196cd2a8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f60aba36-3114-4dce-af0f-a0a5a1968c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f35a06-e135-4700-9fc7-38dfd66e1841",
        "cursor": {
          "ref": "fc584844-285a-4238-8db0-14cd0761f8e2",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "034df295-73fa-420d-b3dd-c7bb102e728d"
        },
        "item": {
          "id": "a6f35a06-e135-4700-9fc7-38dfd66e1841",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0ad29525-af80-47cd-96f6-4448f1f7aaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b799462-921c-4119-b462-9c9ddd166a30",
        "cursor": {
          "ref": "120da0f0-3b50-482d-b7ef-eb18017b6208",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5643c688-d90b-4b46-b6d6-290d9f8fbf24"
        },
        "item": {
          "id": "8b799462-921c-4119-b462-9c9ddd166a30",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "16c13f9b-30d4-4fc9-9115-d7441c5866a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a452eb57-f4bd-4637-b9a7-fb9c05049d5a",
        "cursor": {
          "ref": "d1c2fc26-9c1e-45b5-9197-8fedbf3f5b93",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a29a1ade-793a-4743-a90b-9b6c6a3e5948"
        },
        "item": {
          "id": "a452eb57-f4bd-4637-b9a7-fb9c05049d5a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5d51f231-dd53-481e-9ad5-70f57d5e7844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ec4581-a977-4af4-a615-aee4156991b3",
        "cursor": {
          "ref": "f65de66b-acf7-4497-8ebb-847cb2ffe950",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d8782360-7c30-41da-8025-c48c5e66e613"
        },
        "item": {
          "id": "27ec4581-a977-4af4-a615-aee4156991b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6d4846b1-4cd1-4ee1-8ec5-a6bbdf8c730f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10719704-344a-469a-8208-37296ad9519d",
        "cursor": {
          "ref": "939ed4f8-7aaf-477b-b6de-f673f2e4bb29",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "76a4856e-7207-47e9-b57f-dbcb3ca47155"
        },
        "item": {
          "id": "10719704-344a-469a-8208-37296ad9519d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "61f51cf0-ad0a-4403-bdcc-aa9ce6bb5fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5104a599-fd3d-491e-9b4b-3ee02c8d8fed",
        "cursor": {
          "ref": "f7150ccc-49ad-459b-9bc0-7df5dea18e37",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "120ccf6b-f407-4d74-bdb9-75d2b04ab263"
        },
        "item": {
          "id": "5104a599-fd3d-491e-9b4b-3ee02c8d8fed",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b03bb308-e629-4662-b6e1-80e7456450b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f0d0b1-3093-47b5-b964-19a289624b35",
        "cursor": {
          "ref": "d96265ab-1d39-427c-8e59-1acaae76a8ae",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "963bcfc4-a8ad-4a62-b615-12fcd21bad8f"
        },
        "item": {
          "id": "c6f0d0b1-3093-47b5-b964-19a289624b35",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aebb27aa-b637-4e6b-95d5-3646ca34f072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fc72e7-fc84-46d4-a7b1-ec80f627f89c",
        "cursor": {
          "ref": "62ed4adf-7bdf-4bb0-b815-b6c67deda93a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "226f5826-37f3-4a4e-a9de-52389f9812c5"
        },
        "item": {
          "id": "02fc72e7-fc84-46d4-a7b1-ec80f627f89c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b59e53ea-16a8-467e-a6ff-b6b3b9b21569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f8cd2-168e-493b-8eba-eb6055bb0d15",
        "cursor": {
          "ref": "9389e7fc-60a6-49ac-8f37-a116bf77cca2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b04c432f-eee1-4114-96c9-03948d6cef25"
        },
        "item": {
          "id": "050f8cd2-168e-493b-8eba-eb6055bb0d15",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "effe8e5f-ff0e-4c8c-bb85-6a81768dc60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b9e578-f738-412d-a456-e20da0ff8b5a",
        "cursor": {
          "ref": "d3e28785-0385-4b51-a5b1-19610273fc3b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "183b7637-52dd-44ff-9b9c-dc442814ead9"
        },
        "item": {
          "id": "e0b9e578-f738-412d-a456-e20da0ff8b5a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4b45ada0-7eba-463d-91f9-50af701128c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20439f7-5617-4769-a566-b1b9a3f98aad",
        "cursor": {
          "ref": "4d0c9560-2517-4289-8a29-0d1aa0b01b69",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "80a6fe5f-4958-4d05-a5d8-b269acf28ebb"
        },
        "item": {
          "id": "f20439f7-5617-4769-a566-b1b9a3f98aad",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c5985e63-6b69-4adf-9f0f-1a6ec43e9f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ffad1f-0f8a-4baa-ad8d-7f870d0382f0",
        "cursor": {
          "ref": "79baea92-f105-4743-ad8f-30e58aac544a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5b39c5da-be71-4932-ab32-bf0693ea3a26"
        },
        "item": {
          "id": "85ffad1f-0f8a-4baa-ad8d-7f870d0382f0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "adad5295-19cc-4d06-a5ee-e84a9d1c69c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc21348-697b-447d-be8d-c8c0ea0c7bfb",
        "cursor": {
          "ref": "ccd627bf-74df-4adf-8aa4-00507ad40326",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9c925655-9146-4126-9bb8-7ef53594c65e"
        },
        "item": {
          "id": "0fc21348-697b-447d-be8d-c8c0ea0c7bfb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "48e911fd-d193-46f7-b822-e91e45dce8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330425e8-8343-463d-9d84-03bc37d2c342",
        "cursor": {
          "ref": "79f890ac-0a3a-4ed2-b011-3ea951aee25d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "290ca4ba-1c0d-401b-a02a-471b6916b048"
        },
        "item": {
          "id": "330425e8-8343-463d-9d84-03bc37d2c342",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "090be927-4d98-4ffb-a02e-2d5efcf1d17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fb9f50-2db6-4a01-889e-66a4c6ee18a9",
        "cursor": {
          "ref": "b2d8b607-39d8-4df9-bc1f-a77e98fd3f1a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "911d0975-e74a-48d7-bc35-f8a00e022096"
        },
        "item": {
          "id": "a1fb9f50-2db6-4a01-889e-66a4c6ee18a9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "29a00de5-576f-434a-848d-0923aa42cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e39a5fd-5468-42c0-8228-59c5df156390",
        "cursor": {
          "ref": "3c0dd1ce-425f-4b19-8fc6-b6cecf4b70e2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e76712a9-15c5-45a3-a27a-958164c4c8b5"
        },
        "item": {
          "id": "0e39a5fd-5468-42c0-8228-59c5df156390",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4b20b480-58ee-4e3a-bc10-e51359aa50cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60192cad-105e-4554-bf7a-a1aaea306a2b",
        "cursor": {
          "ref": "3828f27c-9e51-4da2-9308-4902a7e38654",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "79cc4fdb-9f60-400c-952f-e8ee8e10aa97"
        },
        "item": {
          "id": "60192cad-105e-4554-bf7a-a1aaea306a2b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "76efd188-9b5a-4b4c-948c-508c99f52cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b1524-169c-40dc-93c0-89b28a303969",
        "cursor": {
          "ref": "c107a167-dc28-4600-9783-7828f91e9ea7",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c5feb105-f1ea-487d-baf3-12c74fcb0e34"
        },
        "item": {
          "id": "565b1524-169c-40dc-93c0-89b28a303969",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ca079aa3-a7f3-4574-bc1a-17fe0d85f5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c68e19a-7e45-4266-8b58-e15aab9c78d9",
        "cursor": {
          "ref": "22cfce39-da3a-4fce-a403-87c34dbdbbe1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "377615ef-2239-4c91-8f30-43ed6ec61be8"
        },
        "item": {
          "id": "8c68e19a-7e45-4266-8b58-e15aab9c78d9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5485907e-c228-421e-9c14-25169031bc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f62e8a-8b10-40a7-b2e8-9e0ba8f1387b",
        "cursor": {
          "ref": "78a85802-dbf9-4456-92ff-cbea9d846c87",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5fd70028-fde4-49ff-a4a6-c3d077834f2a"
        },
        "item": {
          "id": "49f62e8a-8b10-40a7-b2e8-9e0ba8f1387b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b8e78046-f401-4405-a8f6-8b6897fad6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749c12d7-7dc0-45a6-84b9-5af730c9a09b",
        "cursor": {
          "ref": "e44e27fc-a807-42e6-a168-b7cf08243685",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "32b003ad-ef87-43cc-9dbf-f75d13644fab"
        },
        "item": {
          "id": "749c12d7-7dc0-45a6-84b9-5af730c9a09b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "72f07b99-7f36-4535-a920-90881f614455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98669922-68b5-4da1-8dcd-01720cff15aa",
        "cursor": {
          "ref": "866e7c92-0060-4134-b9a9-de0f1823dd92",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "db8e045e-4cf5-4b0d-8315-716e0fd58032"
        },
        "item": {
          "id": "98669922-68b5-4da1-8dcd-01720cff15aa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8d77f968-23bf-415d-ae9b-7197a6c088d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba27f52d-a90a-4363-87ab-4cce860ec0d0",
        "cursor": {
          "ref": "88ca1fbe-b31c-4c3d-9669-535f0cd6fe43",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c777b6a6-94ea-4b09-8394-e4af7137afc1"
        },
        "item": {
          "id": "ba27f52d-a90a-4363-87ab-4cce860ec0d0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "26723298-99fe-4547-8907-b8a0630e93b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ab3889-a718-4c11-b26b-a71dfa4f41b9",
        "cursor": {
          "ref": "31501c3d-59d4-4612-a4ae-ebcc46d43550",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "19de4369-d130-4a64-b446-d8c90ea1dd02"
        },
        "item": {
          "id": "28ab3889-a718-4c11-b26b-a71dfa4f41b9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3db12e14-80b4-445f-8d13-a099fcecfae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a69c3ac-e36b-407f-b06f-31d2653a4d7b",
        "cursor": {
          "ref": "43d96834-8f13-43ff-ba92-bd26e9e221fa",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "403c24f8-c5c0-44c7-b5d7-250728ca4dce"
        },
        "item": {
          "id": "6a69c3ac-e36b-407f-b06f-31d2653a4d7b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "18875eb6-4855-453e-81ec-383a0865dc51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b0f079-d3f5-4704-b6b0-123e5e7b2520",
        "cursor": {
          "ref": "2b93fb06-44fc-4b53-be40-429c4b10a325",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "32e1cea8-70c9-4059-ba76-7852cc949919"
        },
        "item": {
          "id": "68b0f079-d3f5-4704-b6b0-123e5e7b2520",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e4c01bc6-8d6b-4f5d-93ce-db1a50febfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa5a15b-9797-4a1d-9553-59697e8368b7",
        "cursor": {
          "ref": "b4d40222-2c6c-482e-ae48-d94264e91d33",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "de532ec2-ae5f-42bb-b29a-e306c0c572a3"
        },
        "item": {
          "id": "1aa5a15b-9797-4a1d-9553-59697e8368b7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "59668c0c-ee98-4847-9eea-263d9d37ce26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4276f8b5-5321-4fe1-93b7-f92430e7b0ab",
        "cursor": {
          "ref": "76fb9ba7-f745-4090-b005-67e73a23db1e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "91791c60-bef4-404a-aad5-1102481ccba7"
        },
        "item": {
          "id": "4276f8b5-5321-4fe1-93b7-f92430e7b0ab",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8434efba-03a5-481e-90b5-6828309ac4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356e1044-7d4e-41c3-bc07-05742385e0d6",
        "cursor": {
          "ref": "23166f46-6ff4-46de-9bb3-2dd574d23d7f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4d34d6e2-a879-4144-bd13-5de85fed9867"
        },
        "item": {
          "id": "356e1044-7d4e-41c3-bc07-05742385e0d6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1a44fa51-f582-4d80-af7d-099ef526a21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cb3dc8-9291-444c-a82f-2b9e95229cd1",
        "cursor": {
          "ref": "03512878-881a-4a3c-9a80-f5ddaefbcde8",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f17a46b7-86e3-465a-9476-b6eb31163148"
        },
        "item": {
          "id": "46cb3dc8-9291-444c-a82f-2b9e95229cd1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b486c02a-1bbd-411a-8dbc-d362ef6aa987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9ff7ae-09c1-4b31-a3fb-de2fd8ea6b2c",
        "cursor": {
          "ref": "2d00cdaf-327b-4987-8c45-c74402a5254b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0ba93c53-690c-42e3-aa64-e6647d4040df"
        },
        "item": {
          "id": "bc9ff7ae-09c1-4b31-a3fb-de2fd8ea6b2c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "da2e7d0b-d9b6-4e46-bd4b-bf19019fef85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d07d329-a95c-426c-a0b7-d0ee79470287",
        "cursor": {
          "ref": "456a3768-7315-4ec2-8744-d05151f3b690",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2841c36c-c12b-493b-b38f-3f7490f2b35f"
        },
        "item": {
          "id": "8d07d329-a95c-426c-a0b7-d0ee79470287",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2d53af07-e189-4779-834e-49f0948a0439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6f7579-ccba-4a23-8ec5-ea5b0aa41a2f",
        "cursor": {
          "ref": "a887ca79-3e6e-4b3b-99c0-9cba7808a46d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0d0fe19d-7898-4bf4-966b-3cd6d5838bd6"
        },
        "item": {
          "id": "bb6f7579-ccba-4a23-8ec5-ea5b0aa41a2f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "732a7781-8aa3-455f-a4d1-e0c498da8a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55078768-cfcf-4246-8fea-33cfee8a38dd",
        "cursor": {
          "ref": "aa379aab-9e59-4e48-983c-3d6876c4f507",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "71cf3661-ecdc-4ddf-94c1-a38730b7805f"
        },
        "item": {
          "id": "55078768-cfcf-4246-8fea-33cfee8a38dd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "28f71aaf-03dc-48dc-816b-5c6fd59ba8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474dc13a-7adb-4bc1-9f40-1a8ed70be66e",
        "cursor": {
          "ref": "ed18afe6-bc89-4598-b528-13182de4d025",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "85ff6745-77d5-48b5-9e18-fd6fa001bcfa"
        },
        "item": {
          "id": "474dc13a-7adb-4bc1-9f40-1a8ed70be66e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b7640600-8884-40b0-824e-fee10c9a448b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba16502c-50bf-428c-8c59-6f4071fb149a",
        "cursor": {
          "ref": "e9be3c48-4fc2-49c7-b126-dfdf175db191",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4deab1aa-7ee9-4a24-bc03-57e3d3d8c3d6"
        },
        "item": {
          "id": "ba16502c-50bf-428c-8c59-6f4071fb149a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7deac7d7-c4ff-4e9d-9c83-5fc70ec8d7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36ff731-c76c-46b8-bfdb-e5c11cdafb68",
        "cursor": {
          "ref": "d0a5361c-6a14-49aa-b581-44a7c9746410",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3b965ff2-75a5-4731-b1be-710949f54a66"
        },
        "item": {
          "id": "c36ff731-c76c-46b8-bfdb-e5c11cdafb68",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d30beaac-1554-4ef1-9f80-8b50e6b11cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307ae32c-4f95-4367-8810-8bdcda1ca18b",
        "cursor": {
          "ref": "bfd6f722-fff6-4860-9784-98df4179297d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "41b9ea0a-9b39-416e-b608-9717fcf6a9a5"
        },
        "item": {
          "id": "307ae32c-4f95-4367-8810-8bdcda1ca18b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "611b86fb-33af-4adb-b12c-a453360ac2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e158c78-461d-4a2c-8c60-02fd0f5ef0d2",
        "cursor": {
          "ref": "80f4ce47-8ee5-4322-a73f-50f3913f7898",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "00729739-e019-4625-b002-34291e76f314"
        },
        "item": {
          "id": "6e158c78-461d-4a2c-8c60-02fd0f5ef0d2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3d9b1aae-1264-4f7b-94fe-ae61757252d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f84eddb-ea2c-4e59-90b9-400566802ca7",
        "cursor": {
          "ref": "18d35586-ce46-4a7a-8126-78d2ad4e4dcd",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "acebf553-db93-48e6-8d1a-49294c1d8ec4"
        },
        "item": {
          "id": "0f84eddb-ea2c-4e59-90b9-400566802ca7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "df2066f9-56f6-45cd-897c-aa89567d5c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bca55e8-3002-4223-bc92-e874dcb16319",
        "cursor": {
          "ref": "954f0ca4-23ea-4dfe-8aeb-f3a6f7841934",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e372a08d-f66e-4d2c-985e-77a662140354"
        },
        "item": {
          "id": "1bca55e8-3002-4223-bc92-e874dcb16319",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0e971732-3134-416d-8597-d53d79c5188d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148aef8f-1c26-4ef5-8f7f-971cd57853d0",
        "cursor": {
          "ref": "8572e64a-c185-42a5-8117-f9d20830a02e",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bbfd2922-d1de-46c7-89ef-750fd5f0fb4e"
        },
        "item": {
          "id": "148aef8f-1c26-4ef5-8f7f-971cd57853d0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "73eab4a5-4e92-44cf-bf79-67e656305d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49fb9d4-80c3-45cc-a68a-fd126ac755f6",
        "cursor": {
          "ref": "adc00434-5ab9-4a69-8a04-91e0e63c857c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "08c15f53-a38e-4aa1-803d-50ef81aff3c6"
        },
        "item": {
          "id": "f49fb9d4-80c3-45cc-a68a-fd126ac755f6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e9115155-14e9-40eb-a655-32793ab3aab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b02e02-cc47-4164-bbe4-bada841f900a",
        "cursor": {
          "ref": "c0028b72-e3dd-4220-9eb3-d08a5e29a6d2",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c32b102f-0616-4510-bb5e-83b6c625e8e8"
        },
        "item": {
          "id": "33b02e02-cc47-4164-bbe4-bada841f900a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "17e04531-4623-4247-859b-1bbfe60230a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e67cad4-d4de-474c-aba5-02bad5097939",
        "cursor": {
          "ref": "8ba621b4-757a-4693-8fe7-6466d161d4ec",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "af3a558b-19c0-4967-8624-0239186762af"
        },
        "item": {
          "id": "9e67cad4-d4de-474c-aba5-02bad5097939",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0777e6b7-43fe-4ef7-84c0-02deb7bfef8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185786b2-9010-43b1-b164-8bfce6a317ad",
        "cursor": {
          "ref": "3fdd69e2-f95b-4cd0-8ff0-15b0bd745d7c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3c016da7-4c19-4bcb-8e97-4ce18756d031"
        },
        "item": {
          "id": "185786b2-9010-43b1-b164-8bfce6a317ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "64836a7f-04a0-4244-a40e-fef171e7bfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac04954e-2728-4692-ba96-f66b887d2e68",
        "cursor": {
          "ref": "47472a83-d586-465d-929a-579ed3a99c4a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e115943d-22e5-4cee-86dc-f4687a2ac2bc"
        },
        "item": {
          "id": "ac04954e-2728-4692-ba96-f66b887d2e68",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "226a6a3f-6d4e-4657-9846-dfb8bb652ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63af85b9-0d38-46a9-b707-cc40add461ba",
        "cursor": {
          "ref": "bca7681c-bff6-4f91-9547-cdae2c140b89",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fe68e965-896b-4fc8-acb0-7889ab10e7cc"
        },
        "item": {
          "id": "63af85b9-0d38-46a9-b707-cc40add461ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2430de52-7179-485d-b2f2-8bf64c61fa1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63121e0c-74fb-4ff7-b239-bd63fd7aa43c",
        "cursor": {
          "ref": "64bb1117-5ed9-4d17-a8fc-f5431a29eb64",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "baec218f-259e-49cf-a511-1a1400ac5441"
        },
        "item": {
          "id": "63121e0c-74fb-4ff7-b239-bd63fd7aa43c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a44cddd3-00d7-4758-924f-c11cbfc1a7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acfc9b8-32c5-4f19-b932-17e2cc8345ca",
        "cursor": {
          "ref": "c337b862-8a15-4723-abfb-a63132bb9a87",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ae8cad94-2f2d-4c4a-ae7f-b8328ea55aa9"
        },
        "item": {
          "id": "0acfc9b8-32c5-4f19-b932-17e2cc8345ca",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "794c10fe-c379-4b75-b818-90af3d20923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b18d3d-add3-4918-a5bb-7198e44ebc8c",
        "cursor": {
          "ref": "e167508c-4bbc-4ead-9404-91b6c2d19f93",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cc440e1d-ac64-46bd-9f85-d689eb3dd4a7"
        },
        "item": {
          "id": "62b18d3d-add3-4918-a5bb-7198e44ebc8c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cbb667a9-de8e-46ca-be5b-b8acb81c434a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c480a4-e638-4096-88d5-48c65029e04d",
        "cursor": {
          "ref": "24255299-3ecb-4482-a003-d8b7ba57634b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d05630b8-7fcb-4820-a29f-9952a3311a13"
        },
        "item": {
          "id": "79c480a4-e638-4096-88d5-48c65029e04d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2c7e78a9-0614-437c-9d07-e40dc3d697c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc1a88b-db29-4278-9245-e526ab07fff9",
        "cursor": {
          "ref": "1c837a88-bf43-4c0a-9c67-7ba53f15b14f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2a29373c-fa89-4fdd-8bb9-a34f1d197952"
        },
        "item": {
          "id": "5bc1a88b-db29-4278-9245-e526ab07fff9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "690e1043-3ad9-4390-9f1a-ab889e2e71fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7aaec62-5b5f-4462-af58-8f353413b15c",
        "cursor": {
          "ref": "b1054dc8-0fc6-4bcd-9a45-c299e239a1b9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6cdb4f0c-9516-471c-b691-fcda6d7adf8b"
        },
        "item": {
          "id": "b7aaec62-5b5f-4462-af58-8f353413b15c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9bd9b42e-4167-4620-80be-924d48f0dff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0921e5-7bbd-4e9e-a770-70f7fed3166a",
        "cursor": {
          "ref": "66e347c3-77a1-43b5-91e4-ad20c63df1ae",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6c6c1738-8ea1-44df-947f-29dcca3db08c"
        },
        "item": {
          "id": "ad0921e5-7bbd-4e9e-a770-70f7fed3166a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7d80efc7-0ddf-4b1a-9a80-4d22ebe3d262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e72ffa-f1ad-4871-8d11-83f4670ddf85",
        "cursor": {
          "ref": "8b8792c8-f0a8-4902-b1ad-a77242ae1a60",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3a7c6f30-42ac-49eb-b632-8ffc1b11b533"
        },
        "item": {
          "id": "53e72ffa-f1ad-4871-8d11-83f4670ddf85",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "de2a8152-3912-40d0-b196-2a10fb112098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0c4c84-dbc0-4e62-ae49-02cee12dbd59",
        "cursor": {
          "ref": "c276f849-dbfe-4076-b918-326f11cc2012",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2663c38e-b209-4383-9586-8a33e7ed46c7"
        },
        "item": {
          "id": "3e0c4c84-dbc0-4e62-ae49-02cee12dbd59",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a27c1aad-6a6d-4257-9728-6bc2fa81ff6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71341cb-5cd2-4880-90a9-8373ff6174c4",
        "cursor": {
          "ref": "4b38cd74-bf65-48e0-a638-1813209b252a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fa35a589-4ab8-471f-9780-231275104bcb"
        },
        "item": {
          "id": "b71341cb-5cd2-4880-90a9-8373ff6174c4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f6534196-6275-4dcc-a41f-05bac41e545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae5cc76-1533-4e6d-ab75-f39eedbe4a69",
        "cursor": {
          "ref": "fce83b75-23c9-4658-8fc2-ec3641c6df9f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7edde525-5daf-4154-9cdc-f370def7e182"
        },
        "item": {
          "id": "dae5cc76-1533-4e6d-ab75-f39eedbe4a69",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "90d842e1-eb7c-43cc-8cd5-2a9391dc7abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d23ff3-da41-4f5f-b351-59986ff7104d",
        "cursor": {
          "ref": "ce1fe1ac-0bc0-4498-b184-b502800b2063",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "97e76f7c-16e0-4d79-877d-7476eb9f4d14"
        },
        "item": {
          "id": "30d23ff3-da41-4f5f-b351-59986ff7104d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d95b14ef-acbc-4175-a491-c7f3e9cca34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83bd3de-730e-4afd-93fe-d9ac21b33af8",
        "cursor": {
          "ref": "5f4de8cc-d222-4087-8bea-ffd56e8865bd",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fc6e2e5a-e336-4e59-b165-a35ca8a4d35a"
        },
        "item": {
          "id": "d83bd3de-730e-4afd-93fe-d9ac21b33af8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f1e6fa30-4de4-410b-be45-da8ad650b91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ea178e-18ab-403d-8aaf-70220c505a22",
        "cursor": {
          "ref": "b43e518f-d5f8-4e66-817a-65390f70f9fc",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "29bf059a-b0b5-433b-8558-dbc4e3bc8f25"
        },
        "item": {
          "id": "18ea178e-18ab-403d-8aaf-70220c505a22",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5e0d8fb2-459d-48ef-a1b9-448151267366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a33e25-e8a9-4546-b226-ed9ff2fe12f5",
        "cursor": {
          "ref": "189dd2c4-f746-4c89-96bb-1d4ca3efbf8d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b5e9368b-b973-4b05-b5dd-f43691644f96"
        },
        "item": {
          "id": "b9a33e25-e8a9-4546-b226-ed9ff2fe12f5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "921ed08a-8fcb-4332-a0d6-13ac56b81cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ecc4ec-5a77-47fc-8973-7f63fc431c30",
        "cursor": {
          "ref": "b3f960b6-2ac2-4ed9-9376-b05585cf15ef",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f0ebc77a-6cd3-426b-9483-75af3a845ab5"
        },
        "item": {
          "id": "86ecc4ec-5a77-47fc-8973-7f63fc431c30",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e89378f8-836c-4923-a48b-5ec3e0940c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b39455-2683-459f-9426-c64292ee4cbe",
        "cursor": {
          "ref": "911414b3-f9d3-4437-9fd0-bfc36b00c900",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b64a8e24-60f6-4516-abb2-272c215cfbc4"
        },
        "item": {
          "id": "d4b39455-2683-459f-9426-c64292ee4cbe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e8c6ceee-3344-4683-8706-2d30c215f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32504599-e302-48bf-ae8c-e57057b7e9bc",
        "cursor": {
          "ref": "62d358df-9e63-44eb-adf4-a8ae1c575ab9",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4a021a90-a4c4-459d-812e-da1a62d4863c"
        },
        "item": {
          "id": "32504599-e302-48bf-ae8c-e57057b7e9bc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2ba22525-36de-4b9b-a675-6656f2ce266c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59362f92-7e50-4b66-8d39-aceba7c1852a",
        "cursor": {
          "ref": "bbb46afc-e2e4-4bf3-9af0-bbf75dcae004",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3b5d77ac-6abd-417f-a650-d02ff536e0dd"
        },
        "item": {
          "id": "59362f92-7e50-4b66-8d39-aceba7c1852a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f4f09ec3-fb2e-4eff-88e7-0425991d5993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d7722f-382f-444f-a82c-662bf2bf8a84",
        "cursor": {
          "ref": "94e597b1-8291-45fd-bd34-dddfdac1bccc",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "10c52a40-9f34-41e3-97ae-398098522625"
        },
        "item": {
          "id": "15d7722f-382f-444f-a82c-662bf2bf8a84",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "661f52e8-f2f8-4b8d-9000-e53473b2021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea43590-18d1-40e3-a5d0-d10018513a85",
        "cursor": {
          "ref": "fdfa9ebf-0eeb-473c-9c46-32d98a8760f6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cc12d245-ae15-4e19-a698-a0534b74043b"
        },
        "item": {
          "id": "cea43590-18d1-40e3-a5d0-d10018513a85",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "46bcfd91-3b3c-451d-a653-0a9fb28618fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352c296d-c19f-4af4-a8e5-09f2b007c428",
        "cursor": {
          "ref": "2392e884-5f8a-47b9-8bef-8ff89352a0d1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a6069676-b3e2-4dba-baa4-979665c9d939"
        },
        "item": {
          "id": "352c296d-c19f-4af4-a8e5-09f2b007c428",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9d5975c3-ef89-4c99-9859-ea538470f504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d53854-b278-4c99-86d4-6ae034afc8a3",
        "cursor": {
          "ref": "d7357800-882d-4b8d-8d9c-829132f95f82",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2d3a4c8e-0dc7-4df1-9132-a2c7d1becb56"
        },
        "item": {
          "id": "b6d53854-b278-4c99-86d4-6ae034afc8a3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "392910c4-c7ab-403c-ba52-f28228e9e939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c45af2-dfb9-4903-b793-4a4721495333",
        "cursor": {
          "ref": "b363bb35-8826-4b49-b658-ea8307d116fb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e68f642f-76bf-4757-b5bb-db5e78450740"
        },
        "item": {
          "id": "77c45af2-dfb9-4903-b793-4a4721495333",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d3afbdc3-6102-436e-b58c-c7285a4e90dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce55e0a-ca0a-4325-ac4f-59ba60d52d05",
        "cursor": {
          "ref": "761a1079-f795-4bb9-b25c-de4c55f310f0",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5ecd97ae-7f3c-491c-af25-8e2731daf3bb"
        },
        "item": {
          "id": "cce55e0a-ca0a-4325-ac4f-59ba60d52d05",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "86dee4c2-45bb-4ec2-84e0-6543ff696fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6a2350-14e1-4399-adc6-d50be4042d63",
        "cursor": {
          "ref": "35635bcb-7a35-415a-8d83-74190cf21b63",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "48e79b5b-8c9d-4167-80b3-f41bcd5059e1"
        },
        "item": {
          "id": "7d6a2350-14e1-4399-adc6-d50be4042d63",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2ad3e2ea-cbc4-4a4d-ae31-bb3357f3992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba20faf5-6179-4527-843b-b1d3a0585053",
        "cursor": {
          "ref": "9919bc96-9a85-4d9a-8fb1-7ca23216791d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1f616d62-d502-4f61-9839-653231f294a7"
        },
        "item": {
          "id": "ba20faf5-6179-4527-843b-b1d3a0585053",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2ae6bd72-f11b-4803-9139-6333cbe4cdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef92529-20ef-4fd9-9c54-f03fcfd34949",
        "cursor": {
          "ref": "563e802e-b036-494f-8880-c964bffecec3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c564b341-6683-47e2-a0e4-7e4deab7217c"
        },
        "item": {
          "id": "bef92529-20ef-4fd9-9c54-f03fcfd34949",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d83f3b16-756b-4954-95f2-9fc001fc5840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ff0137-3bef-41b6-9d26-d085e86cc8ea",
        "cursor": {
          "ref": "3f6daf5d-4c00-4a4c-aac1-6ad248134a63",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ccf57b0d-4ffe-4297-8c8b-441cb454ac62"
        },
        "item": {
          "id": "50ff0137-3bef-41b6-9d26-d085e86cc8ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9c8ac526-612e-436a-bbba-155d43580166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d8e051-2246-4a35-8983-1ce39d280848",
        "cursor": {
          "ref": "d1ef4db1-d20c-4ef6-a575-79543e496f3a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1aa8b8c4-b612-47a1-8b08-8d93c88bbda5"
        },
        "item": {
          "id": "e0d8e051-2246-4a35-8983-1ce39d280848",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b2e4e088-75e2-4098-bd08-f70f7ee2e8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa84607-d1a5-471f-8aaa-cd915235d04a",
        "cursor": {
          "ref": "81615cc6-d969-44cb-a5ef-d5f072a4f2a6",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "639f89dc-8279-4099-bc3d-78763c4e1769"
        },
        "item": {
          "id": "1fa84607-d1a5-471f-8aaa-cd915235d04a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9260dc6a-cf04-434a-aa2e-687a9f0ca57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b139f8b-6a5c-475c-8cd9-e05154dbc412",
        "cursor": {
          "ref": "8582e2ae-fad9-453b-9ca0-7350a4eb1294",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2b5b5be2-606f-4cab-8a87-38c101638a52"
        },
        "item": {
          "id": "2b139f8b-6a5c-475c-8cd9-e05154dbc412",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0306d393-f035-454d-b7ff-5964ad25b97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931a7c50-77f9-44ae-b4e7-3a9e9a4533a5",
        "cursor": {
          "ref": "b01e1763-2fe9-4e66-81b8-2bc609191352",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0c141783-9e65-4201-8934-23077fa1a275"
        },
        "item": {
          "id": "931a7c50-77f9-44ae-b4e7-3a9e9a4533a5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0f7a286b-1008-4973-bb45-37b80b93449e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3878abea-289c-4312-abc9-2436e7710c6f",
        "cursor": {
          "ref": "544cc76a-6bbf-494f-a26c-0bab2b509651",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "323ab6f4-5c90-4280-8277-297bc6db8929"
        },
        "item": {
          "id": "3878abea-289c-4312-abc9-2436e7710c6f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9ce5b429-b150-45b7-9f6c-9dd41269501c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "2e392dd1-4c49-4095-8821-335a6d8d04aa",
        "cursor": {
          "ref": "fbf81127-2391-4c9c-bf48-18a5c344dbca",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1fae984a-4d15-450a-ae57-8c731af912b8"
        },
        "item": {
          "id": "2e392dd1-4c49-4095-8821-335a6d8d04aa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "70be9606-60c4-415a-a059-9fe1e28e42c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "8e907d48-4c9f-4ad6-959c-871b778070d0",
        "cursor": {
          "ref": "f6e67b98-2c2c-4b7e-b113-55c2de0a4be8",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "261fca4c-67f1-4e14-a5fa-765cec65bc3a"
        },
        "item": {
          "id": "8e907d48-4c9f-4ad6-959c-871b778070d0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4fd8ee70-bf18-4aec-a17d-ad856cf17378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "995f8534-d697-4b74-a33a-1a27975b7153",
        "cursor": {
          "ref": "5c4bdcdb-5aa3-4011-a183-2b91af463ce6",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d4b005a7-0bfe-4c35-b100-868489ed18d2"
        },
        "item": {
          "id": "995f8534-d697-4b74-a33a-1a27975b7153",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "04a03204-15e6-49b7-a299-8947d37dad61",
          "status": "Created",
          "code": 201,
          "responseTime": 5027,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cb58cb-2346-4181-a441-db3c7aaa1a63",
        "cursor": {
          "ref": "d4bfc403-1e52-4cd3-a734-84519a59291e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "89a5b559-9739-4b9d-8afc-e5dcd3424235"
        },
        "item": {
          "id": "a1cb58cb-2346-4181-a441-db3c7aaa1a63",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9fb12b43-4d14-4dfa-8f23-3f012ef0c73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "babba880-a73d-4a38-8dd2-39a817ebf116",
        "cursor": {
          "ref": "5bac8d76-bf94-4388-820a-39dbee896fd1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "992fdb23-f703-406a-a662-1a1fbcc8e073"
        },
        "item": {
          "id": "babba880-a73d-4a38-8dd2-39a817ebf116",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7c64fd51-5ddd-47dc-93fd-af0dfcd39d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3332072c-1b7a-439c-b64b-ccb9f0e6fbb8",
        "cursor": {
          "ref": "a5c882ad-47e0-4df8-b753-170ad90705ad",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8862784b-3ea8-4197-b8ab-eec222669dd2"
        },
        "item": {
          "id": "3332072c-1b7a-439c-b64b-ccb9f0e6fbb8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e236ff85-32b4-41ca-a5df-6ce6af7031b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4368a26-313f-4a20-9b1f-80bfe156f0bf",
        "cursor": {
          "ref": "af36650a-0b67-4e45-911c-6c1ea6d9780e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c32ce426-093b-42e9-b25b-e06bb3d89344"
        },
        "item": {
          "id": "c4368a26-313f-4a20-9b1f-80bfe156f0bf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ebfd8ad5-1f54-4298-ac65-4d826556730f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba1a416-15e4-4970-bc7d-c60cf8be34c5",
        "cursor": {
          "ref": "068f48a3-8275-4e8f-8394-4f918ecc1fa8",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "53d2c487-1df1-46bf-ba9d-d84726510080"
        },
        "item": {
          "id": "dba1a416-15e4-4970-bc7d-c60cf8be34c5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b49e432c-2ece-47d4-91f1-7602c1d4523d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0a7e6b-11d7-4ce0-9388-20a395e760ce",
        "cursor": {
          "ref": "69314366-de97-487e-a687-40a3a7215703",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "67834bd4-c45e-4a4d-bb5d-fb52fbc25c87"
        },
        "item": {
          "id": "bb0a7e6b-11d7-4ce0-9388-20a395e760ce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b71818a6-f4fb-49e3-8da3-64d6a3d2f054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b766c6-6290-4b87-8a00-0a8a26371536",
        "cursor": {
          "ref": "d4f76844-2cb5-4b5f-8d2b-c5f59f0c6419",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d480f1b2-0adf-4d38-8841-660bfeba8bae"
        },
        "item": {
          "id": "45b766c6-6290-4b87-8a00-0a8a26371536",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4aa946a0-75a7-41b9-9f90-00b8cc0463e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3ad137-3bd3-4c69-9e8a-c053811ac439",
        "cursor": {
          "ref": "58ef42ad-624d-4bac-9b5b-272766e8378b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47b3d5f5-f773-47b1-916c-82b03ce8360f"
        },
        "item": {
          "id": "af3ad137-3bd3-4c69-9e8a-c053811ac439",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a42906e2-3993-4972-93af-99e7b071c118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b12ffb6-7741-42fb-a50d-db62ce0c05f7",
        "cursor": {
          "ref": "17ecc569-849b-4048-9f77-df19f53e12b4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "17e411ad-ac7f-47c1-aa25-2dd48ddbeaa8"
        },
        "item": {
          "id": "4b12ffb6-7741-42fb-a50d-db62ce0c05f7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7f4f6149-9497-44f3-aad4-a2bcdf5ec984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf021c8-3c43-4dcb-b6ca-40b4ccd1643d",
        "cursor": {
          "ref": "956d1bdb-45d7-458a-9bc4-b2fc80e29bd9",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38024706-9a0d-4955-b219-0f3d1438d441"
        },
        "item": {
          "id": "daf021c8-3c43-4dcb-b6ca-40b4ccd1643d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "74337732-48aa-4dab-9772-ed6aab13cb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9ea1ed-1c35-4c76-b534-d79e196db846",
        "cursor": {
          "ref": "664fc56c-a27d-4616-b46e-3961b4bffb8d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9c350a0d-b0a8-4c97-b1e0-66cd404a6e86"
        },
        "item": {
          "id": "3e9ea1ed-1c35-4c76-b534-d79e196db846",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5f512783-e59d-489a-a73d-44b535c32a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8055cea6-58cf-4309-a38e-9c5d28741f79",
        "cursor": {
          "ref": "014bc340-f2be-4fa5-ae69-c0dcb9f5fe78",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dde55260-4de1-475e-a250-0b06810d9de3"
        },
        "item": {
          "id": "8055cea6-58cf-4309-a38e-9c5d28741f79",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "60e61c11-b126-49cb-8c77-5daf0a972e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7a9311-7674-43a3-9c4e-2124b8316bee",
        "cursor": {
          "ref": "6de5c431-bb89-49c7-a8e8-82711a1c6556",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb93feec-d8f2-4032-95a4-205b981d8e32"
        },
        "item": {
          "id": "1b7a9311-7674-43a3-9c4e-2124b8316bee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ebb48b0e-3530-4681-bfde-6eeceb2b8dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3929418f-615a-4f0f-9862-3291ada2a375",
        "cursor": {
          "ref": "653ff173-8c66-43a0-9b04-2e3e7e5d8c73",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2534d5f3-d6e3-4a2a-aeea-6aad35940321"
        },
        "item": {
          "id": "3929418f-615a-4f0f-9862-3291ada2a375",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cdf09dc8-6bd7-484b-8c2e-0f6f475c8cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bbcb56-fc31-417a-aa16-dd1910423f7f",
        "cursor": {
          "ref": "9bb2e036-c06b-4268-9466-72a8eca98374",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d867ea0d-e612-4b12-9726-95b4ec2baa69"
        },
        "item": {
          "id": "27bbcb56-fc31-417a-aa16-dd1910423f7f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9975c7ea-ad41-4d50-9d7a-17ae4c551183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f2b3e-c7e6-4783-bc92-9cf949c27042",
        "cursor": {
          "ref": "d3e6510e-5c97-4b77-befc-bea26d90cae6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1ff05695-ec8d-4ffc-b319-fed3188703e9"
        },
        "item": {
          "id": "2b4f2b3e-c7e6-4783-bc92-9cf949c27042",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "740421e6-da91-49e1-ae45-f5376a567812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d77c0d-8cf3-4c6f-bf17-f55c92019eb8",
        "cursor": {
          "ref": "1f885116-68fb-410c-87c2-5c8b325a5fd6",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "97169fa9-31bb-426b-ae5f-9e5e99ca4ed7"
        },
        "item": {
          "id": "75d77c0d-8cf3-4c6f-bf17-f55c92019eb8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5771252b-36b0-493d-8395-7e0df65643f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2171d829-603d-49f6-9e7b-65e4d61b9cce",
        "cursor": {
          "ref": "97028f05-20c8-4a2b-95a1-3b810b2cff02",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b7b3fe99-711a-4084-bbac-676a1e249b1f"
        },
        "item": {
          "id": "2171d829-603d-49f6-9e7b-65e4d61b9cce",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4dd28540-be34-4111-82ea-e1d188b65164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac64bd5a-38c4-43da-ae95-88bc0148917c",
        "cursor": {
          "ref": "ead81417-fc7a-4251-a9a0-967373442d3e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "84d05b5f-ad92-4752-adbd-2c5b9d9f12be"
        },
        "item": {
          "id": "ac64bd5a-38c4-43da-ae95-88bc0148917c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "da8c0d32-8959-453b-84ba-52a8d24dd6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e8b8de-a6b0-48bb-a773-a7dbbd6c8bbf",
        "cursor": {
          "ref": "e4d60254-5df3-4947-ac25-bd976b10225e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0afe5d56-4718-46d0-8a12-07010b01e28b"
        },
        "item": {
          "id": "b3e8b8de-a6b0-48bb-a773-a7dbbd6c8bbf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "de284ebc-a675-475e-ab3a-ff5ee4e3b1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d7ac71-9ad1-4975-86a2-102cecc20e6b",
        "cursor": {
          "ref": "e7b3dd8c-250a-4aca-87b9-35489361f29d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ec1d6b63-65a4-4a41-a274-334f97ed0fc3"
        },
        "item": {
          "id": "a5d7ac71-9ad1-4975-86a2-102cecc20e6b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0e7b8ef7-8539-4f0a-a2ef-f3522e8f563a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c40e3b-48a4-4a75-882d-a52c1b35dd7e",
        "cursor": {
          "ref": "0026e5c8-ca6c-414a-bb30-7484c2b2fdea",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "93653619-9b8c-43a2-a3e7-49d786da70c9"
        },
        "item": {
          "id": "45c40e3b-48a4-4a75-882d-a52c1b35dd7e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f7e06e02-c1e2-4a86-a8b0-516bf831ed9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2ef84d-96db-4e7a-829b-7320cdfb0604",
        "cursor": {
          "ref": "eda13337-7aaf-4eb6-a583-f916fdb6942a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8573d372-31d1-4757-8dd7-d7956069a79b"
        },
        "item": {
          "id": "2d2ef84d-96db-4e7a-829b-7320cdfb0604",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5d73dc68-38db-4ba7-a4ee-37e7f511cb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e1846e-be94-4f13-b813-63033f7bcc50",
        "cursor": {
          "ref": "c4682230-01e2-4605-a9c0-c6a458c76058",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3269add3-8807-443d-92dc-03ee62b9d39e"
        },
        "item": {
          "id": "94e1846e-be94-4f13-b813-63033f7bcc50",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "299f8b93-21ff-47db-a1de-feaa50c31629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48306934-b6ee-40a5-8b15-60f45a495f25",
        "cursor": {
          "ref": "3cdff3a7-2652-4711-ad5c-a96619918671",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "455b315d-ad1d-437d-b291-f0baa2c3a2bf"
        },
        "item": {
          "id": "48306934-b6ee-40a5-8b15-60f45a495f25",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8dad7ac9-79b3-4707-9c04-1c23429ef2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db0ea64-2463-493d-b861-4b480b9f0ed5",
        "cursor": {
          "ref": "a40ab44e-f6ff-40df-a03b-38dd7552f0f1",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eea17f53-576c-49c4-acb2-ad1f3fe68c53"
        },
        "item": {
          "id": "9db0ea64-2463-493d-b861-4b480b9f0ed5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "92963263-26f2-4127-b128-f483182e0d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce002427-0824-4986-9327-3657cb2a99ee",
        "cursor": {
          "ref": "0437ac75-5910-4dcb-b824-57f5db7ade6f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "95014e0c-b0ec-4427-8546-8d45e021f900"
        },
        "item": {
          "id": "ce002427-0824-4986-9327-3657cb2a99ee",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7c606eb4-2a47-4713-8437-58cbcf911d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ccac68-956e-43e4-bbde-29589fb7da13",
        "cursor": {
          "ref": "60e12dc6-d77d-4aaf-9420-92e7f113f29a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f6dabfa3-69ea-4435-9ea7-2c97aa5a444f"
        },
        "item": {
          "id": "11ccac68-956e-43e4-bbde-29589fb7da13",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "acffc0cc-4bae-437b-9196-c8b62e996522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf410c23-0c0d-4cd9-b10d-a4c501ed0b5a",
        "cursor": {
          "ref": "14cc19b9-dace-490b-b23f-25981241ef5e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e19e03a0-ce4c-4f02-aed7-a2d0f3605e18"
        },
        "item": {
          "id": "cf410c23-0c0d-4cd9-b10d-a4c501ed0b5a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "36a2ca0f-147a-4484-a91a-325200776ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552f5a39-8794-4f85-917b-160da107238f",
        "cursor": {
          "ref": "c8003378-9577-4e49-8a19-9e12169956e7",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "def6fad4-9eed-40d4-b5cb-6af76603de0a"
        },
        "item": {
          "id": "552f5a39-8794-4f85-917b-160da107238f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "be9cfbea-e736-49db-b388-d5228be8e4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295e8aaf-97aa-4a41-8742-0c524e29fd78",
        "cursor": {
          "ref": "4840d02a-d648-433b-9314-2a4a2a97e4d8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0a9a9b51-6e07-4853-a5a0-5b531a59d94c"
        },
        "item": {
          "id": "295e8aaf-97aa-4a41-8742-0c524e29fd78",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ed41a773-22ff-41f7-958e-8590a815cd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2271845-bf51-4a4d-b245-2b262e621dec",
        "cursor": {
          "ref": "2573c680-ab25-42dc-af83-987a8e3995db",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "527809ae-1b78-450d-9d20-ed2d35e0141f"
        },
        "item": {
          "id": "a2271845-bf51-4a4d-b245-2b262e621dec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b3d2b0b5-cb57-4951-9c01-91abaf270e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21fc818-0f30-47b0-8067-7107d29b82dd",
        "cursor": {
          "ref": "8ae70a11-be44-4930-9c50-b5aedd66dc56",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ddd7122c-7c3d-4667-99d0-f038f40eaee5"
        },
        "item": {
          "id": "a21fc818-0f30-47b0-8067-7107d29b82dd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ab6a5f65-0dd8-4528-acae-ade4a8a00680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f69c362-ad05-43a4-96a1-b9b062b69b97",
        "cursor": {
          "ref": "341df87c-1e1a-45fe-8c01-0f3911edff3b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2ef27b4a-aed1-49cf-9387-addeae9f4736"
        },
        "item": {
          "id": "4f69c362-ad05-43a4-96a1-b9b062b69b97",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f3d508ed-7ab9-4b61-8c86-672458133b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea9ba4b-09a5-4290-903c-e15aa25c84d5",
        "cursor": {
          "ref": "9013c395-30cb-48b6-b9b8-6e03c89b7e22",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2e105e4b-00e8-4c7c-900b-492044733c02"
        },
        "item": {
          "id": "8ea9ba4b-09a5-4290-903c-e15aa25c84d5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4c28d588-8732-4213-af86-5b7dc608a2e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8353e4cd-34b3-4957-8d10-a1865969f4d0",
        "cursor": {
          "ref": "be12bf6e-6bc8-453c-a3f1-b2c07c752fd3",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5a4d952e-0fc6-47c1-9b66-22451675217c"
        },
        "item": {
          "id": "8353e4cd-34b3-4957-8d10-a1865969f4d0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d6222b34-ccf1-4ad2-b5f8-5a282e3d1a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875030a-8343-413f-82a5-e6debdd52027",
        "cursor": {
          "ref": "2cdcbd45-3f77-40b8-9bf9-6ec200448ad5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1d984f8b-39c2-40f2-96c3-2f788c7ed221"
        },
        "item": {
          "id": "d875030a-8343-413f-82a5-e6debdd52027",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72c508eb-bdd6-443c-872f-3a25ce9df307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac314e9-e333-4337-b131-6da29d2bb8f0",
        "cursor": {
          "ref": "4d15b768-3915-4cfa-bad4-84be6b48e8f6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "51b7c0f0-f186-4409-af01-77674805b08b"
        },
        "item": {
          "id": "aac314e9-e333-4337-b131-6da29d2bb8f0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fe367c05-7a18-4972-b3b0-199117f0725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9acc8cb-5110-4a9a-a4c3-574974f62e2a",
        "cursor": {
          "ref": "1574fe04-2dd7-4790-bf7d-a11461403caa",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ac584045-c2b7-4d0a-b1a9-ce52fdebdcfa"
        },
        "item": {
          "id": "b9acc8cb-5110-4a9a-a4c3-574974f62e2a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4c00aeb3-43d1-48aa-accb-f9f8af4fd106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba98b84b-657b-4060-89be-3bceabbdb9e5",
        "cursor": {
          "ref": "c1df00d7-6d00-4a98-95f0-7dbeddc6c0d7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4462f5e2-5816-4f91-9ca0-63cb632fd5c3"
        },
        "item": {
          "id": "ba98b84b-657b-4060-89be-3bceabbdb9e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d355e8c7-37f9-4716-a828-b4bdcefca319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aee4e0e-409a-4cad-984f-28456a6e7beb",
        "cursor": {
          "ref": "87750538-1156-4e0c-b785-eb0ce0954b56",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "55b0f104-78d0-4538-862f-2d65445a60bb"
        },
        "item": {
          "id": "4aee4e0e-409a-4cad-984f-28456a6e7beb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "687bee99-6f56-447f-8a48-45f631153d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0276c4c8-1c32-4bc7-960c-7469da744926",
        "cursor": {
          "ref": "0c206324-0320-4179-9346-131671048171",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "adc3441b-9fb6-488a-bfd3-242da89f9fa4"
        },
        "item": {
          "id": "0276c4c8-1c32-4bc7-960c-7469da744926",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c9349599-420e-4b99-b1b8-9a22ecd7359c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339d7602-86f3-43e3-946a-57be26756718",
        "cursor": {
          "ref": "d7aa6b4a-c6f6-44b5-bee6-ea404f40e05b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "47dfc77c-d9b7-48ac-9d7f-e39592911f11"
        },
        "item": {
          "id": "339d7602-86f3-43e3-946a-57be26756718",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e2209688-87b7-4b47-ad29-f1e39afad925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0d62c3-998a-4416-b756-15d525856d8f",
        "cursor": {
          "ref": "d0c82e65-8480-4b97-8d57-66788b9ee3d2",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7ea15a72-f7de-4575-bc77-282427209eee"
        },
        "item": {
          "id": "7a0d62c3-998a-4416-b756-15d525856d8f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ab83d01f-4698-4dfa-936d-e3936cf24861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a637f67d-93cf-4a9d-a974-5f387001941f",
        "cursor": {
          "ref": "78e25c81-9573-4fee-af9f-e0d2853038ee",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4b2ccc5f-63b5-432c-9774-fa3d57f7d530"
        },
        "item": {
          "id": "a637f67d-93cf-4a9d-a974-5f387001941f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f4cc2fe2-4fa0-4156-88ce-10c82eab2fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d3a9a1-7ddf-43cb-8c1d-77a13dcc59b3",
        "cursor": {
          "ref": "c1f99697-8dea-4fba-83b0-f71c87e17f33",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3f24b08f-29bc-4a99-bb69-4bb358e5263c"
        },
        "item": {
          "id": "47d3a9a1-7ddf-43cb-8c1d-77a13dcc59b3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "30fd1ce0-10aa-4bb7-883b-ac92e6f2b4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c24a71-7c98-4cf7-b186-91ee23fa3b32",
        "cursor": {
          "ref": "0a91110c-382b-43ee-8f00-3523072e9a0b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0ba7f4ed-b097-4055-b99e-bed6dc69fc92"
        },
        "item": {
          "id": "90c24a71-7c98-4cf7-b186-91ee23fa3b32",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "796c616a-f94d-43e1-bb50-cba1f538699c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d6d7a6-a088-4899-9cf9-f690072a21b6",
        "cursor": {
          "ref": "084fc653-d4b2-4271-819e-58e5712b1eea",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5b304bd6-6bfb-4aea-9e9a-f1d7656b8a85"
        },
        "item": {
          "id": "50d6d7a6-a088-4899-9cf9-f690072a21b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb8dbe18-4203-4e14-8048-a84258464e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58571bb3-7d9e-4304-8161-e0a63bdd9718",
        "cursor": {
          "ref": "57ae56fb-3023-4503-9824-8b921fc9a2b5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "377795b2-d671-4e06-9434-a6a758b8b2a3"
        },
        "item": {
          "id": "58571bb3-7d9e-4304-8161-e0a63bdd9718",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc4a492c-61e7-459c-9a5c-8e0494fa4c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2768c94-8f5e-42f9-aae0-f7fdacce0e16",
        "cursor": {
          "ref": "549d2e09-ec3a-4dde-b88a-b38188d0b365",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "26ced7b7-b80c-42a1-b30c-68a988d53dfc"
        },
        "item": {
          "id": "f2768c94-8f5e-42f9-aae0-f7fdacce0e16",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a97e6af6-d2e8-4fbe-892d-5e06c53eaa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347e7daf-3dfc-4731-91d9-67d3ec841c1f",
        "cursor": {
          "ref": "d2f3bcc6-1f50-49bf-b6bf-9aae5508838c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d6a91dfe-fd67-4c10-a4b1-3ae8f133e19a"
        },
        "item": {
          "id": "347e7daf-3dfc-4731-91d9-67d3ec841c1f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b180b3ea-97b0-4e8c-9cfe-2800ec26b83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d1114a-3138-4d7e-bfd4-b023788bee07",
        "cursor": {
          "ref": "ec687fdb-5f11-4e0b-b674-468cf1893f27",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "55e86824-f504-4d01-b347-c483153827eb"
        },
        "item": {
          "id": "b3d1114a-3138-4d7e-bfd4-b023788bee07",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9f77f2e3-a8e2-4e1b-97d2-e1f8f21e6a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5de70e-8fb0-4c55-8674-f9902834f56b",
        "cursor": {
          "ref": "e41f578e-5ef4-4134-a83a-3871b75ce57d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d036d926-a1bf-4699-ad69-7a6453fab3b4"
        },
        "item": {
          "id": "1e5de70e-8fb0-4c55-8674-f9902834f56b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c2111691-eb5e-41d5-96f4-99304f1ba607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78f90f4-4644-4e67-800a-549e2aae17e2",
        "cursor": {
          "ref": "74863d68-d357-4a8d-b4a4-2e4cd6b2baf6",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1e996d82-22db-4e60-8f64-63a0de6dfddb"
        },
        "item": {
          "id": "c78f90f4-4644-4e67-800a-549e2aae17e2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c2087fe1-d256-40d4-bc1e-02c74ffc68c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d584532-72d1-4132-9cea-e0fa5b6fe4e0",
        "cursor": {
          "ref": "b5e0c211-1dbb-4e2d-b97f-30047fa77fe7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9e2d90b2-5740-40c4-b91c-6754d2f2cb43"
        },
        "item": {
          "id": "0d584532-72d1-4132-9cea-e0fa5b6fe4e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4508f039-2786-4207-87fe-b9c20cd2a585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5d4f0e-1ffd-42de-8e86-9abb12f2172b",
        "cursor": {
          "ref": "c8307723-3303-42b9-9d06-1489cf7be0de",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8120c067-7b82-4b7a-98c3-fa4b6d8ea7e6"
        },
        "item": {
          "id": "ed5d4f0e-1ffd-42de-8e86-9abb12f2172b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ed6f670f-3744-49d4-9647-0fbfd8a69be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e370b7c2-1b5a-44c2-a25a-530f34e18c27",
        "cursor": {
          "ref": "ccfc2c67-2bc9-437b-9537-53bba8fe453f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "590677e1-2386-4ea7-a7bb-f3102f483be7"
        },
        "item": {
          "id": "e370b7c2-1b5a-44c2-a25a-530f34e18c27",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eed30bde-1bee-49dc-9206-06ec70b16ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d895656-8187-47a3-9f44-00839fe24cf2",
        "cursor": {
          "ref": "d24ad49c-b8f3-4d85-8036-16072d8fdd7b",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "189b8cbc-3e7f-4804-8554-7ce39459dab3"
        },
        "item": {
          "id": "9d895656-8187-47a3-9f44-00839fe24cf2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b61ec7b2-4916-48f5-923d-27a20c4467f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbf045e-a68d-4cf6-a7f0-ce42dde1df74",
        "cursor": {
          "ref": "485fe779-99a9-475d-9704-b61698554f4d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0475ff8f-dd5c-4b96-9fae-c210ca1c6e08"
        },
        "item": {
          "id": "bcbf045e-a68d-4cf6-a7f0-ce42dde1df74",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6d9feb5e-cb06-4e1d-8651-965bde216568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da47761-cc4d-4795-acb4-219b997ae59b",
        "cursor": {
          "ref": "43c25451-dded-4b3a-b66f-7a34233d9b0d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4e625357-b351-402a-b223-214bb4e2945e"
        },
        "item": {
          "id": "7da47761-cc4d-4795-acb4-219b997ae59b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4b89786-a001-4cc4-a305-62a650807a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1067c0-d745-4743-8b1e-4809794a1946",
        "cursor": {
          "ref": "25ac31fa-f2ac-4905-b126-bf22b5748f3a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0c42114d-0f1d-4638-91ba-ebb058b6785a"
        },
        "item": {
          "id": "5e1067c0-d745-4743-8b1e-4809794a1946",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "59c49c0d-b185-4d9e-8213-6d56d70a068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e276a11-7dbc-4597-94cc-4193dab2efb4",
        "cursor": {
          "ref": "b0774fff-c382-44de-a2f3-93a22d14972f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "95df3a8a-0d79-4967-a22f-a21a7e646e08"
        },
        "item": {
          "id": "6e276a11-7dbc-4597-94cc-4193dab2efb4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3927ddd4-c4dd-4d1e-89ce-5d5f731ce4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfd2d86-5163-4c36-9086-1bc7beb16c1e",
        "cursor": {
          "ref": "0d0fd01f-1a8d-415e-bfc6-89e36e2ba14d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2d5ca3cf-b637-47d0-8f78-0cc12996814b"
        },
        "item": {
          "id": "adfd2d86-5163-4c36-9086-1bc7beb16c1e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "54a9b006-7fdb-4ab7-bfbc-4c0f6a4db6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713cf417-ed33-4adc-bd3f-f8a2befc6f15",
        "cursor": {
          "ref": "850511b7-a434-492a-b2e1-c4bbef665fc4",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b4b02b7b-23c1-48ed-9005-e636c2f11ef6"
        },
        "item": {
          "id": "713cf417-ed33-4adc-bd3f-f8a2befc6f15",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9122873-f8ad-462b-b72d-9214a27b60ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2454af7d-7499-4a1d-9552-31a437bb8ac8",
        "cursor": {
          "ref": "f98c8b3b-2fa7-42e5-bdb5-7e07255f7dd9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "25300413-c4f9-4850-9f11-d92236ffc8f0"
        },
        "item": {
          "id": "2454af7d-7499-4a1d-9552-31a437bb8ac8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7da16591-4f29-4881-bdfc-07a38a54f762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd489c6e-61a8-4d7f-a02c-e75dd0d00857",
        "cursor": {
          "ref": "86fec4b2-75eb-4482-a38c-b34c3a6b4fcf",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "889d46af-84d5-4f08-a9aa-82f3d5ea948f"
        },
        "item": {
          "id": "bd489c6e-61a8-4d7f-a02c-e75dd0d00857",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "514d28f9-4644-47c8-9f5d-0f15e9db16d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c457c24d-e5d0-4920-828b-81dfddd0e1b5",
        "cursor": {
          "ref": "05fce87c-4f03-4203-b484-68f9ee062400",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b5baa4a0-8adb-4f7c-82a4-97c9dc9112de"
        },
        "item": {
          "id": "c457c24d-e5d0-4920-828b-81dfddd0e1b5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a1abb850-da3b-4e25-986e-a27f7aea5516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a2c0ec-00e4-4e4c-baa8-550920023b99",
        "cursor": {
          "ref": "ce197a61-846e-4c68-b0db-d8f6d52a0f71",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3663c825-e984-4805-bb41-308a3d3da19d"
        },
        "item": {
          "id": "80a2c0ec-00e4-4e4c-baa8-550920023b99",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bf8f92fb-fa73-4ea0-8700-c6c76872a31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067a036a-5d44-4169-ba46-73e0726c2f19",
        "cursor": {
          "ref": "fd357128-6f6d-4ca1-a245-d83afbe212bc",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "28a40c61-2d97-4c1a-8ca3-c18cf9608507"
        },
        "item": {
          "id": "067a036a-5d44-4169-ba46-73e0726c2f19",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "51f77ebd-8faf-4f61-b09b-be7b6959763f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283b85f5-cded-45b9-8012-9955f7df053a",
        "cursor": {
          "ref": "f7dfb27f-ddf9-49d4-9f1d-d439117bcbd9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9f5b6dc0-bded-4a2b-8684-da094675960c"
        },
        "item": {
          "id": "283b85f5-cded-45b9-8012-9955f7df053a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3c62843d-7852-4426-8de1-e3f284b36992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b93990-b12f-440d-9583-6bc4c3b15936",
        "cursor": {
          "ref": "d2364a36-14d7-4cc4-82cc-5da1c4a565e0",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f5b444c-b2a0-4a42-8912-eb86d13af504"
        },
        "item": {
          "id": "91b93990-b12f-440d-9583-6bc4c3b15936",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cc5bcd3a-d98a-4fae-bed9-19785604da23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc461b01-c537-4242-afe6-f31ea7bf7b96",
        "cursor": {
          "ref": "a97c2158-7b96-40e0-b9a5-cf6a8ead3261",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "362519b9-8275-4a56-824d-fdc1c13027b7"
        },
        "item": {
          "id": "cc461b01-c537-4242-afe6-f31ea7bf7b96",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "15c90173-0fc6-4175-bf75-b96cc79a3702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e61d341-1247-440a-9c3f-fd353d18f2f4",
        "cursor": {
          "ref": "a50b4054-33ff-4eeb-bed8-df22b1c60601",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e06bd9bd-2af8-4f9f-87bc-43b072172d68"
        },
        "item": {
          "id": "3e61d341-1247-440a-9c3f-fd353d18f2f4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e55c06d7-51f4-45b3-b776-afaed5767b61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77aabd4f-f97b-4492-8de8-89be7aa93244",
        "cursor": {
          "ref": "89d9df46-5c14-4a8d-896c-d4fd9321a696",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "82759243-80c8-47e3-95ae-451e7c9bdfbe"
        },
        "item": {
          "id": "77aabd4f-f97b-4492-8de8-89be7aa93244",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "42a339a1-f716-47da-9194-d32bb02a5026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fec2a1-df76-4400-ae48-896d6df2bcbb",
        "cursor": {
          "ref": "6b59f560-085f-451f-858f-230e618b8329",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "85fb3d95-a459-49d3-95a9-d2ea64af970e"
        },
        "item": {
          "id": "b5fec2a1-df76-4400-ae48-896d6df2bcbb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd51eca9-cb5a-4c06-bf2b-d4921a8f04bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2585fd0f-fc29-4b7f-88a2-85825b701018",
        "cursor": {
          "ref": "34057182-93b0-430b-be7c-fff13a70a188",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "474e3d66-f4d1-4f79-993a-38329cc85bfc"
        },
        "item": {
          "id": "2585fd0f-fc29-4b7f-88a2-85825b701018",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "55b7b8ea-1ce9-4c7a-b41d-1c194a0a1a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03f1ddc-a98e-43c0-b821-b093d1032b2d",
        "cursor": {
          "ref": "b182a91e-f7e2-4f36-b11d-9dfbc86395a1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a1b7c2f7-4374-45fb-a96d-976442531a37"
        },
        "item": {
          "id": "a03f1ddc-a98e-43c0-b821-b093d1032b2d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a2a40efd-edc9-4d48-9e0e-a763679ff4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba39245a-8589-4640-97af-e136797ba569",
        "cursor": {
          "ref": "7b7c233b-1263-4fa9-8400-44274c5de76e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "897153cd-c4d1-477c-9ca5-f1db99ed135a"
        },
        "item": {
          "id": "ba39245a-8589-4640-97af-e136797ba569",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b185f5e4-196c-462d-a15a-ee50093c2c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec74e0c-fb02-4ee5-8e24-9beb8c90e9ee",
        "cursor": {
          "ref": "43f8ed36-7508-49a1-95ce-38815c817143",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b5b72fd7-7e60-4b84-868f-e5a19368fc59"
        },
        "item": {
          "id": "cec74e0c-fb02-4ee5-8e24-9beb8c90e9ee",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9b1ca071-9b69-4345-80eb-5779d8e433a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b322be1-763b-4171-803b-1b166e5cd048",
        "cursor": {
          "ref": "97db2f90-789b-4895-bf11-f627f249faf0",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c4ae5af0-7fa7-4285-b711-1fdacbcf2c68"
        },
        "item": {
          "id": "9b322be1-763b-4171-803b-1b166e5cd048",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7caa0351-8473-4cb6-855e-b01c72a29f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ece984-462f-4796-96d5-435852153f3d",
        "cursor": {
          "ref": "40e62d12-4d29-4418-8b03-0ffddf32ef54",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "beff1f81-b72e-4a53-88cc-5cbb06b0dcad"
        },
        "item": {
          "id": "80ece984-462f-4796-96d5-435852153f3d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "756a4658-c7c1-41a6-8985-f8dca2127495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9662e09f-c42a-4b92-878e-e4cc3451fb90",
        "cursor": {
          "ref": "adc535c1-2dfe-4036-8423-8123b3963850",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "70e529a1-592f-4ef0-8d53-faea210a3b7e"
        },
        "item": {
          "id": "9662e09f-c42a-4b92-878e-e4cc3451fb90",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "16ac7591-1224-4a4c-8bb2-e2c2aca2c286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f004b6-cf46-4f96-8656-f9ae52780a52",
        "cursor": {
          "ref": "4af3b530-feb6-46d7-8040-14df5d033565",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "639cf2f0-5763-4d15-95ae-662b2cd5812f"
        },
        "item": {
          "id": "67f004b6-cf46-4f96-8656-f9ae52780a52",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8be63359-8cba-4aaa-8e81-a177319fb4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6983757a-5b7b-4d10-8bdd-17d4e50301c1",
        "cursor": {
          "ref": "12ac47fb-2fdb-43ef-8a8d-3460acfe0e7d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b01d3258-895c-48e2-b3f8-a6f9adbd8df4"
        },
        "item": {
          "id": "6983757a-5b7b-4d10-8bdd-17d4e50301c1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1dbe7a6e-5238-4960-b89a-1fc21b2565f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9573b314-e369-48ef-ae43-cab62605dcbf",
        "cursor": {
          "ref": "4bba5541-5be4-4e92-9cfc-a61f102e8d45",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dc724f16-ecec-46ad-8837-15b13545c72f"
        },
        "item": {
          "id": "9573b314-e369-48ef-ae43-cab62605dcbf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a9495040-0783-4f33-94ae-29cb476c79dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676a83f5-e30b-4431-9d56-42993c9aa4a1",
        "cursor": {
          "ref": "19dffaf4-6da9-4ef8-9c19-2947b8090c84",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cbc07d83-bd29-4d8f-925f-8a07d080322c"
        },
        "item": {
          "id": "676a83f5-e30b-4431-9d56-42993c9aa4a1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "70a3c286-bf7a-4f2c-b5ce-dabd41863949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0718a60-1d9e-47fa-ad7b-991d3bdea0d3",
        "cursor": {
          "ref": "ea6d5ce0-6d86-457f-af75-c1d095b255e8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "782fb671-2e03-4a30-ae17-17ff6d60a77d"
        },
        "item": {
          "id": "c0718a60-1d9e-47fa-ad7b-991d3bdea0d3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2f9b1245-01af-4f58-9f2e-4607881ed197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202513d9-6b79-4e57-806c-cb0355d36772",
        "cursor": {
          "ref": "3cc8aaa1-a942-44f2-8c76-d7324acb0efc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "13b248c1-6b8d-4bed-91a4-f4584fbe2b8e"
        },
        "item": {
          "id": "202513d9-6b79-4e57-806c-cb0355d36772",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c0f703db-dd6d-4b50-943c-900ae25a3742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872bd2fe-3019-4212-aabd-ff76456cfb80",
        "cursor": {
          "ref": "b3458138-accb-4019-814d-5c6283fd88ce",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "80f7cce6-fea5-4d3d-8489-2ebf47ebc683"
        },
        "item": {
          "id": "872bd2fe-3019-4212-aabd-ff76456cfb80",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e5f0a184-c242-47bc-b3f9-2233e56c63fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb94d43-9bf1-4792-8630-e81feb378bca",
        "cursor": {
          "ref": "e77684bc-d04a-49aa-8c82-bafd436ad0c9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e704e2e3-e285-45d4-a092-c316011fc495"
        },
        "item": {
          "id": "ffb94d43-9bf1-4792-8630-e81feb378bca",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8cda8262-765b-4d72-941c-ec2d2f8888b0",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "850b160b-44db-46e3-8fc5-d94fda02c6b3",
        "cursor": {
          "ref": "973a8c97-82eb-417f-8122-5bc8eb4a5a42",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d418978b-e61c-4af9-838b-78c9ea3cfff2"
        },
        "item": {
          "id": "850b160b-44db-46e3-8fc5-d94fda02c6b3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "063d8572-3491-40a7-a37c-5922cf3e7d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83789f15-4c05-4516-a287-86dea0c64f6f",
        "cursor": {
          "ref": "10fe5c5e-3563-441f-bea8-dd7b41182b39",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5f6dd687-56d0-49a6-b42d-9f9b768d97aa"
        },
        "item": {
          "id": "83789f15-4c05-4516-a287-86dea0c64f6f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8ba298cd-4be3-42b1-acb5-16b93ed322ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac30496-13ea-4137-83ec-4de63486a120",
        "cursor": {
          "ref": "0ac8176b-20d7-468f-a868-8768f83a2cf1",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d955f89d-2ee3-4286-95b7-eef13785ff94"
        },
        "item": {
          "id": "3ac30496-13ea-4137-83ec-4de63486a120",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c6f0a3ca-b908-4045-9dbb-b14d9bf43957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7013a023-337d-487e-9548-0c2e81465aac",
        "cursor": {
          "ref": "5a0de53f-ab78-4455-8bd8-0eb6e82d6943",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e74da9ac-5597-4ec0-a6c8-afc8739e6d19"
        },
        "item": {
          "id": "7013a023-337d-487e-9548-0c2e81465aac",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a2042222-d521-427d-affe-aa173f81aee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba88aa5-5904-4c16-b8a8-313c80b468c4",
        "cursor": {
          "ref": "067a21f5-347f-42e2-8a5e-266aefe7d27d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a34668a7-2136-4e6f-8e1d-9da4b724d059"
        },
        "item": {
          "id": "4ba88aa5-5904-4c16-b8a8-313c80b468c4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d385b109-89a7-4643-8d66-977d566afd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf903ce-614b-434a-b002-79a69aca07aa",
        "cursor": {
          "ref": "0ac91338-008b-4993-8547-2f214998da7a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bd9076f8-ccbb-45ac-b367-c524c7b8df7d"
        },
        "item": {
          "id": "7bf903ce-614b-434a-b002-79a69aca07aa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6122bfc9-b360-4bbd-8dda-c16ee0319c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e97092-2486-487c-b5d5-6ec0f53ca705",
        "cursor": {
          "ref": "af052ad5-3ba7-40d4-918e-531442995345",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a6b0c967-98d9-4e39-a463-c7123754cfba"
        },
        "item": {
          "id": "54e97092-2486-487c-b5d5-6ec0f53ca705",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a256f8bd-239e-4a2b-a80b-ea1fd955f2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8e3e18-98e2-44ae-a2bd-34f6fb401394",
        "cursor": {
          "ref": "956daec6-d0ea-4335-a993-065ce671e563",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f74df1a6-aa04-4f7d-be27-8807b188061d"
        },
        "item": {
          "id": "0b8e3e18-98e2-44ae-a2bd-34f6fb401394",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e65efdf1-e7bf-42c4-a75e-b43894e1cf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4e4414-020a-4091-9e64-c565c9827e90",
        "cursor": {
          "ref": "5efa845c-1316-43e2-99e7-eeae59870dc6",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "296bf4c4-506b-49e7-9505-23322385529e"
        },
        "item": {
          "id": "4f4e4414-020a-4091-9e64-c565c9827e90",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "689949d6-61ef-4452-a472-40c4f5e5237e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e298ba4d-4c93-4886-85a3-d61a55f542b3",
        "cursor": {
          "ref": "dd13c467-2916-48fe-bea7-96e4273d77f5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b11f90c4-d0c5-455c-8c31-ed03ae492edd"
        },
        "item": {
          "id": "e298ba4d-4c93-4886-85a3-d61a55f542b3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7d36fbcc-6818-40e2-8c6f-b7967174d2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9b3331-4129-4fe2-b219-7f8ec998bbf4",
        "cursor": {
          "ref": "c06ba35b-3b02-429f-8929-c2edf83bdc68",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e8fb3a5e-f920-47d4-9538-a0a494dba6b2"
        },
        "item": {
          "id": "6c9b3331-4129-4fe2-b219-7f8ec998bbf4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ea5a7fab-6f1d-4788-b0e1-23f349ff270b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db19208f-6b11-4ce0-92ff-7a5c990f7353",
        "cursor": {
          "ref": "46f528e4-0c92-46d6-b62e-29e4f295d8a3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dd9c1be6-0eae-4546-9c25-501b0b416088"
        },
        "item": {
          "id": "db19208f-6b11-4ce0-92ff-7a5c990f7353",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "40a516ba-dac5-4bc3-a0e6-63a26c1f11e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b4aec6-1999-412a-9a2c-b78a65ee701f",
        "cursor": {
          "ref": "7cf80f56-a9a1-4910-a3b5-dddd1f1dafb4",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fb9d47af-a183-4f00-af67-cc5377988787"
        },
        "item": {
          "id": "47b4aec6-1999-412a-9a2c-b78a65ee701f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "861c0e9a-55f6-44f8-a1d2-3033e362c704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dac2d5-d308-411f-8a07-7f262bd216cb",
        "cursor": {
          "ref": "eea9b791-46e6-43c3-8715-f15c6d4441c4",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "40289209-8b92-424a-9bd0-c4cd4313894f"
        },
        "item": {
          "id": "b6dac2d5-d308-411f-8a07-7f262bd216cb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "754b02b0-7412-494b-9118-76dc4fb4f64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bc79a9-6bb0-4849-ad30-f83c8b93b75b",
        "cursor": {
          "ref": "6db589c4-2dfc-48a7-82e3-f3e3ce30a2df",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f2e00df5-af52-4b3c-93bb-f1cd4767d896"
        },
        "item": {
          "id": "e1bc79a9-6bb0-4849-ad30-f83c8b93b75b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c061cc63-c7f6-4a5d-8c1c-ed4ce63fd655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da91b334-fceb-4575-b3eb-187d26f309ff",
        "cursor": {
          "ref": "338b52aa-9298-45cd-9f6f-00e198aa8d80",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a94fb752-e642-484e-b4d2-e2be91c5c20f"
        },
        "item": {
          "id": "da91b334-fceb-4575-b3eb-187d26f309ff",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f23b5601-5525-4351-863f-7bb35cb40de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70bac4e-b860-4538-a9ea-5bc9a233c399",
        "cursor": {
          "ref": "f2cd6a82-3842-4aa7-8e0c-f0a1ff4a4a18",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "59c48752-b3b7-4432-9401-e30142b121f5"
        },
        "item": {
          "id": "f70bac4e-b860-4538-a9ea-5bc9a233c399",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9bb7d9f0-2ec8-49ea-81c0-9b0903ae593e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904740ab-f6f9-4738-84f6-6d64cdb08a21",
        "cursor": {
          "ref": "a0c1ed94-e64b-4264-8981-7d79551788a1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "de28fbc5-9626-4baf-bba7-54e3b8f17188"
        },
        "item": {
          "id": "904740ab-f6f9-4738-84f6-6d64cdb08a21",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f1937eed-23ac-4d88-b30e-4ed76efe4116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef93158-910f-4dd6-81f1-c99888909180",
        "cursor": {
          "ref": "f67fe8b0-d647-4ddb-820d-8bef647e6a94",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "49faadfe-a8a0-4be6-8929-3d6e8cd6466a"
        },
        "item": {
          "id": "eef93158-910f-4dd6-81f1-c99888909180",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ac72f2d0-4b84-4dda-85bb-4b1667671fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb45ae8-c97c-4f5a-ad88-4fb3c31790cc",
        "cursor": {
          "ref": "d1f42865-ea98-481d-bca3-464c8a41a637",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2ac32f1c-3fcb-4b1d-989c-dfeac4ebec05"
        },
        "item": {
          "id": "2cb45ae8-c97c-4f5a-ad88-4fb3c31790cc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "87dab536-eced-4dba-a781-053413d77b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f78af32-f4dd-481b-8c47-8d1e8974d395",
        "cursor": {
          "ref": "99a43cc2-2959-4b1a-91b4-2800d2a9e9c4",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8210bc2f-96a3-4c75-9500-c5d2a48feb5c"
        },
        "item": {
          "id": "4f78af32-f4dd-481b-8c47-8d1e8974d395",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4761ffae-67c5-4ed3-9796-77391391c5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e309ff5-436b-499d-aed2-e34a70d254f2",
        "cursor": {
          "ref": "07387fbd-18b3-4acf-b1d8-02e3af81982e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f86a87a5-4d43-4e91-ae86-fd90cfa45ada"
        },
        "item": {
          "id": "6e309ff5-436b-499d-aed2-e34a70d254f2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "de832f2b-c7f0-4bd2-88eb-a4755a6ad14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b05aed-cd75-4bb0-b3a7-ab5c6a78981b",
        "cursor": {
          "ref": "920469e5-48ed-42ed-a4d6-6f3ddd072d12",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e44ffff0-23b1-45c9-af31-0cab6b5c73fa"
        },
        "item": {
          "id": "71b05aed-cd75-4bb0-b3a7-ab5c6a78981b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6ca8a30f-336a-4846-b7b1-81e0dd725f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc22af09-d91e-42c3-89a0-f20a11ffce05",
        "cursor": {
          "ref": "21c5fef7-f18f-4fac-968f-2a977d1363c3",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cc6a5bc3-4fa6-4610-9215-aba69f044c34"
        },
        "item": {
          "id": "cc22af09-d91e-42c3-89a0-f20a11ffce05",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e11c645e-e21c-4e20-aeed-7369a9f70ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92fa8ef-d763-40c2-ade3-0b865cef65ba",
        "cursor": {
          "ref": "0180152c-0a4b-4310-8849-afe015cf5751",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "80541052-da83-483c-afb4-16bfa55bcd72"
        },
        "item": {
          "id": "e92fa8ef-d763-40c2-ade3-0b865cef65ba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e054e0e7-5736-451d-bd91-b0a3ee468df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049b056b-67e5-4ebc-b42d-7f37b9210e07",
        "cursor": {
          "ref": "fbc5fb5d-9e51-4bd6-bf1e-e99c13285699",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e74428f-c5d9-407e-8d97-f8710a829eef"
        },
        "item": {
          "id": "049b056b-67e5-4ebc-b42d-7f37b9210e07",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9721fde3-7704-4c3a-a117-11486c08cc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6827b-c829-4e77-8059-9de2563ec963",
        "cursor": {
          "ref": "6e668853-2319-47aa-a44b-92b403aa37f2",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d2dfa960-840c-475d-8fb9-bc07fcae4438"
        },
        "item": {
          "id": "33b6827b-c829-4e77-8059-9de2563ec963",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0615d250-58ad-438d-9a85-779c680ccb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e23842-1e12-4fd3-ac8a-dcad8dce6c51",
        "cursor": {
          "ref": "0ac7b0a0-2379-41ce-a128-734fcf79ab94",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1ab593b6-d05e-49dd-ae45-63aa4b3cd059"
        },
        "item": {
          "id": "57e23842-1e12-4fd3-ac8a-dcad8dce6c51",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "94b0873e-90c7-4913-921f-081dcb465f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f99879f-95a2-446c-9915-b0fdfa7da1d1",
        "cursor": {
          "ref": "e070b453-0e4f-4cad-ae3a-efd1876969a7",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b17ca3d0-f01b-46f8-b5ab-c34c317e45d6"
        },
        "item": {
          "id": "8f99879f-95a2-446c-9915-b0fdfa7da1d1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "73a2df58-f830-4207-9721-2f4db9bcd137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbf7677-8d59-4a99-8317-4ebceb0d1fa9",
        "cursor": {
          "ref": "6f6045df-3412-4c9a-bbf2-ba6d10317c8c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "63ad8206-6a64-4453-9817-b06c1ab18184"
        },
        "item": {
          "id": "1dbf7677-8d59-4a99-8317-4ebceb0d1fa9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "26452e11-5fd0-4ea4-8db8-2b997e00819c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5af4e6-97aa-455b-92fb-5f4d5ea25fb5",
        "cursor": {
          "ref": "97eda170-da74-4564-aaf5-daa085bd9a2f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a775bc3-364a-4288-b7df-49583c97aa12"
        },
        "item": {
          "id": "3a5af4e6-97aa-455b-92fb-5f4d5ea25fb5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a9686b7b-5b8b-4fc3-90c4-06782f798507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b5410e-f360-444c-a4e5-7a3aaff4d6ac",
        "cursor": {
          "ref": "fae16db2-cc8c-4d62-949d-31112656db91",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "47ae901f-c81e-470f-8c87-65a240e0538d"
        },
        "item": {
          "id": "61b5410e-f360-444c-a4e5-7a3aaff4d6ac",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7fe4d80e-d6c0-4070-9e55-cb5d436b11e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfbb2a7-eb36-4b32-b6ae-a751cbc5047d",
        "cursor": {
          "ref": "cc11e3a2-66ec-48aa-8680-064b2f42d840",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8f016f1d-8e04-493c-91f0-df4df3c17b4d"
        },
        "item": {
          "id": "2cfbb2a7-eb36-4b32-b6ae-a751cbc5047d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7ceebf19-86d2-4028-9c3f-cdf63f761fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a9c171-f723-4a65-89eb-6a3de7ca54d6",
        "cursor": {
          "ref": "77c9976a-f6e9-4f9e-a235-47e778ba6ca5",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "77f378fa-8d62-4906-9419-e978c90a5012"
        },
        "item": {
          "id": "85a9c171-f723-4a65-89eb-6a3de7ca54d6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8270d112-5d65-4361-9668-a142ca617895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc2236a-1d68-492b-832e-b19db57a75b0",
        "cursor": {
          "ref": "de702b3f-5b08-4034-bb62-010422e47217",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bdac28f9-4917-4949-9097-5996a6af39a3"
        },
        "item": {
          "id": "8cc2236a-1d68-492b-832e-b19db57a75b0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "913bc2b4-177f-4d64-bd98-e5ce9ee9a87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372956d9-2ea0-4d4d-bd0d-1e43aec26887",
        "cursor": {
          "ref": "4f62e2b2-1c9e-4565-89b3-1db53225780a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "11fff888-d540-4bc6-b6b3-d862082d5f9d"
        },
        "item": {
          "id": "372956d9-2ea0-4d4d-bd0d-1e43aec26887",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dbcf74b0-13d6-42ea-8e8b-75d8ccf293ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f5f433-1926-4fdc-841c-7b830090258a",
        "cursor": {
          "ref": "322d5a11-4ea1-411d-a542-6f0b69be9b7c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0853ced2-e7c6-479a-874b-470e3bbe5a3e"
        },
        "item": {
          "id": "e4f5f433-1926-4fdc-841c-7b830090258a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "edb9c06d-8439-4cf5-8f54-9401351caedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792390df-4045-4ef4-85a9-83cb99f1451d",
        "cursor": {
          "ref": "4e631b13-4d84-4789-a79a-1e2f7a319fa8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ef28b4e7-2900-414c-b0d9-d0a9da09e623"
        },
        "item": {
          "id": "792390df-4045-4ef4-85a9-83cb99f1451d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4037ccac-29c4-4360-9893-92c8a1a00f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2c93df-b307-4c85-b20e-fb2a30950102",
        "cursor": {
          "ref": "682c1d44-0a62-4a9e-b428-5df5e40bffb4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "97b8c051-3c9f-45fa-9515-0200c61e54e3"
        },
        "item": {
          "id": "be2c93df-b307-4c85-b20e-fb2a30950102",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fad9fda0-04ed-40c0-b855-ffc087fa0c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fb2a7e-89f9-4e6a-ba42-99facf9b0254",
        "cursor": {
          "ref": "f0a7ec54-1e3d-4219-b6ca-475268c77684",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e796fb18-4bd6-41f4-83f1-7ba7ca4e634d"
        },
        "item": {
          "id": "41fb2a7e-89f9-4e6a-ba42-99facf9b0254",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4de2c386-b58c-4674-9a67-d79ef9ec00f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6defbc73-4266-46d9-a514-06d9c78f633b",
        "cursor": {
          "ref": "f6fe7a02-d0b8-4dc8-b56b-528abbb63233",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "762e9c5e-17f7-42e8-a969-f6560c532957"
        },
        "item": {
          "id": "6defbc73-4266-46d9-a514-06d9c78f633b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "98eabf01-758b-40a0-bc8c-5312e47b28eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fdc22a-cc91-478f-8427-4c59c157c273",
        "cursor": {
          "ref": "6b30f634-67da-4e0e-bd05-30e07a8d45d8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "54e0037d-0ba4-4ead-8f1f-7e4bba14cc6d"
        },
        "item": {
          "id": "c6fdc22a-cc91-478f-8427-4c59c157c273",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1b497c44-444e-4a08-b368-276dfbbb0fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9297a034-fcfe-4ffd-9d0a-4b0f97797ce9",
        "cursor": {
          "ref": "5929cb9f-8ebd-4857-b9b9-d313e41cdf48",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0221767c-803b-45ca-a114-dc4ba71a704c"
        },
        "item": {
          "id": "9297a034-fcfe-4ffd-9d0a-4b0f97797ce9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3a0bf8ec-f560-4746-b0e7-63ee6dbfb1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6b2c49-0c99-48a7-ae7d-4c3eb2413fc0",
        "cursor": {
          "ref": "8c5d27ed-866c-4b38-b685-eec64c7ebafc",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "31e9985f-12fb-46db-a86b-3aad8b018f62"
        },
        "item": {
          "id": "1c6b2c49-0c99-48a7-ae7d-4c3eb2413fc0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a93bbd00-29ef-4628-a286-3134351078a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815aeb32-d7cc-4c37-becb-702fbafb1a44",
        "cursor": {
          "ref": "4c7fac2a-9049-464f-945c-36d10980ecc3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "08e13813-0223-465d-a824-44de472772d2"
        },
        "item": {
          "id": "815aeb32-d7cc-4c37-becb-702fbafb1a44",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "090c2b79-4bb2-46d2-b326-67463051f5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3a5a89-3272-4107-a49b-4222e9185272",
        "cursor": {
          "ref": "4a41ab41-d5d7-46e6-a071-f95cb3715435",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "38a421f9-800b-409f-9011-07688eb490d3"
        },
        "item": {
          "id": "6a3a5a89-3272-4107-a49b-4222e9185272",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e452cdba-21a6-4cfb-8870-e50fb5495ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8f151c-dedf-4166-895f-de08be0f471c",
        "cursor": {
          "ref": "8be02388-d34b-4dee-97ec-5bdb26cce1ac",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "143e516b-d85a-4f00-a049-212badb48e3a"
        },
        "item": {
          "id": "8b8f151c-dedf-4166-895f-de08be0f471c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e1c84636-3d1f-4848-84d3-f8ce74605210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d839ac31-785f-48ba-af8f-9593f9b05b1e",
        "cursor": {
          "ref": "b9a667a1-e04c-474d-809c-d4ceb893648f",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "56b7b98c-429b-475a-9f6d-c05b0af4c084"
        },
        "item": {
          "id": "d839ac31-785f-48ba-af8f-9593f9b05b1e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3ce783b0-6fed-4338-b0db-081b6ed0c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a60584-d34c-47a2-962e-5eccb5321508",
        "cursor": {
          "ref": "154d4f7e-c3cf-4446-b7ab-d443ca898aa6",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "661a8080-68ef-4701-908e-55807ae17308"
        },
        "item": {
          "id": "d2a60584-d34c-47a2-962e-5eccb5321508",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cd08eca8-2c8c-40ee-a847-b82cab4f2ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe68599-686b-434d-acfc-340c17d467df",
        "cursor": {
          "ref": "7b5e69f5-1d81-4e6e-91f0-e962d7f755d2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "29df21e8-33ae-452e-99dc-5ad6756c419f"
        },
        "item": {
          "id": "abe68599-686b-434d-acfc-340c17d467df",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "09bfc1e1-a8ff-48fa-a800-4bc8068ec411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74bcbb-7f6f-4dd8-bbbc-6cf7be92e7be",
        "cursor": {
          "ref": "1d51b7c1-9080-442f-ba1f-0b7738df99f9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "533c8f56-3bec-40c1-b5df-9e87ed733d36"
        },
        "item": {
          "id": "5f74bcbb-7f6f-4dd8-bbbc-6cf7be92e7be",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f2324fcb-7f1d-4ce2-bc3e-0e05f3f55221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389bdb3c-8f4f-49ec-96d5-ece3eb733b81",
        "cursor": {
          "ref": "81ecc41d-e9c2-4ea1-91a7-40c891d6689d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d045a9d6-2f57-440a-9f5d-2f46fb1c0d1f"
        },
        "item": {
          "id": "389bdb3c-8f4f-49ec-96d5-ece3eb733b81",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bb1fe2b9-06d3-4850-8611-9977758cde0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a874ef-ec58-45a0-ab97-9240a77b62ab",
        "cursor": {
          "ref": "cbee1c27-c95f-4dbb-ac23-b04d1ec902f3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d8631547-7182-41ec-986c-e44bea2b832e"
        },
        "item": {
          "id": "c3a874ef-ec58-45a0-ab97-9240a77b62ab",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "663dab22-5ad9-498f-b3d6-605ef0d465e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43a67e2-4ab2-4e59-8ab8-ddf5e0e3660d",
        "cursor": {
          "ref": "4b651cab-dd8b-4611-ae9a-e8a50227dbc9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "309faba6-6162-4813-99c6-c0b6c779fa49"
        },
        "item": {
          "id": "d43a67e2-4ab2-4e59-8ab8-ddf5e0e3660d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5aaa2324-9d97-47f7-bb7f-9aafcf0343bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02d3007-9928-4f6c-85f6-399c16808071",
        "cursor": {
          "ref": "7e8c7e6b-6ce1-4331-b6ec-fd3cbb60c680",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4878e26-2d00-439e-a0d8-b28dd55e8d2d"
        },
        "item": {
          "id": "e02d3007-9928-4f6c-85f6-399c16808071",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "24f0c98a-1d3f-40f3-8904-973bc2869c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b94838-420a-4384-8fd8-bee3b17a02c7",
        "cursor": {
          "ref": "69cbf46d-10d4-46e3-9e62-3c7a40500daa",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "be7c3a00-e42f-471a-9aef-ef02c3c7615e"
        },
        "item": {
          "id": "03b94838-420a-4384-8fd8-bee3b17a02c7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "de7fd10b-f763-4a4f-afb0-b62f2328a5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834054bf-7fd7-48cc-b120-4111d45462a4",
        "cursor": {
          "ref": "131434bf-2fd0-465a-97b9-0d39b25d8535",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "be6158e5-fd6b-4841-84ee-3abfebfb55b0"
        },
        "item": {
          "id": "834054bf-7fd7-48cc-b120-4111d45462a4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "21f74a4a-489b-44c8-ab71-52530ee49248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43571765-4f64-4eb7-9212-b2ca407c9534",
        "cursor": {
          "ref": "d4e4b4a9-c133-4cd2-9016-80eb3e4ef1db",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9cd2950a-c40a-443b-9c50-fe851bc1f647"
        },
        "item": {
          "id": "43571765-4f64-4eb7-9212-b2ca407c9534",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9f129a55-6691-4ed0-bc9a-31a8eb177984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd78f37f-8149-459c-a594-a32240a194c8",
        "cursor": {
          "ref": "461ba8fb-3c8e-438e-af1c-0b070f561d89",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6fedfe92-d939-475d-bdf0-e6be987b8a11"
        },
        "item": {
          "id": "cd78f37f-8149-459c-a594-a32240a194c8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f7e60119-f7c7-449a-8cf6-452a629f4c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0124e5a-6603-4e58-991d-7ae89c4fd1a3",
        "cursor": {
          "ref": "db623d39-359d-4243-b639-c4063c8d9b9d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1d25c562-de0a-4c74-8bee-34335ede972a"
        },
        "item": {
          "id": "f0124e5a-6603-4e58-991d-7ae89c4fd1a3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e6ebe47e-7c4f-406d-9409-0d1a64691611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe8bb32-183e-4943-be51-aff5bbcee7f5",
        "cursor": {
          "ref": "727cd234-13b6-436e-9c92-b4cb77c0bb17",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bd8cb77f-45e8-46d4-8010-497f1ae07322"
        },
        "item": {
          "id": "5fe8bb32-183e-4943-be51-aff5bbcee7f5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "13792ce9-2af0-478b-89be-c2481c443488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b457fa6c-200f-4224-9255-e2114aa459c3",
        "cursor": {
          "ref": "9c73d30d-1247-47fc-ab7b-24ef491ac654",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9c29e6b8-b496-4254-89a1-4703f95f0940"
        },
        "item": {
          "id": "b457fa6c-200f-4224-9255-e2114aa459c3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4fb85acb-b4a4-4de6-9523-51095a35317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43331dc1-6874-433c-990a-42297b56534c",
        "cursor": {
          "ref": "09cfc0b2-da18-4fb4-a158-98a01969c12a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9d11e735-36c0-4188-a827-a482a4292396"
        },
        "item": {
          "id": "43331dc1-6874-433c-990a-42297b56534c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "324ecf0d-df95-47a6-958c-d6c2bd3880f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089020aa-d0ec-4cf2-9f19-62005b61aa50",
        "cursor": {
          "ref": "1ebadd84-834f-4158-a749-46f7e2c62719",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7ae6171f-3636-4e56-b8b8-15a598282e22"
        },
        "item": {
          "id": "089020aa-d0ec-4cf2-9f19-62005b61aa50",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ee256e23-7e63-495e-a7a8-342a09c60ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85db229d-291d-40ef-870a-0a15544b3acf",
        "cursor": {
          "ref": "2248f3e7-5c44-4b6a-aa70-2549a7f29450",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1d390239-5fc0-4a61-b927-73e87a583682"
        },
        "item": {
          "id": "85db229d-291d-40ef-870a-0a15544b3acf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2cbc93d0-1868-46f8-8e9a-001d9682bc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84871b84-306f-4d07-adf1-c347a120f4b3",
        "cursor": {
          "ref": "89fcbfda-7767-48de-a043-15c17afa84a3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a2d36fa8-6eb3-406c-900a-f323ff01514b"
        },
        "item": {
          "id": "84871b84-306f-4d07-adf1-c347a120f4b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "db5835c1-cd04-4124-af37-e522cdfe1118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8ce45a-ee82-4894-b728-d55772710861",
        "cursor": {
          "ref": "cfe71c4d-b656-4e03-8243-6b62ac67e38e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c778c914-efb0-4141-955c-8eaa70798711"
        },
        "item": {
          "id": "9f8ce45a-ee82-4894-b728-d55772710861",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "68a93acb-53d3-4366-9d22-c62979ae70f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8925438-1677-4b13-8a75-156ddab39d52",
        "cursor": {
          "ref": "033857db-7b9a-4e5c-825d-cfbf1f0a134e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bc59d707-6c54-4569-909e-675cacc06ed8"
        },
        "item": {
          "id": "a8925438-1677-4b13-8a75-156ddab39d52",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9bb9c780-886e-4395-9423-e09218b2ded4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b73956-537e-411b-b142-556d69bf773e",
        "cursor": {
          "ref": "e26823b5-b35f-4692-9e51-fcffccd16c6f",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ce2a9b23-62db-40ff-b7f7-d61f767923f3"
        },
        "item": {
          "id": "26b73956-537e-411b-b142-556d69bf773e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "be9223c1-6e52-45c2-85dd-9a038659e737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44484804-dbeb-4301-b6b9-34ae0ebbc6be",
        "cursor": {
          "ref": "6b9317de-d0c3-4930-94d7-061521eb119e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "58273e2e-2018-4601-987b-bc1c7f25d1c2"
        },
        "item": {
          "id": "44484804-dbeb-4301-b6b9-34ae0ebbc6be",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "acf4222a-e2cd-4683-b44f-c4471c2771d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa142b5-8f28-48b7-92e7-b6df1abc80f1",
        "cursor": {
          "ref": "523bad3e-1be6-4fb3-b415-44989d9a2da6",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "29fc4429-cc03-4632-a458-4e80de7a0c9a"
        },
        "item": {
          "id": "7aa142b5-8f28-48b7-92e7-b6df1abc80f1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a39ac6c8-972f-4220-ad0b-e5c2ed41a934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a83604f-43a4-46ac-9cc0-86b56a48d36a",
        "cursor": {
          "ref": "09b27e8f-d60d-4447-ac13-2964672da2d9",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0a45b689-c5bc-44ad-a4b9-77c2d36cfd3d"
        },
        "item": {
          "id": "6a83604f-43a4-46ac-9cc0-86b56a48d36a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fa2bf9b7-3916-4b1b-8b81-3f10ee58f007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65947f01-02fb-4323-a03d-b86a25daee5b",
        "cursor": {
          "ref": "390a4a70-7af1-4968-a023-4b693255a2ed",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "24d52eb9-d555-4198-8101-d1ec5af0f162"
        },
        "item": {
          "id": "65947f01-02fb-4323-a03d-b86a25daee5b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7647da16-cee0-45e6-ad3f-40a4de742efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4329b822-3567-4e18-b1e9-56233267cd6f",
        "cursor": {
          "ref": "ad0cb9f5-b306-497b-badf-82acdbd4931c",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5153ea50-5a98-44ae-9c41-0609725e661d"
        },
        "item": {
          "id": "4329b822-3567-4e18-b1e9-56233267cd6f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3201fa9c-4424-4103-98dc-100cb76c31ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50379870-e1fa-46d7-a7ac-c4e01d750441",
        "cursor": {
          "ref": "3d5700e9-d228-41da-ac98-4d1cee1ac939",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ea782cae-3c38-4b63-b07a-078fa0d2cf78"
        },
        "item": {
          "id": "50379870-e1fa-46d7-a7ac-c4e01d750441",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "223845d8-d1df-48cb-b86d-a5d37210df5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0eefd3-c17e-47dd-933c-c53411c1f256",
        "cursor": {
          "ref": "ae5bcc1a-54e8-4778-9eb4-af8db2634a3f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8f9e2b6d-6945-42dc-890e-be8b6865fafd"
        },
        "item": {
          "id": "ab0eefd3-c17e-47dd-933c-c53411c1f256",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e9b22033-745f-4fb2-8cb6-926b33a75754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b06022-e5a7-4a6f-953d-b206a1317880",
        "cursor": {
          "ref": "83b42f26-a26e-4594-b0fc-f1b958804949",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b39010fa-2e3c-4b5e-82dd-df9b1899bf6a"
        },
        "item": {
          "id": "f2b06022-e5a7-4a6f-953d-b206a1317880",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d3b71fef-ec1b-49fe-9b0d-c7d37af55377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86003f72-9b0f-4679-ba99-95d5f7c1664a",
        "cursor": {
          "ref": "f17041c0-16a1-4762-a461-7ddca6ab166d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1c80220d-0b2d-4f59-91a1-c13cea959c4e"
        },
        "item": {
          "id": "86003f72-9b0f-4679-ba99-95d5f7c1664a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a1dedd6e-34a6-4803-8fc1-d2f2e19c3d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a8ab12-5bd1-4c93-9ea2-17c30b364f30",
        "cursor": {
          "ref": "efd6f962-b0a3-40ac-8f75-6f775025f1f3",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d47a8f60-4d43-40e1-8aac-5a0212153261"
        },
        "item": {
          "id": "63a8ab12-5bd1-4c93-9ea2-17c30b364f30",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2beb6a5e-0886-406a-adf6-dc4adf1fb23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ba5cd0-2301-417c-9ff0-b027b68c00c6",
        "cursor": {
          "ref": "b9645aef-0987-4412-a5db-6fbe23475832",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0f3c7821-f3e4-42c6-b9c7-a43ff65396de"
        },
        "item": {
          "id": "06ba5cd0-2301-417c-9ff0-b027b68c00c6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c63e893c-8a54-441a-96f9-95bdbd9e88e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af6d4b0-76ce-4e87-8aa1-3d8316ce859c",
        "cursor": {
          "ref": "7aca2ca3-8b17-4c2b-b3b1-d94d9540101c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f3ae41a5-ed6f-4ac0-a548-84389914e132"
        },
        "item": {
          "id": "8af6d4b0-76ce-4e87-8aa1-3d8316ce859c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "755d8b8e-ed94-405a-9614-0f2535991f6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f88ea91-a434-4abf-8646-bb9d747131f5",
        "cursor": {
          "ref": "46a32502-cf2d-4c03-a7e4-7b0124d941c6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "df88a8bd-9648-4060-bed5-0fcdd2164378"
        },
        "item": {
          "id": "8f88ea91-a434-4abf-8646-bb9d747131f5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "37154f9c-1672-46d7-9dfa-6d2f860bbbf4",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64729e0-5187-4900-8e77-4ea65ba1f3f4",
        "cursor": {
          "ref": "f81f6339-f271-49d6-a8fd-2982a7610ae9",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b4b70fcc-11f6-49d4-b339-3c3640385c7b"
        },
        "item": {
          "id": "b64729e0-5187-4900-8e77-4ea65ba1f3f4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "982e867a-2560-485c-acec-c197ffe49a91",
          "status": "OK",
          "code": 200,
          "responseTime": 3984,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b244bbea-c4b9-4327-bb09-ae0713ee07b4",
        "cursor": {
          "ref": "14dabfa7-0a9f-4442-897d-782ff7cbaf4a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "050a8551-9af1-4c4a-989f-749801e27389"
        },
        "item": {
          "id": "b244bbea-c4b9-4327-bb09-ae0713ee07b4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "17a78a14-5221-458c-8311-2fa27bf015e4",
          "status": "OK",
          "code": 200,
          "responseTime": 4317,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d711f13-8453-462e-92a2-2b9ccbd196b4",
        "cursor": {
          "ref": "cd9b8c6a-afac-46e2-bc6b-8f6f4c19c280",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a838ed40-8171-4914-bc95-10c791d10cce"
        },
        "item": {
          "id": "0d711f13-8453-462e-92a2-2b9ccbd196b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b410ca58-2e67-470f-b107-ec3eb737c50d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d711f13-8453-462e-92a2-2b9ccbd196b4",
        "cursor": {
          "ref": "cd9b8c6a-afac-46e2-bc6b-8f6f4c19c280",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a838ed40-8171-4914-bc95-10c791d10cce"
        },
        "item": {
          "id": "0d711f13-8453-462e-92a2-2b9ccbd196b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b410ca58-2e67-470f-b107-ec3eb737c50d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dea28d-0455-483a-9882-44c2f4d3a5e5",
        "cursor": {
          "ref": "58f11a57-35e1-4495-80dd-fb91b996300a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a56bb344-a229-48db-b189-11ba55b25109"
        },
        "item": {
          "id": "16dea28d-0455-483a-9882-44c2f4d3a5e5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d78fafb-e863-40d6-b5d9-af7714e12934",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1048c53c-fb4b-4857-999c-4b64e39ea21f",
        "cursor": {
          "ref": "fd5ef0e6-90a8-4f2d-a849-0afe4908262a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1a095e9c-2885-4476-b7af-bec9d91a28ca"
        },
        "item": {
          "id": "1048c53c-fb4b-4857-999c-4b64e39ea21f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "80c7feb4-0e1f-4a8e-b383-cb523b050aa5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}