{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7ea0d6ed-a5d9-427a-9b15-8ff1e3bce3db",
        "name": "Clear Cache",
        "item": [
          {
            "id": "833429f1-836d-41b6-947b-198368d14856",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44660590-f582-4be7-97a2-c9a516fbd266",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c29347f0-6ccf-42a0-91dc-b46d560efbef"
                }
              }
            ]
          },
          {
            "id": "2a771ece-731a-4c9f-a3b7-5be4ef76fdb0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b149f2c-9616-4c6e-b4d1-3adafcd0484e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7fec6d9d-b86b-4b6a-a943-887142c69379"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cf32fb8c-75ed-4e04-b8ff-f09d57c31f65",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "58d6a77e-a48e-4ddf-8c63-0b375e694c0a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad6c6c66-6420-4720-b4b5-8b644ae0c141",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d58d4d12-a1f5-4e71-82d5-8d5bdcaed14b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "803c6239-9e0e-4449-8186-5e119a025bb4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fd81bf6-4682-411b-9b92-6f5d168f0a95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d4ac3dd-8b90-4e38-b49c-132a44ce2d0e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06e327e9-a677-4e94-8c1e-6fb61b5e4ce9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3325665-961b-456a-aae3-d3995ef894d4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef71b27d-69f2-4127-8bc5-5d7ab93cf02d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "430edb19-20c0-4f8d-9688-e260d14eefd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76633db0-4966-40e7-a2af-f1dc395638ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89ed1584-6b60-4325-9cb8-d137d8d08232"
            }
          }
        ]
      },
      {
        "id": "6d5d256a-5da8-43f4-8a8d-7aaa6fa91ce8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "15896013-b67e-4c00-8c41-dcbc010f2c53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fcba7dc-36f8-4f7f-9783-df09411bc816",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "513650a9-a443-4574-8f88-0e492e9739b8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed047b1-f8c9-439f-a3ae-d27ad42b969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc35607c-3c1b-476d-8c38-3a5e938389fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c06477-61a5-4a99-930f-e4c1b9c83682",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f63273d-58bb-4386-aa92-1a9be453581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eec9c17b-0c80-4b31-bfe1-c7d347fbb32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b91c83b-38dd-43e3-9fcb-719bfef4f5b6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e1dca1-9fa3-4684-a448-74f3b9269653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b2db815-61da-4b51-b77f-463614b04484"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6199ffbc-af42-4de3-946d-ab379b5c21d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2984536-b081-42d9-b56e-cf39c99a1466",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ae2b98-35a6-4546-a552-91e16b1b41dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "424b5eac-2798-48ef-bd7f-630cf2758e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698e98d1-ea10-49e9-8bf7-5be03e96915a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c13e7a6-94c5-466f-a847-c0e45add2f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3120fef7-a10a-4158-b2df-948db62a283c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8156969a-d548-463e-b1b4-4817736b2492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9b7706c-c7c9-4b38-a936-10a44fbed7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0592d2eb-19f2-4357-aec6-6ab457938e4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "6e7500a6-8c91-44ca-8f2d-b6e9e211c789"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e092f120-ca1e-4983-ba63-d56450ec8ad6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1bbad152-a216-42e2-a84b-6476c821a281",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5b8df39-2eaa-4474-9548-3fd1eb719620",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b02401bc-2d8b-45c7-a08e-a3e77a4b9f53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d58e0a18-aff2-4cf5-9bdf-7ff311fb7658",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0886c267-46a8-43b3-a8e9-26d12218ea44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a19ae858-c8f4-46d5-b8b2-efd10efe37d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5874802-f3f1-4854-9826-9bc514007f93"
            }
          }
        ]
      },
      {
        "id": "e8f3f823-3d8d-43b8-bfec-ee834a196487",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7b5a87d4-3df2-44e4-8564-1cc6e599fa31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1a788ac-e052-47f2-8040-f36eac5df2dc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e2362acd-a16d-46ee-9203-ce602ede1003",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337c938c-5557-4ee1-9bb6-b013709cd070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed80313b-aef8-4a2d-979f-e90094b46992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37413bc4-47c0-4e46-9c67-f6ce3d8774a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21ef42c3-6936-4c3e-8431-8efd0c385d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469989d4-7e0d-4c4a-904a-54e55c2d5a99",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4569150b-6b96-4fde-ab85-1994c30406c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23fe1c9-64e3-4f50-a0da-e4fcfa831e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a5e231-460f-45a5-97b4-38edfc8600ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17498243-2e0d-4b1b-bd34-8a4d1dba0235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf44af4-ad7e-4680-a363-0acab77851a0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e055a5-1f02-4736-bfb7-3196cad9ab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0228b9-cee1-4f98-9e67-eb01b3ec6f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fb0640-0b06-417a-9e92-17d671d15312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ac8b550-e7a9-4563-83c9-49bd8b5f8bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea365ec-ed12-431b-b868-38e10daaa2bf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f847d5-5b33-4cca-8017-c5ad45b0c40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6b7592-a366-4dec-b022-f376d1ccdaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe70c22-b9f2-48bf-abfc-4c6f43f971c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8405b0c-c5d6-4df9-afac-566489576373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf2b491-619c-4618-9c5a-3a6b5419db4b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a62ad14-198a-4bf9-a0e2-80cb523d9b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23a9e02-a7f5-4414-a491-999b755a76b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa712977-cf99-4c0c-a3bc-51d11ec85e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e954986a-1ed3-4994-9b0f-7a8520783cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f54139-36bb-4014-a918-78a90ede3b42",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b20cdc-dbc4-4577-89eb-3e0ec04a00f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c479b4-d2bd-419f-9e90-58f55adf88f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16798ab7-4140-42da-a88e-7a7b60ae69e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6fd1254-58c9-4869-b6e8-c76e271c9527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b735d8a9-0934-45f5-a496-6c3d7814b8eb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4422d3ee-c095-4398-bb0c-e9a71f69b86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31f0e7e-4dcd-4ba0-9b38-a6648cb91f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0369f8-0e18-4a85-9a5b-1a966255fee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61843378-3050-4806-a385-9441ddee5234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5eef9a6-e9ab-4f2f-96a0-aafa954e5095",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc8210e-3d66-4cf0-a3b8-cb50d82cf416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4877fd98-5734-453c-b2c6-b41989b110a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870a2392-473a-43b1-a59d-872620b0ca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5324e4a6-1ae8-46a3-a4c3-ead847611509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3891eacf-07cb-4059-931a-fe07ea06a34d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79ec655-231b-4fc4-b381-9d611c3420d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e15e814-0beb-4a3f-8110-9cd183ee1cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e39feb8-6977-4653-b97a-84efcbf6da19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b7794c-ac8a-4c94-9595-3d99b196de87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539ecf8c-859c-4500-920c-1f0284f9d05d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1f17a9-8e21-4163-ac26-0d7e4d05aaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ae2399-360c-4cfe-b2d2-a74f5049cf45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76eb4056-8b1b-45d4-943c-c0a4d4c6f062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c8a00c4-15c5-4416-b5c5-a15147775c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48bceb5-8d7c-4c11-97e5-30dc52bca15e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea08a7f-5682-422d-9f4e-507ebd161975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326de6d4-3e39-4b7d-859a-dca59715c1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135394ce-fbd6-45e9-9dc6-991bf8819ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4f1d2d-5282-460f-90a1-129667f0c623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76712058-8907-44be-b952-f9bfef041be0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8014b3-7a38-4009-8368-74866dd2a2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08669da-6a8d-4681-9c82-270cc7b2abda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6dfd81-c5ec-46b1-836a-08c3aa037f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb87dfbf-72d4-4721-b64a-cd5ad14fc336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeb50e0-2f92-450f-bb61-893869d264ef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d264f1-5a4a-4ef9-90c6-64b843a0b96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a97589-c379-432e-92b6-600452e030ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a8b3f5-8f42-4d8e-8cd9-aca964af02c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17ed3244-ba8b-40c1-9602-4b2980cd55ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6df454-ab34-429a-9e18-6fffe4b4b5c9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28911efc-700f-4751-ad0c-50c4328fbffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb38227-0019-4426-917e-ca93f7011c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27473f4-8b25-49d9-ad18-e04465cef97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7923a858-6b10-4965-927e-cd1d885e6f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6284d6bd-d6f8-42af-a0cd-e16095bc2e65",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e14c9d-4a1c-4dc5-9b53-4a2a248c39ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685e1925-b367-4ce8-9908-0177d616fbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61becbd6-ddfb-45e5-b11b-4cbf67d71fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4adda492-055d-4df3-b106-616b4f36a659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f903e7c-dc7f-46e2-91f1-dd289200d56f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca61a52-cf1e-4938-aef7-bcd244bc9e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0444915a-dfe5-48aa-92d0-94c2d4d7a5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea92937e-6b3d-4681-b032-a6dfdda1db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e700418-8163-44a0-adfd-27a387678818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb83ad51-0bf7-43a1-a966-6907064043a5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47700f6d-4eb6-4ddd-9b74-04fd4469ad56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e130a6e-0c15-4fe9-8199-83a8a7edf433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f628259-9d51-4370-8f70-c95cd5129492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e755a39e-4857-4d3b-a902-9a30d7cf0482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df0bc78-92fc-4b22-a914-fe5c2fcde8fd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac957ff4-bb79-49a8-b2b3-4a24f9eddcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169e5ee4-6b05-4e29-a239-e36139099b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebedf6ae-d5e8-4edd-a01b-389f7279a74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "df6a00ba-0318-4d5f-9ca4-37d26fe71a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3318e19f-a67f-4413-8dc2-850fbc7a1203",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2436c1c3-909c-4b91-b207-1b4f884476f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc6127c-b724-46a7-a847-d488dfa790dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e359c89b-2e74-4142-90a2-b378db1e2d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "967bfc5e-a75d-4e87-85fd-08768690c95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4def2667-584d-4c29-8ea9-99a9169e58e4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0cc1cb-3e3f-477d-98b0-7817262e8d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914eba97-cfb5-4062-8eda-82d38e105ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c791618-ed64-4054-b23b-4a4444ab4909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49c52810-dea2-4291-96eb-76e7b0a6f36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26e3251-73c0-451b-b2bc-05c95070da13",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dfbd15-65d1-4341-846c-a3797abd9a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66970d23-c2dc-4c02-85c1-5552355105ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced4ca52-14a9-499a-a859-d49ccd86a969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6193eb4a-17ba-4688-9f7b-f02855329e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb807fa-6af7-441a-8dd9-5f2827109dec",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e238316-23be-4e5c-85f7-6359b6e5f2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b7c803-99b1-4e75-a980-4c60bf4ccc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c2ba8b-8254-4629-a594-db86e6ebdc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "150e2059-cfc4-4462-a188-f0a56c7ef01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8454394c-cf5d-43f0-be8b-6c19366607fb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0fc2bd-2f7b-424c-9579-438d275db949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96924592-cb39-4936-8545-7098afebc62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120c3ba1-f3c9-4127-8db5-1196e483c839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a32339fe-5ed6-4eed-8926-d5dd15341161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b4e3bc-8bb4-4c6f-998d-a8d615079c10",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943cd5ab-44df-44bd-8cb1-13b14c56c73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb1572f-fa85-47d2-b656-2e5799e6a6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2bad34-fe38-459d-b836-2fc982361c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb70bc02-3936-4f3b-8425-ea44773fb003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babfeea1-62f9-4597-98f7-47715bbf7392",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eed3737-4be6-4f3b-b54d-98583cf741fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e29d55-3013-4724-b8fa-7d485741764f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fff33f-f1e3-45b8-9653-2d65e2452bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f94b847-e58a-482e-92d2-4ef1b6eb2cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ff1a69-7e0c-47d5-b30b-f5e751a22540",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c2f316-b48f-470e-ab12-48d34ec0b3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e3ca7e-bb2d-42a0-b9bd-b514d66e932d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f050880a-4ae1-40fc-bbdf-15fa28a2e2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de4d527-110c-4e67-b4c6-023cdca6599f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40c8172-eede-45e8-b628-66a9a5d35b46",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfcdaed-c970-41e4-ab0a-442eedd984e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a715ae36-f8ea-4e41-9434-5be64f65cb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f480c016-725a-4ab7-8c79-9b3630310149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "630b249c-e616-4ec9-a592-8056e3195001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a616bcee-8b2e-4d33-a65f-d96891c57fd8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfcaafd-71df-4aaa-874a-c9c7f6f25a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c12cde3-76ad-42cd-bf8a-906183dc6d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9e777e-abbb-4bd9-a146-26063fef57b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba3e790-852b-4fcd-b526-4246554436ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d277d7-38cd-47d9-a955-075c8e9a0bfa",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7627180d-fe52-4dcb-b719-235d17b1ba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3101f7c9-7c9b-428a-8a96-364e4d6f4bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1c4123-28d4-48d5-a25e-228ed48e9eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3697c5-768b-4e8d-a000-a09d1fb6c026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771ebd89-4f8d-49f2-8eb6-f6d85c9fe830",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7c3933-2bd3-4587-94d0-061da0d281fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef80085-4078-48eb-9f53-0efab676fa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d801ba3b-f86a-4232-9aa2-597aa5b20bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "513f78c8-51e8-4b26-be12-aa0ced672eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d732e0a9-0a5b-4149-b38f-4bdebe3ab321",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dfe060-5b38-492d-93af-24919b6a7253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0b5ea5-5645-4acf-97d0-03eb7f5c1e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05966af-0b61-4f61-b85c-9289396c2182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c45bd1e-9d99-4f43-9dd9-1e8fdcf650d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ed6bdc-5767-47de-92d9-7a45f2ac135d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe25d6b-5028-4746-8404-c4eacebed9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a8e0e1-a2ae-438e-a248-d5db5328d84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a585d3-565e-4063-908c-ac2da495fa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3697d96-275b-46ed-8663-1253e91e1930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dac68d-8935-49e1-8480-c88c3b843e99",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facd8be1-9ea8-4739-a135-6524edfabd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2972d2b-da86-4558-b214-53b032195749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ec34e3-5492-4d95-b58b-e8b950101960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e191fb95-8dac-49e0-8703-e113ea02fffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cefb602-811b-4cd9-ab13-0619af924aaf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d932fe16-394c-4d3d-a754-d8ea4e051aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b1d97a-aba2-4e23-9e92-76eee8d659e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff7b45c-1888-4ec9-b31b-a6fe1a279b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6281c739-432c-4b1d-acaa-c91ae7eb9fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce45cf7-d438-4b20-b78f-4ce11431ade2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656ac739-378d-4e51-a21f-b22478238993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6c5d3b-af41-4729-b837-3a015956e7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97ca3ff-b3ab-41df-9fc4-05bae02d6df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1508cfa1-11d0-4919-8894-b259f0cef904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a412160-cd85-4ea2-b79c-e9546e1390e3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d037d21d-8c9d-443d-a8fe-a7e22e4bc6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4333eb0-e39b-444d-b983-7c198e01b897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ed01af-4db1-497e-8145-cf791dfdd551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2757ad-5d2a-4782-9bb3-c1c5039a271a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb5d2f4-3f3b-4bf7-9d62-5f02effff1d1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cf483c-bcdc-4492-9793-300e6a575277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1b315a-b697-4615-8705-ce3d0985207e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c91f3b5-e79c-47a0-9f7e-9678d1da284c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56aa4583-8c5d-4a26-a78d-2adadb1af0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd84e83-1fe5-4bf6-920e-c4c54545e688",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f1e62f-8f7b-4663-a3bd-34fa8ea23ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57f1c5f-7fd3-4422-871e-f0367df411e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d3ed44-a3af-4bea-a3d4-9ec3842ff3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3413eaa-e201-455d-b121-ebaf509553aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a800df9c-1193-40a2-bff1-2dc57cea1d16",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897e53c9-296f-4366-ad08-34db439e3c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9eb09b-a21b-464d-8ba4-97237393fe85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862e59f0-eed9-4f35-a5d2-a0b6fd339a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a36b326-aa0f-4734-8ceb-13b468a4e9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2275de-b7a0-46ce-9430-082de5acb21d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22fbc13-4d47-418d-a5f5-4688e39dfe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4fc3c9-1066-44b4-b515-1428dd3c4c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c13560d-ee04-4eee-befa-796baa3b0fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9470a5db-6e63-4af6-a7c5-0d068fb3dbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf00298-4df2-4357-b92e-d84d188515a1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20b0a54-e19a-4109-bb43-99857cceaa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9b1090-22dd-4991-b46a-15d3beaae2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd088a1-21cc-4189-a59e-046344c07679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc09c3f-3df4-4b83-8414-9147565ad70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f912e89-aee6-44f5-b49a-8f147168173e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1827b8a5-1edc-4cc4-a423-dfd79620352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c84a745-7b54-4d0f-8c8b-797de9200fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73905362-f3b4-47e3-871b-0a3c2e26c2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "832b0702-3eaf-44a0-b0f2-6ad4d87ff2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f66d449-632a-4718-ba2b-fad94a451db2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f1b86c-053e-428a-b194-e15122fb0daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8db3a1-640e-4d69-a8d4-6458e822c681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d935689a-1c48-4b8e-9cd4-632bec3f0028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e797eb0-f29f-436f-8535-eaba492469db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd473b5-f38e-41f8-ad24-af41fc7ef6c5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd376222-c19c-43f5-a91d-19579ab4d520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b9cbcc-36c3-42ec-b513-8c624af83983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f91f5c-641a-46d3-9b8c-19852de8aff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "adcbc960-93f7-4744-8a7c-9ffe0eb08bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af350ff-5a50-4898-b9db-46bac35e6c3d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcfee3b-e81a-47b2-82df-97d99658f43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2b44d6-6cc8-4207-b96e-b55497a5dfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c7b282-054f-4d7e-8d08-fed8894cd399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6f7d9c-346c-4579-a220-cf64269060bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda4b1e9-e2ce-419a-ac08-e321737d2b92",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afeed690-510f-4be3-bd04-532b380d8a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c427f9f1-4143-4fed-bc51-166849de3bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a2938c-54b9-46f5-be73-9c71dd9d3968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06679b5-fa09-468f-b990-799b40895bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e9cd18-6e50-4b91-acbe-0181ca3ebd55",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1276c03b-5ef1-4d74-bf79-f7f2ae787ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed734be2-0916-43d2-ac15-9532d829c376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165e8ae2-36fb-4337-983b-0d37474d057a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30d870a-c70a-4f24-9955-3bea28b12535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92809f77-b8d6-4a51-bc70-f3acada64504",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1209e0e8-1fe6-4382-94cb-536581c04699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8a51f8-d474-4093-a907-f0d2c6b7ff14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456cc751-0185-48d7-994e-d9d56f0fe339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dac1fb6-15ae-4993-bd69-1d596f492295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7484d7c5-8afa-44eb-806c-9977c8e16544",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b5265d-381a-40cd-85bf-f58351ed02a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1492746a-43fc-4393-afd9-465809adac8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad1349f-8aae-4d31-85a0-eb56080e223e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff557a8-85a9-47f7-8676-29b179052ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61176a8e-c7e7-414e-a5d2-c070ca2b56c2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4b0e7c-2416-4e85-bc57-82e739a1e094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5c864f-0986-4ffe-ba08-f7ad10614a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf38b22-e6b1-4934-baef-3bdf69df267f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2749b26c-3997-44fe-888f-cba8ee4470d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2199d45-5c0f-4d55-9e0f-41f4ae849d3f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6468077e-db7d-41b8-9fe8-664f04499bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8de83f-0bc1-4235-a264-fbbe483da08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c171d53e-d2cb-40fa-a7b6-7e99184feb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "310c9aea-6e12-44aa-9069-fea648f68a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da260ca-2805-4410-806b-108bcd540b8b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13de714a-0b29-45a8-a75d-d12ff9c1b0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d30f2fa-fade-4d25-8ac9-bcfbfc06c3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4bc4c1-62ab-493a-b6bd-48f557c677d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f99450ec-1f1f-4f7f-b9fa-be1d3e41d0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05a7bb7-d43c-459f-a759-77d9ae2249b7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41a1ac5-e9b9-452c-a52d-33dc4b52031a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1c05de-591f-47b1-9e38-bfc225990b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10708c08-eddd-4929-a345-a317a7c3b2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ba445d-a47c-4d7a-a50c-05b87ec0b92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5f6eb2-a503-4637-a40a-6946a7aab778",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87ce879-25f8-47c4-8892-a43331a89562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a896054-f834-42b1-a2f0-be2b0fac80c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699b8a90-ed5a-4aca-b8f5-5804401b614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "472acd75-c712-423b-bf2f-f712a3b3255d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a67417c-b890-429a-9293-2863985854c2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec62e55-de32-4db3-90dc-15d88d2f5970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddeca4d-b788-4739-865f-045baedc6aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f087bd5-17bb-487f-a39e-6bd870dc17ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdeb125-f26e-4ea0-9602-f3c26e624d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467528d9-df1e-4d8c-a8ca-42fc1b882072",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefd327f-de83-4897-bd95-98dd59ed9347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dda675-6f02-4fa6-abbd-9663eeb99ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27d7857-e93c-46ed-a3a6-5b2b76a60331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6e10e6-d94a-4166-8843-46601058e2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3c21d7-f115-4ba7-9b2f-d9ed5988a268",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec82931e-3f51-4a67-8c8a-af133a0be6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcaa6e69-83a9-4d0c-859f-8b38745ff296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec34bff-2695-40a9-a59b-cf05b038dc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ee639a-b095-4c81-b341-dce176424eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cb4014-df9c-4e4f-ad70-d983abef426d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60f2a69-e539-4fa0-8464-97f48dc0aba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78304ca6-6ecd-4331-8ef3-84389cbe86d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c22b817-a7a6-46fd-92ff-c66452a93787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ec3978-cf84-469b-b58b-7d310eb9c7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd043e56-9a0a-4a3c-b4fe-cb054a01f582",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c70c3ae-0aaf-4077-b075-38aca28eb8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163bd7ed-3dc4-4d87-8508-53c0c20ee05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3596c4a5-980f-4e76-8708-177f64090ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "596cfee4-7c93-4c7b-9d20-cebb4faf4d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd76742-3038-4e33-810e-40f5db165f3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3743ec82-3da0-4772-9e7f-d80c98631e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2357ce3d-cec3-4e84-a16d-007c3ca8bf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461d0352-5bd7-4c8e-b0f9-161b03a9578c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bec203e-bb01-4ff1-bd2d-8d8af39477d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87ee4ed-5847-4d21-b4d1-f64753d6042a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934a3b0c-31ad-45e0-9cb4-be08679443bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcc82ce-ec26-4b9a-be81-6c6e5942fb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66be3d3-df78-4ce3-aed4-9e991874d9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "af41e807-e3c4-43cc-8cb3-702f68d19f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2593410a-fba3-4a40-ad2b-f14bb953ebc2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57533a82-de5c-482d-bce0-ceeb456fe9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eff08f-7dfe-4dba-ad88-8b37cb65aae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a45094-a2b5-4aa6-9a31-5faa41214c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "11df3c9d-4e31-46c5-8ca1-b3858d0a252b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3dd493-1f43-4644-8404-ae2edba42536",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8978fc-9c00-495d-b193-e1af96cd5585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecaf18c4-82f1-42b8-9949-26a5b651c00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a566ad7b-983e-4a96-929f-e6f04174a1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7504574b-7187-4d4c-ad29-779abede57ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b8941f-724c-47e6-8c64-b8ca961ac160",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7f5881-c552-4581-b5d3-31d8cac71fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28074229-20a8-4353-8a5d-671525c46468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374e94e8-8625-46f5-92e4-4c2d22f6420a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6625f8-5f18-40f7-9ff9-c62fabda8eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c80c70c-051f-4ab4-b580-48926b1165d4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fef7bf-ff4d-466e-8804-e81ef310acd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd556dda-6488-4827-a996-d48e88d5dc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46767f99-77ab-40ef-8f40-27b5c5212c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6d58fd-98d9-4924-b611-bf314798c0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1c8b2a-decb-405e-b427-f12851b2fe1e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed10a42-a30d-41e3-af84-0162e8d2ce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c692ca-bdd1-48e4-91fe-dd7fd89d5d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ac7054-8eaa-4f65-a7c2-6a8eac0eb049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "815b11b2-3b59-4910-b44b-1d78e40cbe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001c50a0-3142-4c89-a9d5-0f1c75ba86bd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c269f8ed-3ef0-492b-a742-ed81d769e1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5d16a4-df1c-41ac-837a-c7591bc0d084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1948cdd4-0dc9-4082-8117-2ec00ade933e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1375e50f-c3d1-4eb2-bb66-ccf0a0694b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f58ada-5182-4b30-b333-e09a76af72c8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0e9b42-30ec-4446-a99f-077808f3abd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7139b3bc-9f7f-428c-839e-140a98b0fd75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80cf511-a0bb-42fc-9246-ca1643e2ae45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5191ba87-6a39-412e-a649-280e0da91c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a911ff-bc07-48bf-aa84-909341aa43b5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b737fc-7aa0-43da-9fe0-8ae2ae36075c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61f037d-32d0-471a-8e51-9f8e57482884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19160e5c-2197-48df-af59-5f7279b482ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddbe7c3-9bfb-4249-926e-940acbf07b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c5bde1-de0f-4dc7-bff2-3b6d4f0a1bee",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6394a4-58fd-4a68-ae85-f6e9a841c766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0224feb0-a102-40e0-8f1a-4ebb06c6bdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9121f16a-04ae-4e50-b6c6-60749713d6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b64e7f9-699e-4681-ab6e-0fa367838c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f35255-433f-449e-8a1e-ed0116ab9e40",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8aa72a2-961c-4f19-bf70-7687c304741e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f18576e-3814-44b1-9515-44f27e340e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ecaac0-13c2-4f6c-8236-b0c9f2636841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "844b16cf-8d4d-4b6f-bd18-d04325777023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fb747d-8f1a-4c40-a8cf-6d5ae0099d52",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4d97cd-11d4-42e3-ab9c-8b2fc0b3e333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c28e05-2246-49ab-839c-b0cc74fa7661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f70f3a-fbd4-4e4c-91a2-dbe164cd6514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "778f51a5-4f50-4d87-8453-3575a3e036d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e9e54c-ec2c-4dc1-95c5-a3e1dfeba302",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4584f104-a073-48fc-ba0e-56a1bfd0d1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c74888-53f1-4a2d-b76c-2f0a3f7d96d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f773d6b9-ef3e-4421-a420-c5cf063ad9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b787e0cc-8549-4e4c-bfbd-c08555c63e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8017d9-ddfb-4961-aa9c-ff13db3b46f4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed61526-75f1-4df3-bc7c-0d894e1ba390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39094b14-1979-41c4-910e-e59aa7df5a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb64918-cdd8-450a-88bf-0dcedc426156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82c844f0-445c-425b-8b24-40a3a9eb13f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a632996e-9980-44e2-9d41-8e986c5b3b81",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa396ef-21d0-4e37-a6fe-46c83205f99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6977268f-a079-46ea-8d12-be808a2599c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b132ae3d-06e2-4345-a17a-2493f1c263a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d61060-253b-4822-9040-15d0fb3b9cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5e47b5-2033-41d3-959b-008ad40ce564",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333fd6ff-70e0-48d7-ab69-1cbc85069021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12b790f-f7f8-4671-8b81-42632924605c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ad7084-3668-42ec-ba35-332970dd9f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc2010d-88c7-49c4-aea9-2eec261f05aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3f4dfb-0383-4581-a848-c0c21e8ef0e4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d63b9-29bb-4fc4-ae97-7eb8b510b95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647e9e46-9b65-4df5-9079-d0313e6535b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3af865-82de-4064-bb18-7e84143ec397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc9ea1a-a414-4bd5-aaed-e7cc0bd6f963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09ff282-76de-4fb3-bc3c-107061cbddb2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731b5dc8-243e-4b7b-97f4-b710d6c4d24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a197605-5512-438a-b1e4-ca37bd9bf6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96477441-dcb8-4eec-8329-e1385b3cedeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "daa58413-ca94-43d5-b4cd-796b112df23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d317ff1f-9fcf-43f4-a350-d04d92a444fb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc3dde0-855e-4870-ab4c-b5b853411055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfd01d7-55cc-4bed-bea2-4125633aa02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb677862-a471-49c1-9a6f-7a521b2dbf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb09258-c627-4536-9ecd-2f8278aca89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf92446-24e8-4b18-84fe-f6fbccd143fd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdbb82f-3d68-4fab-a555-24b575e0d010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c445b0a5-dfd1-4868-859a-75e7355e1fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02982173-35eb-43c8-9c08-09fda9292d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0282ad-1e32-4ffc-b639-88a77f3c73ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb59e022-2343-4de7-9bde-fcb8dec7e3f8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a586c05-e9b9-4761-8c9e-3215c2705dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafd79d4-f0a1-4d30-8ebe-97b48616a7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483bfa3b-fffd-4e38-890c-e88fabc2fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "442c44d1-02ac-4d80-88ef-e81d7fffca69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f417354a-0ce5-4295-9530-a00e43885522",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329c1867-fc2f-4a88-8da6-548a11803290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2815eb-eaaf-4f52-a6ba-5d21f1ab206f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7f32fc-dcf9-411a-b00c-12dcdc96f939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a78257a5-5477-44b5-9a57-8516330cb1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6752141e-7fd2-40ed-8bd5-f0d2aa8f1c17",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d4c53c-551b-47dc-a747-e7927a7f4a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d1e4a4-922c-4f3f-9b13-1bb6b000bfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdca0452-0173-442b-8021-1d9286645a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9560a9df-d145-43d2-8a02-70d63438be4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8bb23a-ebeb-4689-9476-3c0450a31cca",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab986724-11d1-41d3-868b-a4ebe7f929e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e21736-7c93-4dde-b95e-75daaabeff45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2026e16-e255-4a37-99cf-c44bdaf5e1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "106f7321-6c86-433b-9e36-8d2174802146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b726f502-5fa3-4e16-ae60-97383d401814",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46490b3f-d409-40a1-8f8a-451565acd90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7060cf5-d639-4d3d-8d18-e951ca2cf567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a67c92-d64f-4b66-820e-a7f381101893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92aff732-2eed-4977-9016-e397ba5abfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f6b298-1418-4ee4-a2f2-16615900b3a2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3073829-49c6-4efa-b463-04b828194769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff614737-0d98-4120-b744-288afcb6ebe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db9c69a-7299-43ea-86b0-9b3a04224e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adf7f291-271f-4fbb-bc3e-646614b7dd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06cea5a-33a0-4568-812c-aaeee7633c34",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7a90d8-f463-4e18-8531-b9bcb0894dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66c3a49-3efd-430e-a984-73c2a2e0c3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5757ebe-69f5-482d-b036-770c102ac010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b94ffab-9c11-4977-9d2c-0e6cdc618094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d546f0-2299-4104-b54c-85e947438e63",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4815cd32-8576-4ec3-815e-cbebb2b79c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a0bae6-201a-45ed-b2cc-806da2dc94fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0a032f-0336-4485-b24a-36f5b72f2239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "366abcc8-d2fe-439a-86fc-773cd2369d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f886d7f7-a101-4075-a932-e827e89aba03",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cb76db-f0b5-4068-b837-ffec7ac7d080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aee88d0-9b4d-4026-a4ca-0759351e9da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e84083-5c86-490c-98cf-8b94599d04e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf5faa2-dc3d-4d33-8235-2de0a11e5942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1efa27b-ac24-49c9-8b59-83d0829757a7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a744bb15-2c73-49ea-8b00-dd7f95837cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7ed6de-26e3-4532-8659-059338af0f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa64b25-7e09-4c9f-a81b-209f50117a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8554bd4-a156-4e85-a335-cb0279019d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c75953b-c0a3-470d-a0fe-1ff55eab636c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb38aeb-c47e-4800-a22a-af17180974b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b2f0c7-4019-4d5a-a320-1d05db7845e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8f35ca-14b8-4288-a685-11d3f3c6bc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca917ea-146b-4bb3-a99b-548568a880af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade291d4-3583-4f4f-8021-853773788ab6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a2407e-8f90-4f2a-8dbe-3fc2cbd30ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ff7f660-a6c6-42da-a1e0-e0b839beca10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7864945-c2b6-4edf-8fbe-35a26f100a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fe372e-7ea9-414b-8a50-7b1b2cd63735"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "129873cf-0acd-4d68-8018-c3b2e2c9be6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d06c1e26-92bc-426c-b756-75d91542face",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fa510f-1fd1-44c8-9d9a-22b163e3d277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43d3ed23-9957-4c1e-9d66-972887dfe5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58d343f-ee8f-43ce-902d-68efc75c7937",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95768b35-4362-4bbc-bfc5-3f59bed5a205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c485ab-2ff0-4438-bd22-98398db95328",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c612f7-745e-422c-bb20-30664f8938a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d678d0a-6fc2-4a9a-9a0f-43b4bdd931d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c89637-7470-4a47-aabc-ae64ac370793",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e5cbf76-085a-4dc5-9d35-f32b545b8b55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aad5ac08-06b4-4dfb-96cb-2e76399bd333",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "862e4210-0bf1-481a-aa86-9bf07b6958d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7fb4b72-562f-48ba-9672-38fa9aa031d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5563d771-3744-47e8-9c10-652e6e5b0bbe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e36940fb-2ae4-4e6f-8010-bf020504ccb8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0fd0fea-9fa7-427a-b782-a5ba496d8db0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6616d61c-6fc2-41a1-85fa-376ab18d1461",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7389e44b-4899-46b4-aa57-f8d903a88197"
                }
              }
            ]
          },
          {
            "id": "025fa989-e8ab-405a-8996-7c42411309ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17b602c5-ad60-4105-91a9-23ef8199cac4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55a765ce-505f-49eb-ad04-aa8d61512fd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da0a166a-7b5d-4838-bb3c-3ac3301b40b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e3f64bd-8f7d-49c0-afee-46c6e57e09fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "423d315b-7731-407f-be2b-62e270f28a8a"
                    }
                  }
                ]
              },
              {
                "id": "c859a807-e5e2-4956-a1ef-900439ef10d3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "321218c7-cf98-4d23-a8f0-386e92b76b31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c1d6889-3357-48f3-b3d1-8a2a72387617"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "485e5a5b-fea4-4c4b-999f-f05218578bf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83321656-4068-4ef2-bc4d-f2a15583b30c"
                    }
                  }
                ]
              },
              {
                "id": "59e17171-5a02-41b7-997f-6ff0514aba12",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01588c0d-0659-4292-95fb-041508df3f23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e27743f4-d2bc-4e09-940a-663c9b3bd4ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8f0db8e-2de3-421d-8529-936457ee6d13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03d15a6a-3b64-4362-bb64-972f1314fac6"
                    }
                  }
                ]
              },
              {
                "id": "fc2c78f1-e734-41d2-bcd4-55a9fb0c2a85",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "004cc627-ca84-4b7b-94be-83b911d6873c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c712ed59-f736-471c-a86e-ac836a7ec448"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d5f18a2-036f-4933-a771-8c1bd9c731da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "74bcc6dc-46ed-4b31-b38d-c7f0c6a4fd08"
                    }
                  }
                ]
              },
              {
                "id": "99712f7e-2ef7-432b-8086-5f582c7588e9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5be8b46a-dc19-454b-afdd-cb35fc9b2cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c850d2b2-55d3-41a1-bb52-6c43e78eb803"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e802ced1-01c1-44a1-a10e-478497ff9dfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "470e4d24-2e0b-477a-b3b0-99bb2b3e09fb"
                    }
                  }
                ]
              },
              {
                "id": "7575c8b1-728b-43b3-a89c-cd3598f7c832",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dad4b52-e94f-44cb-9ade-44df77249b8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "327d5b38-ec26-4d36-a236-c1555812ec6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb24f608-7ecf-4bb2-a671-aeaecbf1f9e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0dcfee8-ac7b-427f-8063-554821fcf54a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d47d5a3-ac24-43eb-8621-1f4741e41a49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6283580c-63c2-4a0e-861f-cd4d818f7e3d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1456887b-78bc-44d8-af71-26e455a511da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08016537-4e61-47d9-b3a6-d8e85e8b9409"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d82b375-45a2-435c-910a-530e52d7f32e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3fce5153-0c9f-4d89-9bf6-c754560f3dda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2c8715c-990a-4992-821e-1eea2b69d87a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13b310b0-9178-444a-842f-be7d7c960dd5"
            }
          }
        ]
      },
      {
        "id": "ca42e3d4-2e29-4501-8fe2-f9bf6b8a7765",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "58aef8b0-2650-49ed-8285-1e8461e530fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdbc659f-4613-4ce1-870e-767cb8b71be2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8d16d245-ce52-43b4-943f-e6c6a31f6f30",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6532bc0f-c2cb-4de8-95ea-d2c1a159123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7de6dd4-a9fb-45a7-8d1a-b2b4695cf29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d76ebf-f98f-4c42-941b-f807f8a2e92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3e5b89-3595-4cb3-b021-f323cb64338c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04217aef-9b6c-4aeb-8c86-1def590df822",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaf27bb-0008-4d03-b4f5-209160ade20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b7f298-83bc-406e-b50a-cbeaaa724da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdaa51b-f007-4330-bd52-137137d9145c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a03231f-6a82-4a46-8f89-5cee7e97bd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df74f98f-ca39-40d6-8b79-0d35bac94ffb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38b5228-9c2e-4c5f-8edb-f98dc1df1080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0698b3cd-d827-4964-865d-924a83e4ca7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f031f9-9c9a-425e-87e2-9819c4ff71c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11dfb622-f207-4dfa-a960-c227ecf3f5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82a2d9a-5697-47ed-bef6-bbb8ded8de39",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724744a8-6c51-4e83-b742-e621374059c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93f5268-d079-4c8f-9eae-c3cac57e6c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e28b20-5a44-4e29-b0fa-f4d433b15b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9670b50-be2f-4be8-96a9-3f095ccb59b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44cd543-0c30-45f1-b577-89cb4d310efe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df486908-f1a4-49f7-b0e0-cef5fbf214b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5e4f46-17d5-4875-8c88-a0921e76cae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d913b353-8e38-42b9-beae-010f33edfbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab7a1a5-9bf1-447a-bd13-279c561a8fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3985bb48-3f92-4ee1-b9f6-5356972f1f3a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38b5b48-dc31-45ae-960d-89b3fe671703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a738d33-b4a5-4853-b055-8eef9cad6902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1874ce0-42ec-408d-9b86-0452c896204c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d51e7386-0d83-4d1b-87ce-b86f7bbd47bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1980d82-8183-4c0c-b48e-27030b09296d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e33e946-c7b0-468c-814a-0126ea69f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434d81dc-e165-43e1-bdde-2faa7d38474b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1e7460-cc4d-4363-a3df-cd9970fe5b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d4daf2-fc9b-43e1-b33f-e13bab2f0e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6f206c-17fc-4150-bff5-19f01428552b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c9926e-d274-4d0d-aef7-374310594d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468644cf-33c1-4f5a-b295-75018abca637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf617d02-ac47-4e6f-8dad-d716f085860a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f47eeb-9f81-4140-93dc-4bccc5bf771e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836a0e71-6fdf-4114-b981-a0bfad0a7d7a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bd8e10-7a6f-44df-8c18-19119554507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20870692-f407-4b3a-b962-5a99468185ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed4bad4-dbd1-43f4-9e53-4e8f44bbb214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0c6f4f-b731-4442-9e18-b4cb1c0b0e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c2963a-1778-4132-9402-a2efda7f5411",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7e453c-709f-4994-824b-4868a854ebda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0460ba7-71af-49bc-af11-7521f8590a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a7b3d1-8bac-4ba0-8b8f-a459532e2191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5fdd4e-c6df-4965-a89b-881c9e53ad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c137fb9-e94a-424a-815d-c16d29d1b510",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce5d73d-6bd1-4011-a7e9-6bc632b6cd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd34b1ec-2daa-47ca-a3df-e55086d4e644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46217795-4178-4448-945e-716597353c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "11febf67-60b9-45e2-adf9-827268c701dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3095e2a1-bdb8-4884-b8c1-0a31980561b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b5c7a9-5964-498a-abb3-718b00c70cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caaf51a-7696-42b1-9d8c-f2c83b9aa3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2b95cf-5ad8-4070-88fe-8437e1a60f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "754ef57c-ee0e-4b02-ae5b-1fb858832fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d793933-f6e8-4ec5-af61-09998ba2a32a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3337cbe-0210-47e6-a544-646ab90335be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35208aab-2976-4347-9515-354f8409fc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97f95c7-b575-4d1c-880c-3226ff38315c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a99f16-1353-45bc-8616-96b509d361a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5192ff-88cd-401f-9017-863a1fd6c728",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f31b86-7ea8-44f3-9fbc-dd47a145f4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d37a17-f2da-4efd-a2b4-12e5b5c4df8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8560499-61c4-4eb4-9561-d9f4180eaa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d17fba55-44d2-408c-a1da-d22c1f35aef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5877ac7-5a41-4728-9604-e94d88c47f3d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac22a734-059a-41ae-ba45-43a88c805b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7195c4f-41f6-4adc-b489-ac92822da788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef4e6b8-ecac-4eff-8c8e-8a8010f8f550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c03a3b8-2153-4ebd-8f27-6f982192a5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c363b6bb-fbdd-4cac-a71c-2fab7335603e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c06b58a-f834-487c-b320-05a89a5693b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbd26d5-4f7b-4e90-a56f-bdad32c08a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a940eff8-b16d-47c1-b29f-2c5d2e34f287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "be5d3837-eac8-4c0a-b683-4bbc9cf23389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b15dc4a-c1ef-4520-8221-b5cf0ed57d2b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11901558-d426-467d-a8cd-533ca028ae02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce8fd1e-77af-4c2a-b7db-0e85db495d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9462765c-238d-409d-9233-959dac68f6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd26385-8f00-46d8-a9b1-1a99fe468bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d540126a-8bae-408f-b7e6-e132a91402b6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d4c153-6777-4e2c-9516-e1771e4cfae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6369233a-1b1a-48df-b216-9085b41e032d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c981e7-c49c-4bd7-8bb6-1f912bf6da77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76fb87d-e14e-4358-8d23-cb8de7d45b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4174dabb-09e8-4af6-8acf-ae325e6d4f9b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd47ebab-f433-4571-9b07-d38e34f69922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccc7ff2-2063-4167-bf66-cb6ccbb4c345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e241e758-c98a-4219-af76-d342b1553724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbe85d8-5adc-421a-97c2-e28b64373e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04d5bee-e306-4b9f-baeb-bb8b04ec2737",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a64576-9edf-4f94-ab97-d90887e0c829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3437cb3e-185d-4ac0-bb9d-9450f9647120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa46934-1faa-48ec-b844-37f38d65ab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bab5212a-cbea-46ac-a34e-78bea92926c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65362e02-7c2d-4e89-bbc9-a4d0808530fa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced77b52-c46b-4d3d-b9a5-556d9e33c0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81719f4d-ae7d-4f60-8779-593794f7575d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ef60c-6532-4b24-9101-8d492186a191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80ec13a-d471-42fc-b218-20ab6839b6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68015e60-9c00-4620-9635-15f3677316c7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad056f09-691c-46c2-94b6-dca8ebe129f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea427c2f-8afd-472a-84bb-034a235571b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4de414-a31b-4b1d-9e8f-3696f8b2bb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42bd3acb-b433-4830-8562-82273ec73ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec01d49-2abb-4563-b2ea-4346217752ba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aca8887-d65e-470e-9e54-02fde479e499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07205a03-6e5f-4f71-a707-5aecebc09ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1751627-6b3c-4923-a966-35d72a2f6183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cabeb1ee-a99d-48cc-8c89-ef1d88ea8e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1730de0d-0d8e-4455-8927-28fbb3b62b2b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae72245-de6a-4f96-9213-6bd1ebd7b8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ecf171-d8ec-4e08-8748-8c630fa2c5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61fd643-5d11-4ac5-b5f8-ed7d1c137d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f80a37-8bd6-483e-833d-55e56bda2ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f616a31-86b3-43c5-9954-3c9804675f3a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3804de-1914-45e7-bb07-73a7b58d2ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa571d54-f7c5-471f-81c6-21eeb893963f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1343192e-6cc1-455e-9a45-ee3f142a1097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a619184e-0583-4a9d-b920-bd8c0eb85d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a13744-d3b3-471f-85d1-155bfc028c11",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f88becf-17b9-441f-9c52-1ef80ecf15cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94eced9-e222-4e22-b815-1da70162a2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cf16dd-4245-4e5c-89f4-fc2cf9cd0a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99306285-65f5-4b02-9c06-43e478d22786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b7b7ce-89cd-4c00-bd2d-c5810d3941d5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a719b47-6846-433c-9c4d-00c58bb22672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd2b5bc-acf3-405a-9fc2-e1144aa1e882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc07f2be-97ab-4bb6-be09-cf479f6baaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ce4035-e0b2-4105-a379-97cc834ddf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35709312-1394-4c65-a84a-e5c8ba21c4dc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1bf59d-d5d5-4db9-89b2-e8480ee2faa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13490363-96bb-4e08-af7a-bb6f6f80ef72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f51db5b-59d6-46a7-8d77-df3cb85c4d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f0e04a-9fb3-451e-900d-58f22f684063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce07b14f-8de6-4e22-84b9-20eece87c8c6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe6c8be-65c7-427a-b57e-607c8c91fc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b599874-9ba0-4738-b572-c19a24dac597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eafdc0e-2e6d-4b68-bdd6-b2b72f6bd7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e9ca9b-d8e3-4793-b862-a89e181bb415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444afd0a-7523-4bd9-af28-3559cf5fad6c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2894884a-6d43-49a5-aa64-6a67068dd3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8d5fee-f1bc-4c58-924b-09ab77a1820d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa583c6-6f32-4e8a-bded-0b9a0de44124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "925d6477-ebeb-4500-88f7-9f33d426214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5960108-573f-431d-8c92-6f151134c160",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54fef73-e46f-4b4a-ae8e-a6d825670a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2839e04-6507-4995-a905-c3549fa300b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f44075b-85ef-449f-a45c-cf3d0aa8bf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca290f47-1d9e-41f6-94a3-c7b656dbe02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67468c6-fc87-4736-823d-be7f53884d53",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2fd88d-eb83-419f-9a35-1b4e3fee1480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5953a831-4b52-4f6d-9b7d-39980fe47e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a2d724-557a-49b2-a504-61ba65982fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6f5163-d16a-4973-8e8f-4dc6230b7268"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e0293e5-3b42-4219-a2a9-7f9411268b1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f522976-804f-4a01-945c-f535cdf617a8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfe6614-ce29-4436-8e4f-7ae9b318b36a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9995a806-c7c5-40ec-972d-826f54dfe579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3553f3d6-03f8-4ac1-8eca-8dd288773926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f71f0f4-105a-44b5-86c9-d0114b0315f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c624008-473f-4bfa-a0d2-f1f224d1a1ed",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509bb0d7-ac51-43d5-a69d-9e3ee6169f1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9c3e27-1a75-48d3-9aba-bbb20766a5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60003c87-052e-4308-bfd3-137b6578770f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fe6bfd2-3db4-4878-95a1-5401b4134bfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04c2562f-3c2d-44a0-9a8b-3c1bfe1faa93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33e6979a-f9c4-4756-b25c-2709a8a6c9cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c37ec73a-96b5-440a-a869-b50c8b648b82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27235560-72c4-45eb-94b2-1d7c8f8d7853"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57c22ddd-3131-4cb6-9fbf-2d7bc4fe69ca",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e8c6e69b-c8d1-4702-adad-09e77c714468"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "143995c6-210e-44bb-86c2-1d32ac4597d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7906b55c-2357-485e-8815-7f6f38ee5995"
            }
          }
        ]
      },
      {
        "id": "87f339c0-c4d7-4a25-af9c-e2a3a6f91362",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1f3dc909-c68b-4a85-9507-8be772cc9c2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb3e2ee5-f8bb-4b4f-887f-ed91d22db9e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd28f386-f9c1-4464-8be1-1076e126146b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939e1803-608b-4584-b3a4-2eee6b720ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173470a4-4f74-443a-8d32-1e2cff9a83b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a7fc3b-dfbd-40ab-b5ef-71fd8f26a6ce",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e098f2fc-0754-4296-ba95-04901d2e5c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edd2052-b136-4a2d-995b-9a9862e8b983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e06e415-a81e-423c-b6b3-5b4e8254d769",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520ca133-0b56-4034-a90c-b1f749983128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03169f79-579a-44f3-8c48-3b5a63f86093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d791354-25ae-4874-a864-bf2ec8d0163d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f553e61-926b-475d-8aca-936d56d07948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f657068-54ac-4833-b6fe-bcd2b26d09f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c9848a-b900-4a9e-bafe-ea4571ff0a20",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86205b99-f62d-4b8b-bffe-f6f00e7bea1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b1a772-e602-4f30-930c-ebbe5ca481f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969fb762-3ff4-4f94-b86d-ad35db709f19",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c17f39-d9ff-440b-b10c-f820a59f775f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f416e233-6d42-4231-a7f5-0e09477738a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d4a568-83a0-4dea-a7e6-0904ea19d60e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554e0a95-dd13-4064-a927-c0ef6619a1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1f566f-67e2-4ebc-a4a5-89aec8917ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225e914f-823d-4996-9d0d-407f63370c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893a57ee-0eb1-4499-bfb2-9ad25cad0df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079baa50-ac56-4c2a-af27-6d68baec711e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659fefd9-cd03-4685-a484-71e27dd1121a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cdb995-4ffd-4049-898b-25cc45d51ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bc836a-80d4-415f-a1de-8469f0bc33d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8701231-1a7f-432b-823c-89207bedf849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3232d36-7907-485d-b954-129cbe1c7f95",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becfc815-63ca-4e25-8d05-e918137966bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a75b22c1-ed75-4b1f-bf92-afad8a24ad5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c7145c-92a1-4296-a091-41cfc2f3081f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fdec1e-c6cf-4c71-a535-70b0f91c4ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89070026-9d22-4aef-817f-44dbff0d6ff0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307db2fa-50aa-4eb4-84eb-92f388a3bd4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24ad2e8-0894-489e-a7fb-8a8267ba1157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a355c7-5af9-4561-ba04-c9d991f8578b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb24bc6-e9cb-4dac-819f-f7db6f004e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9914b90-c148-48d4-b4e1-463c32d64304",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36035937-5b06-49d3-b45f-066e4b55114c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a5599c-6f1a-4ef6-af2c-75b78ba267dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ada09d-6b1c-412e-b74c-082a871d3b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59797dd7-86b5-465b-98e1-7bbb4292de34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f782046b-7f24-452d-a7ed-de6c8d5e8e08",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857a0980-f3d9-4382-80ea-a798f9c2601a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70f6fad-670a-48f3-8d36-e3af0336854e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72c0ba5-f680-4939-97e0-dd234930bc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef225dae-d1a5-4b37-8807-0e1c9f9819eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a91fccb-ba2f-4b91-8e00-7dc3b18cc9f5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df8be69-534b-4520-a653-2cdcab887817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b20256e3-2bed-4ae1-a27a-f614fa71b1eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236b353a-60c0-4c7e-ad37-5aa50e4f1049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ba61f7-90c3-4d04-a877-511e456b32d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497824da-d157-451c-88ba-faef84229c37",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b974613a-927f-44c9-aa8c-327c129e9b0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfec77cf-dead-444f-a573-35da36d4473a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f8ee02-3867-427c-9eee-4242ff0294f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd4e9ee-b4b9-42de-8df2-114cc342f218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f57634-695b-4faf-b189-948d548643f4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbdde52-8caf-45f9-8c7b-10a65647b5a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e29f1c-d0aa-462f-bf68-545c837a4a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c223054e-c83e-4b26-ab6c-cecacef02798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476c1075-09a1-433d-b2d4-9caecc6cd98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e62ea3-8856-4cd9-9e5b-b727dba6fc6d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab146f-ba87-4c09-9c64-93b85d66f84a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56aa424a-8a87-4611-b343-00ea48a024d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb04a75b-53c7-4156-9dd7-30d9f3ddffff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0cbea2-20c2-4c5c-bb2f-2f2c08a0befd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82ac315-5f7c-45fc-bccc-dd1ef9a64fa5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbc4812-4f4f-4934-943a-59f65e39807f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afaf80ba-8719-48ed-a04d-72c209a19f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c67c755-bd1a-4647-9b34-c10a24c39a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fe15af-2279-437a-9441-9d06af348e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe841b00-cfbf-4adc-879b-f453114101c7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa65932-0b3c-402e-86eb-a76962adbde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c110dadd-951a-4611-a89a-b5ecb226ae45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d0485f-a0d4-4838-b15a-5f3f1fcb58f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccecac2a-bdb5-4a64-ac3b-77618683cf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44531e52-f2b5-46a1-b96a-d4b0193c2b02",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca51f934-ec5c-4745-a705-ec5d1b0f3047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d779428-70ca-4b77-bbdb-e13d15ee34fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f201d8-562f-4794-acfb-bdd0d6af4648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94aa1b1d-7445-4249-ac0a-3c39a3085da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ca9d0f-58d4-4580-92ac-2158f3b00959",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a840e0-bfd2-4ee9-8969-cf1522fee8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e55b03-7e36-48b8-b88e-42487da5ec68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9062f1-87e0-4472-a768-d35b36a9823c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83aa1a1-af9a-4d00-839c-a8ddad4bfb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbdb576-c2ab-40e2-a934-1188b95fe8f0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fc5b38-8318-4da7-9717-931fc602a707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bddc536-1e5d-4eef-8291-e4e6e5a4fdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9133608-c915-4641-9e59-010c0be640c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aecf77-c411-49cd-b2d0-a8f15cdb72a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5627832d-1ec3-4462-a379-a03f74fc2288",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff44f0d-a8bd-4d2e-a913-2b00ea591119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3551728e-14fd-4e79-a0a0-99ac8437267e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5b269a-b739-4b4d-895a-547fa692c6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f6b6cf-ca3d-4ea9-809b-a2453c1e6367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d66173d-f2e4-446b-ac4b-cbfbc4785fd9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfc69c6-6e3f-4183-bdf0-2a9cfd7b555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fc931f-87b7-4634-ae70-67d9671e2505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22e6ea5-2730-45a1-ad39-437c58736a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593ac806-17e9-472a-9559-8cf68b617c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ba3a67-2f80-438f-9080-670b4610c477",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29b1679-92d6-40f7-886f-5eb506df9bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a177d5e-1933-431a-ac73-494466b27ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4b54a1-ae10-485f-a646-522e68351cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6a0307-34d4-4600-98a7-e2b4e63a5918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8224fc-ead6-4b9e-ab9c-bf5593f3ab18",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7468c87a-7710-4bc9-b5e8-3f798b2c1a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb0996e-638a-420e-9ec0-342e86457618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63749bf5-ddb3-4b1e-bdc1-b5c29ab2ade1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd44712-da77-4f64-9989-6bef1359cfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78b5ec3-ccf8-4158-8612-0225ae14d4a2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1318a7bb-3c72-4bad-ba42-3e5e5e2df6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843e8a17-3112-4bce-b2c0-a0638274ecef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e4a5be-4dab-4a33-981c-ae9dcfef6e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2eab76-6c27-41de-b490-cdd0b69a1fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa379be-be1a-4e7a-9bab-04d963e9f1f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29a0008-e0a5-4c62-89e5-f43469767fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b635bfa-7985-439c-8c70-c9afb8df30d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a54a605-f7ed-4cc8-a80f-cb2a1b8d6e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5937142-1939-4938-bc80-f2d3407e34c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b34572-ff5e-4730-adca-5c3d61a3a33c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bdb7ae-53d9-472d-9d81-67e96fa36ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92301242-4498-487b-9c77-07574f597047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab074822-ecbd-4dd7-8f0d-90a582c64877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9975581d-ea67-46c6-957e-130f4dd61591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d564aa-fb09-4dd3-9e17-aad16be0009d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5529bf94-1d25-4c7f-b06f-3e58d458d0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830475a2-ee25-4689-894f-2a3fcb05d36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12362cae-f56a-4af0-aa4f-26f9943e6740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134bf593-09e7-4733-bc16-546a94f3c117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015a3e37-92b1-43df-a5fe-251cd7972174",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e8623d-fe39-4a06-9e66-5331a4c5990e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e22138-1cfc-45ca-84a4-fa71609c1227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc885973-cb74-42c6-98e1-2e6071fccdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42198fc-f032-42f7-a0e6-1983e4e75282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e551a8dd-28d9-4821-9761-d59daee02870",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2a7718-1fb9-430a-88e3-1fced59e3945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbc1b15c-dce2-49c2-b7cc-51ade630f937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d3b54a-35b8-4dc2-ad15-b8372d1aa308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7413fc14-7e15-4926-8fd1-cd32ca77e9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3890ea9-7cbc-4948-8101-936a0d0793e5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4631e77-b275-40fc-9d46-716acd6d2c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a986d57d-cefc-4ac2-be75-903daf2b654a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b66c1a9-c654-4647-be3d-a350e147b3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5896409a-3d8c-423d-b7c9-f87ee5e047a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadeebf4-d858-4bd3-b01b-54a1f0f28da4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02869c63-0c2b-4bf2-9fc9-aa87392a81ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d43ae342-0157-4333-be12-7c9e5f2d3f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f538b0-0af3-4c67-95d7-c70568494372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6ffdce-5efc-440a-b21f-ad6455b5a75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcf6529-a599-4c70-ba72-27f8ed6c762f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec187276-63b7-4f0f-abf8-5c7d2123b41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6fb779-9e91-41e2-b5d4-da0285389ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0644d46b-de9b-44bc-8f31-118152a10d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4010c9c-72fc-4869-88cb-92bd892dfe61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb62180b-bffd-4d18-b0a6-cc9bd505aa5f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37351218-9af5-4832-81c9-c9a7668e005b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7cdf195-f273-4f38-9e9f-f0d6f068b121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f191b7b6-b8ef-4b05-9f86-06bdb184096d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0600f5-610d-45a3-9842-d76ab54cba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3972b8-4b12-44d6-8167-6bd58546a4e8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b715d81d-e748-462a-847d-f64cededff77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fec8e18-07e4-46b1-95e7-eae4857daeae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1dcb7e-6f2d-448f-9ad9-2a7ebada2ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848f72fe-3347-4fbe-920e-eaf923130c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445cef7b-81bb-4df3-9453-14d1500efea8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7c6d8a-c314-4c70-960d-a2cc9271a4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fef700b-3ea5-4693-b2b7-8f0bc3ebac6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3a47ed-f285-4582-a89a-962c5cb8eba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c90743d-c597-4223-b49f-38103720119e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2d0b9f-ff22-4954-955b-b86062a21c44",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228c44f1-7ba3-4106-b781-d4c33921ca49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d92ffd-3183-4261-8b69-725a79247182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b87310b-e17c-43cc-b7b4-858b524123a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392b5108-dbd2-47b1-a6f8-6ee82dff1dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f8fc61-9422-49be-bd8b-dfafab9533af",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed75a9c-402f-47e1-8813-5d9a74906cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8504d4-a326-42d8-9086-60d160cd383c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913a1f1e-d370-449e-b50a-1bf8d9d640ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771ce4e0-5960-41a9-b6d8-773d85304ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f92d295-c87c-4ae0-8084-cd231d9f5ddd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5f5e1c-df53-40b1-9d51-817497c970b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a90395-668e-4f8d-8e45-6d87b4b0f2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65f63a6-ea99-4451-83ee-6cda72f58727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c190a2c7-5b9e-447b-92d2-f7b9cd3b7fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77156d97-0f03-46b2-b2b5-63131b2a87bf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcbdab9-fa38-43d2-a1d2-c8169b0e8990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338bac4f-6240-4d86-a218-9f07c6404a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb4b356-503a-45b9-b0f2-fcf93786a61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f181a9d-af84-4f26-b672-b72789d6587b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fa9036-f42d-4b5e-a902-f45f38cf7195",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cb705f-a841-4437-874f-a40557581968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e695662-5c66-4eb1-a590-f60fe2b55613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1561866a-7228-4fdc-8e68-daab154e7edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007e9aeb-a940-4bb8-9b63-3442fe3662ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057abb0d-4294-44f3-827a-9fe4a270b909",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5e698d-aeb0-44f8-98ba-8406be78385d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c98af6-b841-4ac3-8918-5d15c06f1ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3e67e5-6ace-42bd-83b6-2011c697b294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49d2abf-e438-4c4f-8fe7-52e04e7113a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd789e2-8fa0-4f98-8ff4-ac2aa01719e4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31924084-c755-47c1-b239-44c40925b9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bee55c-9d8c-4aa8-a65c-9c36c82b0888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4c74ff-bc42-4939-b89e-934b485c81c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534928d4-f931-4f46-b251-3aac5ba932aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2240bebb-2e0b-4f1a-ba7c-14e881b309dd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9994566-2d9b-4129-86fb-b465f90bb0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f56a2a8-ff37-4d86-8295-1977340d0f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957223ac-d184-4ab7-bc64-a5146dabff9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926e2cf2-9f25-4326-b95c-3120f505e440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce356650-98b2-44da-8c06-5054368a99fa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd5eedc-1191-424d-afb6-bf7a45877b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395bbac7-6b8d-4dbd-b3cb-1adaef10a473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450aff3b-5c34-4761-8e79-b8f9f039a916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c7ee24-6a76-452e-b1fc-f8eadd05ae3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922ceca1-d986-4629-9195-8cfb84a0b4e9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfa1dcb-e28b-457a-b093-6c24a0bb9866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e37b2f9-e6c2-445d-ab43-936511b65a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adc5c14-5e11-4e6e-b287-e1795d4c4ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301c04b7-dc81-40e4-a44d-452656b68b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f1588f-aa88-42c3-9c60-bfd3bf1dab4e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a345f4-b26a-4593-8a7d-dc51aacfae07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655481f7-7610-4447-a729-3550497c0471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28404d9-4779-4f73-9b9a-b7fae1cdabe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab681acd-35b6-45b9-b4ae-c9486116adfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0852ddf-0d53-4d18-ad0d-ba6ed75fed06",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb53033-23c1-4490-b2d8-21792aab4c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc00b29-b046-44ab-944d-7e38d3220e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79091e2f-0ed7-4838-b211-90832a98fbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8db0cb-10d8-4fbc-b57f-fb71a6e844ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b552e6f-dc67-4526-bfc0-1c8318373938",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac1ac5e-396e-47d6-abde-c208d4b9bb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3badfec6-3f22-4f6a-a6ce-46baddcea68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d318b3c8-c751-4b5a-ad6a-a1b18bc9fa85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cba94b7-0bc4-4f79-99e0-51f8e302b310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f23df5f-a23f-4877-ba6a-c782e3d9e751",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09d4dd6-2280-4bd0-8518-38d96424f4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a769cb75-54f9-4674-94ea-ea1e0f0dd4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dbb13c-b743-4dc7-841b-4a7a56ee7d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14736c9f-77ba-42ae-a87c-9cc9fd2c079f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9918337-8e9c-44c1-8c78-f985114afc7b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd7d2be-a702-458c-97dc-13234565dbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca764c55-1e6b-46fa-9e3b-e7db62eeb1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50348b8e-7dd9-42ba-8574-f579e1c8b689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4b71ea-7aaf-49e7-be15-b7608ea76006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc81038e-8e5d-49ec-a1c1-ee82cc857208",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dabc3f2-8a93-4a07-992e-a05d8e54f169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8377b06-7760-4192-a872-b34bfff9829b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04e0b7a-8b4c-45dc-bb74-6874dc6ac7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055375cb-0749-45b8-9d14-d14bbc315a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819ae0b4-bd36-43e8-973b-a9146bfd94d5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42537350-22e6-436b-a277-fdf1b24db8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ab1148-e45d-4b9a-9ad1-85fd0073805d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bfbdd6-d0f6-4945-a7dc-20ed02e46fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740c8b6e-afaf-4235-ad03-9b276ed2cc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2262014e-7fa9-4c52-81e6-3663f5ad5fed",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce61427-c3ef-4ede-85ea-85f04732d4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b37ab2-20f2-491d-b381-ad3fd189ad1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cdff58-d9ff-418f-9973-e5e73383fea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b33c43-4ec3-46d7-9992-7bdc22d32d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d10d73-afa2-4d7f-bc89-5219b0a6e844",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fea9bf0-802e-4ddc-a3ed-3e546becc1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285ca7c5-50e0-4370-8f02-f5e7cb019bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea64910-63ca-4528-a27d-7872f3dee312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab9fcfa-756e-4ac7-a7aa-01390d395bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2806a524-450a-41fc-ae47-ec1530bd7804",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157dd51f-10dc-4558-b4db-c54c70420217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087c78ac-8b6e-4c3b-949e-ea7da77e590d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a89994a-0777-4192-877b-e87cfef05f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17a3fe6-afea-4b74-8fbb-601a6fa2b25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03683181-eb73-46a2-a120-20110936bf56",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e29bfd-0bf0-4f2d-8f02-7c7ce99054d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b93f29-bdce-40fa-8477-eeeddbb059da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f1950b-2a2c-43ea-b3e8-8e4e3e9bbca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1d76b3-6176-42b4-9d61-a13e4bb48230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756bf7f0-5321-41a5-9356-c51640b4e478",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73906d59-ae83-4b47-94de-947632e9771e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f79279-fd0b-4ae6-8734-ccbd9809824d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bafee83-0e4c-45e5-93b0-4aac10017d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e8a2c4-8fe0-4d72-9452-b8fbb405198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3ceb32-e621-4327-a8cc-92e12b137bac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53a56fb-d013-4e20-b67f-a76eef50902f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d83ac04-5f11-436a-87ae-0a5a32a51f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05bfd95-4a49-4832-9f5d-15bf056cb972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9d0bbc-6131-447c-819a-d9a02e7fc855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a52196-e671-4248-aefe-173c80461e6d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7c545d-5c6b-4cab-a6a1-9122d9a73096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ca3502-3e49-481a-8e87-96565c9782b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54927749-006a-4444-a5c9-5fa28d7f079c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25c274f-f291-4f31-80c7-cdb0aba3a274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd327a1d-33ad-446c-acfd-a889df56a6e8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2550ce83-0905-46fd-83f1-abdaf51f66ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37489b4b-29ba-4a97-bd16-4a02ae42be60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4df297-c538-4c64-b1a5-9b4215c3a6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c3cb23-9f32-40ad-9e98-c80a8224ebdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8021d063-b4da-4bb9-acd8-4d0d92d8d80c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6191a922-7db9-4284-aded-4fca1fcd94e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aeac947-5b66-487f-8372-2b7983814457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba2c579-7ce1-4012-81d8-8285b5c53b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0b900d-eb25-4996-957a-5ce673106d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6eaee3-dcf7-436a-8b06-a5fb390ce9e4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce01f62-1f81-418f-a675-f027e0be982d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "183644a9-7099-407d-82a9-3abe87cbb77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7b9bce-3bef-4345-850c-efa82161ec86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde62b7b-e17f-4d27-88ec-1665fd059582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529d3aa0-5956-4b6e-9122-7bced5a43379",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c17598a-b4a5-41c3-94ce-2c598fb6dff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a183ea-4427-451e-a2aa-57fcfb787235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1343df4b-9478-4d08-a0c7-1801834dec59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e14479-7185-483b-8c98-768d00ea90a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6156daee-8b59-4691-8cc8-54e59ad33a42",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d04017-7785-4129-afbd-638336b43b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e0d4acf-cdf1-4a91-ab97-64e3dba5deea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b0328f-21c6-4931-ad2d-e9247cd19443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29d0117-3772-43bf-891d-6ff789df51f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786747c0-f1f7-4dc5-9077-637f3870fe8f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c319b99-b836-44a9-8ca5-159ea1719c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48fa3b9-8db9-4fc3-9dff-339dfeaa5d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5852b020-440b-45e7-a588-84b74bfac036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd20858b-9bf1-4f36-aab2-57a00d5d4a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfa893e-ecaa-43a1-80a6-c3f0398a8a94",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de41b9a-40eb-4f8b-b3a3-d985304f638c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133f73be-62c8-4018-8451-ea31f073d1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48229eff-de71-4cb3-bc7b-b0e9da05799b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aab983c-015f-4295-b178-78a660e23d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f894b8-8479-4b8b-93a5-95355e88c546",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bed0b7-80fa-45d5-9cbc-ee603909cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b581d5a6-2108-48a1-a4c7-7aa0e49caa56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba75d33-f02c-4e34-ba48-d6d8bcc904a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09828710-e52d-4151-b765-57a03036627b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d516fc-25ee-4499-8cf2-b5c4e12d65c3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5babc841-1ea6-4c24-8f52-8690ed084abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492b053e-3a94-431f-819b-6912ba5b16e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd54d027-ed0e-4a1d-9eaf-7a4fc21d3fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698ce954-3fac-45f0-9a1f-c4c173223f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03226ffc-7527-4fc0-8e3a-19b940d3441c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c37f49-b87a-4a94-9aee-3dc41a4deef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a5f9de8-2d12-44aa-9d83-e502911d9d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f983b62-88a1-4e17-8f20-8eb9a71cea23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f51a5d-814a-4f74-90f9-6f8aee82b0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b4e6b4-437e-485a-93a1-84684f6f7b55",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a341c09a-a29c-490b-ac95-c93329f5bbd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925c0e58-82cb-4771-9ba0-df8206257499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cbfd3a-c045-4961-8f14-e1761bdad2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99e1f2f-b610-45a2-b1b8-2fd919580a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda31afb-0c89-4572-ba20-fa0a609174da",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0444a666-adad-44b0-b08e-c272b7d300e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff537f4-1a5e-47a9-9fe1-50e65659b323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff10ab42-b250-4de8-8d96-6fc7aa441b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651d83c5-0558-40ef-9538-d94f69811e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9d8e09-efb5-4c90-b50f-600776ddf3fd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11eb3ab-8825-4b55-93bd-5438f2989139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80b2a72e-1568-4f94-ab8d-0ef482970338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc9f15c-d640-4c8c-86a5-2bbb911aa9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca9c1e6-e511-4f05-96cc-1b568fc33177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e50f4e-eb4f-4700-9622-5f4ae42b7fcf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e4ee70-6dfd-4a13-a5c8-fd711bf310c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8814577-201b-4150-afd0-19fe3e51357b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d574f8d2-f186-4c42-af38-9e7ef77337ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc5bdef-80b2-476d-b15f-e450cbf2c557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c0f8cc-0769-437b-a2ff-80c3c06988dc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba41b39-e0ee-426e-a5e6-3a3f3f1ee1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc00b18-601a-4bc9-873b-558361f496bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af744ea7-d78e-4290-92cc-3a9ea25b17ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f250af7-79fb-41eb-a3c5-37521a715d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37e30d3-a8c7-4d10-a105-1fda663d6c92",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33be4cb-719a-440d-821a-10e4f5364d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3beba83-8d01-43bf-aedc-3112d9a0b2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e18fb2b-358f-41df-8952-b387a48470be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a4889b-7eb0-43b3-9b88-0c8b5b72aa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2db273-5bb2-4af7-8fda-0b5ebb40f31f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652b305a-8478-42f9-b3dc-6a414e556d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4daf4e2b-565d-4d90-a34d-8d4fe1509cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dc39da-8a27-4e60-89dd-25d7c4441b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46b27fa-5a98-4354-80f0-198b698a2991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fea1c24-e4a7-4651-b45f-804e25a8f112",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efefe1e-9cd1-4e22-9186-8c12cb2447c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd421501-8324-4dc8-afc6-55d83b7a21d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22acd14e-1652-4135-b34d-4c0885516728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e839eb-4ec2-4a82-93f8-e9d7cecfaa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ab8ec6-9143-45c1-8a0e-4fcb5e34e803",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42eb80c-0e3e-4cc8-8cb7-19d90a9b6869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49d46c8-26a9-4f88-99e7-b16a92106400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41970de2-55cc-4731-9e8b-de74e45fde6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc871268-504a-4faa-9114-3c9f3f2e3896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165c3b31-a1f6-48e4-ac62-bfded74f8722",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a005f089-2d00-4b2d-9225-9403d9929f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a720a7cc-b1ef-4779-845f-650ce7678517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeef2ff4-aa81-43d3-b8f8-6312036a708f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0ee8fd-626c-4b8e-a61b-36989153a489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625cb3e5-6512-4316-8970-47a3039b8bfa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b940ed2-625d-4603-8479-33bbeb28dfc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9715af3d-73df-45c8-8a0a-be055f331a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76c15fd-5854-4ccc-afae-d98fccfa4c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c68449-3730-42f8-a06c-03e54ae857a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8a4fe2-3f1e-4abc-b477-ca70cb909964",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f226626-edb7-4393-96b0-5247bef8d3b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e4eac1-0034-4ee7-8c47-10708af9a498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdfce0e-7980-4c41-8db6-db8b077e42b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c6e8e3-1e47-4e7d-9b49-d70d16d3e7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb21e84e-2c6f-4160-8f63-f1bad875315d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38edaf9-fbf4-4c46-a335-562c32cafe4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f898f3-fdb1-4dc4-b979-0652ead124ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0951962f-1d13-426b-961c-c7177beea84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24a40fe-9309-4466-8350-7e24325eba44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3b6c04-fd5c-4ad2-80cd-7ee5730ee633",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49949f56-a3d7-4fbf-9404-ff88c6e24dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d67652-fead-4407-afbc-acf5e2946c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9408bd63-ffee-4178-a702-f041b18bdd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cd90d5-4fe9-4c1c-8e88-17979cf8a40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910babee-1619-4c01-9457-01b82e1f6496",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17fb14b-8594-4f06-8871-19a25f7a6081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e1e442-9e68-4bf8-b922-6b584234785e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e3e644-260d-4068-a622-ee89d4ed0d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ea4f93-60b2-4c85-a848-9a801ac33e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b948acd5-2157-4218-a84b-803a4bfc0240",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feb915b-6f62-47f4-b802-324d9ba85f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c387ccb-6fc8-462d-837d-a54bd46127a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed6475-4c8c-453f-867d-6f9037d07b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719f6f79-3670-4946-b0ec-9748bb33e5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2688a5-be34-4a62-abd0-d99bf0b2b617",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e355a8-2c17-4ad5-9ed1-a3544729749a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb90b218-c2f8-4dee-aa2a-6f31c8881acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c890dbe7-81c4-4846-bf97-4227edbe6f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5445d162-6fcb-4c54-8673-0957f71ea4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc07e738-20e3-4ce4-bfd8-be29fb495139",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90951ccb-9059-4cb2-b23e-0173f54c9f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce54e907-c31c-4153-b4fc-e2081b79ed08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce2b175-a73f-419a-8876-63486cce3a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310a393c-307f-4a0f-a211-0dff87c4b168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28633082-d617-469e-96e0-998e5b800f89",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063252ca-b249-448e-86e8-99c420401e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc5408f-9166-4e49-8f78-a89ebd9c71e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3f7906-1178-4408-9717-61535d44a539",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe7ad72-3731-4813-ac5b-948c58958bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d89ca6-f8d0-47ce-9a81-37bb275f6dae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e322512-c81b-47f8-8f2a-fd8cef8f0a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad2f0d7-e53f-47d3-b341-f40f5df0e21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1343d3-9c5f-4605-b19c-229e4daaaaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d78a439-8a9a-4687-8983-fe170c5afcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0deb5c7a-c227-4f4d-b230-2cebc48e82b1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a935d9f0-1e31-495e-aed8-caa984d7b895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef496cac-77c6-4307-a2a0-c3859836a7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6fa085-5f6e-4b50-9b3a-4479bdc25e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5335be9b-2ff9-44b0-a361-e700841af9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d2ec79-e402-4416-a0e6-ed220bfb1dcd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f630be67-2ecb-4057-be4c-b0b5c1f7529c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd211576-e1bd-420d-998c-591bd07d221c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d66e5f-32ea-47f3-98b6-d958f0e0aaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cf2e76-90f8-4b0d-abbf-790c69342833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a580d6-7c1e-4b04-9bbe-d519d3b78299",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e3d6cd-6251-4a93-8b49-561dac7281e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e7125e-79fb-44f2-b586-5d4a540564c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c5bb26-f04f-4350-97a7-d01bdf9d5750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f516f42-08b3-401c-a7da-15ede252c259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d7168e-dbd8-4389-9722-0554b14f919c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4ff73f-ce69-4363-9a95-8b83a37e15bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a9ffd9-c38c-46bd-8efa-940513d55782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9565b92-65e9-42ae-80c3-653a43d6a46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ed67a6-36ac-4277-b220-53195245ec07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1567161d-cab9-478f-8789-e569d2f802d0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d74233-6fe2-4795-846c-447f3dae16a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc374dc-0a27-4245-9cd0-b0d4de2aea34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9b0c7e-345c-464e-a78a-c7af5426d12c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65864f3a-72fb-49f6-83c2-77f4d6fffc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d47bcf2-d603-46b7-8f45-caab972da08d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175b3101-c9f3-428d-834d-0afb2f28cf6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d49a5d3-7fb7-4a1b-a5a5-e40e728c2d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8505e594-af70-47d2-ac73-28dabacf485b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05be67b-a6ae-42ac-88ee-d066383bec8c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4e1d561-f00f-4f34-b354-b29ef650fc15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76fd1ea9-46c9-4f9c-b2a9-aae176117020"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "691e31ae-af54-4f35-9bdb-cef1f72e42ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60ca6f66-6f17-469b-b631-7f742c1add16"
                    }
                  }
                ]
              },
              {
                "id": "c89cfb5f-2d48-48e9-b4f2-8077fec2676f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f24adae2-f05f-4602-8f11-94c1bb1ed29e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7761fd2f-99ef-4690-9c31-c0be80d2524f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "54972a8c-4b5d-4721-83de-d531c34dde65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6236df9-1a31-475d-8e45-062cf122edfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65b3c7c0-7454-4863-9390-c8adf508c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b24830-555d-417b-b131-708e59a9c488",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2c6509-7536-4dc5-a94e-67cebd16a430",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b1bc1097-1d7e-42f4-a48b-a42b6d8ecef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767ae512-b061-4979-865c-3aed73ab2d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47dee434-0373-4b51-8ec9-b10492235577"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e32962ef-abef-487b-a391-901a73cbbed0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bc5e2c2-f602-4ee7-991b-b20bbe4a3526"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "993e0945-d690-4b35-bbc0-a46493ebc5ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3c731e6-a3f8-42ca-b641-aea6ce010233"
                    }
                  }
                ]
              },
              {
                "id": "4305c444-a211-495a-a0f7-8fb688df9314",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b5c49d65-1445-4ece-ac99-f0934138fc96",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086bbd65-8d24-4e71-8f7d-ef50d799b028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9bc0c0da-9e01-4ae0-b101-a1f6923b81df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89f2abf-93ad-405e-8559-7a4ca2484253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffffc614-0f88-48a9-bdcb-c1d2d5fe04e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b2b01e09-f477-48c0-a136-5cf639521422",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0892c4dd-c4ab-43b2-b883-576ce9d76fb1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30df2700-f8d0-4a0e-a407-cbd0cbbe1bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eaff6564-8f22-4e13-9a37-1ad8e049b9e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b87e62a-a97e-4d49-80c6-e51f5d5010dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "126a0f3c-4a13-4bca-bdc4-b3a7bcdc73ab"
                    }
                  }
                ]
              },
              {
                "id": "f58c514f-9e77-471b-90e6-c12fdbdb4bce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2fa3d59-d3f5-4eea-9eff-3749a1706596",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "683fe440-99a9-4a45-9e2b-fdeef197b5d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2176e7b5-9eff-4158-805f-cb9af810bd32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "166eb02e-7b03-43dd-b711-f11ae0ce442c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2579ff04-c00f-4503-bec1-24ce0d2ff62e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2d2b6da5-0dfe-472e-a0c5-003d750b8606"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9895fdc-91e9-4b00-92dc-46bb52de5ccd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad628b3c-f31a-413f-abee-44249ae436a8"
            }
          }
        ]
      },
      {
        "id": "50f56527-aa5a-4b2f-989c-300f8614c53b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "10878ebb-35f6-4baa-b644-dcfac5a44066",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3b4a18d-deea-4622-aa67-27e8392c7e1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a51fd979-e2ba-4e0c-8a64-90699836ec23",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3442d7f1-dd0c-4f8b-b369-5d2ccd80d04c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a635c96-dee9-4da2-9f55-2e233c34928b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb36acb-73fc-4000-8714-3b3d41736d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19be5fcd-761d-4634-9b23-307217f87147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c8cabd-47cd-497a-8a00-910a914796ad",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ecc98b-a08e-4358-92b1-c0ebb34cc845",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "710084ce-8372-4601-9166-dc21cea76f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6fcde1-2cc6-4794-bfe2-65961dfc4fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2c3e41f-c16f-4fcc-a836-8f87376477d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adfcc5e3-14b7-46d4-bd30-e4f24a3cc27c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99710828-7855-4ac5-9bfd-49c1fcdc3ba8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec83afdb-4dc5-4f42-8a06-96a42ef2a0bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3ed66f3-99c5-4788-a468-a92be7faafcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f71bd39f-d4ae-4e33-bd9a-3950ccb7191c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e1b78009-5baa-482e-aed8-c68da1dbfa16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2218e93-f6fc-4176-84fd-b9a51278b960",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95fed6d5-d220-4168-8ed2-f11a466372ce"
            }
          }
        ]
      },
      {
        "id": "b4bdf701-fc75-4df1-8979-1b2990a06891",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f52ba854-9206-42ea-84a9-4aa5f8d5373f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48d8ed8c-9944-49a4-8be3-0ac14fcb0bbe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44ce7566-e817-4468-891b-ff8699797a59",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e071c3d1-cd69-43f0-a20f-b9f3449b0aea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dd823f2-9ea4-4093-9032-8f6bb08b8170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd65cbd6-2a73-4ca7-a3f0-ece13cabe05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c1943ee-b9c9-4621-ba31-0790f7b94779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e40b11-cd76-4542-a938-179a1f825b81",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1a57a2-bea4-4028-872a-cb038a24a6c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "734a76e7-e66c-4a50-83b2-af8eaecb4a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99288f2e-66e8-4837-ba1e-47e634a1a273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce3ac115-1bd3-4294-a43a-8519d66613ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02125c5c-9716-4a08-92dc-7229cfefb7a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5e6ded4-9b7c-45fb-a64c-076fb89c36ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "923f7176-5059-4865-9b2e-2d9b135dcb54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d2bcd2d-c6cf-4b95-bf0a-ced19b242dfe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f610202-d5aa-4eda-9fb2-fa3759b5d532",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2f31209-c469-4c8e-bfa0-9c57c6f5e84f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee94792e-2cf6-4cdb-a8a4-a3c3be4b698c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "472774f6-5f3f-4152-ae04-22d24f610f61"
            }
          }
        ]
      },
      {
        "id": "9f2abfca-ae27-4d29-8e72-9908f4012a49",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dec8b18e-2a7f-4be1-8003-40b638117153",
            "name": "Negative Testing",
            "item": [
              {
                "id": "168ed1e3-0ac8-4c5f-a1fc-e73f8beb997e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1117732d-ee5a-4533-a95a-7d404c28b5da",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82053adb-ccad-47d0-8723-a90321907d2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dad4635b-bf1f-4d92-9b04-703825e2e87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9bff79-6e07-44a6-8e90-86a2e08031f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa6b0b7c-d9ec-494d-8550-fcfcfff2fc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501048b1-8089-4633-b9c1-396b991a52af",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797d6a8e-d271-46fe-8f7f-bc09435946c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df57f023-168a-40cf-afe4-c0118b1f47a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9d5908-c9f7-4aab-b9ee-0883c9379530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3eb78c2e-e7d4-40fc-b67a-3fbcab0cca82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9190f7d-3f01-4f3b-a7e6-02087181e7dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef190b28-cf24-4d18-af53-fdbb493a054d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7d64ee1-6bf9-43fe-82ac-82ed95212f2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b8b5377-d9a6-4a96-92dc-e801ea46d008"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e52cfae-8b8a-4a6a-946b-3f9cd3ae9c41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e59b8f7f-3526-4509-aaed-eeb34f71ac30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bddc7cbc-f01a-441b-a6aa-ffc1f74c618e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbb7bb4b-ba9e-4394-9e17-6fcdf144c3cb"
            }
          }
        ]
      },
      {
        "id": "2aa16d83-e83f-4f00-adaa-de8e1c7aeaf6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4286a55-73ad-4bc2-8cc6-cbf40bb38728",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7771dd0c-8881-44de-bbae-e1e6d79436ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "29386cca-75f3-42ea-83a9-2193e613cab1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93cf6cf0-c471-4122-b09d-a2ac1db373e7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34970a7e-8d33-42da-80bc-164d7d1886d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.650000000000002,
      "responseMin": 4,
      "responseMax": 262,
      "responseSd": 36.611849174823156,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681173447505,
      "completed": 1681173462031
    },
    "executions": [
      {
        "id": "833429f1-836d-41b6-947b-198368d14856",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dc26cdee-2c4e-44e6-9e87-4f0dccf3fd1e",
          "httpRequestId": "b133854c-4eb4-4467-95ab-4fcfb19bd333"
        },
        "item": {
          "id": "833429f1-836d-41b6-947b-198368d14856",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c8db24e5-a478-4c09-a954-583b56ac4e72",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "2a771ece-731a-4c9f-a3b7-5be4ef76fdb0",
        "cursor": {
          "ref": "7ea8d98c-4e0c-47cf-8655-0d933a2830d6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a3cff953-d577-44c6-859c-594aaa388ab0"
        },
        "item": {
          "id": "2a771ece-731a-4c9f-a3b7-5be4ef76fdb0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7bba6113-ed9a-4e34-93f7-52284809a001",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "ad6c6c66-6420-4720-b4b5-8b644ae0c141",
        "cursor": {
          "ref": "a8ff73a5-e9ca-4e8c-83b8-2783db146f40",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "88ec4eac-d471-4030-9c96-90449b39262f"
        },
        "item": {
          "id": "ad6c6c66-6420-4720-b4b5-8b644ae0c141",
          "name": "did_json"
        },
        "response": {
          "id": "abdd4b33-1a47-49b5-b38b-d57db3203f4e",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513650a9-a443-4574-8f88-0e492e9739b8",
        "cursor": {
          "ref": "6a8d1a8c-43df-41a6-8ab9-c023ca921ec8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a585ab46-5863-4c5d-8add-05a73fd276dc"
        },
        "item": {
          "id": "513650a9-a443-4574-8f88-0e492e9739b8",
          "name": "did:invalid"
        },
        "response": {
          "id": "700e96e4-f21b-453a-bd98-044064abc98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513650a9-a443-4574-8f88-0e492e9739b8",
        "cursor": {
          "ref": "6a8d1a8c-43df-41a6-8ab9-c023ca921ec8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a585ab46-5863-4c5d-8add-05a73fd276dc"
        },
        "item": {
          "id": "513650a9-a443-4574-8f88-0e492e9739b8",
          "name": "did:invalid"
        },
        "response": {
          "id": "700e96e4-f21b-453a-bd98-044064abc98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c06477-61a5-4a99-930f-e4c1b9c83682",
        "cursor": {
          "ref": "b9ecfd6b-4ddb-4047-bcec-58282b34b294",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "67f24761-f78c-4412-b60d-03b699f2ea40"
        },
        "item": {
          "id": "e2c06477-61a5-4a99-930f-e4c1b9c83682",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6dcd6ac9-57b9-49f8-93fa-6ae57ffa02d7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b91c83b-38dd-43e3-9fcb-719bfef4f5b6",
        "cursor": {
          "ref": "5bdcc03f-2537-4db6-80a6-a877b675558a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6c4a6b3a-4f91-4c89-a34d-61b555b38b32"
        },
        "item": {
          "id": "2b91c83b-38dd-43e3-9fcb-719bfef4f5b6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8ce23aa1-3ebe-4a67-985f-4fd0af7e14b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2984536-b081-42d9-b56e-cf39c99a1466",
        "cursor": {
          "ref": "72a09268-9d96-471d-8b86-6ace63fe888e",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7cb16ed6-a4fa-4dd9-ac36-edafe0121762"
        },
        "item": {
          "id": "c2984536-b081-42d9-b56e-cf39c99a1466",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d4722ef7-8dd4-484d-8fd9-25585fb5dd84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3120fef7-a10a-4158-b2df-948db62a283c",
        "cursor": {
          "ref": "efd388b2-a672-46f0-839e-ff94f50a6499",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f73a5798-eaa6-42c7-9003-e5c93e8fb8eb"
        },
        "item": {
          "id": "3120fef7-a10a-4158-b2df-948db62a283c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5e920402-2c39-4a7a-b3ca-7b2d0a4e95aa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3120fef7-a10a-4158-b2df-948db62a283c",
        "cursor": {
          "ref": "efd388b2-a672-46f0-839e-ff94f50a6499",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f73a5798-eaa6-42c7-9003-e5c93e8fb8eb"
        },
        "item": {
          "id": "3120fef7-a10a-4158-b2df-948db62a283c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5e920402-2c39-4a7a-b3ca-7b2d0a4e95aa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbad152-a216-42e2-a84b-6476c821a281",
        "cursor": {
          "ref": "62c07865-cc76-462e-bc85-a461d7a0f232",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "545f4780-6187-4474-bc4f-66df2fbd680b"
        },
        "item": {
          "id": "1bbad152-a216-42e2-a84b-6476c821a281",
          "name": "identifiers"
        },
        "response": {
          "id": "5a5f44b5-daff-4822-8000-6a546759337d",
          "status": "OK",
          "code": 200,
          "responseTime": 205,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2362acd-a16d-46ee-9203-ce602ede1003",
        "cursor": {
          "ref": "837f86e3-8bd0-4f4e-b07f-1f66b6d130ed",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7ed2d797-2b9c-47a9-bce2-e898c3f12a64"
        },
        "item": {
          "id": "e2362acd-a16d-46ee-9203-ce602ede1003",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b574cf67-617d-4043-86c7-6aeb6207313c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2362acd-a16d-46ee-9203-ce602ede1003",
        "cursor": {
          "ref": "837f86e3-8bd0-4f4e-b07f-1f66b6d130ed",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7ed2d797-2b9c-47a9-bce2-e898c3f12a64"
        },
        "item": {
          "id": "e2362acd-a16d-46ee-9203-ce602ede1003",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b574cf67-617d-4043-86c7-6aeb6207313c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469989d4-7e0d-4c4a-904a-54e55c2d5a99",
        "cursor": {
          "ref": "9ea71be2-b7af-4fb6-92a0-92c38dfd9896",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a348bfd8-7d4f-48a9-93d9-179a1da93a5a"
        },
        "item": {
          "id": "469989d4-7e0d-4c4a-904a-54e55c2d5a99",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b2d6e410-4054-4b96-9822-558809d6e86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf44af4-ad7e-4680-a363-0acab77851a0",
        "cursor": {
          "ref": "152f749a-1bad-47d6-b142-f475f4a51df7",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c788a247-89d8-41ba-a78e-ccf5a7fdb2b6"
        },
        "item": {
          "id": "ecf44af4-ad7e-4680-a363-0acab77851a0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d23b374f-5ac3-4d40-b0be-b44de46476d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea365ec-ed12-431b-b868-38e10daaa2bf",
        "cursor": {
          "ref": "3e43a717-5bfd-4748-b530-5bf2922a1a66",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4501987e-055c-46fb-bcae-bdf7c69d7cd0"
        },
        "item": {
          "id": "bea365ec-ed12-431b-b868-38e10daaa2bf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "013d28e3-1c5a-43ad-a0ad-4ade2bd6caca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf2b491-619c-4618-9c5a-3a6b5419db4b",
        "cursor": {
          "ref": "35a56fb7-d120-4fe2-862c-f4dcd30497ec",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c8bed1b5-3bd5-44dd-8ae9-cfce9d755bbe"
        },
        "item": {
          "id": "2cf2b491-619c-4618-9c5a-3a6b5419db4b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ed571608-5b15-435a-ade5-8a56f45aebd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f54139-36bb-4014-a918-78a90ede3b42",
        "cursor": {
          "ref": "e9a9dbf2-cf4d-4004-9c6a-c16570df4947",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d0519a75-53b7-499d-8776-74e53eba69d7"
        },
        "item": {
          "id": "96f54139-36bb-4014-a918-78a90ede3b42",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ee3e22bb-e051-4c61-b084-b9662d2e4ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b735d8a9-0934-45f5-a496-6c3d7814b8eb",
        "cursor": {
          "ref": "ee3e542a-b8cc-4e3d-b51c-8137c914c465",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8d8a7da9-51a1-4aa6-b9c0-dee14654bf5e"
        },
        "item": {
          "id": "b735d8a9-0934-45f5-a496-6c3d7814b8eb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4b55d945-762e-49d8-9632-123959558b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eef9a6-e9ab-4f2f-96a0-aafa954e5095",
        "cursor": {
          "ref": "93c448ba-5975-4f7c-8e5b-62f0b1967fee",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b5391dfa-0334-46ce-a59a-e0062b39f573"
        },
        "item": {
          "id": "a5eef9a6-e9ab-4f2f-96a0-aafa954e5095",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "14b259a7-0800-4e13-b097-9dd412ba3124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3891eacf-07cb-4059-931a-fe07ea06a34d",
        "cursor": {
          "ref": "e6d97740-4afb-4de8-a925-a5590ec22813",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "57c5123b-1bd2-4076-bd5a-693adab53ff4"
        },
        "item": {
          "id": "3891eacf-07cb-4059-931a-fe07ea06a34d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e1b54b8b-d273-497f-9a9a-a78475b1e4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539ecf8c-859c-4500-920c-1f0284f9d05d",
        "cursor": {
          "ref": "0f119b10-3847-45f9-a3c4-009fc8988383",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "032d6bfe-f7dd-40ce-9f4f-b841b711244e"
        },
        "item": {
          "id": "539ecf8c-859c-4500-920c-1f0284f9d05d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0b3b72b3-8733-49a0-9ad8-13ff144edeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48bceb5-8d7c-4c11-97e5-30dc52bca15e",
        "cursor": {
          "ref": "8fb2822a-47a9-4263-a220-b672a17c32ea",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "35777eeb-9752-4bfa-9e66-b9017d84844f"
        },
        "item": {
          "id": "b48bceb5-8d7c-4c11-97e5-30dc52bca15e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7acf07e4-07f0-4f34-814a-205ecd93c932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76712058-8907-44be-b952-f9bfef041be0",
        "cursor": {
          "ref": "cf4b9b00-ee46-4b78-8ab3-218bdbd80ed7",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5bb9c9c3-e813-418c-b64f-c6e807f28487"
        },
        "item": {
          "id": "76712058-8907-44be-b952-f9bfef041be0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "90ad927d-d042-4b02-9fa5-6fd63d949412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeb50e0-2f92-450f-bb61-893869d264ef",
        "cursor": {
          "ref": "0cf5c34f-eb6a-4672-bb94-d25e68662da9",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0783c3e3-cad9-47cd-81e7-b6856b283a27"
        },
        "item": {
          "id": "ddeb50e0-2f92-450f-bb61-893869d264ef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7e623a07-f2c4-4149-9551-f1b88af272fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6df454-ab34-429a-9e18-6fffe4b4b5c9",
        "cursor": {
          "ref": "8c179682-4b72-4981-b5ab-4ecb624f1c4a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a2f922ee-5ca7-4c0f-8646-3b153ac89986"
        },
        "item": {
          "id": "6a6df454-ab34-429a-9e18-6fffe4b4b5c9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2eeec723-caef-44ec-aa6e-a5189f928e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6284d6bd-d6f8-42af-a0cd-e16095bc2e65",
        "cursor": {
          "ref": "b5ad7a8f-7f4c-4754-8379-0d244417e130",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "308c9c4e-4921-4644-b29e-be79876d0b75"
        },
        "item": {
          "id": "6284d6bd-d6f8-42af-a0cd-e16095bc2e65",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5e40aa6e-801e-4156-b4c1-ae5763f100ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f903e7c-dc7f-46e2-91f1-dd289200d56f",
        "cursor": {
          "ref": "363972fb-55b0-40d3-9ac2-a63b0629f8a1",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "898976e1-8b3b-4949-9bd7-b554f0529c54"
        },
        "item": {
          "id": "1f903e7c-dc7f-46e2-91f1-dd289200d56f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "15c1f482-d2c4-4fe5-8a87-be6342df078e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb83ad51-0bf7-43a1-a966-6907064043a5",
        "cursor": {
          "ref": "24103cfa-5de9-406e-8f91-18c9c2d848d3",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3ad0adfa-5bb9-4b7a-a894-a24c4886ab0a"
        },
        "item": {
          "id": "cb83ad51-0bf7-43a1-a966-6907064043a5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eee91129-f92d-4108-bc0d-d9af4af3b907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df0bc78-92fc-4b22-a914-fe5c2fcde8fd",
        "cursor": {
          "ref": "98055021-7b5d-4f5e-87f2-a2f6bf740540",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fb16de88-47ad-483a-b9f3-a199c9f91db0"
        },
        "item": {
          "id": "8df0bc78-92fc-4b22-a914-fe5c2fcde8fd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "847c708d-3c0f-48c7-8016-a4fe72b067ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3318e19f-a67f-4413-8dc2-850fbc7a1203",
        "cursor": {
          "ref": "f6735a88-9093-46ac-aebb-d6128b8d3c30",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "69f875c5-9b99-4f13-b302-04bf4dcaa640"
        },
        "item": {
          "id": "3318e19f-a67f-4413-8dc2-850fbc7a1203",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f7b9fb33-023d-42ef-bea3-0a43954b8331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4def2667-584d-4c29-8ea9-99a9169e58e4",
        "cursor": {
          "ref": "f90be526-fefc-495f-89a5-1edc5d167e87",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c1e0d2f7-1d80-4cfe-8ac6-7171c74156bf"
        },
        "item": {
          "id": "4def2667-584d-4c29-8ea9-99a9169e58e4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6a9eb7d6-a362-40f4-89f0-c1520375e16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26e3251-73c0-451b-b2bc-05c95070da13",
        "cursor": {
          "ref": "ebc4929e-b7d1-4813-9388-5088f54eb138",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "99d46882-ecc0-470b-a680-e05f0ec3be3d"
        },
        "item": {
          "id": "c26e3251-73c0-451b-b2bc-05c95070da13",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "91618b9c-b906-496f-bfc4-b56506480b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb807fa-6af7-441a-8dd9-5f2827109dec",
        "cursor": {
          "ref": "c2404c3d-54e5-49b0-8a08-8f238e8cbcc3",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b235327f-a9d4-48af-ad53-943b244567c9"
        },
        "item": {
          "id": "6cb807fa-6af7-441a-8dd9-5f2827109dec",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0adafc50-8118-4791-aa5b-6cb7fc23bde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8454394c-cf5d-43f0-be8b-6c19366607fb",
        "cursor": {
          "ref": "08c98244-4aa7-4674-a845-e8c08c70c3ed",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "55ef0539-0f70-45c6-8199-28c4e989ad44"
        },
        "item": {
          "id": "8454394c-cf5d-43f0-be8b-6c19366607fb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b2371ff2-a149-49df-b159-27408e8f14d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b4e3bc-8bb4-4c6f-998d-a8d615079c10",
        "cursor": {
          "ref": "8700b8e1-54f3-4a96-8c23-adb9f6e75a7f",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0c71190c-cfd1-4b4e-a2e8-863de4192c8e"
        },
        "item": {
          "id": "97b4e3bc-8bb4-4c6f-998d-a8d615079c10",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ed020743-b99e-40c9-8432-d9079407f8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babfeea1-62f9-4597-98f7-47715bbf7392",
        "cursor": {
          "ref": "bea14174-da89-44c0-aa0a-7792fbd0b10e",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3085e3f8-4986-4ae5-9cf7-d6fda1561b32"
        },
        "item": {
          "id": "babfeea1-62f9-4597-98f7-47715bbf7392",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a96696a7-42b7-4684-a8c5-d82c4b98845a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ff1a69-7e0c-47d5-b30b-f5e751a22540",
        "cursor": {
          "ref": "3bbbb5aa-deed-4f66-8b33-5bdf61850bdd",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fbcc2d20-fc2f-4905-9883-ed6d0f485b95"
        },
        "item": {
          "id": "63ff1a69-7e0c-47d5-b30b-f5e751a22540",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "72a2744b-aead-4f83-8729-0405071f3bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40c8172-eede-45e8-b628-66a9a5d35b46",
        "cursor": {
          "ref": "b319b26a-59d0-4136-8de1-0cd83f6b9132",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2778c4d7-90f6-427b-9746-c1434dd67449"
        },
        "item": {
          "id": "d40c8172-eede-45e8-b628-66a9a5d35b46",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0d285d2a-4f10-402a-8c83-85046bf7b974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a616bcee-8b2e-4d33-a65f-d96891c57fd8",
        "cursor": {
          "ref": "6fb9a7ac-f372-4f60-ab84-ae08f1c235a9",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d1310950-e2ba-4e6c-84ad-dfcff2489d28"
        },
        "item": {
          "id": "a616bcee-8b2e-4d33-a65f-d96891c57fd8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6bcddfb0-45d3-4037-a25e-febb7686d40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d277d7-38cd-47d9-a955-075c8e9a0bfa",
        "cursor": {
          "ref": "5978a930-9e15-4690-83a1-ffe7f72bcc7d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6e78fcc8-b3e5-4377-b69c-7167b7c4f2ae"
        },
        "item": {
          "id": "91d277d7-38cd-47d9-a955-075c8e9a0bfa",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8dc36581-e025-4520-b414-ee9827e62958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771ebd89-4f8d-49f2-8eb6-f6d85c9fe830",
        "cursor": {
          "ref": "b769a26a-73e7-4728-aded-c31b803879be",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6f2f529f-6711-443b-8c74-1184a3b9bdf7"
        },
        "item": {
          "id": "771ebd89-4f8d-49f2-8eb6-f6d85c9fe830",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0a433a55-54ec-4e88-844e-832ea41c7996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d732e0a9-0a5b-4149-b38f-4bdebe3ab321",
        "cursor": {
          "ref": "f4678101-581e-449b-8213-44db6a84e615",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "be2c835b-6d0c-4de6-8a0a-4c19546599c8"
        },
        "item": {
          "id": "d732e0a9-0a5b-4149-b38f-4bdebe3ab321",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2d5ece77-f975-4177-aa17-335fa2f04624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ed6bdc-5767-47de-92d9-7a45f2ac135d",
        "cursor": {
          "ref": "b8e04d3f-0524-4bfd-a66a-3d58270b7621",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b63fc01f-9399-4875-befb-378f1df2d32a"
        },
        "item": {
          "id": "f8ed6bdc-5767-47de-92d9-7a45f2ac135d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9bf2d91c-cc3f-45be-aff7-8a7c1670d8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dac68d-8935-49e1-8480-c88c3b843e99",
        "cursor": {
          "ref": "ef100502-51df-47b4-8704-251b89d44490",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "efcf4337-e4cb-4bf1-b71b-2f7a2e88e189"
        },
        "item": {
          "id": "96dac68d-8935-49e1-8480-c88c3b843e99",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1a8fa882-3f58-406c-803e-93ed438ea2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cefb602-811b-4cd9-ab13-0619af924aaf",
        "cursor": {
          "ref": "aaaa744f-a373-4b99-ac92-ea5fa1f5d3a2",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d8e0aacb-1e1e-42be-b726-b43b907341ef"
        },
        "item": {
          "id": "0cefb602-811b-4cd9-ab13-0619af924aaf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e63fe3dc-7062-4fa6-9f24-f6b15c50acbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce45cf7-d438-4b20-b78f-4ce11431ade2",
        "cursor": {
          "ref": "4917b8ba-6f5e-42fe-8855-4115c49f0c6b",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "093a5963-c1e2-4f57-ac78-3d97010d6fd3"
        },
        "item": {
          "id": "2ce45cf7-d438-4b20-b78f-4ce11431ade2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "80bfff9c-b346-47ab-a2e9-67670ac285df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a412160-cd85-4ea2-b79c-e9546e1390e3",
        "cursor": {
          "ref": "ab5a1f46-f9bf-4839-ac57-03708dda8684",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "15be92a3-56db-4fc8-94eb-c12289ae04e5"
        },
        "item": {
          "id": "2a412160-cd85-4ea2-b79c-e9546e1390e3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d8435cba-c93e-448f-a2c5-49e3140a293e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 15,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb5d2f4-3f3b-4bf7-9d62-5f02effff1d1",
        "cursor": {
          "ref": "7c3db966-0842-4f2a-89c8-72079c9deb16",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7296d3fe-3b73-4cc8-9c39-4dca236e82ee"
        },
        "item": {
          "id": "afb5d2f4-3f3b-4bf7-9d62-5f02effff1d1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b05f8ba5-b55d-46ec-9760-b53fb15557ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd84e83-1fe5-4bf6-920e-c4c54545e688",
        "cursor": {
          "ref": "56e6c5ad-d9cb-429a-90a5-15904157cfd4",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "111ac281-63fe-4e79-a7f5-ba8362b3b3f8"
        },
        "item": {
          "id": "8cd84e83-1fe5-4bf6-920e-c4c54545e688",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c2c3d7a8-5ba6-4b30-9776-1ced3e4b37b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a800df9c-1193-40a2-bff1-2dc57cea1d16",
        "cursor": {
          "ref": "6aa0afb6-63ed-4688-9498-20e2722bafba",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "63d8269e-a327-4770-b81d-cfde4e85a2b2"
        },
        "item": {
          "id": "a800df9c-1193-40a2-bff1-2dc57cea1d16",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "927b8c9c-34d4-4b7c-ab6f-d727bdaea754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2275de-b7a0-46ce-9430-082de5acb21d",
        "cursor": {
          "ref": "4fda8bcf-e92d-4d01-8fa2-cdec0fe89e4c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d2f7cec3-2895-46a4-a3cc-ff4480c3453e"
        },
        "item": {
          "id": "8e2275de-b7a0-46ce-9430-082de5acb21d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "18d08f15-07bc-4c69-b9d0-b14d53183b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf00298-4df2-4357-b92e-d84d188515a1",
        "cursor": {
          "ref": "92007c75-dab4-44ae-8a0f-255b8b7b733c",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f6ad614f-d1da-49ca-8e66-52c5777d370c"
        },
        "item": {
          "id": "5cf00298-4df2-4357-b92e-d84d188515a1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4d9b3884-e254-498e-9399-65710c406093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f912e89-aee6-44f5-b49a-8f147168173e",
        "cursor": {
          "ref": "ce659cc7-b581-44a0-b1df-c596c57af70a",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "10fa711a-9c85-4b87-a2da-959904fe1d01"
        },
        "item": {
          "id": "4f912e89-aee6-44f5-b49a-8f147168173e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "24d80bec-336c-4f34-b2c9-f6fb4b54d21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f66d449-632a-4718-ba2b-fad94a451db2",
        "cursor": {
          "ref": "da54b76f-ef36-4545-8c53-9afcaa7ab57b",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "39e8e5c6-b6a1-4804-8e5f-4303e47ba0ea"
        },
        "item": {
          "id": "4f66d449-632a-4718-ba2b-fad94a451db2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3b3b4ff0-4ee5-49af-a6a6-131742dccfac",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd473b5-f38e-41f8-ad24-af41fc7ef6c5",
        "cursor": {
          "ref": "1344a356-5e74-4f70-a11a-edcc91ae143a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e0ed3286-499e-4050-99ff-60d55da10125"
        },
        "item": {
          "id": "0dd473b5-f38e-41f8-ad24-af41fc7ef6c5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b1680351-c942-47c5-80c5-e06a7b4f3372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af350ff-5a50-4898-b9db-46bac35e6c3d",
        "cursor": {
          "ref": "813d5701-8438-400b-a7e1-605d71b60965",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "72900ec6-0607-4a66-81a7-5cdd6f1ab72b"
        },
        "item": {
          "id": "0af350ff-5a50-4898-b9db-46bac35e6c3d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "965a5c91-f58e-40da-9693-f9e8985de169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda4b1e9-e2ce-419a-ac08-e321737d2b92",
        "cursor": {
          "ref": "49fdc8dc-bc21-4c32-9fd1-c9614eb23f81",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "db2db263-6b60-49fe-98e1-155fd83589a6"
        },
        "item": {
          "id": "eda4b1e9-e2ce-419a-ac08-e321737d2b92",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bdd3fd6e-bc6a-4219-b0cb-d5f8090db0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e9cd18-6e50-4b91-acbe-0181ca3ebd55",
        "cursor": {
          "ref": "6f5c56c1-b678-4607-a7e0-46f9063db23b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "05e72b43-c272-4093-b9fc-6d5f27b76782"
        },
        "item": {
          "id": "87e9cd18-6e50-4b91-acbe-0181ca3ebd55",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1f11f73b-bb97-4361-b2b5-61d488dfaf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92809f77-b8d6-4a51-bc70-f3acada64504",
        "cursor": {
          "ref": "2ecac979-23d0-4256-a311-13a3145d26ae",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d11ca84d-1e57-43ce-87e0-8a4ca4549b16"
        },
        "item": {
          "id": "92809f77-b8d6-4a51-bc70-f3acada64504",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f7a01d24-b8d7-4ded-ad36-c6ee7af1e73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7484d7c5-8afa-44eb-806c-9977c8e16544",
        "cursor": {
          "ref": "e367d0e9-3f9f-402b-a82c-9d6bd4f31369",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e0d50fcc-ca9d-4021-b8ca-113df4fbc492"
        },
        "item": {
          "id": "7484d7c5-8afa-44eb-806c-9977c8e16544",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b26a7655-ba59-407b-b78f-07ad757745c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61176a8e-c7e7-414e-a5d2-c070ca2b56c2",
        "cursor": {
          "ref": "ca209fa0-f819-4139-af38-29ae7298afe6",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5903be60-f09c-40d3-9c03-a1c031dc01dc"
        },
        "item": {
          "id": "61176a8e-c7e7-414e-a5d2-c070ca2b56c2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6661258d-5bea-4104-9651-fcc8f63a6295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2199d45-5c0f-4d55-9e0f-41f4ae849d3f",
        "cursor": {
          "ref": "90006cbf-17ea-469e-973a-2ad7ef9b2c8b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2e87dc8c-49f6-4ff8-9002-afcb6996f4dc"
        },
        "item": {
          "id": "c2199d45-5c0f-4d55-9e0f-41f4ae849d3f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8c20ea92-5a0a-41fc-838e-0345fcbba9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da260ca-2805-4410-806b-108bcd540b8b",
        "cursor": {
          "ref": "fadc55b4-b007-43d8-a96f-b75ed6040370",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "67db13dc-994f-4883-85e2-23ea67fb1438"
        },
        "item": {
          "id": "8da260ca-2805-4410-806b-108bcd540b8b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a6bc2780-c059-471c-b7cd-0819cda8bf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05a7bb7-d43c-459f-a759-77d9ae2249b7",
        "cursor": {
          "ref": "096a5163-7dab-4e12-9da3-e776a5196f4f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e9f61469-6976-4fbc-a4a1-49af48812003"
        },
        "item": {
          "id": "c05a7bb7-d43c-459f-a759-77d9ae2249b7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0716388d-1641-4148-afc8-60f15f07f5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5f6eb2-a503-4637-a40a-6946a7aab778",
        "cursor": {
          "ref": "19027ef1-c1d5-422d-8dc5-e770d39fce0d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c32a9f0f-c8bf-4264-a233-dc6c65c894aa"
        },
        "item": {
          "id": "8f5f6eb2-a503-4637-a40a-6946a7aab778",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "45ad48a1-afed-459d-a091-2806eccb99ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a67417c-b890-429a-9293-2863985854c2",
        "cursor": {
          "ref": "60d4e70e-eb0f-458a-9e48-0f9b6b7fe3e9",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "63fba431-2374-4673-93f1-258629a741f7"
        },
        "item": {
          "id": "1a67417c-b890-429a-9293-2863985854c2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b3cbd5e2-a722-4988-88ac-6b940022c70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467528d9-df1e-4d8c-a8ca-42fc1b882072",
        "cursor": {
          "ref": "e2be0d21-5b03-480b-af98-045f3c5b0980",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "247e28e6-671f-46be-b67a-12cc04c9b6f0"
        },
        "item": {
          "id": "467528d9-df1e-4d8c-a8ca-42fc1b882072",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c955edcc-bb60-4882-b16c-e4210e254716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3c21d7-f115-4ba7-9b2f-d9ed5988a268",
        "cursor": {
          "ref": "d3eaa37d-6f24-4731-b21d-4d05e375cf65",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6ecda501-bd36-40a2-9229-909ee8f5ca8b"
        },
        "item": {
          "id": "1e3c21d7-f115-4ba7-9b2f-d9ed5988a268",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f597eeb7-d889-49dc-ad84-a4f3e4a9d2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cb4014-df9c-4e4f-ad70-d983abef426d",
        "cursor": {
          "ref": "5fa7aaf2-1b2e-4971-9cef-e05a1cb4efc3",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8dd1ad51-c1c3-43cd-94c5-79a21d0fb924"
        },
        "item": {
          "id": "e3cb4014-df9c-4e4f-ad70-d983abef426d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6dddc550-fd7d-4ad4-9fb5-d7d4eac9591a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd043e56-9a0a-4a3c-b4fe-cb054a01f582",
        "cursor": {
          "ref": "2d7cdaae-7736-4971-a87f-8ba030d3a82c",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "52ef36fd-11cf-4011-aa15-0781695313a6"
        },
        "item": {
          "id": "dd043e56-9a0a-4a3c-b4fe-cb054a01f582",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "86835d34-348c-4bc5-a104-37863fdbcb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd76742-3038-4e33-810e-40f5db165f3d",
        "cursor": {
          "ref": "de50d466-fab4-4ed9-b27f-c3d58d578a25",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "48dbd0a5-ca21-4172-8a4d-b706f64c00ad"
        },
        "item": {
          "id": "bbd76742-3038-4e33-810e-40f5db165f3d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "60b498d7-bd2a-489b-a5cf-7ae2124eeda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87ee4ed-5847-4d21-b4d1-f64753d6042a",
        "cursor": {
          "ref": "2856a729-a236-4b28-9872-3e3ae71363de",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6ec9c480-b5d7-49c9-9a5d-fc4f6feff355"
        },
        "item": {
          "id": "a87ee4ed-5847-4d21-b4d1-f64753d6042a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eda5536f-1ccd-44df-8d9e-b7baee36a7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2593410a-fba3-4a40-ad2b-f14bb953ebc2",
        "cursor": {
          "ref": "dcb40210-bddf-4773-a763-0f4def81338b",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9c17f582-146c-49e2-b38c-a9d0c7d35b56"
        },
        "item": {
          "id": "2593410a-fba3-4a40-ad2b-f14bb953ebc2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2ae9cdf8-17a0-4a1e-9447-40bbcb6daa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3dd493-1f43-4644-8404-ae2edba42536",
        "cursor": {
          "ref": "82142dbf-1221-4299-9a80-435f4efcad35",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16a8e953-a159-4b49-a619-08e0a1d21b4f"
        },
        "item": {
          "id": "4f3dd493-1f43-4644-8404-ae2edba42536",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "519886e1-1cf9-4b95-aca2-c05413575274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b8941f-724c-47e6-8c64-b8ca961ac160",
        "cursor": {
          "ref": "1952c916-f415-465e-95e5-cf8ce9f6b4dc",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9a724b63-af5c-44d5-90fd-e5eb86c30a2e"
        },
        "item": {
          "id": "70b8941f-724c-47e6-8c64-b8ca961ac160",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "16889699-1221-4879-be16-399bf6814e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c80c70c-051f-4ab4-b580-48926b1165d4",
        "cursor": {
          "ref": "2be9bf00-ab67-4ffa-83a2-f380defe5b14",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a9d59eb9-2493-4d7e-8054-9c2b95eafb8e"
        },
        "item": {
          "id": "5c80c70c-051f-4ab4-b580-48926b1165d4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "83d01d52-c6b9-4c4e-875e-94c39e6fed11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1c8b2a-decb-405e-b427-f12851b2fe1e",
        "cursor": {
          "ref": "84319c10-a96f-4b58-9ace-03b1a9eb8824",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2e6b235c-33b3-4e48-8f43-7bbf9d45efcb"
        },
        "item": {
          "id": "2e1c8b2a-decb-405e-b427-f12851b2fe1e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "86e22ce1-cb38-4bb1-b5ff-6d7d9f5741ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001c50a0-3142-4c89-a9d5-0f1c75ba86bd",
        "cursor": {
          "ref": "6d4131fd-ba51-4531-ba63-a2842647a13b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a25432b0-e365-4113-8685-2514c142bfa4"
        },
        "item": {
          "id": "001c50a0-3142-4c89-a9d5-0f1c75ba86bd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c1b6fe43-7cc0-41d0-ad74-2ed73faf6b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f58ada-5182-4b30-b333-e09a76af72c8",
        "cursor": {
          "ref": "a387dc58-da78-4592-9411-10c24f55feff",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1c2fc1d8-fa01-4739-8cc9-e5b05d6f6bc8"
        },
        "item": {
          "id": "61f58ada-5182-4b30-b333-e09a76af72c8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "654a8c69-4052-4e94-bda2-3e834b1181f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a911ff-bc07-48bf-aa84-909341aa43b5",
        "cursor": {
          "ref": "b3bdd04b-9ca3-4bfe-bd6c-e01629cf96eb",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cf406ad1-e826-4e77-8e8b-e465697d10c6"
        },
        "item": {
          "id": "33a911ff-bc07-48bf-aa84-909341aa43b5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ba15269b-7985-4812-9518-39492d70ce58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c5bde1-de0f-4dc7-bff2-3b6d4f0a1bee",
        "cursor": {
          "ref": "c2e6cc29-fb6c-4dfd-b32a-3ca67ef6646d",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5bf1ab2f-4cac-4d42-a379-b0ea0b01e607"
        },
        "item": {
          "id": "56c5bde1-de0f-4dc7-bff2-3b6d4f0a1bee",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dcc4a40d-1ee4-4ec5-83b7-426abe507aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f35255-433f-449e-8a1e-ed0116ab9e40",
        "cursor": {
          "ref": "5c1642c9-b5dd-46fa-9e02-65d4bf5e69ce",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cd3ddab2-58d9-43b1-b48a-eda3c7c9abda"
        },
        "item": {
          "id": "03f35255-433f-449e-8a1e-ed0116ab9e40",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "41bc80cb-1e46-4e33-ad3b-83eb5b8ee48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fb747d-8f1a-4c40-a8cf-6d5ae0099d52",
        "cursor": {
          "ref": "fa532b9c-459b-46db-9c62-14a0973dc5dd",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "292103c3-e053-4785-8ba8-241b26994f5a"
        },
        "item": {
          "id": "04fb747d-8f1a-4c40-a8cf-6d5ae0099d52",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6baff383-0c75-4a4c-ad17-9b75a0848ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e9e54c-ec2c-4dc1-95c5-a3e1dfeba302",
        "cursor": {
          "ref": "e7f9eb90-7b81-469e-a660-47f18527f25f",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d001c366-4d8e-499b-b195-0719ae59301e"
        },
        "item": {
          "id": "91e9e54c-ec2c-4dc1-95c5-a3e1dfeba302",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "438448d9-5f43-4983-bd8d-108e5572f65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8017d9-ddfb-4961-aa9c-ff13db3b46f4",
        "cursor": {
          "ref": "034315a4-7518-4b49-8107-3c17a9fdd108",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "16b8a3a9-2584-4463-a74a-ca46b14ea66e"
        },
        "item": {
          "id": "4e8017d9-ddfb-4961-aa9c-ff13db3b46f4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d18ba99a-a202-48a5-9468-ff47732b2e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a632996e-9980-44e2-9d41-8e986c5b3b81",
        "cursor": {
          "ref": "1b719e81-2ed1-4aab-b71d-587d49ff4404",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "67c5446a-d52f-42ce-9364-7789929e4b1e"
        },
        "item": {
          "id": "a632996e-9980-44e2-9d41-8e986c5b3b81",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "98aeaef5-6065-4f8d-adec-75e9c1619c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5e47b5-2033-41d3-959b-008ad40ce564",
        "cursor": {
          "ref": "9b8791d9-19ed-4f8e-a966-4d2b88b6de3e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b93df6aa-f709-4637-92c7-039b18b04676"
        },
        "item": {
          "id": "5b5e47b5-2033-41d3-959b-008ad40ce564",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c0668e81-18d4-4989-81d1-9f99df22da91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3f4dfb-0383-4581-a848-c0c21e8ef0e4",
        "cursor": {
          "ref": "0f43ed3d-f86f-4273-81c6-b7436a8b0824",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f8a0203f-c384-424e-a35b-4c91ff7e209c"
        },
        "item": {
          "id": "cd3f4dfb-0383-4581-a848-c0c21e8ef0e4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5885e4f7-963b-4d63-9e31-63c1c8c39771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09ff282-76de-4fb3-bc3c-107061cbddb2",
        "cursor": {
          "ref": "3a3187e0-b07c-437b-8f72-dbceed1fd2a3",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2c3df332-84be-4549-b5b5-3dda0d681e43"
        },
        "item": {
          "id": "c09ff282-76de-4fb3-bc3c-107061cbddb2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "95e97dc0-fc9f-4dd3-9013-d481bc1f1645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d317ff1f-9fcf-43f4-a350-d04d92a444fb",
        "cursor": {
          "ref": "14fba2a8-6f15-40b2-a9bd-07e5c5ee5f9b",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5718614f-3a8f-4d66-abf7-7c1dfa085987"
        },
        "item": {
          "id": "d317ff1f-9fcf-43f4-a350-d04d92a444fb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f42b412f-2ecd-4e43-ac0d-76616d7071fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf92446-24e8-4b18-84fe-f6fbccd143fd",
        "cursor": {
          "ref": "242775fd-b234-4db9-8595-c266369dfbdc",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fa5dc3f7-c462-4e1e-8147-7392eeb1e0d6"
        },
        "item": {
          "id": "2bf92446-24e8-4b18-84fe-f6fbccd143fd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d12ac6b5-52ed-4a89-a045-3525c3ec0e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb59e022-2343-4de7-9bde-fcb8dec7e3f8",
        "cursor": {
          "ref": "f1815608-1cfc-4ee5-acd6-8ba5efc44e39",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6cfd3128-5eb6-4655-8772-ec8f5e9a5085"
        },
        "item": {
          "id": "fb59e022-2343-4de7-9bde-fcb8dec7e3f8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "64d25ecf-0edb-4a56-a746-3b8ea605800a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f417354a-0ce5-4295-9530-a00e43885522",
        "cursor": {
          "ref": "c34c146f-f6f4-4963-b02c-46fdf6f22ec8",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "167799f5-16f6-4912-8728-3d11f9ac08c4"
        },
        "item": {
          "id": "f417354a-0ce5-4295-9530-a00e43885522",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7dbf864b-4699-49dc-b8f0-95f7e521af7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6752141e-7fd2-40ed-8bd5-f0d2aa8f1c17",
        "cursor": {
          "ref": "ff57fcba-d095-43ca-a6dc-50a0767631a6",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b88edc98-c6b0-4914-bb82-c300d7da0f9c"
        },
        "item": {
          "id": "6752141e-7fd2-40ed-8bd5-f0d2aa8f1c17",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d1eb996d-64c2-407d-a8e6-2d3a4bfc023e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8bb23a-ebeb-4689-9476-3c0450a31cca",
        "cursor": {
          "ref": "731033bb-3197-4e04-b1a1-66003c1ea5a8",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "aec170ce-a981-496e-b905-52b95115a6b7"
        },
        "item": {
          "id": "bf8bb23a-ebeb-4689-9476-3c0450a31cca",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b2bcc3fa-85f9-4485-8b41-16d159ecac49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b726f502-5fa3-4e16-ae60-97383d401814",
        "cursor": {
          "ref": "a512fc5f-5b66-46a3-9b1d-d02a2b7e2017",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "43a2651e-f6c4-45d6-91d2-50a8ba59ee93"
        },
        "item": {
          "id": "b726f502-5fa3-4e16-ae60-97383d401814",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "842e1705-bef3-47dc-ba2b-2a6a5c76538a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f6b298-1418-4ee4-a2f2-16615900b3a2",
        "cursor": {
          "ref": "99b34449-62e4-434f-8ca7-cc78a78a2cfc",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b63fd619-84dd-4665-8178-0330f47a5ce7"
        },
        "item": {
          "id": "75f6b298-1418-4ee4-a2f2-16615900b3a2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ccd67138-402e-4088-92c6-8f592fc746de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06cea5a-33a0-4568-812c-aaeee7633c34",
        "cursor": {
          "ref": "d29e787d-728b-4cc4-9236-2fb3b4fff585",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eed941b0-793f-418b-9296-bc067f9b0b83"
        },
        "item": {
          "id": "e06cea5a-33a0-4568-812c-aaeee7633c34",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "763025a2-97fe-4e24-a0dd-6e1af16aa302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d546f0-2299-4104-b54c-85e947438e63",
        "cursor": {
          "ref": "83b57820-8e58-403c-9902-ae1b356b62ec",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "97854e1f-5b16-4be8-9f78-7f95aea52766"
        },
        "item": {
          "id": "a9d546f0-2299-4104-b54c-85e947438e63",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ba5b331b-b018-4f36-8891-c8e255186713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f886d7f7-a101-4075-a932-e827e89aba03",
        "cursor": {
          "ref": "82aefcbe-bc30-4819-84d5-18bce2de34b9",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4065a814-5adc-4b79-801e-9ae7f6ab5811"
        },
        "item": {
          "id": "f886d7f7-a101-4075-a932-e827e89aba03",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e96cd3a2-e995-4908-9aad-8fa2c3859795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1efa27b-ac24-49c9-8b59-83d0829757a7",
        "cursor": {
          "ref": "289fc256-f1ed-40ee-afa8-5fcb03390646",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7d15ddc3-06ad-48e1-9f8a-5afd9cfa36fe"
        },
        "item": {
          "id": "d1efa27b-ac24-49c9-8b59-83d0829757a7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4e431c85-8ea9-4bef-8ecf-e21d00540a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c75953b-c0a3-470d-a0fe-1ff55eab636c",
        "cursor": {
          "ref": "4ff2198d-5aee-42a6-b23e-4473e3e10a9b",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b48d5a9b-5c48-48f2-8288-755662748eba"
        },
        "item": {
          "id": "5c75953b-c0a3-470d-a0fe-1ff55eab636c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c2bd8ad0-e819-4b3e-99ef-f28701d3d9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade291d4-3583-4f4f-8021-853773788ab6",
        "cursor": {
          "ref": "dfa86630-22f5-4ab7-90b2-f5ab399a665e",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ad3e4afb-e235-43fe-b91f-09c7c47a0df5"
        },
        "item": {
          "id": "ade291d4-3583-4f4f-8021-853773788ab6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f0c4a449-977b-44f7-a4a7-b0bb48bdbee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06c1e26-92bc-426c-b756-75d91542face",
        "cursor": {
          "ref": "a838f943-bf2d-4c3e-8c38-2341d3f0fa8a",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5acffb80-12b6-4a63-a5c8-5a4f6d1cde90"
        },
        "item": {
          "id": "d06c1e26-92bc-426c-b756-75d91542face",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "849eae44-5602-4527-86e6-e5a371665ad7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c485ab-2ff0-4438-bd22-98398db95328",
        "cursor": {
          "ref": "9b147e5c-044f-4b95-83aa-81f5920be907",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7b5d30f0-29f1-40df-8bac-2bfdb531476d"
        },
        "item": {
          "id": "42c485ab-2ff0-4438-bd22-98398db95328",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8eae51f9-482e-41bd-8b82-236343fc5d21",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b602c5-ad60-4105-91a9-23ef8199cac4",
        "cursor": {
          "ref": "b819f18f-1de0-4ee9-a719-ed85550cc337",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ff9c5e7c-8305-4f23-ad78-053fe02aeb18"
        },
        "item": {
          "id": "17b602c5-ad60-4105-91a9-23ef8199cac4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ab9fe28d-1a51-4658-bd02-66a264d33dd3",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c859a807-e5e2-4956-a1ef-900439ef10d3",
        "cursor": {
          "ref": "c9f428f2-a0e2-4fc7-8b00-2adaa812515f",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "725fefcf-d5c2-4b19-bc07-6c87a04b04a6"
        },
        "item": {
          "id": "c859a807-e5e2-4956-a1ef-900439ef10d3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d5086b9f-6a73-439b-8122-596a42d4ec81",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e17171-5a02-41b7-997f-6ff0514aba12",
        "cursor": {
          "ref": "e2553eba-7f3a-4db0-b7e7-534511d7baaa",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c6a7c3b0-7f6e-4cd3-b77b-1a6bb971d588"
        },
        "item": {
          "id": "59e17171-5a02-41b7-997f-6ff0514aba12",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "65c0f743-9d9a-476f-8f17-0eb78390b5ff",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2c78f1-e734-41d2-bcd4-55a9fb0c2a85",
        "cursor": {
          "ref": "07a6d233-d860-44d7-a62d-cf4e57e02279",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7b1bb743-d4f7-4435-a0f6-739084aa66d5"
        },
        "item": {
          "id": "fc2c78f1-e734-41d2-bcd4-55a9fb0c2a85",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8437ae98-4b87-4ddc-9050-c24488b31a64",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "99712f7e-2ef7-432b-8086-5f582c7588e9",
        "cursor": {
          "ref": "bf6d7c8f-1b4b-460a-8f29-e2704433923d",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "47ebee31-7586-4e0a-b75a-f4679368d047"
        },
        "item": {
          "id": "99712f7e-2ef7-432b-8086-5f582c7588e9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4cadafab-6fd0-4aee-bbdd-930686b28ea5",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7575c8b1-728b-43b3-a89c-cd3598f7c832",
        "cursor": {
          "ref": "33d2950b-09ae-4142-bf1d-505d5e024b57",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bbd08a73-8892-4ad2-9889-efb73261aa47"
        },
        "item": {
          "id": "7575c8b1-728b-43b3-a89c-cd3598f7c832",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c8220b70-3a4b-43bf-ae84-cc32bf8eb2a1",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d16d245-ce52-43b4-943f-e6c6a31f6f30",
        "cursor": {
          "ref": "56d6cdcf-593d-4b9b-8970-a3f7b53b1a06",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "44cf3457-2306-4215-b8df-d0948b6d4d9b"
        },
        "item": {
          "id": "8d16d245-ce52-43b4-943f-e6c6a31f6f30",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aa4a965c-0559-416e-bc23-2dba177a7e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d16d245-ce52-43b4-943f-e6c6a31f6f30",
        "cursor": {
          "ref": "56d6cdcf-593d-4b9b-8970-a3f7b53b1a06",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "44cf3457-2306-4215-b8df-d0948b6d4d9b"
        },
        "item": {
          "id": "8d16d245-ce52-43b4-943f-e6c6a31f6f30",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "aa4a965c-0559-416e-bc23-2dba177a7e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04217aef-9b6c-4aeb-8c86-1def590df822",
        "cursor": {
          "ref": "c92166b2-99b1-41ba-828c-277917942e81",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0289324c-7aa5-4aa0-849d-6fc6353c487d"
        },
        "item": {
          "id": "04217aef-9b6c-4aeb-8c86-1def590df822",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ac9ed860-dfd5-451a-b883-42f0d0b51ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df74f98f-ca39-40d6-8b79-0d35bac94ffb",
        "cursor": {
          "ref": "9ecf1d71-631f-4090-99d8-001477cb9d98",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7ed1b905-4756-45f8-8acf-3d93e7d3a8c6"
        },
        "item": {
          "id": "df74f98f-ca39-40d6-8b79-0d35bac94ffb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6425556f-82b7-49ef-8c88-07f0506e6fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82a2d9a-5697-47ed-bef6-bbb8ded8de39",
        "cursor": {
          "ref": "c4de3284-cb14-4ab5-b8c1-fae1e8a838d5",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9f3bc8d5-e982-495d-aebd-85518a6168ac"
        },
        "item": {
          "id": "b82a2d9a-5697-47ed-bef6-bbb8ded8de39",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "51d8ba36-875e-4201-b320-4f23c3841898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44cd543-0c30-45f1-b577-89cb4d310efe",
        "cursor": {
          "ref": "8570b08d-0499-4988-91a6-152ec8837578",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fd18a4a6-ac94-47c3-829c-e10dd19c77ea"
        },
        "item": {
          "id": "d44cd543-0c30-45f1-b577-89cb4d310efe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9486e337-05de-47b7-b1e7-9159b518cbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3985bb48-3f92-4ee1-b9f6-5356972f1f3a",
        "cursor": {
          "ref": "4df50512-928a-40ef-829a-d794fe2f7a6c",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "acb47a8a-729d-4500-b78e-badfe829920b"
        },
        "item": {
          "id": "3985bb48-3f92-4ee1-b9f6-5356972f1f3a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8b1325f4-aa79-4eda-81e8-52c643d8c66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1980d82-8183-4c0c-b48e-27030b09296d",
        "cursor": {
          "ref": "6197f9f4-f889-439a-b9f3-b32174b1e7cc",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "83b04966-0d69-4cc2-b7d1-f7cf4a270468"
        },
        "item": {
          "id": "a1980d82-8183-4c0c-b48e-27030b09296d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a84f23b5-1b35-46f0-8abb-6149204506ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6f206c-17fc-4150-bff5-19f01428552b",
        "cursor": {
          "ref": "71f0400f-fed0-4586-8231-02dca2ea0d26",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "76473016-0c1f-4940-adfe-b03fc7366dad"
        },
        "item": {
          "id": "1e6f206c-17fc-4150-bff5-19f01428552b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b0098dea-87c6-400c-ad18-7fd277e10ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836a0e71-6fdf-4114-b981-a0bfad0a7d7a",
        "cursor": {
          "ref": "b901e65f-781e-485c-bdf8-4ff9d99e6deb",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c59eb1b1-bc8c-40df-9639-45bea97d4f22"
        },
        "item": {
          "id": "836a0e71-6fdf-4114-b981-a0bfad0a7d7a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f3f56757-35dc-4259-aeb5-436296fc254e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c2963a-1778-4132-9402-a2efda7f5411",
        "cursor": {
          "ref": "6a513101-bf64-4851-ba80-611a765c0d64",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "90eed8b8-7ade-4fac-a420-6a45b42b70aa"
        },
        "item": {
          "id": "92c2963a-1778-4132-9402-a2efda7f5411",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3c334ff8-1a7b-4252-b25d-b83a207831ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c137fb9-e94a-424a-815d-c16d29d1b510",
        "cursor": {
          "ref": "5badbe7e-8697-4971-89a8-faab0079bf15",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2cf7b717-03be-45bb-a6e2-15e4362d1d28"
        },
        "item": {
          "id": "9c137fb9-e94a-424a-815d-c16d29d1b510",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "503f359e-1b2d-462f-b6c1-f574c40de252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3095e2a1-bdb8-4884-b8c1-0a31980561b1",
        "cursor": {
          "ref": "a53526ac-0b0e-4c41-aa54-64a1b541e1b7",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fb46608e-3a5b-4911-9fac-6df735dc3c48"
        },
        "item": {
          "id": "3095e2a1-bdb8-4884-b8c1-0a31980561b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "124b524b-bcf9-4544-aad1-2cd3dc513939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d793933-f6e8-4ec5-af61-09998ba2a32a",
        "cursor": {
          "ref": "a253ab69-0759-456b-aee7-b4f769eff8ce",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b5b29f13-b598-4c92-957b-1f9f99ee7d04"
        },
        "item": {
          "id": "0d793933-f6e8-4ec5-af61-09998ba2a32a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "83f8c393-f462-4ffc-9925-a05fb765e111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5192ff-88cd-401f-9017-863a1fd6c728",
        "cursor": {
          "ref": "7d282a3e-4ec2-484c-830e-55c9f8ae1a13",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aa4a1311-b891-45be-bbbe-98ad3ad9e427"
        },
        "item": {
          "id": "3f5192ff-88cd-401f-9017-863a1fd6c728",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1f05ced7-b4c0-4baa-8a51-e4d640cbb009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5877ac7-5a41-4728-9604-e94d88c47f3d",
        "cursor": {
          "ref": "7c7eeb9c-1e81-47c1-a051-8ce136b97c01",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4f20242a-a97d-42ee-8a20-64538289258b"
        },
        "item": {
          "id": "d5877ac7-5a41-4728-9604-e94d88c47f3d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c788319f-3430-4c14-8523-3fdc2d4ec2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c363b6bb-fbdd-4cac-a71c-2fab7335603e",
        "cursor": {
          "ref": "922e7d0a-b7cd-4151-ab17-43ef37e668ee",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "066d556a-c1fb-4241-9424-9d880a1b3212"
        },
        "item": {
          "id": "c363b6bb-fbdd-4cac-a71c-2fab7335603e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f7b318dc-ae7e-4b2a-9712-52a88714878f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b15dc4a-c1ef-4520-8221-b5cf0ed57d2b",
        "cursor": {
          "ref": "2dafced0-e37a-4bc2-af11-aefecf9d68bc",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3aa2de1d-b121-4554-a31f-750fd9007970"
        },
        "item": {
          "id": "4b15dc4a-c1ef-4520-8221-b5cf0ed57d2b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ccafcca0-2a3b-4f47-9653-cabf0439315f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d540126a-8bae-408f-b7e6-e132a91402b6",
        "cursor": {
          "ref": "0ea248f6-0872-430a-860f-b0410b6545b5",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "62517451-4b4b-47ea-bb30-97fe5cb7f692"
        },
        "item": {
          "id": "d540126a-8bae-408f-b7e6-e132a91402b6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3636139d-6f92-4edf-a58e-7b287a72f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4174dabb-09e8-4af6-8acf-ae325e6d4f9b",
        "cursor": {
          "ref": "f45db9c2-0ad0-4d9e-a92e-5acfd3a02f39",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e84b2514-657c-4b30-a14a-a3081dad6621"
        },
        "item": {
          "id": "4174dabb-09e8-4af6-8acf-ae325e6d4f9b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "303de095-598b-48a9-b377-92d1ada1f1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04d5bee-e306-4b9f-baeb-bb8b04ec2737",
        "cursor": {
          "ref": "513307f6-9471-45eb-9f9f-8c1a9c980e14",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "62faae5d-af34-4748-b169-3cb527d67267"
        },
        "item": {
          "id": "d04d5bee-e306-4b9f-baeb-bb8b04ec2737",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2acb5dda-78bd-4b00-a5d3-44fa6e0d6634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65362e02-7c2d-4e89-bbc9-a4d0808530fa",
        "cursor": {
          "ref": "8dbeb826-a425-40ab-84b6-89f1e98d47a1",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0b7c8576-c324-4e6b-9ce5-dd03e66b9dc3"
        },
        "item": {
          "id": "65362e02-7c2d-4e89-bbc9-a4d0808530fa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5b53aa53-a72d-4681-a8b2-2c2af11eedd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68015e60-9c00-4620-9635-15f3677316c7",
        "cursor": {
          "ref": "0e190e79-63d2-43d4-8b1f-53a206979e6f",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eaae5d8c-5ec6-4775-8f76-13c5e559eda8"
        },
        "item": {
          "id": "68015e60-9c00-4620-9635-15f3677316c7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0b854378-7836-4fd3-ba63-4e2675a78fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec01d49-2abb-4563-b2ea-4346217752ba",
        "cursor": {
          "ref": "c1e55086-a458-4a4d-9121-497292804b5f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "114d6334-a9f7-488d-bcf0-ce3507151386"
        },
        "item": {
          "id": "1ec01d49-2abb-4563-b2ea-4346217752ba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e38ba36f-8fb4-4a6d-ab32-e91319f3599b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1730de0d-0d8e-4455-8927-28fbb3b62b2b",
        "cursor": {
          "ref": "7376514f-e435-4ef7-9bfc-12dcbb7a552f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a6c26bd5-13b8-4ab9-b23f-72769659ac22"
        },
        "item": {
          "id": "1730de0d-0d8e-4455-8927-28fbb3b62b2b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f3debd32-7ed0-4800-b2ae-60dd7391f2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f616a31-86b3-43c5-9954-3c9804675f3a",
        "cursor": {
          "ref": "560d15d0-8229-43e4-b093-722d9d8b8f25",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9e96316d-044c-4118-b115-c3f9d25d6e60"
        },
        "item": {
          "id": "3f616a31-86b3-43c5-9954-3c9804675f3a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "565c0b3c-2105-4145-95fe-112ec4ee4254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a13744-d3b3-471f-85d1-155bfc028c11",
        "cursor": {
          "ref": "a51a0ee3-ad33-44e4-b51a-37e69a55c9ab",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "06155c29-b96c-456c-baec-28dc2c61268c"
        },
        "item": {
          "id": "f5a13744-d3b3-471f-85d1-155bfc028c11",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "df582817-56a3-41bf-a68c-84b80862ec91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b7b7ce-89cd-4c00-bd2d-c5810d3941d5",
        "cursor": {
          "ref": "59ed5c12-c7a5-462f-95cf-b66fa5835b1e",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5ff67c45-efb2-4386-bbdf-73147e36be7d"
        },
        "item": {
          "id": "e3b7b7ce-89cd-4c00-bd2d-c5810d3941d5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f4874cbf-5cb8-4a53-9281-86879e3f5b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35709312-1394-4c65-a84a-e5c8ba21c4dc",
        "cursor": {
          "ref": "21b60046-7514-43d5-a8eb-39038ba7a6cd",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2206f414-5318-4868-8139-c678d062bbbb"
        },
        "item": {
          "id": "35709312-1394-4c65-a84a-e5c8ba21c4dc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "96dadd49-8e50-4a65-a5a4-cdd9625b9d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce07b14f-8de6-4e22-84b9-20eece87c8c6",
        "cursor": {
          "ref": "817261bf-9178-4bcf-a199-b2788fb61823",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e9cfb087-8db4-4010-989f-83b53713022b"
        },
        "item": {
          "id": "ce07b14f-8de6-4e22-84b9-20eece87c8c6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ca25a0a1-f57e-48a5-9b40-d75c10959db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444afd0a-7523-4bd9-af28-3559cf5fad6c",
        "cursor": {
          "ref": "bafe05b4-2082-44c2-a325-3ded9dd144dc",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2c799cc7-c30c-424d-91ef-2dbe036b72a5"
        },
        "item": {
          "id": "444afd0a-7523-4bd9-af28-3559cf5fad6c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ff364a3-9956-4df4-b811-2e943565c776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5960108-573f-431d-8c92-6f151134c160",
        "cursor": {
          "ref": "36ed3a29-9246-48f0-80d9-631a5246a35d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "49140eef-279b-4920-8470-0753655e5daf"
        },
        "item": {
          "id": "b5960108-573f-431d-8c92-6f151134c160",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59d022af-4530-4b30-9429-384f2c1a542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67468c6-fc87-4736-823d-be7f53884d53",
        "cursor": {
          "ref": "d0d9ddd8-d1d2-4055-8277-fbd838c11b21",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d7a29fb5-e255-4e88-9b8f-2bb44088d4a1"
        },
        "item": {
          "id": "b67468c6-fc87-4736-823d-be7f53884d53",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ca597462-d876-44ed-b827-05791501962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f522976-804f-4a01-945c-f535cdf617a8",
        "cursor": {
          "ref": "41f227cb-acd2-4d4b-9268-0fb69b891aa9",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5063341a-9eab-4189-b0eb-a85a00b46040"
        },
        "item": {
          "id": "0f522976-804f-4a01-945c-f535cdf617a8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d857a8f5-609c-4680-b61f-370e456fea8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c624008-473f-4bfa-a0d2-f1f224d1a1ed",
        "cursor": {
          "ref": "b28e6753-47dc-4ade-b092-4a6cbf4b8b41",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a4542053-ef15-44c5-aafb-1c517e242876"
        },
        "item": {
          "id": "7c624008-473f-4bfa-a0d2-f1f224d1a1ed",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "60806194-14c7-4410-9fc8-66277822c843",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd28f386-f9c1-4464-8be1-1076e126146b",
        "cursor": {
          "ref": "c93f117b-2409-429d-93ba-217b29694ca3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f57912f4-2fdd-45ce-ad69-7a841c7afb43"
        },
        "item": {
          "id": "bd28f386-f9c1-4464-8be1-1076e126146b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "04430698-d050-4912-965b-0bf9d81627f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd28f386-f9c1-4464-8be1-1076e126146b",
        "cursor": {
          "ref": "c93f117b-2409-429d-93ba-217b29694ca3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f57912f4-2fdd-45ce-ad69-7a841c7afb43"
        },
        "item": {
          "id": "bd28f386-f9c1-4464-8be1-1076e126146b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "04430698-d050-4912-965b-0bf9d81627f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a7fc3b-dfbd-40ab-b5ef-71fd8f26a6ce",
        "cursor": {
          "ref": "95766f02-276f-49f9-b2bc-d661cb6a0f06",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e40a733f-9b23-450d-9ca3-03fe242358da"
        },
        "item": {
          "id": "18a7fc3b-dfbd-40ab-b5ef-71fd8f26a6ce",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "86a653b8-8a1d-46b9-bfc7-332b6e24410c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e06e415-a81e-423c-b6b3-5b4e8254d769",
        "cursor": {
          "ref": "347ab85f-02b1-42e1-95cc-ab352340a2af",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7665fc89-4626-49dc-bab4-f8538dab1433"
        },
        "item": {
          "id": "8e06e415-a81e-423c-b6b3-5b4e8254d769",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8652c7a1-81af-46eb-b238-bd760453ca7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d791354-25ae-4874-a864-bf2ec8d0163d",
        "cursor": {
          "ref": "4d300a6c-fd78-43dd-8053-baf1f440490b",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b402dd47-e9e6-4dfc-9c74-9082f9169ba5"
        },
        "item": {
          "id": "0d791354-25ae-4874-a864-bf2ec8d0163d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "06dee29f-8c1a-4c2c-b091-8a37d3b35067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c9848a-b900-4a9e-bafe-ea4571ff0a20",
        "cursor": {
          "ref": "f4930f06-2e08-47b7-8df4-069a55af75ad",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "df474e0d-d895-40e6-b3f3-3ffaad06e34d"
        },
        "item": {
          "id": "81c9848a-b900-4a9e-bafe-ea4571ff0a20",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8acef2d2-c7c0-43f9-a425-ea42beebdf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969fb762-3ff4-4f94-b86d-ad35db709f19",
        "cursor": {
          "ref": "eb5f78c7-7f4d-44e3-ab3f-905230418c4f",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f6182911-ac33-40f6-b7a6-94d2a4f70260"
        },
        "item": {
          "id": "969fb762-3ff4-4f94-b86d-ad35db709f19",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7105c8f8-c418-447c-9d86-47dea0dcf795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d4a568-83a0-4dea-a7e6-0904ea19d60e",
        "cursor": {
          "ref": "bdab6bb2-fbdb-4711-8da7-ff5673542bd3",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bb6d204f-bddf-4a21-a07d-d3cd3b880139"
        },
        "item": {
          "id": "a6d4a568-83a0-4dea-a7e6-0904ea19d60e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "999d98b4-11f4-474b-b045-6f3397264843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079baa50-ac56-4c2a-af27-6d68baec711e",
        "cursor": {
          "ref": "4c3ee8d0-bc0d-4e9a-beee-e4c9aa394702",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9b56bcc9-dadb-447c-837e-8dd16b0f94f3"
        },
        "item": {
          "id": "079baa50-ac56-4c2a-af27-6d68baec711e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "012864b3-77ae-4c77-91fa-9cc3beef6f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3232d36-7907-485d-b954-129cbe1c7f95",
        "cursor": {
          "ref": "ec61ef5b-bdcc-4685-9494-9fb317a75473",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "49b697e4-a1bb-42a6-b296-28e4e5745d6f"
        },
        "item": {
          "id": "e3232d36-7907-485d-b954-129cbe1c7f95",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "268cc1c3-04b7-4b3b-a310-1246cb7c4844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89070026-9d22-4aef-817f-44dbff0d6ff0",
        "cursor": {
          "ref": "759d9f49-599f-486b-84ab-7a228e91eea2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9f30fd0d-fff2-47c7-b637-7862a09a079b"
        },
        "item": {
          "id": "89070026-9d22-4aef-817f-44dbff0d6ff0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6808fa1b-3aea-456f-bcf1-608af1c55cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9914b90-c148-48d4-b4e1-463c32d64304",
        "cursor": {
          "ref": "e4f68a8a-5bf9-4a7f-97b6-5562eaaa8870",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1a1dcaf7-af94-4394-8b0c-4edae267022d"
        },
        "item": {
          "id": "f9914b90-c148-48d4-b4e1-463c32d64304",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "267d7b15-cc38-4e1d-a1dc-df5a1d38a183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f782046b-7f24-452d-a7ed-de6c8d5e8e08",
        "cursor": {
          "ref": "ad38b10b-8680-4269-a3b4-ce8e30337968",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d06519f3-7ea9-4d7a-a7bd-5b04508d9661"
        },
        "item": {
          "id": "f782046b-7f24-452d-a7ed-de6c8d5e8e08",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4432bd1e-0c85-46eb-9d3c-7d9473551329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a91fccb-ba2f-4b91-8e00-7dc3b18cc9f5",
        "cursor": {
          "ref": "05e8a54b-2050-4358-9e4c-3dc20d32075e",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1c7b3780-da97-42b4-a72e-be166146992f"
        },
        "item": {
          "id": "4a91fccb-ba2f-4b91-8e00-7dc3b18cc9f5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b6e87427-38fe-4684-8372-d47e73afdbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497824da-d157-451c-88ba-faef84229c37",
        "cursor": {
          "ref": "d6432807-b66e-408f-868e-2a928bafa15d",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "df3b68a0-aab5-44ab-8bd8-89f2784ebd7c"
        },
        "item": {
          "id": "497824da-d157-451c-88ba-faef84229c37",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8cb75991-72ee-4f23-b924-a1b2f6513076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f57634-695b-4faf-b189-948d548643f4",
        "cursor": {
          "ref": "9b0bfd75-ec0e-4810-8fd6-c82721909c4a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "48c65d87-7281-433c-b46f-bac1349b5add"
        },
        "item": {
          "id": "d0f57634-695b-4faf-b189-948d548643f4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2c704421-f58f-43ef-88a1-29eb988cf89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e62ea3-8856-4cd9-9e5b-b727dba6fc6d",
        "cursor": {
          "ref": "33686c95-dfb8-4f26-9416-042ecb8dfd0d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "054907f6-061b-4a74-9949-cf7370d6d2c2"
        },
        "item": {
          "id": "98e62ea3-8856-4cd9-9e5b-b727dba6fc6d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "57a4b7d3-2e4a-4cae-aeeb-33c1d137c81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82ac315-5f7c-45fc-bccc-dd1ef9a64fa5",
        "cursor": {
          "ref": "e6c4ca8f-2ab9-4614-95b2-0ed6e4ead983",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cb45e44a-ca8d-4ec0-b84f-4200c468bb5d"
        },
        "item": {
          "id": "a82ac315-5f7c-45fc-bccc-dd1ef9a64fa5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "277b3bcc-153e-4a8d-85e5-cba8ed29e07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe841b00-cfbf-4adc-879b-f453114101c7",
        "cursor": {
          "ref": "73e4a6b9-69c7-4ecd-9a57-25faa654df54",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "40cc2991-8434-4f5b-a8eb-8545687099dd"
        },
        "item": {
          "id": "fe841b00-cfbf-4adc-879b-f453114101c7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b483d9f8-9817-43f9-9e1c-de4b090bade7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44531e52-f2b5-46a1-b96a-d4b0193c2b02",
        "cursor": {
          "ref": "0830b85f-f17e-43dc-a231-f044a47afab7",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e15e338f-229b-4107-989f-145d65ec10ef"
        },
        "item": {
          "id": "44531e52-f2b5-46a1-b96a-d4b0193c2b02",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6aff4eaf-1d23-40e9-945f-8c6977d76f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ca9d0f-58d4-4580-92ac-2158f3b00959",
        "cursor": {
          "ref": "7f11c613-4091-4e48-b872-0e041fd7447a",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d06112ef-22f1-4399-9ea2-630a41cc6c1c"
        },
        "item": {
          "id": "86ca9d0f-58d4-4580-92ac-2158f3b00959",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "46641ec2-6316-4652-8d97-06e699df2bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbdb576-c2ab-40e2-a934-1188b95fe8f0",
        "cursor": {
          "ref": "8859e5e6-f642-40d5-9fb6-2640710f65d5",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "74ae81f2-d0f5-413c-b9bb-1c54ae34823b"
        },
        "item": {
          "id": "0bbdb576-c2ab-40e2-a934-1188b95fe8f0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b8c060ec-0dae-4e07-8247-f433f00bb593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5627832d-1ec3-4462-a379-a03f74fc2288",
        "cursor": {
          "ref": "060e64ac-39b2-459d-a631-549374a05e90",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "26c2953a-8e15-4653-8efa-190786aab455"
        },
        "item": {
          "id": "5627832d-1ec3-4462-a379-a03f74fc2288",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9f9e7618-eef7-44f6-be28-7652fd082638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d66173d-f2e4-446b-ac4b-cbfbc4785fd9",
        "cursor": {
          "ref": "9d8e5b1a-6cde-47e2-ad55-3af444f91af9",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e199ff7d-148d-498f-8b9e-c971a1910eb5"
        },
        "item": {
          "id": "8d66173d-f2e4-446b-ac4b-cbfbc4785fd9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1730bc99-b05d-4cd4-93eb-38f0e5d68bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ba3a67-2f80-438f-9080-670b4610c477",
        "cursor": {
          "ref": "cd4b6b9c-0dc4-4ae2-90c1-b8fcd8e839d1",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "687eaf14-69b2-451b-baa2-3c4908af6d50"
        },
        "item": {
          "id": "74ba3a67-2f80-438f-9080-670b4610c477",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1ef33835-06b7-46d3-853c-2795d2ab5222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8224fc-ead6-4b9e-ab9c-bf5593f3ab18",
        "cursor": {
          "ref": "db980c95-4665-4bbf-a67e-46b4867df6fd",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8b3d74b5-a7df-41cd-ad5b-5bda7eaedafb"
        },
        "item": {
          "id": "fc8224fc-ead6-4b9e-ab9c-bf5593f3ab18",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1f3952fa-00bb-49bf-8604-7a4c1f60c996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78b5ec3-ccf8-4158-8612-0225ae14d4a2",
        "cursor": {
          "ref": "289c0dab-5d70-476c-ba9d-abc569991f42",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1d763ac4-71d0-4ae3-a942-28e79c25bc5f"
        },
        "item": {
          "id": "e78b5ec3-ccf8-4158-8612-0225ae14d4a2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "64fbe3fb-0887-48c0-8903-35ec3f13f9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa379be-be1a-4e7a-9bab-04d963e9f1f8",
        "cursor": {
          "ref": "c330afba-b691-4867-ba63-473e8d8998bc",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5a84efb1-a35e-428c-9cb4-5bf018509640"
        },
        "item": {
          "id": "8fa379be-be1a-4e7a-9bab-04d963e9f1f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e0bcb4e3-5aac-49c9-8ab0-51ff5bbb24a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b34572-ff5e-4730-adca-5c3d61a3a33c",
        "cursor": {
          "ref": "004f6490-6891-4ccf-96fd-66553ec10499",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6cbd4ce7-4541-4a19-b0a7-57d7d0faaf3b"
        },
        "item": {
          "id": "89b34572-ff5e-4730-adca-5c3d61a3a33c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3db33c19-92b6-4e50-9e2b-d2eaa0322ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d564aa-fb09-4dd3-9e17-aad16be0009d",
        "cursor": {
          "ref": "4e5df587-3725-4042-b3ab-170f576874d7",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1c8c498d-bf19-4d87-b658-28687a3f125f"
        },
        "item": {
          "id": "e6d564aa-fb09-4dd3-9e17-aad16be0009d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c63390f0-bce9-442a-8615-2b34dc998c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015a3e37-92b1-43df-a5fe-251cd7972174",
        "cursor": {
          "ref": "2d0c0c3d-8a11-4bc5-ac15-0438f71ec0cf",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9e2890bc-19b5-46bc-b3da-ec69ea1398d0"
        },
        "item": {
          "id": "015a3e37-92b1-43df-a5fe-251cd7972174",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7fa1b270-c80a-4226-aecb-e1c6e3866902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e551a8dd-28d9-4821-9761-d59daee02870",
        "cursor": {
          "ref": "8b1e2e10-fdc1-415b-8453-5c69f3e05e03",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a2fc49d4-e406-4587-8b23-0ed63f372270"
        },
        "item": {
          "id": "e551a8dd-28d9-4821-9761-d59daee02870",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6b039750-6a7e-4ff8-b304-1daca83e9721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3890ea9-7cbc-4948-8101-936a0d0793e5",
        "cursor": {
          "ref": "9ad592ac-084e-47ce-94a4-31855e07b7b9",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "60caf17c-0e76-410d-af3f-32f064858858"
        },
        "item": {
          "id": "c3890ea9-7cbc-4948-8101-936a0d0793e5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4825219e-ae54-48b6-8f21-e50435833227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadeebf4-d858-4bd3-b01b-54a1f0f28da4",
        "cursor": {
          "ref": "a3ceeb54-9f66-44ff-8311-b5d9b0c6b0f0",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "194e7f14-ec2c-42f9-bbda-3d90e22f424d"
        },
        "item": {
          "id": "eadeebf4-d858-4bd3-b01b-54a1f0f28da4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c8b2c87e-facc-4663-89f0-28be8177f7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcf6529-a599-4c70-ba72-27f8ed6c762f",
        "cursor": {
          "ref": "84ce0dbc-37a3-47e6-a5f4-cc998991e013",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bcf4912a-bd88-4043-81a5-b5bd533cb58b"
        },
        "item": {
          "id": "7fcf6529-a599-4c70-ba72-27f8ed6c762f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9b6a31fb-a9b9-42ad-8556-2961c915a64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb62180b-bffd-4d18-b0a6-cc9bd505aa5f",
        "cursor": {
          "ref": "58b85dc4-f022-4b97-a40a-f2bf25bffa8d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ee019f52-554e-4fa1-a3f1-ccef94541503"
        },
        "item": {
          "id": "cb62180b-bffd-4d18-b0a6-cc9bd505aa5f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e58f9f89-3e7d-4865-ab6f-14980ab1d585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3972b8-4b12-44d6-8167-6bd58546a4e8",
        "cursor": {
          "ref": "3b1cb839-124a-4e04-aac4-814c551f8bc5",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d7e21e0a-f20d-4b6a-a41f-f6fd8cab5f81"
        },
        "item": {
          "id": "ea3972b8-4b12-44d6-8167-6bd58546a4e8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7c133096-52b4-4418-b53b-87005288da54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445cef7b-81bb-4df3-9453-14d1500efea8",
        "cursor": {
          "ref": "f1d1d56e-515f-4a97-bb24-d230f170ad2f",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e7b90cf7-7507-4164-a8b8-990989bcb052"
        },
        "item": {
          "id": "445cef7b-81bb-4df3-9453-14d1500efea8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b6c317cb-59f5-4de5-9d19-d76deae1c94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2d0b9f-ff22-4954-955b-b86062a21c44",
        "cursor": {
          "ref": "31c5be9f-ebb4-4865-bbde-a3a594e6d793",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bf0dd2c4-4ce5-41ae-b737-772d997efe93"
        },
        "item": {
          "id": "da2d0b9f-ff22-4954-955b-b86062a21c44",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e86055d0-d3a4-4e58-b7f4-7590a9503e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f8fc61-9422-49be-bd8b-dfafab9533af",
        "cursor": {
          "ref": "e48593b1-41d6-4b61-9a7b-2b392980b7b6",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ee391246-840e-4b83-af01-2f7c91558dd1"
        },
        "item": {
          "id": "35f8fc61-9422-49be-bd8b-dfafab9533af",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "03980ec4-6eac-4652-b3b5-305f80418911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f92d295-c87c-4ae0-8084-cd231d9f5ddd",
        "cursor": {
          "ref": "7e711e44-418a-4ee5-99fa-d5e45bd23bd0",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "84962bf8-bdae-45a7-9b52-54ef2fea9c92"
        },
        "item": {
          "id": "9f92d295-c87c-4ae0-8084-cd231d9f5ddd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c579bf56-290a-42b2-83b4-50e0c5fee78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77156d97-0f03-46b2-b2b5-63131b2a87bf",
        "cursor": {
          "ref": "9a8b473a-9057-425c-a3e8-ea6029f7e246",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e4c17e7c-03d0-4c53-819b-e267fa1bb92e"
        },
        "item": {
          "id": "77156d97-0f03-46b2-b2b5-63131b2a87bf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d76504a8-aa2a-416f-8702-8b9215b25b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65fa9036-f42d-4b5e-a902-f45f38cf7195",
        "cursor": {
          "ref": "11d5d68b-5499-4099-8f3e-8d1ec491b95a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a0e59b97-e991-49ed-bad9-24008e02a59d"
        },
        "item": {
          "id": "65fa9036-f42d-4b5e-a902-f45f38cf7195",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a5b9975f-1e7b-4c2a-a546-4f11f60d5927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057abb0d-4294-44f3-827a-9fe4a270b909",
        "cursor": {
          "ref": "b3dff7c8-6255-4906-b028-0b20915ef3f8",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "51b0f0fe-02ae-4419-b412-dd96ac45ee42"
        },
        "item": {
          "id": "057abb0d-4294-44f3-827a-9fe4a270b909",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "45ba73e2-fd27-4ce5-afd4-cb5ff28b7e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd789e2-8fa0-4f98-8ff4-ac2aa01719e4",
        "cursor": {
          "ref": "23a6884a-9b42-44c9-a1e4-c57a864c40fd",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "236d7dcb-6d2e-4ab9-98a7-d1b199baad22"
        },
        "item": {
          "id": "1fd789e2-8fa0-4f98-8ff4-ac2aa01719e4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a8b2f8f-ecd5-402d-a913-cd9bdfac9b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2240bebb-2e0b-4f1a-ba7c-14e881b309dd",
        "cursor": {
          "ref": "d4c18c6f-e9d8-4756-b5d0-ddb989544d32",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "16111e20-2bb6-42ff-be5f-dbada7324b3d"
        },
        "item": {
          "id": "2240bebb-2e0b-4f1a-ba7c-14e881b309dd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "018d1e03-55cc-4f5b-a1f8-bb49d506c58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce356650-98b2-44da-8c06-5054368a99fa",
        "cursor": {
          "ref": "928b7430-faee-49e1-9cf5-e4c12b9d5237",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6c2a9f33-2ecd-4cf3-9d3d-a194ed92f0a9"
        },
        "item": {
          "id": "ce356650-98b2-44da-8c06-5054368a99fa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f0aaf0b4-317b-4719-b219-59afc7f71852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922ceca1-d986-4629-9195-8cfb84a0b4e9",
        "cursor": {
          "ref": "9ddf29f2-3522-4bd7-9de1-83bab5bd7cc7",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4fdcc62e-485f-407e-8c9d-ce7b2230c3ea"
        },
        "item": {
          "id": "922ceca1-d986-4629-9195-8cfb84a0b4e9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "653187ae-0b4b-4127-bd1c-b5af3c296eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f1588f-aa88-42c3-9c60-bfd3bf1dab4e",
        "cursor": {
          "ref": "52143ae0-7dac-44b4-91b1-da908764de8e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a613bc40-17b2-4444-8dc8-31f71fe1727b"
        },
        "item": {
          "id": "55f1588f-aa88-42c3-9c60-bfd3bf1dab4e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "70cb6f25-9fd9-4774-8fb2-841799ac9a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0852ddf-0d53-4d18-ad0d-ba6ed75fed06",
        "cursor": {
          "ref": "2aaf1a18-7b83-4527-825c-f83cd6a1f800",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9d10d318-8b24-4d02-93ed-cac589957fbb"
        },
        "item": {
          "id": "b0852ddf-0d53-4d18-ad0d-ba6ed75fed06",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c57a4860-38a6-48b0-af24-9676b33f448d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b552e6f-dc67-4526-bfc0-1c8318373938",
        "cursor": {
          "ref": "43fe99d7-beca-4512-8c32-06101b461b1b",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e5683d06-6eba-4ffc-bf83-06707b34e7ae"
        },
        "item": {
          "id": "4b552e6f-dc67-4526-bfc0-1c8318373938",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "19a9f15f-a899-4f94-8de4-76458b154364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f23df5f-a23f-4877-ba6a-c782e3d9e751",
        "cursor": {
          "ref": "675b7cdd-b2cb-4a24-ad68-3da367c3c28a",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "99734745-2536-4037-97f2-58eb54c6666a"
        },
        "item": {
          "id": "2f23df5f-a23f-4877-ba6a-c782e3d9e751",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5f702a9d-ffdb-4dd8-ad6d-dcd327af182d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9918337-8e9c-44c1-8c78-f985114afc7b",
        "cursor": {
          "ref": "64491862-a532-4624-865f-6bc1f54ee0bb",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1affd743-eab8-4811-9ae9-9ad82dae2654"
        },
        "item": {
          "id": "a9918337-8e9c-44c1-8c78-f985114afc7b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "36cdda4d-3c3a-4c2f-81b6-320369271dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc81038e-8e5d-49ec-a1c1-ee82cc857208",
        "cursor": {
          "ref": "d98d1afc-7775-4ffd-b639-a3d660ce2dd9",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9fe5bfe7-d75f-461b-bdc5-cd7551df9ddc"
        },
        "item": {
          "id": "bc81038e-8e5d-49ec-a1c1-ee82cc857208",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "12ee958b-2cae-496c-a978-f5539c43e7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819ae0b4-bd36-43e8-973b-a9146bfd94d5",
        "cursor": {
          "ref": "eee27250-bfd3-49cd-a527-511720c04878",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "46ac5b1a-6668-4965-abef-f02b354fdfc2"
        },
        "item": {
          "id": "819ae0b4-bd36-43e8-973b-a9146bfd94d5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "84f46567-6cd4-4dcb-8922-c10c9d9811b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2262014e-7fa9-4c52-81e6-3663f5ad5fed",
        "cursor": {
          "ref": "644626ef-f43d-4e12-b8f7-213c43ffbd08",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ca603456-dad7-4b35-aa17-e74c5f485b93"
        },
        "item": {
          "id": "2262014e-7fa9-4c52-81e6-3663f5ad5fed",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "049df660-cfcc-4680-9e03-5a06c061d29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d10d73-afa2-4d7f-bc89-5219b0a6e844",
        "cursor": {
          "ref": "dc8634eb-1d21-4cda-9a3d-525c073ff41e",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "729b8de1-8cb5-4c3a-aa5f-c8a28d8d35cb"
        },
        "item": {
          "id": "b9d10d73-afa2-4d7f-bc89-5219b0a6e844",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c346f890-17e8-4467-819c-fb57edc3656a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2806a524-450a-41fc-ae47-ec1530bd7804",
        "cursor": {
          "ref": "4463bddd-75be-4ceb-ac96-7bf9feb903c3",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a12c0072-ffaf-4314-87bf-d5fcf14fa06e"
        },
        "item": {
          "id": "2806a524-450a-41fc-ae47-ec1530bd7804",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "78cdc1d0-f905-49f3-9800-1bfc528b9b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03683181-eb73-46a2-a120-20110936bf56",
        "cursor": {
          "ref": "173de063-2b90-43e0-a6af-51204a25009f",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7ac7466a-0b9a-4f4a-8edc-a791b5fa5a59"
        },
        "item": {
          "id": "03683181-eb73-46a2-a120-20110936bf56",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "38ff3572-723e-47d7-b3d5-65c73aec6464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756bf7f0-5321-41a5-9356-c51640b4e478",
        "cursor": {
          "ref": "c31c8a9e-af19-4c6c-b557-a7b89a537bd6",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7b8b8456-f174-4045-995d-85e04624b2b3"
        },
        "item": {
          "id": "756bf7f0-5321-41a5-9356-c51640b4e478",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "82a3b611-aacc-4883-af72-448c799f1a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3ceb32-e621-4327-a8cc-92e12b137bac",
        "cursor": {
          "ref": "19a95de7-330e-4be3-9223-8eb22a164631",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "082a4b8c-7f0f-40f3-a911-97b49d3c151e"
        },
        "item": {
          "id": "2a3ceb32-e621-4327-a8cc-92e12b137bac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "49c29033-a0eb-40cd-939a-26862dd8f06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a52196-e671-4248-aefe-173c80461e6d",
        "cursor": {
          "ref": "4ae3b820-c68b-4373-87aa-13a8fdb98841",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d8e37d52-f106-40fb-990d-0026406751f0"
        },
        "item": {
          "id": "b0a52196-e671-4248-aefe-173c80461e6d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "10e0ae0d-b44e-4d08-a369-334db7683ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd327a1d-33ad-446c-acfd-a889df56a6e8",
        "cursor": {
          "ref": "20ed7052-2b03-4175-a712-1fdc0252542a",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "341e9323-ff35-4602-b482-6aa5be9bf2a9"
        },
        "item": {
          "id": "dd327a1d-33ad-446c-acfd-a889df56a6e8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8713a912-ec55-403c-bc42-2cfb406bf6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8021d063-b4da-4bb9-acd8-4d0d92d8d80c",
        "cursor": {
          "ref": "2d61e08e-ea32-459d-9f85-201e0e710ed6",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "19381210-5bd5-48ac-b200-1d0c6da66b89"
        },
        "item": {
          "id": "8021d063-b4da-4bb9-acd8-4d0d92d8d80c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1f2b6dea-a17b-4159-b066-33e6caae197b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6eaee3-dcf7-436a-8b06-a5fb390ce9e4",
        "cursor": {
          "ref": "4ddc7ebf-6d5c-41d0-bb23-2f0a99530f20",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "02ab0b52-015b-4ee5-9c92-ea566c3795bb"
        },
        "item": {
          "id": "bb6eaee3-dcf7-436a-8b06-a5fb390ce9e4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "efb7854c-9b10-4b80-ac81-3a3b4cc3b232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529d3aa0-5956-4b6e-9122-7bced5a43379",
        "cursor": {
          "ref": "98fdfb7d-1549-4c1e-a999-6f14360e2b9c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "21427d62-6d84-4b2f-b095-c8f8efa7cd06"
        },
        "item": {
          "id": "529d3aa0-5956-4b6e-9122-7bced5a43379",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e809ede2-56a1-41b2-a8bd-5b1a4dcbc7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6156daee-8b59-4691-8cc8-54e59ad33a42",
        "cursor": {
          "ref": "7b11231b-d42c-41c9-a49d-69664af14618",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ff8b1a2a-5765-45d4-9088-aafe0503eb16"
        },
        "item": {
          "id": "6156daee-8b59-4691-8cc8-54e59ad33a42",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "522cee54-87d0-4618-bf8e-97740e7c759f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786747c0-f1f7-4dc5-9077-637f3870fe8f",
        "cursor": {
          "ref": "63374396-ad88-496f-adb9-9f70afd48d44",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac34823d-ff3a-49a9-a091-83bca470aa3a"
        },
        "item": {
          "id": "786747c0-f1f7-4dc5-9077-637f3870fe8f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "500d639a-bf72-4007-b2f6-aab1ea5bed53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfa893e-ecaa-43a1-80a6-c3f0398a8a94",
        "cursor": {
          "ref": "d5085776-cca8-413f-9f8f-8f158ac4f1f2",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8e0cf660-b75e-41a2-b1d8-284f0f4459e1"
        },
        "item": {
          "id": "ecfa893e-ecaa-43a1-80a6-c3f0398a8a94",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "10a12f9a-f8ff-43e9-bb1e-40d6979b0171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f894b8-8479-4b8b-93a5-95355e88c546",
        "cursor": {
          "ref": "c8c0bfc8-f0d6-497b-a08a-fbf072e7242c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0261512e-22f5-45f4-941b-2717d891fde7"
        },
        "item": {
          "id": "15f894b8-8479-4b8b-93a5-95355e88c546",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "03e799a2-31bf-4a1d-8f16-00c32f092d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d516fc-25ee-4499-8cf2-b5c4e12d65c3",
        "cursor": {
          "ref": "01cab9ad-f2eb-4649-b60f-aff977315094",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "42a9e1eb-1238-43fb-a064-e808c4232ee2"
        },
        "item": {
          "id": "a5d516fc-25ee-4499-8cf2-b5c4e12d65c3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e06c9f64-62a2-4047-b090-05cb21fadc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03226ffc-7527-4fc0-8e3a-19b940d3441c",
        "cursor": {
          "ref": "a83bda89-5cc6-4e05-868e-557107bae5e0",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "504c9a93-ee8e-43fe-b0d9-09c37f9123f4"
        },
        "item": {
          "id": "03226ffc-7527-4fc0-8e3a-19b940d3441c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "66eb4cb5-f6e1-4719-8a94-4881e91ec876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b4e6b4-437e-485a-93a1-84684f6f7b55",
        "cursor": {
          "ref": "3479ac49-8d26-4b35-b8ae-69ae685dfa55",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "178b11a5-38fb-44d7-b6b3-02d05b7b2cb1"
        },
        "item": {
          "id": "89b4e6b4-437e-485a-93a1-84684f6f7b55",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "74107db3-1d3b-4fbb-9827-e0b2fa023762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda31afb-0c89-4572-ba20-fa0a609174da",
        "cursor": {
          "ref": "377064a8-9747-45cb-9346-a31d966de1f3",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5d263b52-1656-4203-a1c8-4c655d970b3f"
        },
        "item": {
          "id": "dda31afb-0c89-4572-ba20-fa0a609174da",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "169412c7-fd80-4381-9b67-bfcfc0994439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d8e09-efb5-4c90-b50f-600776ddf3fd",
        "cursor": {
          "ref": "129def55-50d9-4f50-99c9-8a05ec2aec9e",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "364dc6ec-50a0-43b6-bfcc-b35125d14565"
        },
        "item": {
          "id": "6a9d8e09-efb5-4c90-b50f-600776ddf3fd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "77f06a05-01dc-46b7-8991-70c1072cdc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e50f4e-eb4f-4700-9622-5f4ae42b7fcf",
        "cursor": {
          "ref": "1e766d06-e306-433f-adae-62677d14b62d",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b1407b90-c2ab-484e-a44e-24c4df54cd25"
        },
        "item": {
          "id": "11e50f4e-eb4f-4700-9622-5f4ae42b7fcf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "13e22427-2d73-49d9-896d-f3173e059d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c0f8cc-0769-437b-a2ff-80c3c06988dc",
        "cursor": {
          "ref": "3f210ab5-e46f-4934-9aee-788fa8583513",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4290019b-7b6f-422d-92c4-a97320b0528d"
        },
        "item": {
          "id": "b8c0f8cc-0769-437b-a2ff-80c3c06988dc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e212702d-2dfb-486d-860b-5df7959ff243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37e30d3-a8c7-4d10-a105-1fda663d6c92",
        "cursor": {
          "ref": "467ee214-b2f2-4718-8adc-7ff9e65ae6fb",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cdcba832-5575-4fa6-9d6a-3835180a1348"
        },
        "item": {
          "id": "a37e30d3-a8c7-4d10-a105-1fda663d6c92",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7de46c29-bcea-404c-b8db-817070f816df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2db273-5bb2-4af7-8fda-0b5ebb40f31f",
        "cursor": {
          "ref": "acbcc8a9-552a-460a-999b-564453e8ed31",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0ee62aff-d546-4a9c-a0ec-484a54e2ef32"
        },
        "item": {
          "id": "cf2db273-5bb2-4af7-8fda-0b5ebb40f31f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "344e4f8d-e77e-4e6a-92e0-b8eb8a9f488a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fea1c24-e4a7-4651-b45f-804e25a8f112",
        "cursor": {
          "ref": "1e7607b6-9109-42a0-ad91-5e12ae493411",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "49aa15d2-a111-49d3-a8d1-a7d5060b9687"
        },
        "item": {
          "id": "3fea1c24-e4a7-4651-b45f-804e25a8f112",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7d719f75-afe2-4b41-b3fb-7e7223ec1d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ab8ec6-9143-45c1-8a0e-4fcb5e34e803",
        "cursor": {
          "ref": "264e2adc-5b54-4d69-b007-e185a095780e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e9a19138-effa-4790-8a3f-71f2d55783b0"
        },
        "item": {
          "id": "d7ab8ec6-9143-45c1-8a0e-4fcb5e34e803",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7bdbb77a-8915-4253-b0aa-b6d8f7dddc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165c3b31-a1f6-48e4-ac62-bfded74f8722",
        "cursor": {
          "ref": "33f2446e-24af-43b1-bb94-4c2db08e9791",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e448f964-9c9a-4394-b3a9-c89aa4f4ed38"
        },
        "item": {
          "id": "165c3b31-a1f6-48e4-ac62-bfded74f8722",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "782a46ea-beca-4049-b868-52189ef42518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625cb3e5-6512-4316-8970-47a3039b8bfa",
        "cursor": {
          "ref": "13b5580a-671f-427a-bc54-721c0f511274",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4622a0cb-bcb0-4e42-a5df-841b6a06711a"
        },
        "item": {
          "id": "625cb3e5-6512-4316-8970-47a3039b8bfa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0a87e90e-a913-423f-aba0-4394f962b085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8a4fe2-3f1e-4abc-b477-ca70cb909964",
        "cursor": {
          "ref": "e3e1bc7a-66b9-4b66-a31a-c431047c2b85",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e5747020-b2ae-4fb2-b00a-73f935a7115d"
        },
        "item": {
          "id": "4d8a4fe2-3f1e-4abc-b477-ca70cb909964",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ebff8a8b-2ccf-498e-9db1-d94d413bfcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb21e84e-2c6f-4160-8f63-f1bad875315d",
        "cursor": {
          "ref": "7673065a-586e-4390-8599-e909f5f4fd7d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "775f7a4b-2e9b-47fa-858a-b71cbc1371cc"
        },
        "item": {
          "id": "bb21e84e-2c6f-4160-8f63-f1bad875315d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c2239695-f051-4398-a3d1-7b6036ab1e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3b6c04-fd5c-4ad2-80cd-7ee5730ee633",
        "cursor": {
          "ref": "73ad2b16-229b-4daf-8f06-0f850b6776d1",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1be814a4-3657-4a1d-89a4-7f9064d9058c"
        },
        "item": {
          "id": "8b3b6c04-fd5c-4ad2-80cd-7ee5730ee633",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "717c664a-9252-4132-84a9-59758807b995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910babee-1619-4c01-9457-01b82e1f6496",
        "cursor": {
          "ref": "6d175d2a-ea00-4d66-b9a7-c6bd8d5c106c",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c3e65fb0-9675-495e-ba05-bcc98e5b95b8"
        },
        "item": {
          "id": "910babee-1619-4c01-9457-01b82e1f6496",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4ac565f0-54f4-41b7-bd1c-f38071ad7142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b948acd5-2157-4218-a84b-803a4bfc0240",
        "cursor": {
          "ref": "e262b9b1-74ed-40d8-bef9-01519627bec3",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b02fdd10-a5cc-489d-8a7a-efe3806a70d3"
        },
        "item": {
          "id": "b948acd5-2157-4218-a84b-803a4bfc0240",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a25aa5d2-6c13-4664-8108-8a1aedae592a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2688a5-be34-4a62-abd0-d99bf0b2b617",
        "cursor": {
          "ref": "4dc54ecb-af15-434f-b63b-e363716626cf",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c8dd9ec6-881a-41c4-86f7-3c7bad29b253"
        },
        "item": {
          "id": "1f2688a5-be34-4a62-abd0-d99bf0b2b617",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ed69feb1-8616-4a48-b5f7-15a04a84399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc07e738-20e3-4ce4-bfd8-be29fb495139",
        "cursor": {
          "ref": "bdd8d9cf-c580-4e5c-a68e-ed1b4ced779a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "760a3376-0e83-4ebf-87a1-9b0ef39bed12"
        },
        "item": {
          "id": "fc07e738-20e3-4ce4-bfd8-be29fb495139",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8a5bd4bf-ce6b-4077-9563-ba067a6da664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28633082-d617-469e-96e0-998e5b800f89",
        "cursor": {
          "ref": "199ee923-2fc1-42c6-aa53-ad30df4706cc",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9d5e21d5-3f00-4b4a-9dbc-b555c250ea58"
        },
        "item": {
          "id": "28633082-d617-469e-96e0-998e5b800f89",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a471602d-bed7-494f-80dd-a01f2bb5d0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d89ca6-f8d0-47ce-9a81-37bb275f6dae",
        "cursor": {
          "ref": "08bad585-a5bc-428c-9f0b-83c789936c20",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8fb6fe72-77c2-4dca-934f-0ab4b2daeee2"
        },
        "item": {
          "id": "13d89ca6-f8d0-47ce-9a81-37bb275f6dae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d65434a0-5390-464e-b403-b352ebfa9e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0deb5c7a-c227-4f4d-b230-2cebc48e82b1",
        "cursor": {
          "ref": "8099b6b0-f2e9-4379-85bc-b9687db3bf26",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "be53bb86-6309-4e5f-ab8c-762458d1e82b"
        },
        "item": {
          "id": "0deb5c7a-c227-4f4d-b230-2cebc48e82b1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "600beec3-06d2-485d-9615-a539f12fdc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d2ec79-e402-4416-a0e6-ed220bfb1dcd",
        "cursor": {
          "ref": "b8c0bb02-79a3-4ec8-8322-28f4e446f91f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "99f15f71-33db-43fd-b19a-3afe56a84676"
        },
        "item": {
          "id": "97d2ec79-e402-4416-a0e6-ed220bfb1dcd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b0a7a122-ea66-4c85-8f49-30485135e86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a580d6-7c1e-4b04-9bbe-d519d3b78299",
        "cursor": {
          "ref": "7a867567-932e-4847-beae-0df97aec5fce",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b14fafff-378d-4e1d-b1ea-fb0fa832c6ea"
        },
        "item": {
          "id": "44a580d6-7c1e-4b04-9bbe-d519d3b78299",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e9cd2f62-2720-4ca1-8cf8-a56f8db3db35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d7168e-dbd8-4389-9722-0554b14f919c",
        "cursor": {
          "ref": "e8188de9-2ddd-4c6c-b24c-d6d8bbd666de",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a9a41a08-7ae2-4c85-a4ee-9bc309610918"
        },
        "item": {
          "id": "05d7168e-dbd8-4389-9722-0554b14f919c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b0a4e6fc-4be0-4ef3-922f-22ef8f3ff7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1567161d-cab9-478f-8789-e569d2f802d0",
        "cursor": {
          "ref": "1eca8806-f1c8-4da1-8bfd-fd4cd23048f6",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c787bdd2-c879-4039-ba9b-8f65dcfd58b3"
        },
        "item": {
          "id": "1567161d-cab9-478f-8789-e569d2f802d0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6d550b44-de9e-4816-94bc-bcc52364b422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d47bcf2-d603-46b7-8f45-caab972da08d",
        "cursor": {
          "ref": "d880af63-85e4-49ea-aeb9-ce4848682725",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c395cffb-fb6f-464c-8841-c6aa000f6e83"
        },
        "item": {
          "id": "9d47bcf2-d603-46b7-8f45-caab972da08d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9751dc84-a481-4ab0-ade4-49f89a15c9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24adae2-f05f-4602-8f11-94c1bb1ed29e",
        "cursor": {
          "ref": "2f7c9ad4-1b68-4995-b017-a32a576acc17",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "22e31455-230f-4fe3-8408-f9dce34944af"
        },
        "item": {
          "id": "f24adae2-f05f-4602-8f11-94c1bb1ed29e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c6a606a9-6daa-455e-ab06-13894937d283",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b24830-555d-417b-b131-708e59a9c488",
        "cursor": {
          "ref": "537afd53-918a-4b7e-bad7-f73b548fa879",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c9a565d6-028a-477c-af90-eb21e11d19d3"
        },
        "item": {
          "id": "b2b24830-555d-417b-b131-708e59a9c488",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "eab19f3d-6ca3-4ab7-a682-373888147721",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c49d65-1445-4ece-ac99-f0934138fc96",
        "cursor": {
          "ref": "6bff90d0-7655-46cf-9099-ddb47d4dec8a",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0aa3610e-24bc-4f5b-a175-8d94e49377a7"
        },
        "item": {
          "id": "b5c49d65-1445-4ece-ac99-f0934138fc96",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3064cf9d-b074-46b4-955f-925d1bd52923",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0892c4dd-c4ab-43b2-b883-576ce9d76fb1",
        "cursor": {
          "ref": "beb6a928-b93c-4139-a492-6955166079a6",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d70c1dd0-5a56-4377-b2d2-14b98cb31daf"
        },
        "item": {
          "id": "0892c4dd-c4ab-43b2-b883-576ce9d76fb1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "56145c31-299e-46c5-b23e-3d708a6f9fe6",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58c514f-9e77-471b-90e6-c12fdbdb4bce",
        "cursor": {
          "ref": "7c70608d-4883-4efb-acd9-4d4695f62d7f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "520bc411-f0d6-40fa-8bd2-8fb4821d6ac4"
        },
        "item": {
          "id": "f58c514f-9e77-471b-90e6-c12fdbdb4bce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dd612fb9-75ce-44b6-8816-cb3e8f346117",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51fd979-e2ba-4e0c-8a64-90699836ec23",
        "cursor": {
          "ref": "b3aa8db3-7cf4-49e0-aa89-10d895974322",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d890c9dd-bec7-4d7c-b58c-a57eaf6b41fb"
        },
        "item": {
          "id": "a51fd979-e2ba-4e0c-8a64-90699836ec23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "37dbbee5-a21d-4ab0-a569-bde0247e24ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51fd979-e2ba-4e0c-8a64-90699836ec23",
        "cursor": {
          "ref": "b3aa8db3-7cf4-49e0-aa89-10d895974322",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d890c9dd-bec7-4d7c-b58c-a57eaf6b41fb"
        },
        "item": {
          "id": "a51fd979-e2ba-4e0c-8a64-90699836ec23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "37dbbee5-a21d-4ab0-a569-bde0247e24ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51fd979-e2ba-4e0c-8a64-90699836ec23",
        "cursor": {
          "ref": "b3aa8db3-7cf4-49e0-aa89-10d895974322",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d890c9dd-bec7-4d7c-b58c-a57eaf6b41fb"
        },
        "item": {
          "id": "a51fd979-e2ba-4e0c-8a64-90699836ec23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "37dbbee5-a21d-4ab0-a569-bde0247e24ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c8cabd-47cd-497a-8a00-910a914796ad",
        "cursor": {
          "ref": "e6513b63-47fd-41e0-b663-33fba022895f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b69989ae-ace2-4ec7-bab4-afc5ca7f6dea"
        },
        "item": {
          "id": "69c8cabd-47cd-497a-8a00-910a914796ad",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d2d0f4e3-bc6d-4a7c-9257-c94073c3b705",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ce7566-e817-4468-891b-ff8699797a59",
        "cursor": {
          "ref": "b82a1d77-647e-4c3f-9299-50de149fa1c3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a7e7d3c3-1fb7-4d43-8c7a-25c9b638c283"
        },
        "item": {
          "id": "44ce7566-e817-4468-891b-ff8699797a59",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3586d3a4-9e05-4bec-98ba-48a7b84acddf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ce7566-e817-4468-891b-ff8699797a59",
        "cursor": {
          "ref": "b82a1d77-647e-4c3f-9299-50de149fa1c3",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a7e7d3c3-1fb7-4d43-8c7a-25c9b638c283"
        },
        "item": {
          "id": "44ce7566-e817-4468-891b-ff8699797a59",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3586d3a4-9e05-4bec-98ba-48a7b84acddf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e40b11-cd76-4542-a938-179a1f825b81",
        "cursor": {
          "ref": "3baaf49b-50b7-48be-ab3b-ba8690a1ee6a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "04613fde-8d75-41af-94c8-fd775b55e61b"
        },
        "item": {
          "id": "38e40b11-cd76-4542-a938-179a1f825b81",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "dee0a568-2849-42bf-a244-0c5864bb84de",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1117732d-ee5a-4533-a95a-7d404c28b5da",
        "cursor": {
          "ref": "0dd03c2c-bf27-4653-ac1f-e6c05659d31f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ed010f8-3d2c-4d69-8bff-8079eeaf8561"
        },
        "item": {
          "id": "1117732d-ee5a-4533-a95a-7d404c28b5da",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a08f0717-f17a-46f4-ac89-9d921832df90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1117732d-ee5a-4533-a95a-7d404c28b5da",
        "cursor": {
          "ref": "0dd03c2c-bf27-4653-ac1f-e6c05659d31f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ed010f8-3d2c-4d69-8bff-8079eeaf8561"
        },
        "item": {
          "id": "1117732d-ee5a-4533-a95a-7d404c28b5da",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a08f0717-f17a-46f4-ac89-9d921832df90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501048b1-8089-4633-b9c1-396b991a52af",
        "cursor": {
          "ref": "067be9b5-3a98-4734-9927-640be2cd7ddd",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f90b4329-6a37-4c9e-81c4-184e66402840"
        },
        "item": {
          "id": "501048b1-8089-4633-b9c1-396b991a52af",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e24a0cd3-1bed-4e70-970a-7d14dfa93a4f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}